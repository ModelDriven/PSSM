<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:uml="http://www.omg.org/spec/UML/20131001">
  <uml:Model xmi:id="_dTbZAHVbEeSH_N3hAolMEw" name="PSSM_Semantics">
    <packageImport xmi:type="uml:PackageImport" xmi:id="_5xuoUJRCEeWAs5MYUhc8EQ" importingNamespace="_dTbZAHVbEeSH_N3hAolMEw">
      <importedPackage xmi:type="uml:Package" href="http://www.omg.org/spec/UML/20131001/UML.xmi#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_VU1pcHVpEeSRWcPi04czfg" name="Semantics">
      <packagedElement xmi:type="uml:Package" xmi:id="_4bWFIMNeEeWpYp0WmASFoQ" name="Values">
        <packageImport xmi:type="uml:PackageImport" xmi:id="_wVHkkM6FEeWF7I4YWspV6w" importedPackage="_ddeK4OYUEeGYZqnbU6eCYw" importingNamespace="_4bWFIMNeEeWpYp0WmASFoQ"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_eDACoM6GEeWF7I4YWspV6w" importingNamespace="_4bWFIMNeEeWpYp0WmASFoQ">
          <importedPackage xmi:type="uml:Package" href="ad-16-02-02.xmi#_coJpQMVGEeWXLLOylfwRMQ"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_1TMWMM6HEeWF7I4YWspV6w" importingNamespace="_4bWFIMNeEeWpYp0WmASFoQ">
          <importedPackage xmi:type="uml:Package" href="ad-16-02-02.xmi#_YR7acMVHEeWXLLOylfwRMQ"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_uIP7MM7DEeWF7I4YWspV6w" importedPackage="Semantics-CommonBehaviors" importingNamespace="_4bWFIMNeEeWpYp0WmASFoQ"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_k_kTgM6DEeWF7I4YWspV6w" importedPackage="_YlZoMN2OEeGnO-TF_1T_iQ" importingNamespace="_4bWFIMNeEeWpYp0WmASFoQ"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_Fxqp8HV-EeSvTf7EWD7QRA" name="A_context_opaqueExpressionEvaluation" memberEnd="_Fxqp8XV-EeSvTf7EWD7QRA _FxoNsHV-EeSvTf7EWD7QRA">
          <ownedEnd xmi:type="uml:Property" xmi:id="_Fxqp8XV-EeSvTf7EWD7QRA" name="opaqueExpressionEvaluation" type="_sb52MHVqEeS94falTMzzgw" owningAssociation="_Fxqp8HV-EeSvTf7EWD7QRA" association="_Fxqp8HV-EeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Fxqp8nV-EeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Fxqp83V-EeSvTf7EWD7QRA" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_sb52MHVqEeS94falTMzzgw" name="SM_OpaqueExpressionEvaluation">
          <generalization xmi:type="uml:Generalization" xmi:id="_nlrB4HV8EeSvTf7EWD7QRA" general="_90nNMMEREeKkJbQgitQ3JQ" specific="_sb52MHVqEeS94falTMzzgw"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_FxoNsHV-EeSvTf7EWD7QRA" name="context" type="Semantics-Classes-Kernel-Object" association="_Fxqp8HV-EeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FxoNsXV-EeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FxoNsnV-EeSvTf7EWD7QRA" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7CPHIdQuEeW-v_063gYgPA" name="executeExpressionBehavior" specification="_7K4G4HV8EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7CPuMNQuEeW-v_063gYgPA" name="result" type="Semantics-Classes-Kernel-Value" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7CPuMdQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7CPuMtQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// An opaque expression can have an associated behavior. If this is the case
// this behavior is executed. Values produced by the execution of the behavior
// are the result of the evaluation of the opaque expression 
List&lt;Value> evaluation = new ArrayList&lt;Value>();
OpaqueExpression expression = (OpaqueExpression)this.specification;
Behavior behavior = expression.getBehavior();
if(behavior != null) {
	List&lt;ParameterValue> inputs = new ArrayList&lt;ParameterValue>();
	List&lt;ParameterValue> results = this.locus.executor.execute(behavior, context, inputs);
	for(int i = 0; i &lt; results.size(); i++) { // results.size should be 1
		ParameterValue parameterValue = results.get(i);
		List&lt;Value> values = parameterValue.values;
		for(int j = 0; j &lt; values.size(); j++) {
			evaluation.add(values.get(j));
		}
	}
}
return evaluation;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7K4G4HV8EeSvTf7EWD7QRA" name="executeExpressionBehavior" method="_7CPHIdQuEeW-v_063gYgPA" class="_sb52MHVqEeS94falTMzzgw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7K4G4XV8EeSvTf7EWD7QRA" name="result" type="Semantics-Classes-Kernel-Value" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7K4G4nV8EeSvTf7EWD7QRA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7K4G43V8EeSvTf7EWD7QRA" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DOXNEMOyEeWpYp0WmASFoQ" name="StructuredClassifiers">
        <packageImport xmi:type="uml:PackageImport" xmi:id="_55Bj8M6qEeWF7I4YWspV6w" importedPackage="_4bWFIMNeEeWpYp0WmASFoQ" importingNamespace="_DOXNEMOyEeWpYp0WmASFoQ"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_5-V1oNQ4EeWhxsoi-zbmoA" importingNamespace="_DOXNEMOyEeWpYp0WmASFoQ">
          <importedPackage xmi:type="uml:Package" href="ad-16-02-02.xmi#_1J2bQMU3EeWXLLOylfwRMQ"/>
        </packageImport>
        <packagedElement xmi:type="uml:Class" xmi:id="_jl2UoJRFEeWAs5MYUhc8EQ" name="SM_Object">
          <generalization xmi:type="uml:Generalization" xmi:id="_o_YIoJRGEeWAs5MYUhc8EQ" general="_wUwzPd2JEeGnO-TF_1T_iQ" specific="_jl2UoJRFEeWAs5MYUhc8EQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0h3xcNQuEeWMJphss3BZSg" name="startBehavior" specification="_nxIHYMDpEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0h4YgNQuEeWMJphss3BZSg" name="classifier">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0h4YgdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0h4YgtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0h4Yg9QuEeWMJphss3BZSg" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0h4YhNQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0h4YhdQuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The behavior captured here is almost identical to the one provide by Object_.
// Instead of using a simple ObjectActivation we use a StateMachineObjectActivation.
// This specialized kind of ObjectActivation allows the registering of completion events.
if (this.objectActivation == null) {
	this.objectActivation = new SM_ObjectActivation();
	this.objectActivation.object = this;
}
this.objectActivation.startBehavior(classifier, inputs);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0h-fINQuEeWMJphss3BZSg" name="destroy" specification="_w3LF4MDpEeWpevkdGfdnMA">
            <language>Java</language>
            <body>// In addition to realize the normal process of stopping the object activation
// as well as removing the current object from the locus, this destruction phase
// also implies removal of all events remaining in the pool. This prevents the
// dispatch loop to actually get the next event (even if at this step there is no
// chance to match an accepter) whereas the current object is not anymore registered.
// in the Locus.
if(this.objectActivation!=null){
	this.objectActivation.eventPool.clear();
}
super.destroy();
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_nxIHYMDpEeWpevkdGfdnMA" name="startBehavior" visibility="public" method="_0h3xcNQuEeWMJphss3BZSg" class="_jl2UoJRFEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_nxIHYcDpEeWpevkdGfdnMA" name="classifier" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nxIHYsDpEeWpevkdGfdnMA"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_nxIHY8DpEeWpevkdGfdnMA" name="inputs" visibility="public" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" effect="create">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nxIHZMDpEeWpevkdGfdnMA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nxIHZcDpEeWpevkdGfdnMA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_w3LF4MDpEeWpevkdGfdnMA" name="destroy" visibility="public" method="_0h-fINQuEeWMJphss3BZSg" class="_jl2UoJRFEeWAs5MYUhc8EQ"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_1LSecMOyEeWpYp0WmASFoQ" name="CommonBehavior">
        <packageImport xmi:type="uml:PackageImport" xmi:id="_304-cM6pEeWF7I4YWspV6w" importedPackage="_2wgcEHV2EeSvTf7EWD7QRA" importingNamespace="_1LSecMOyEeWpYp0WmASFoQ"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_3uF9cM6qEeWF7I4YWspV6w" importedPackage="_DOXNEMOyEeWpYp0WmASFoQ" importingNamespace="_1LSecMOyEeWpYp0WmASFoQ"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_02bFgMDwEeWiyPv18KZ0lg" name="SM_ObjectActivation" isActive="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_QSn78MDxEeWiyPv18KZ0lg" general="Semantics-CommonBehaviors-Communications-ObjectActivation" specific="_02bFgMDwEeWiyPv18KZ0lg"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_7QjUING2EeWMvYElZ5Ee4w" name="deferredEventPool" type="_VpelING2EeWMvYElZ5Ee4w" association="_7PTW8NG2EeWMvYElZ5Ee4w">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EUFxMNG3EeWMvYElZ5Ee4w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EUQwUNG3EeWMvYElZ5Ee4w" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iO90NQuEeWMJphss3BZSg" name="registerCompletionEvent" specification="_GKDJcMDxEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0iO90dQuEeWMJphss3BZSg" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0iO90tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0iO909QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A completion event does not have priority over other completion events.
// Therefore if completion events are already in the event pool then the currently
// posted completion event will be placed after these latter. In short the FIFO strategy
// is applied to completion events.
CompletionEventOccurrence completionEventOccurrence = new CompletionEventOccurrence();
completionEventOccurrence.stateActivation = stateActivation;
int insertionIndex = 0;
boolean insertionPointFound = false;
while(!insertionPointFound &amp;&amp; insertionIndex &lt; this.eventPool.size()){
	insertionPointFound = !(this.eventPool.get(insertionIndex) instanceof CompletionEventOccurrence);
	if(!insertionPointFound){
		insertionIndex++;
	}
}
this.eventPool.add(insertionIndex, completionEventOccurrence);
this._send(new ArrivalSignal());
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_GKDJcMDxEeWiyPv18KZ0lg" name="registerCompletionEvent" method="_0iO90NQuEeWMJphss3BZSg" class="_02bFgMDwEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WPAa0MDxEeWiyPv18KZ0lg" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_7PTW8NG2EeWMvYElZ5Ee4w" name="A_objectActivation_deferredEventPool" memberEnd="_7QjUING2EeWMvYElZ5Ee4w _7QjUIdG2EeWMvYElZ5Ee4w">
          <ownedEnd xmi:type="uml:Property" xmi:id="_7QjUIdG2EeWMvYElZ5Ee4w" name="objectActivation" type="_02bFgMDwEeWiyPv18KZ0lg" owningAssociation="_7PTW8NG2EeWMvYElZ5Ee4w" association="_7PTW8NG2EeWMvYElZ5Ee4w"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_2wgcEHV2EeSvTf7EWD7QRA" name="StateMachines">
        <packageImport xmi:type="uml:PackageImport" xmi:id="_xHjuUM6qEeWF7I4YWspV6w" importingNamespace="_2wgcEHV2EeSvTf7EWD7QRA">
          <importedPackage xmi:type="uml:Package" href="ad-16-02-02.xmi#_MULkIMVJEeWXLLOylfwRMQ"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_2Jf-MM6qEeWF7I4YWspV6w" importingNamespace="_2wgcEHV2EeSvTf7EWD7QRA">
          <importedPackage xmi:type="uml:Package" href="ad-16-02-02.xmi#_Q_2pEMVJEeWXLLOylfwRMQ"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_7Px7gM6qEeWF7I4YWspV6w" importedPackage="_VU1pcHVpEeSRWcPi04czfg" importingNamespace="_2wgcEHV2EeSvTf7EWD7QRA"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_8u0sYM6qEeWF7I4YWspV6w" importedPackage="_LFUAwHVxEeSfVojhNHzNrw" importingNamespace="_2wgcEHV2EeSvTf7EWD7QRA"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_MDHHEM6xEeWF7I4YWspV6w" importedPackage="_1LSecMOyEeWpYp0WmASFoQ" importingNamespace="_2wgcEHV2EeSvTf7EWD7QRA"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_gQp8gNLlEeWrx8x7RhrVAQ" importedPackage="Semantics-Loci" importingNamespace="_2wgcEHV2EeSvTf7EWD7QRA"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mUrtYHV3EeSvTf7EWD7QRA" name="RegionActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_sHYxMHWKEeSvTf7EWD7QRA" general="_yWknYHV2EeSvTf7EWD7QRA" specific="_mUrtYHV3EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_jm_S4HWJEeSvTf7EWD7QRA" name="transitionActivations" visibility="protected" type="_vJ5akHV3EeSvTf7EWD7QRA" aggregation="composite" association="_jnAhAHWJEeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jm_S4XWJEeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jm_S4nWJEeSvTf7EWD7QRA" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_BbHIoJRQEeWAs5MYUhc8EQ" name="isCompleted">
            <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_irabcHWJEeSvTf7EWD7QRA" name="vertexActivations" visibility="protected" type="_z0JjMHV3EeSvTf7EWD7QRA" aggregation="composite" association="_ircQoHWJEeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_irabcXWJEeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_irabcnWJEeSvTf7EWD7QRA" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iYHwNQuEeWMJphss3BZSg" name="activate" specification="_WzhK8HWKEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// Create visitors for all vertices owned by the region
Locus locus = this.getExecutionLocus();
VertexActivation activation = null;
Region region = (Region)this.getNode();
for(Vertex vertex : region.getSubvertices()){
	activation = (VertexActivation)locus.factory.instantiateVisitor(vertex);
	activation.setParent(this);
	activation.setNode(vertex);
	activation.activate();
	this.vertexActivations.add(activation);
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iYHwdQuEeWMJphss3BZSg" name="activateTransitions" specification="_ycOHAPiJEeSlpJn94rgDzA">
            <language>Java</language>
            <body>Region region = (Region)this.getNode();
VertexActivation sourceActivation = null;
VertexActivation targetActivation = null;
TransitionActivation transitionActivation = null;
StateMachineExecution context = (StateMachineExecution)this.getStateMachineExecution();
for(Transition transition : region.getTransitions()){
	sourceActivation = context.getVertexActivation(transition.getSource());
	targetActivation = context.getVertexActivation(transition.getTarget());
	transitionActivation = (TransitionActivation) context.locus.factory.instantiateVisitor(transition);
	transitionActivation.setNode(transition);
	transitionActivation.setParent(this);
	transitionActivation.setSourceActivation(sourceActivation);
	transitionActivation.setTargetActivation(targetActivation);
	this.transitionActivations.add(transitionActivation);
	sourceActivation.addOutgoingTransition(transitionActivation);
	targetActivation.addIncomingTransition(transitionActivation);
}
for(VertexActivation activation: this.getVertexActivations()){
	activation.activateTransitions();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iYu0NQuEeWMJphss3BZSg" name="getVertexActivation" specification="_F8a1gHWLEeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0iYu0dQuEeWMJphss3BZSg" name="vertex">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Vertex"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0iYu0tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0iYu09QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0iYu1NQuEeWMJphss3BZSg" name="result" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0iYu1dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0iYu1tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>int i = 0;
VertexActivation activation = null;
/*1. Same level search*/
while(activation==null &amp;&amp; i &lt; this.vertexActivations.size()){
	if(vertex==this.vertexActivations.get(i).getNode()){
		activation = this.vertexActivations.get(i);
	}
	i++;
}
/*2. Do a descending search*/
i = 0;
while(activation==null &amp;&amp; i &lt; this.vertexActivations.size()){
	if(vertex==this.vertexActivations.get(i).getNode()){
		activation = this.vertexActivations.get(i);
	}else{
		activation = this.vertexActivations.get(i).getVertexActivation(vertex);
	}
	i++;
}
return activation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iZ88NQuEeWMJphss3BZSg" name="enter" specification="_jmWfYJRPEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0iZ88dQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0iZ88tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0iZ889QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// An implicit entry of a region means the initial transition is searched.
// If such transition exists then it is fired. An explicit entry as no impact on the region.
// In case the region is entered implicitly a initial pseudo state shall be found to
// start its execution. If no such pseudo-state is found and the state containing
// the region has no other region(s) then the state is treated as a simple leaf state
int i = 0; 
VertexActivation initialNodeActivation = null;
while(initialNodeActivation==null &amp;&amp; i &lt; this.vertexActivations.size()){
	if(this.vertexActivations.get(i) instanceof InitialPseudostateActivation){
		initialNodeActivation = this.vertexActivations.get(i);
	}else{
		i++;
	}
}
if(initialNodeActivation!=null){
	for(TransitionActivation transitionActivation : initialNodeActivation.getOutgoingTransitions()){
		transitionActivation.fire();
	}
}else{
	SemanticVisitor parent = this.getParent();
	if(parent != null &amp;&amp; parent instanceof StateActivation){
		StateActivation parentState = (StateActivation) parent; 
		parentState.regionActivation.remove(this);
		if(parentState.hasCompleted()){
			parentState.notifyCompletion();
		}
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iakANQuEeWMJphss3BZSg" name="exit" specification="_0diegPiJEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0iakAdQuEeWMJphss3BZSg" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0iakAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0iakA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Exiting a region implies exiting all of is active vertices.
for(VertexActivation vertexActivation: this.getVertexActivations()){
	if(vertexActivation.isActive()){
		vertexActivation.exit(exitingTransition, null);
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iakBNQuEeWMJphss3BZSg" name="terminate" specification="_5QK6sMD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// Capture the semantics related to the termination of a region. Regions typically
// gets terminated when the state-machine which contains it is gets itself terminated.
for(int i=0; i &lt; this.vertexActivations.size(); i++){
	this.vertexActivations.get(i).terminate();
}
this.vertexActivations.clear();
this.transitionActivations.clear();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7C3ZQNQuEeW-v_063gYgPA" name="getVertexActivations" specification="_29IGYPiJEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7C3ZQdQuEeW-v_063gYgPA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7C3ZQtQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7C3ZQ9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return vertexActivations;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7C4AUNQuEeW-v_063gYgPA" name="getTransitionActivations" specification="__NCHEPiJEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7C4AUdQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7C4AUtQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7C4AU9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return transitionActivations;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_29IGYPiJEeSlpJn94rgDzA" name="getVertexActivations" method="_7C3ZQNQuEeW-v_063gYgPA" class="_mUrtYHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GnBzcPiKEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_H4rBgPiKEeSlpJn94rgDzA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_H4sPoPiKEeSlpJn94rgDzA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_F8a1gHWLEeSvTf7EWD7QRA" name="getVertexActivation" visibility="protected" method="_0iYu0NQuEeWMJphss3BZSg" class="_mUrtYHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_PQQ_cHWLEeSvTf7EWD7QRA" name="vertex">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Vertex"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_a0ScQHWLEeSvTf7EWD7QRA" name="result" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="__NCHEPiJEeSlpJn94rgDzA" name="getTransitionActivations" method="_7C4AUNQuEeW-v_063gYgPA" class="_mUrtYHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_LAZncPiKEeSlpJn94rgDzA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MS-CkPiKEeSlpJn94rgDzA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MS_QsPiKEeSlpJn94rgDzA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_jmWfYJRPEeWAs5MYUhc8EQ" name="enter" method="_0iZ88NQuEeWMJphss3BZSg" class="_mUrtYHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_uRX3oJRPEeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_WzhK8HWKEeSvTf7EWD7QRA" name="activate" method="_0iYHwNQuEeWMJphss3BZSg" class="_mUrtYHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_0diegPiJEeSlpJn94rgDzA" name="exit" method="_0iakANQuEeWMJphss3BZSg" class="_mUrtYHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_p-Tf8JRPEeWAs5MYUhc8EQ" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ycOHAPiJEeSlpJn94rgDzA" name="activateTransitions" method="_0iYHwdQuEeWMJphss3BZSg" class="_mUrtYHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_5QK6sMD1EeWiyPv18KZ0lg" name="terminate" method="_0iakBNQuEeWMJphss3BZSg" class="_mUrtYHV3EeSvTf7EWD7QRA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rVacUHV3EeSvTf7EWD7QRA" name="StateActivation" visibility="public">
          <generalization xmi:type="uml:Generalization" xmi:id="_4Qu_0HYSEeSvTf7EWD7QRA" general="_z0JjMHV3EeSvTf7EWD7QRA" specific="_rVacUHV3EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_uXNSAPlQEeSDPZmHIzgmig" name="connectionPointActivations" type="_CDaHsKlAEeSY3-SNA3r3jg" aggregation="composite" association="_uXOgIPlQEeSDPZmHIzgmig">
            <ownedComment xmi:type="uml:Comment" xmi:id="_lrgisM9jEeWYevbRTGHfwg">
              <body></body>
            </ownedComment>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uXNSAflQEeSDPZmHIzgmig"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uXNSAvlQEeSDPZmHIzgmig" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_MzNhcPlREeSDPZmHIzgmig" name="regionActivations" type="_mUrtYHV3EeSvTf7EWD7QRA" aggregation="composite" association="_MzNhc_lREeSDPZmHIzgmig">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MzNhcflREeSDPZmHIzgmig"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MzNhcvlREeSDPZmHIzgmig" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="__-uNsJRQEeWAs5MYUhc8EQ" name="isDoActivityCompleted">
            <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_AfYDsJRREeWAs5MYUhc8EQ" name="isEntryCompleted">
            <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_A1jIAJRREeWAs5MYUhc8EQ" name="isExitCompleted">
            <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_BRoQscDrEeWpevkdGfdnMA" name="doActivityContextObject" type="_EF92AMDqEeWpevkdGfdnMA" association="_BRefsMDrEeWpevkdGfdnMA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nwiQgMNlEeWpYp0WmASFoQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nwl64MNlEeWpYp0WmASFoQ" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_OWl-oNG8EeWB0O9YzCwUNg" type="Semantics-CommonBehaviors-Communications-EventOccurrence" association="_OWjiYNG8EeWB0O9YzCwUNg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lK9ENQuEeWMJphss3BZSg" name="hasCompleted" specification="_on9GIJRREeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lK9EdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lK9EtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lK9E9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A state can only be considered as being completed under the following circumstances
// 1 - If the state is simple, both its entry and doActivity have finished their execution
// 2 - If the state is composite, the same rules than used for the simple state, but additionally
//     all the region of the state must have completed by reaching their final states
// When the operation returns true then the generation of a completion event is allowed
// for that particular state
boolean stateCompleted = this.isEntryCompleted &amp; this.isDoActivityCompleted;
int i = 0;
while(stateCompleted &amp;&amp; i &lt; this.regionActivation.size()){
	stateCompleted = stateCompleted &amp;&amp; this.regionActivation.get(i).isCompleted; 
	i = i + 1;
}
return stateCompleted;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lLkINQuEeWMJphss3BZSg" name="notifyCompletion" specification="_uT-00JRREeWAs5MYUhc8EQ">
            <language>Java</language>
            <body>// The notification of a completion event consists in sending in the execution
// context of the state-machine a completion event occurrence. This event is
// placed in the pool before any other event
Object_ context = this.getExecutionContext();
((SM_ObjectActivation)context.objectActivation).registerCompletionEvent(this);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lMLMNQuEeWMJphss3BZSg" name="getConnectionPointActivation" specification="_p3E5QPlREeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lMLMdQuEeWMJphss3BZSg" type="_CDaHsKlAEeSY3-SNA3r3jg" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lMLMtQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lMLM9QuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>ConnectionPointActivation activation = null;
int i = 0;
while(i &lt; this.connectionPointActivation.size() &amp;&amp; activation==null){
	if(this.connectionPointActivation.get(i).getNode()==vertex){
		activation = this.connectionPointActivation.get(i);
	}
	i++;
}
return activation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lMyQNQuEeWMJphss3BZSg" name="getVertexActivation" specification="_U2jA0MD2EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lMyQdQuEeWMJphss3BZSg" name="vertex">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Vertex"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lMyQtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lMyQ9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lMyRNQuEeWMJphss3BZSg" name="" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lMyRdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lMyRtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>VertexActivation vertexActivation = null;
State state = (State) this.getNode();
if(state.isComposite()){
	vertexActivation = this.getConnectionPointActivation(vertex);
	if(vertexActivation==null){
		int i = 0;
		while(i &lt; this.regionActivation.size() &amp;&amp; vertexActivation==null){
			vertexActivation = this.regionActivation.get(i).getVertexActivation(vertex);
			i++;
		}
	}
}
return vertexActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lNZUNQuEeWMJphss3BZSg" name="activate" specification="_DZfc8HYTEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// Instantiate visitors for all vertices owned by this region 
State state = (State) this.getNode();
if(state.isComposite()){
	Object_ context = this.getExecutionContext();
	for(Pseudostate connectionPoint : state.getConnectionPoints()){
		ConnectionPointActivation activation = (ConnectionPointActivation)context.locus.factory.instantiateVisitor(connectionPoint);
		activation.setParent(this);
		activation.setNode(connectionPoint);
		this.connectionPointActivation.add(activation);
	}
	for(Region region: state.getRegions()){
		RegionActivation activation = (RegionActivation) context.locus.factory.instantiateVisitor(region);
		activation.setParent(this);
		activation.setNode(region);
		activation.activate();
		this.regionActivation.add(activation);
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lNZUdQuEeWMJphss3BZSg" name="activateTransitions" specification="_jAhRIPlREeSDPZmHIzgmig">
            <language>Java</language>
            <body>// Instantiate visitor for transitions owned by this region
State state = (State) this.getNode();
if(state.isComposite()){
	for(RegionActivation activation : this.regionActivation){
		activation.activateTransitions();
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lNZUtQuEeWMJphss3BZSg" name="tryExecuteEntry" specification="_6cP1IHYSEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// If an entry behavior is specified for that state then it is executed
State state = (State) this.getNode();
if(!this.isEntryCompleted){
	Execution execution = this.getExecutionFor(state.getEntry());
	if(execution!=null){
		execution.execute();
		this.isEntryCompleted = true;
	}
	// If state has completed then generate a completion event
	if(this.hasCompleted()){
		this.notifyCompletion();
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lOAYNQuEeWMJphss3BZSg" name="tryExecuteExit" specification="_-A0IEHYSEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// Execute the exit behavior if any
State state = (State) this.getNode();
Execution execution = this.getExecutionFor(state.getExit());
if(execution!=null){
	execution.execute();
}
super.exit(null,null);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lOAYdQuEeWMJphss3BZSg" name="enterRegions" specification="_bAzT8JRREeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lOAYtQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lOAY9QuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lOAZNQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Regions can be entered either implicitly or explicitly. 
// A region is typically entered implicitly when its activation is triggered
// by a transition terminating on the edge of its containing state.
// A region is typically entered explicitly when one of its contained
// state is targeted by a transition coming from the outside.
// *** Regions are entered concurrently ***
List&lt;Vertex> targetedVertices = new ArrayList&lt;Vertex>();
VertexActivation sourceActivation = enteringTransition.getSourceActivation();
if(sourceActivation instanceof ForkPseudostateActivation){
	Pseudostate fork = (Pseudostate)sourceActivation.getNode(); 
	for(int i = 0; i &lt; fork.getOutgoings().size(); i++){
		targetedVertices.add(fork.getOutgoings().get(i).getTarget());
	}
}else{
	VertexActivation targetActivation = enteringTransition.getTargetActivation();
	if(targetActivation instanceof EntryPointActivation){
		Pseudostate entryPoint = (Pseudostate)targetActivation.getNode();
		for(int i = 0; i &lt; entryPoint.getOutgoings().size(); i++){
			targetedVertices.add(entryPoint.getOutgoings().get(i).getTarget());
		}
	}else{
		targetedVertices.add((Vertex)targetActivation.getNode());
	}
}		
for(int i=0; i &lt; this.regionActivation.size(); i++){
	RegionActivation regionActivation = this.regionActivation.get(i);
	int j = 0;
	boolean found = false;
	while(j &lt; targetedVertices.size() &amp;&amp; !found){
		found = regionActivation.getVertexActivation(targetedVertices.get(j)) != null;
		j++;
	}
	if(!found){
		regionActivation.enter(enteringTransition);
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lPOgNQuEeWMJphss3BZSg" name="isEnterable" specification="_7iS44MD2EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lPOgdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lPOgtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lPOg9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lPOhNQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lPOhdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lPOhtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A state can only be entered if it is not part of the state-machine configuration
// (i.e., the state is not currently active)
return !((StateMachineExecution)this.getStateMachineExecution()).getConfiguration().isActive(this);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lP1kNQuEeWMJphss3BZSg" name="enter" specification="_VtCUQJRREeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lP1kdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lP1ktQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lP1k9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lP1lNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lP1ldQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lP1ltQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>if(this.status.equals(StateMetadata.IDLE)){
	// The state is entered via an explicit transition
	// The impact on the execution is that the parent state
	// of the current state is not active then it must be entered
	// the rule applies recursively
	if(leastCommonAncestor!=null){
		RegionActivation parentRegionActivation = (RegionActivation) this.getParent();
		if(leastCommonAncestor!=parentRegionActivation){
			StateActivation stateActivation = (StateActivation) parentRegionActivation.getParent();
			if(stateActivation!=null){
				stateActivation.enter(enteringTransition, leastCommonAncestor);
			}
		}
	}
	// Initialization
	State state = (State) this.getNode();
	super.enter(enteringTransition, leastCommonAncestor);
	this.isEntryCompleted = state.getEntry()==null;
	this.isDoActivityCompleted = state.getDoActivity()==null;
	this.isExitCompleted = state.getExit()==null;
	// When the state is entered it is registered in the current
	// state-machine configuration
	StateMachineExecution smExecution = (StateMachineExecution)this.getStateMachineExecution();
	smExecution.getConfiguration().register(this);
	// If state has completed then generate a completion event*/
	if(this.hasCompleted()){
		this.notifyCompletion();
	}else{
		// Execute the entry behavior if any
		this.tryExecuteEntry();
		// Invoke the doActivity if any
		this.tryInvokeDoActivity();
		// If the state is not completed, then try to start its owned regions.
		// A region is entered implicitly since the is not the 
		this.enterRegions(enteringTransition);
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lQcoNQuEeWMJphss3BZSg" name="isExitable" specification="_7iVVIMD2EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lQcodQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lQcotQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lQco9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lQcpNQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lQcpdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lQcptQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A state can only be be exited if it is part of the state-machine configuration
// (i.e., the state is currently active)
return !this.isEnterable(exitingTransition);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lRDsNQuEeWMJphss3BZSg" name="exit" specification="_hWttIJRREeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lRDsdQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lRDstQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lRDs9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lRDtNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lRDtdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lRDttQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// If we exit a composite state, this provokes the termination of all of its regions 
if(!this.regionActivation.isEmpty()){
	for(RegionActivation regionActivation : this.regionActivation){
		regionActivation.exit(exitingTransition);
	}
}
// If there is a doActivity currently executing then it is aborted
if(!this.isDoActivityCompleted){
	this.doActivityContextObject.destroy();
	this.doActivityContextObject = null;
}
// If there is an exit behavior specified for the state it is executed
if(!this.isExitCompleted){
	this.tryExecuteExit();
}
super.exit(exitingTransition, leastCommonAncestor);
// When the state is exited then it is removed from the state-machine configuration
StateMachineExecution smExecution = (StateMachineExecution)this.getStateMachineExecution();
smExecution.getConfiguration().unregister(this);
// Re-initialize the boolean flags
this.isEntryCompleted = false;
this.isDoActivityCompleted = false;
this.isExitCompleted = false;
// The state is exited by a transition that targets a state which is located within 
// another region. This means parent state must also be exited.  
if(leastCommonAncestor!=null){
	RegionActivation parentRegionActivation = (RegionActivation) this.getParent();
	if(leastCommonAncestor!=parentRegionActivation){
		StateActivation stateActivation = (StateActivation) parentRegionActivation.getParent();
		if(stateActivation!=null){
			stateActivation.exit(exitingTransition, leastCommonAncestor);
		}
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lSR0NQuEeWMJphss3BZSg" name="canDefer" specification="_DRNfQNG0EeWMvYElZ5Ee4w">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lSR0dQuEeWMJphss3BZSg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lSR0tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lSR09QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lSR1NQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lSR1dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lSR1tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return true if current state activation is capable of deferring the given
// event occurrence; false otherwise. Note that false is returned in case where
// the deferring constraint is overridden by an outgoing transition
// 
// Note: for the moment the evaluation is done with the assumption that the
// received event occurrence is a signal event occurrence. This will change
// as soon as other kind of event (e.g. call event) will be supported in fUML.
boolean deferred = false;
int i = 0;
while(!deferred &amp;&amp; i &lt; ((State) this.node).getDeferrableTriggers().size()){
	Trigger trigger = ((State) this.node).getDeferrableTriggers().get(i);
	if(eventOccurrence instanceof SignalEventOccurrence
			&amp;&amp; trigger.getEvent() instanceof SignalEvent){
		SignalInstance signalInstance = ((SignalEventOccurrence)eventOccurrence).signalInstance;
		SignalEvent signalEvent = (SignalEvent) trigger.getEvent();
		deferred = signalInstance.type == signalEvent.getSignal();
		if(deferred &amp;&amp; !trigger.getPorts().isEmpty() 
				&amp;&amp; signalInstance instanceof CS_SignalInstance){
			int j = 0;
			Port matchingPort = null;
			while(matchingPort==null &amp;&amp; j &lt; trigger.getPorts().size()){
				Port currentPort = trigger.getPorts().get(j);
				if(((CS_SignalInstance)signalInstance).interactionPoint.definingPort==currentPort){
					matchingPort = currentPort;
				}
				j++;
			}
			if(matchingPort==null){
				deferred = false;
			}
		}
	}
	i++;
}
if(deferred){
	i = 0;
	TransitionActivation overridingTransitionActivation = null;
	while(overridingTransitionActivation == null &amp;&amp; i &lt; this.outgoingTransitionActivations.size()){
		TransitionActivation currentTransitionActivation = this.outgoingTransitionActivations.get(i);
		if(currentTransitionActivation.canFireOn(eventOccurrence)){
			overridingTransitionActivation = currentTransitionActivation;
		}
		i++;
	}
	deferred = overridingTransitionActivation == null;
}
return deferred;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lS44NQuEeWMJphss3BZSg" name="defer" specification="_PL6WsNG0EeWMvYElZ5Ee4w">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lS44dQuEeWMJphss3BZSg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lS44tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lS449QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Postpone the time at which this event occurrence will be available at the event pool.
// The given event occurrence is placed in the deferred event pool and will be released
// only when the current state activation will leave the state-machine configuration.
SM_ObjectActivation objectActivation = (SM_ObjectActivation) this.getExecutionContext().objectActivation;
DeferredEventOccurrence deferredEventOccurrence = new DeferredEventOccurrence();
deferredEventOccurrence.constrainingStateActivation = this;
deferredEventOccurrence.deferredEventOccurrence = eventOccurrence;
objectActivation.deferredEventPool.add(deferredEventOccurrence);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lS45NQuEeWMJphss3BZSg" name="releaseDeferredEvents" specification="_i8Y3kNG0EeWMvYElZ5Ee4w">
            <language>Java</language>
            <body>// If events have been deferred by that state then following set of action takes place:
// 1 - The events return to the event pool owned by the object activation
// 2 - The events are removed from the deferred event pool
// Note: The release of events deferred by that state occurs when this latter
// leaves the state-machine configuration.
SM_ObjectActivation objectActivation = (SM_ObjectActivation) this.getExecutionContext().objectActivation;
List&lt;DeferredEventOccurrence> releasedDeferredEvent = new ArrayList&lt;DeferredEventOccurrence>();
for(int i=0; i &lt; objectActivation.deferredEventPool.size(); i++){
	DeferredEventOccurrence eventOccurrence = objectActivation.deferredEventPool.get(i);
	if(eventOccurrence.constrainingStateActivation == this){
		releasedDeferredEvent.add(eventOccurrence);
		objectActivation.eventPool.add(eventOccurrence.deferredEventOccurrence);
		objectActivation._send(new ArrivalSignal());
	}
}
objectActivation.deferredEventPool.removeAll(releasedDeferredEvent);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lTf8NQuEeWMJphss3BZSg" name="terminate" specification="_7iXKUMD2EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// A state gets terminated when the state-machine that contains it gets itself terminated.
// If the state has an ongoing doActivity behavior then this latter is aborted. In addition,
// the state is active then it is removed from the active state configuration.
if(this.isActive()){
	if(!this.regionActivation.isEmpty()){
		for(int i = 0; i &lt; this.regionActivation.size(); i++){
			this.regionActivation.get(i).terminate();
		}
		this.regionActivation.clear();
	}
	if(!this.isDoActivityCompleted){
		this.doActivityContextObject.destroy();
	}
	this.connectionPointActivation.clear();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7DBxUNQuEeW-v_063gYgPA" name="getRegionActivation" specification="_sGW0QPlREeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7DBxUdQuEeW-v_063gYgPA" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7DCYYNQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7DCYYdQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.regionActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7DE0oNQuEeW-v_063gYgPA" name="getFireableTransitions" specification="_lX4poNG0EeWMvYElZ5Ee4w">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7DE0odQuEeW-v_063gYgPA" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7DE0otQuEeW-v_063gYgPA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7DE0o9QuEeW-v_063gYgPA" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7DE0pNQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7DE0pdQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7DE0ptQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return the set of transitions that can fire using the the given event occurrence
List&lt;TransitionActivation> fireableTransitions = new ArrayList&lt;TransitionActivation>();
for(int i=0; i &lt; this.outgoingTransitionActivations.size(); i++){
	TransitionActivation outgoingTransitionActivation = this.outgoingTransitionActivations.get(i);
	if(outgoingTransitionActivation.canFireOn(eventOccurrence)){
		fireableTransitions.add(outgoingTransitionActivation);
	}
}
return fireableTransitions;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_6cP1IHYSEeSvTf7EWD7QRA" name="tryExecuteEntry" visibility="protected" method="_0lNZUtQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_8gFVIHYSEeSvTf7EWD7QRA" name="tryExecuteDoActivity" visibility="protected" class="_rVacUHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-A0IEHYSEeSvTf7EWD7QRA" name="tryExecuteExit" visibility="protected" method="_0lOAYNQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_DZfc8HYTEeSvTf7EWD7QRA" name="activate" method="_0lNZUNQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_jAhRIPlREeSDPZmHIzgmig" name="activateTransitions" method="_0lNZUdQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_p3E5QPlREeSDPZmHIzgmig" name="getConnectionPointActivation" method="_0lMLMNQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_1JMtwPlREeSDPZmHIzgmig" type="_CDaHsKlAEeSY3-SNA3r3jg" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2KHYMPlREeSDPZmHIzgmig"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2KH_QPlREeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_q02wIPlREeSDPZmHIzgmig" name="getConnectionPointActivation" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_61tkoPlREeSDPZmHIzgmig" name="vertex">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Vertex"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_9eb6YPlREeSDPZmHIzgmig" type="_CDaHsKlAEeSY3-SNA3r3jg" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kcbwkMD2EeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kcc-sMD2EeWiyPv18KZ0lg" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_sGW0QPlREeSDPZmHIzgmig" name="getRegionActivation" method="_7DBxUNQuEeW-v_063gYgPA" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_DufjMPlSEeSDPZmHIzgmig" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GjWQcPlSEeSDPZmHIzgmig"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GjW3gPlSEeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_lX4poNG0EeWMvYElZ5Ee4w" name="getFireableTransitions" visibility="public" method="_7DE0oNQuEeW-v_063gYgPA" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_1zaA4NG0EeWMvYElZ5Ee4w" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_DmsKkNG1EeWMvYElZ5Ee4w" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EhgNANG1EeWMvYElZ5Ee4w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ehu2gNG1EeWMvYElZ5Ee4w" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_VtCUQJRREeWAs5MYUhc8EQ" name="enter" method="_0lP1kNQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_YGISkJRREeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_aJLvcJRREeWAs5MYUhc8EQ" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3uMEQJ37EeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3uSK4J37EeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_bAzT8JRREeWAs5MYUhc8EQ" name="enterRegions" method="_0lOAYdQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_gZ1OIJRREeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_hWttIJRREeWAs5MYUhc8EQ" name="exit" method="_0lRDsNQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_mUIpYJRREeWAs5MYUhc8EQ" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_9qKTcJ37EeWR28_9aJ_f5g" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="__SpUMJ37EeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__StloJ37EeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_on9GIJRREeWAs5MYUhc8EQ" name="hasCompleted" method="_0lK9ENQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_s_8aEJRREeWAs5MYUhc8EQ" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_uT-00JRREeWAs5MYUhc8EQ" name="notifyCompletion" method="_0lLkINQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_U2jA0MD2EeWiyPv18KZ0lg" name="getVertexActivation" visibility="protected" method="_0lMyQNQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_aUTC8MD2EeWiyPv18KZ0lg" name="vertex">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Vertex"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_eWshYMD2EeWiyPv18KZ0lg" name="" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ivMLoMD2EeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ivNZwMD2EeWiyPv18KZ0lg" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7iS44MD2EeWiyPv18KZ0lg" name="isEnterable" method="_0lPOgNQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7iS44cD2EeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7iS44sD2EeWiyPv18KZ0lg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7iVVIMD2EeWiyPv18KZ0lg" name="isExitable" method="_0lQcoNQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7iVVIcD2EeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7iVVIsD2EeWiyPv18KZ0lg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_DRNfQNG0EeWMvYElZ5Ee4w" name="canDefer" method="_0lSR0NQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_DRNfQdG0EeWMvYElZ5Ee4w" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_eNQO8NG0EeWMvYElZ5Ee4w" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_PL6WsNG0EeWMvYElZ5Ee4w" name="defer" method="_0lS44NQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_S8OmoNG0EeWMvYElZ5Ee4w" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_i8Y3kNG0EeWMvYElZ5Ee4w" name="releaseDeferredEvents" method="_0lS45NQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7iXKUMD2EeWiyPv18KZ0lg" name="terminate" method="_0lTf8NQuEeWMJphss3BZSg" class="_rVacUHV3EeSvTf7EWD7QRA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_tAbzsHV3EeSvTf7EWD7QRA" name="StateMachineExecution">
          <generalization xmi:type="uml:Generalization" xmi:id="_yzl7EJROEeWAs5MYUhc8EQ" general="Semantics-CommonBehaviors-BasicBehaviors-Execution" specific="_tAbzsHV3EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_XtLqgHYREeSvTf7EWD7QRA" name="regionActivations" type="_mUrtYHV3EeSvTf7EWD7QRA" aggregation="composite" association="_XtMRkHYREeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XtLqgXYREeSvTf7EWD7QRA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XtLqgnYREeSvTf7EWD7QRA" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_TBdZcIU_EeSZ05Pgomb11g" name="configuration" type="_5yEqwIU8EeSZ05Pgomb11g" aggregation="composite" association="_TBf1sIU_EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_TBdZcYU_EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TBdZcoU_EeSZ05Pgomb11g" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lefENQuEeWMJphss3BZSg" name="getConfiguration" specification="_0oaHMPiIEeSlpJn94rgDzA">
            <language>Java</language>
            <body>return this.configuration;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lefEdQuEeWMJphss3BZSg" name="initRegions" specification="_iAEPkHYREeSvTf7EWD7QRA">
            <language>Java</language>
            <body>StateMachine machine = null;
if(!this.getTypes().isEmpty()){
	machine = (StateMachine) this.getTypes().get(0);
}
if(machine!=null){
	for(Region region: machine.getRegions()){
		RegionActivation activation = (RegionActivation) this.locus.factory.instantiateVisitor(region);
		activation.setParent(this);
		activation.setNode(region);
		this.regionActivation.add(activation);
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lftMNQuEeWMJphss3BZSg" name="getVertexActivation" specification="_29iLgPiIEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lftMdQuEeWMJphss3BZSg">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Vertex"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lftMtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lftM9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lftNNQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lftNdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lftNtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>int i = 0;
VertexActivation vertexActivation = null;
while(vertexActivation==null &amp;&amp; i &lt; this.regionActivation.size()){
	 vertexActivation = this.regionActivation.get(i).getVertexActivation(vertex);
	 i++;
}
return vertexActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lgUQNQuEeWMJphss3BZSg" name="execute" specification="_pyNNEHWLEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// The execution of state-machine is realized as described below
// 1 - An event accepter is placed in the list of waiting event accepters for this state-machine
// 2 - All visitors required to interpret the state-machine are instantiated and link together
// 3 - All top level regions (i.e. those directly owned by the executed state-machine) are entered
//     concurrently.
// Note: a state-machine always has at runtime a single event accepter
if(this.context!=null &amp;&amp; this.context.objectActivation!=null){
	this.context.register(new StateMachineEventAccepter(this));
}
this.initRegions();
for(RegionActivation activation: this.regionActivation){
	activation.activate();
}
for(RegionActivation activation: this.regionActivation){
	activation.activateTransitions();
}
for(RegionActivation regionActivation: this.regionActivation){
	regionActivation.enter(null);
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lgUQdQuEeWMJphss3BZSg" name="new_" specification="_uSp5cHWLEeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lgUQtQuEeWMJphss3BZSg" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lgUQ9QuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lgURNQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>if(this.context!=null){
	return new StateMachineExecution(this.context);
}
return new StateMachineExecution();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lhiYNQuEeWMJphss3BZSg" name="startBehavior" specification="_QRNX8MNoEeWpYp0WmASFoQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lhiYdQuEeWMJphss3BZSg" name="classifier">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lhiYtQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lhiY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lhiZNQuEeWMJphss3BZSg" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lhiZdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lhiZtQuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The behavior captured here is almost identical to the one provide by Object_.
// Instead of using a simple ObjectActivation we use a StateMachineObjectActivation.
// This specialized kind of ObjectActivation allows the registering of completion events.
if (this.objectActivation == null) {
	this.objectActivation = new SM_ObjectActivation();
	this.objectActivation.object = this;
}
this.objectActivation.startBehavior(classifier, inputs);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lhiZ9QuEeWMJphss3BZSg" name="terminate" specification="_EX-gIMNoEeWpYp0WmASFoQ">
            <language>Java</language>
            <body>// The termination of a state-machine consists in aborting all &quot;ongoing&quot; doActivity behaviors
// started by states owned by this state-machine. States that are currently active (i.e., registered
// in the state-machine configuration) are not exited (i.e., if they have have exit behaviors then
// these behaviors are not executed.
for(int i=0; i &lt; this.regionActivation.size(); i++){
	this.regionActivation.get(i).terminate();
}
this.regionActivation.clear();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7DK7QNQuEeW-v_063gYgPA" name="getRegionActivation" specification="_A-HfoPiJEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7DK7QdQuEeW-v_063gYgPA" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7DK7QtQuEeW-v_063gYgPA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7DK7Q9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return regionActivation;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_pyNNEHWLEeSvTf7EWD7QRA" name="execute" visibility="public" method="_0lgUQNQuEeWMJphss3BZSg" class="_tAbzsHV3EeSvTf7EWD7QRA">
            <ownedComment xmi:type="uml:Comment" xmi:id="_pyNNEXWLEeSvTf7EWD7QRA" annotatedElement="_pyNNEHWLEeSvTf7EWD7QRA">
              <body>Execute the behavior given by the type of this execution. &#xD;
The parameterValues for any input (in or in-out) parameters of the behavior should be set before the execution.&#xD;
The parameteValues for any output (in-out, out or return) parameters of the behavior will be set by the execution.&#xD;
</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_uSp5cHWLEeSvTf7EWD7QRA" name="new_" visibility="public" method="_0lgUQdQuEeWMJphss3BZSg" class="_tAbzsHV3EeSvTf7EWD7QRA">
            <ownedComment xmi:type="uml:Comment" xmi:id="_uSp5cXWLEeSvTf7EWD7QRA" annotatedElement="_uSp5cHWLEeSvTf7EWD7QRA">
              <body>Create a new execution with no behavior or parameterValues.&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_uSp5cnWLEeSvTf7EWD7QRA" name="ReturnResult" visibility="public" type="Semantics-Classes-Kernel-Value" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_iAEPkHYREeSvTf7EWD7QRA" name="initRegions" visibility="protected" method="_0lefEdQuEeWMJphss3BZSg" class="_tAbzsHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_0oaHMPiIEeSlpJn94rgDzA" name="getConfiguration" method="_0lefENQuEeWMJphss3BZSg" class="_tAbzsHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_29iLgPiIEeSlpJn94rgDzA" name="getVertexActivation" visibility="protected" method="_0lftMNQuEeWMJphss3BZSg" class="_tAbzsHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bytjgPiJEeSlpJn94rgDzA">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Vertex"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_dvTzEPiJEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_A-HfoPiJEeSlpJn94rgDzA" name="getRegionActivation" method="_7DK7QNQuEeW-v_063gYgPA" class="_tAbzsHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_gsFtQPiJEeSlpJn94rgDzA" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_iGnKgPiJEeSlpJn94rgDzA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iGqN0PiJEeSlpJn94rgDzA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_EX-gIMNoEeWpYp0WmASFoQ" name="terminate" method="_0lhiZ9QuEeWMJphss3BZSg" class="_tAbzsHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_QRNX8MNoEeWpYp0WmASFoQ" name="startBehavior" visibility="public" method="_0lhiYNQuEeWMJphss3BZSg" class="_tAbzsHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QRNX8cNoEeWpYp0WmASFoQ" name="classifier" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_QRNX8sNoEeWpYp0WmASFoQ"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QRNX88NoEeWpYp0WmASFoQ" name="inputs" visibility="public" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" effect="create">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_QRNX9MNoEeWpYp0WmASFoQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QRNX9cNoEeWpYp0WmASFoQ" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vJ5akHV3EeSvTf7EWD7QRA" name="TransitionActivation" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_NHWH8HWHEeSvTf7EWD7QRA" general="_yWknYHV2EeSvTf7EWD7QRA" specific="_vJ5akHV3EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_iYq1APfzEeS41tijFXo_Iw" name="status" visibility="protected" type="_kHnqIPfzEeS41tijFXo_Iw"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_US6R4pRMEeWAs5MYUhc8EQ" name="vertexSourceActivation" type="_z0JjMHV3EeSvTf7EWD7QRA" association="_US5q0JRMEeWAs5MYUhc8EQ"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_p47YFJRMEeWAs5MYUhc8EQ" name="vertexTargetActivation" type="_z0JjMHV3EeSvTf7EWD7QRA" association="_p47YEJRMEeWAs5MYUhc8EQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0llz0NQuEeWMJphss3BZSg" name="getStatus" specification="_xiXAcPiBEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0llz0dQuEeWMJphss3BZSg" type="_kHnqIPfzEeS41tijFXo_Iw" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0llz0tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0llz09QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return status;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lma4NQuEeWMJphss3BZSg" name="setStatus" specification="_wU688PiBEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lma4dQuEeWMJphss3BZSg" name="status" type="_kHnqIPfzEeS41tijFXo_Iw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lma4tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lma49QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.status = state;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lnB8NQuEeWMJphss3BZSg" name="isReached" specification="_zMiDQPiBEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lnB8dQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lnB8tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lnB89QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>/// Convenience operation which returns true if the status of this transition
// is REACHED; false otherwise.
return this.status.equals(TransitionMetadata.REACHED);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lnB9NQuEeWMJphss3BZSg" name="isTraversed" specification="_04TBgPiBEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lnB9dQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lnB9tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lnB99QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Convenience operation which returns true if the status of this transition
// is TRAVERSED; false otherwise.
return this.status.equals(TransitionMetadata.TRAVERSED);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lnpANQuEeWMJphss3BZSg" name="isTriggered" specification="_DLk54PiCEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lnpAdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lnpAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lnpA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return !((Transition)this.node).getTriggers().isEmpty();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0loQENQuEeWMJphss3BZSg" name="isGuarded" specification="_EX-bkPiCEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0loQEdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0loQEtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0loQE9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return ((Transition)this.node).getGuard()!=null;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lo3INQuEeWMJphss3BZSg" name="getSourceActivation" specification="_FbGsgPiCEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lo3IdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lo3ItQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lo3I9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return vertexSourceActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lpeMNQuEeWMJphss3BZSg" name="setSourceActivation" specification="_KByjwPiCEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lpeMdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lpeMtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lpeM9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.vertexSourceActivation = vertexSourceActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lpeNNQuEeWMJphss3BZSg" name="getTargetActivation" specification="_S6QHUPiEEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lpeNdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lpeNtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lpeN9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return vertexTargetActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lqFQNQuEeWMJphss3BZSg" name="setTargetActivation" specification="_ThWjkPiEEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lqFQdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lqFQtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lqFQ9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.vertexTargetActivation = vertexTargetActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lqsUNQuEeWMJphss3BZSg" name="evaluateGuard" specification="_9DjLsPiBEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lqsUdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lqsUtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lqsU9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Evaluate the guard specification thanks to an evaluation.
// The evaluation does not presume of the type of the guard specification.
boolean result = true;  
Transition transition = (Transition) this.node;
if (transition.getGuard() != null) {
	ValueSpecification specification = transition.getGuard().getSpecification() ;
	if(specification!=null){
		Evaluation evaluation = this.getExecutionLocus().factory.createEvaluation(specification);
		if (specification instanceof OpaqueExpression) {
			((SM_OpaqueExpressionEvaluation)evaluation).context = this.getExecutionContext() ;
		}
		if(evaluation!=null){
			BooleanValue evaluationResult = (BooleanValue)evaluation.evaluate() ;
			result = evaluationResult.value ;
		}
	}
	
}
return result;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lrTYNQuEeWMJphss3BZSg" name="hasTrigger" specification="_Axdn4PiCEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lrTYdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lrTYtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lrTY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lrTZNQuEeWMJphss3BZSg" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lrTZdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lrTZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return true if the following transition has a trigger that is reactive
// to the given signal instance.
int i = 0;
Transition transition = (Transition)this.node;
Trigger trigger = null;
while(i &lt; transition.getTriggers().size() &amp;&amp; trigger==null){
	Trigger currentTrigger = transition.getTriggers().get(i);
	if(currentTrigger.getEvent()!=null &amp;&amp; 
			currentTrigger.getEvent() instanceof SignalEvent
			&amp;&amp; ((SignalEvent)currentTrigger.getEvent()).getSignal()==signal.type){
		if(currentTrigger.getPorts().size() > 0) {
			List&lt;Port> portsOfTrigger = currentTrigger.getPorts();
			Port onPort = ((CS_SignalInstance)signal).interactionPoint.definingPort;
			Boolean portMatches = false;
			int j = 1;
			while(!portMatches &amp; j &lt;= portsOfTrigger.size()) {
				portMatches = onPort == portsOfTrigger.get(j - 1);
				j = j + 1;
			}
			if(portMatches){
				trigger = currentTrigger;
			}
		}else{
			trigger = currentTrigger;
		}
	}
	i++;
}
return trigger != null;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lr6cNQuEeWMJphss3BZSg" name="canFireOn" specification="_XcxGsNHBEeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lr6cdQuEeWMJphss3BZSg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lr6ctQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lr6c9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lr6dNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lr6ddQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lr6dtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A transition is can fire when:
//
// A completion event is being dispatched and this transition has no trigger
// but its eventual guard evaluates to true. Note: the scope of a completion
// event is the state from which it was generated
//
// A signal event is being dispatched and this transition has a trigger
// that matches the signal and its eventual guard evaluates to true
boolean reactive = true;
if(eventOccurrence instanceof CompletionEventOccurrence){
	reactive = !this.isTriggered() &amp;&amp;
				this.getSourceActivation()==((CompletionEventOccurrence)eventOccurrence).stateActivation &amp;&amp;
				this.evaluateGuard();
}else if(eventOccurrence instanceof SignalEventOccurrence){
	reactive = this.hasTrigger(((SignalEventOccurrence)eventOccurrence).signalInstance) &amp;&amp;
			   this.evaluateGuard();
}else{
	reactive = false;
}
return reactive;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lshgNQuEeWMJphss3BZSg" name="executeEffect" specification="_wZ2W0HWIEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// Execute the effect that is on the transition if it exists one
Transition transition = (Transition) this.getNode();
Execution execution = this.getExecutionFor(transition.getEffect());
if(execution!=null){
	execution.execute();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lshgdQuEeWMJphss3BZSg" name="fire" specification="_1DusAHWIEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// The fire sequence is broken into the following set of actions
// 1 - Exit the source (depends on the kind of transition that is currently used)
// 2 - Execute the effect (if one exists for that transition)
// 3 - Enter the target (depends on the kind of transition that is currently used)
this.exitSource();
FUMLExecutionEngine.eInstance.getControlDelegate().control(this); 
this.executeEffect();
((SM_ControlDelegate)FUMLExecutionEngine.eInstance.getControlDelegate()).inactive(this.getNode()); 
this.setStatus(TransitionMetadata.TRAVERSED);
logger.info(this.getNode().getName()+&quot; => TRAVERSED&quot;);
this.enterTarget();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ltIkNQuEeWMJphss3BZSg" name="getLeastCommonAncestor" specification="_c6Kj4MD0EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0ltIkdQuEeWMJphss3BZSg" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ltIktQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ltIk9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return the common ancestor of the source and the target. This common ancestor is
// a region activation
if(this.vertexSourceActivation.getParentState()!=this.vertexTargetActivation.getParentState()){
	if(this.leastCommonAncestor==null){
		this.leastCommonAncestor = this.vertexSourceActivation.getLeastCommonAncestor(this.vertexTargetActivation);
	}
}
return this.leastCommonAncestor;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_wZ2W0HWIEeSvTf7EWD7QRA" name="executeEffect" method="_0lshgNQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_1DusAHWIEeSvTf7EWD7QRA" name="fire" method="_0lshgdQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_XcxGsNHBEeWB0O9YzCwUNg" name="canFireOn" method="_0lr6cNQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_agIxENHBEeWB0O9YzCwUNg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_cTxR4NHBEeWB0O9YzCwUNg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_wU688PiBEeS41tijFXo_Iw" name="setStatus" method="_0lma4NQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_mhKR8PiDEeSlpJn94rgDzA" name="status" type="_kHnqIPfzEeS41tijFXo_Iw"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_xiXAcPiBEeS41tijFXo_Iw" name="getStatus" method="_0llz0NQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_p7fDwPiDEeSlpJn94rgDzA" type="_kHnqIPfzEeS41tijFXo_Iw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_zMiDQPiBEeS41tijFXo_Iw" name="isReached" method="_0lnB8NQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_t1rBYPiDEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_04TBgPiBEeS41tijFXo_Iw" name="isTraversed" method="_0lnB9NQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_xJPD4PiDEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_9DjLsPiBEeS41tijFXo_Iw" name="evaluateGuard" method="_0lqsUNQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="___ftgPiDEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Axdn4PiCEeS41tijFXo_Iw" name="hasTrigger" method="_0lrTYNQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Dqq-wPiEEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_A8CR4JROEeWAs5MYUhc8EQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_DLk54PiCEeS41tijFXo_Iw" name="isTriggered" method="_0lnpANQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_F0hAIPiEEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_EX-bkPiCEeS41tijFXo_Iw" name="isGuarded" method="_0loQENQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_HvNyQPiEEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_FbGsgPiCEeS41tijFXo_Iw" name="getSourceActivation" method="_0lo3INQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KRndkPiEEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_KByjwPiCEeS41tijFXo_Iw" name="setSourceActivation" method="_0lpeMNQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_PO2zoPiEEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_S6QHUPiEEeSlpJn94rgDzA" name="getTargetActivation" method="_0lpeNNQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ddqbsPiEEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ThWjkPiEEeSlpJn94rgDzA" name="setTargetActivation" method="_0lqFQNQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_iqDBAPiEEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_lNJZsJ31EeWR28_9aJ_f5g" name="enterTarget" visibility="protected" isAbstract="true" class="_vJ5akHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_nNoDsJ31EeWR28_9aJ_f5g" name="exitSource" visibility="protected" isAbstract="true" class="_vJ5akHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_c6Kj4MD0EeWiyPv18KZ0lg" name="getLeastCommonAncestor" visibility="protected" method="_0ltIkNQuEeWMJphss3BZSg" class="_vJ5akHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_c6Kj4cD0EeWiyPv18KZ0lg" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ircQoHWJEeSvTf7EWD7QRA" name="A_vertexActivations_regionActivation" memberEnd="_ircQoXWJEeSvTf7EWD7QRA _irabcHWJEeSvTf7EWD7QRA">
          <ownedEnd xmi:type="uml:Property" xmi:id="_ircQoXWJEeSvTf7EWD7QRA" name="regionActivation" type="_mUrtYHV3EeSvTf7EWD7QRA" owningAssociation="_ircQoHWJEeSvTf7EWD7QRA" association="_ircQoHWJEeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ircQonWJEeSvTf7EWD7QRA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ircQo3WJEeSvTf7EWD7QRA" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_jnAhAHWJEeSvTf7EWD7QRA" name="A_transitionActivations_regionActivation" memberEnd="_jnAhAXWJEeSvTf7EWD7QRA _jm_S4HWJEeSvTf7EWD7QRA">
          <ownedEnd xmi:type="uml:Property" xmi:id="_jnAhAXWJEeSvTf7EWD7QRA" name="regionActivation" type="_mUrtYHV3EeSvTf7EWD7QRA" owningAssociation="_jnAhAHWJEeSvTf7EWD7QRA" association="_jnAhAHWJEeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jnAhAnWJEeSvTf7EWD7QRA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jnAhA3WJEeSvTf7EWD7QRA" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_XtMRkHYREeSvTf7EWD7QRA" name="A_regionActivations_execution" memberEnd="_XtMRkXYREeSvTf7EWD7QRA _XtLqgHYREeSvTf7EWD7QRA">
          <ownedEnd xmi:type="uml:Property" xmi:id="_XtMRkXYREeSvTf7EWD7QRA" name="execution" type="_tAbzsHV3EeSvTf7EWD7QRA" owningAssociation="_XtMRkHYREeSvTf7EWD7QRA" association="_XtMRkHYREeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XtMRknYREeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XtMRk3YREeSvTf7EWD7QRA" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_TBf1sIU_EeSZ05Pgomb11g" name="A_configuration_execution" memberEnd="_TBf1sYU_EeSZ05Pgomb11g _TBdZcIU_EeSZ05Pgomb11g"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_c1eAsKlbEeSjZIlDMA60Cg" name="FinalStateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_wG6cMKlbEeSjZIlDMA60Cg" general="_rVacUHV3EeSvTf7EWD7QRA" specific="_c1eAsKlbEeSjZIlDMA60Cg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lwL4NQuEeWMJphss3BZSg" name="enter" specification="_7Y7R0JRREeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lwL4dQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lwL4tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lwL49QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lwL5NQuEeWMJphss3BZSg" name="explicit">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lwL5dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lwL5tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The final state completes the region in which it is located*/
RegionActivation regionActivation = (RegionActivation) this.getParent();
regionActivation.isCompleted = true;
// If this region is the last of this state to complete through its final
// state then it leads to the generation of a completion event
if(regionActivation.getParent() instanceof StateActivation){
	 StateActivation stateActivation = (StateActivation) regionActivation.getParent();
	 if(stateActivation.hasCompleted()){
		 stateActivation.notifyCompletion();
	 }
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7Y7R0JRREeWAs5MYUhc8EQ" name="enter" method="_0lwL4NQuEeWMJphss3BZSg" class="_c1eAsKlbEeSjZIlDMA60Cg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7Y7R0ZRREeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7Y7R0pRREeWAs5MYUhc8EQ" name="explicit">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uXOgIPlQEeSDPZmHIzgmig" name="A_connectionPointActivations_stateActivation" memberEnd="_uXOgIflQEeSDPZmHIzgmig _uXNSAPlQEeSDPZmHIzgmig">
          <ownedEnd xmi:type="uml:Property" xmi:id="_uXOgIflQEeSDPZmHIzgmig" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" owningAssociation="_uXOgIPlQEeSDPZmHIzgmig" association="_uXOgIPlQEeSDPZmHIzgmig">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uXOgIvlQEeSDPZmHIzgmig" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uXOgI_lQEeSDPZmHIzgmig" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_MzNhc_lREeSDPZmHIzgmig" name="A_regionActivations_stateActivation" memberEnd="_MzNhdPlREeSDPZmHIzgmig _MzNhcPlREeSDPZmHIzgmig">
          <ownedEnd xmi:type="uml:Property" xmi:id="_MzNhdPlREeSDPZmHIzgmig" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" owningAssociation="_MzNhc_lREeSDPZmHIzgmig" association="_MzNhc_lREeSDPZmHIzgmig">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MzNhdflREeSDPZmHIzgmig"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MzNhdvlREeSDPZmHIzgmig" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_US5q0JRMEeWAs5MYUhc8EQ" name="A_vertexSourceActivation_outgoingTransitionActivations" memberEnd="_US6R4pRMEeWAs5MYUhc8EQ _US6R45RMEeWAs5MYUhc8EQ">
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_p47YEJRMEeWAs5MYUhc8EQ" name="A_incomingTransitionActivations_Target" memberEnd="_p47YE5RMEeWAs5MYUhc8EQ _p47YFJRMEeWAs5MYUhc8EQ">
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_cSWJcJRTEeWAs5MYUhc8EQ" name="A_registrationContext_eventAccepter" memberEnd="_cSWwgZRTEeWAs5MYUhc8EQ _cSWwgpRTEeWAs5MYUhc8EQ">
          <ownedEnd xmi:type="uml:Property" xmi:id="_cSWwgpRTEeWAs5MYUhc8EQ" name="eventAccepter" type="_xkTAcHV3EeSvTf7EWD7QRA" owningAssociation="_cSWJcJRTEeWAs5MYUhc8EQ" association="_cSWJcJRTEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EkU5IM7kEeWm66KqBui2pQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EkWuUM7kEeWm66KqBui2pQ" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_z0JjMHV3EeSvTf7EWD7QRA" name="VertexActivation" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_MeYqgHWHEeSvTf7EWD7QRA" general="_yWknYHV2EeSvTf7EWD7QRA" specific="_z0JjMHV3EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_4eyfsPiEEeSlpJn94rgDzA" name="status" visibility="protected" type="_6aglgPiEEeSlpJn94rgDzA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_US6R45RMEeWAs5MYUhc8EQ" name="outgoingTransitionActivations" type="_vJ5akHV3EeSvTf7EWD7QRA" association="_US5q0JRMEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k8nPEJRMEeWAs5MYUhc8EQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k8pEQJRMEeWAs5MYUhc8EQ" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_p47YE5RMEeWAs5MYUhc8EQ" name="incomingTransitionActivations" type="_vJ5akHV3EeSvTf7EWD7QRA" association="_p47YEJRMEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1s8_wJRMEeWAs5MYUhc8EQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1s_cAJRMEeWAs5MYUhc8EQ" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lyoINQuEeWMJphss3BZSg" name="getParentState" specification="_skgfAPiEEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lyoIdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lyoItQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lyoI9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The parent state of a vertex is either a StateMachineExecution or a StateActivation
RegionActivation regionActivation = (RegionActivation)this.getParent();
if(regionActivation!=null){
	if(regionActivation.getParent() instanceof StateMachineExecution){
		return null;
	}else{
		return (VertexActivation) regionActivation.getParent();
	}
}
return null;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lzPMNQuEeWMJphss3BZSg" name="setStatus" specification="_zGPtsPiEEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lzPMdQuEeWMJphss3BZSg" name="status" type="_6aglgPiEEeSlpJn94rgDzA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lzPMtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lzPM9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.status = state;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lz2QNQuEeWMJphss3BZSg" name="getStatus" specification="_Mqu0kPiFEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lz2QdQuEeWMJphss3BZSg" type="_6aglgPiEEeSlpJn94rgDzA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lz2QtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lz2Q9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.status;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l0dUNQuEeWMJphss3BZSg" name="addIncomingTransition" specification="_N4aIoPiFEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l0dUdQuEeWMJphss3BZSg" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l0dUtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l0dU9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.incomingTransitionActivations.add(activation);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l0dVNQuEeWMJphss3BZSg" name="addOutgoingTransition" specification="_QurLIPiFEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l0dVdQuEeWMJphss3BZSg" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l0dVtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l0dV9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.outgoingTransitionActivations.add(activation);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l1EYNQuEeWMJphss3BZSg" name="getVertexActivation" specification="_SgqGIPiFEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l1rcNQuEeWMJphss3BZSg" name="vertex">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Vertex"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l1rcdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l1rctQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l1rc9QuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l1rdNQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l1rddQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// By default return nothing. Must be overridden by state activation;
return null;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l2SgNQuEeWMJphss3BZSg" name="enter" specification="_Iuv1sJRNEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l2SgdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l2SgtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l2Sg9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l2ShNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l2ShdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l2ShtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// 1-The vertex becomes active
// 2-Outgoing transitions of this vertex are tagged as being REACHED
// 3-The vertex starts to be highlighted
logger.info(this.getNode().getName()+&quot; => ACTIVE&quot;);
this.setStatus(StateMetadata.ACTIVE);
this.tagOutgoingTransitions(TransitionMetadata.REACHED);
FUMLExecutionEngine.eInstance.getControlDelegate().control(this);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l25kNQuEeWMJphss3BZSg" name="exit" specification="_JttYUJRNEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l25kdQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l25ktQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l25k9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l25lNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l25ldQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l25ltQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// 1-The representation of the vertex stops to be highlighted
// 2-The incoming transitions of this vertex get back to the NONE status
// 3- The vertex becomes IDLE
((SM_ControlDelegate)FUMLExecutionEngine.eInstance.getControlDelegate()).inactive(this.getNode());
this.tagIncomingTransitions(TransitionMetadata.NONE);
this.setStatus(StateMetadata.IDLE);
logger.info(this.getNode().getName()+&quot; => IDLE&quot;);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l3goNQuEeWMJphss3BZSg" name="isActive" specification="_gkWDUPiFEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l3godQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l3gotQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l3go9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// FIXME: Shall be replaced by a call to the state-machine configuration
// If a state is active, it is in the state-machine configuration
return this.status.equals(StateMetadata.ACTIVE);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l4HsNQuEeWMJphss3BZSg" name="getLeastCommonAncestor" specification="_gA3f4J3mEeWR28_9aJ_f5g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l4HsdQuEeWMJphss3BZSg" name="vertexActivation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l4HstQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l4Hs9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l4HtNQuEeWMJphss3BZSg" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l4HtdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l4HttQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Calculate paths from both vertices to the root of the state-machine.
// Compare the paths, the first difference means the previous item in the
// path was the least common ancestor.
List&lt;SemanticVisitor> sourceHierarchy = this.getContextChain();
List&lt;SemanticVisitor> targetHierachy = targetVertexActivation.getContextChain();
int i = targetHierachy.size() - 1;
int j = sourceHierarchy.size() - 1;
RegionActivation leastCommonAncestor = null;
while(i >= 0 &amp;&amp; j >= 0 &amp;&amp; leastCommonAncestor==null){
	if(targetHierachy.get(i)!=sourceHierarchy.get(j)){
		leastCommonAncestor = (RegionActivation) sourceHierarchy.get(j+1);
	}
	i--;
	j--;
}
if(leastCommonAncestor==null){
	StateActivation commonAncestor = (StateActivation) sourceHierarchy.get(j+1);
	VertexActivation searchedVertexActivation = sourceHierarchy.size() >= targetHierachy.size() ? this : targetVertexActivation;
	int x = 0;
	while(leastCommonAncestor==null &amp;&amp; x &lt; commonAncestor.getRegionActivation().size()){
		RegionActivation regionActivation = commonAncestor.getRegionActivation().get(x);
		if(regionActivation.getVertexActivation((Vertex)searchedVertexActivation.node)!=null){
			leastCommonAncestor = regionActivation;
		}
		x++;
	}
}
return leastCommonAncestor;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l4uwNQuEeWMJphss3BZSg" name="isEnterable" specification="_JrjPYMDzEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l4uwdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l4uwtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l4uw9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l4uxNQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l4uxdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l4uxtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// By default a vertex has no prerequisites that need to be full-filled
// to be entered. Nevertheless some vertex (e.g., join or exit) have such
// prerequisites. Therefore this method is intended to be overridden in vertex
// activation sub-classes. 
return true;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l584NQuEeWMJphss3BZSg" name="isExitable" specification="_KIEMQMDzEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l584dQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l584tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l5849QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l585NQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l585dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l585tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// By default a vertex has no prerequisites that need to be full-filled to be entered
// Nevertheless some vertex (e.g., Fork) have such prerequisite. Therefore this method
// is intended to be overridden in vertex activation sub-classes.
return true;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l5859QuEeWMJphss3BZSg" name="terminate" specification="_d6aVYMDzEeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// Terminate applied by a vertex activation does nothing by default. However it is intended
// to be overridden by sub-classe(s)  
return;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7D1poNQuEeW-v_063gYgPA" name="getOutgoingTransitions" specification="_2Wh7cMDyEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7D1podQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7D1potQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7D1po9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.outgoingTransitionActivations;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7D2QsNQuEeW-v_063gYgPA" name="getIncomingTransitions" specification="_Mx05QMDyEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7D2QsdQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7D23wNQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7D23wdQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.incomingTransitionActivations;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_skgfAPiEEeSlpJn94rgDzA" name="getParentState" method="_0lyoINQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Em-kEPiGEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_zGPtsPiEEeSlpJn94rgDzA" name="setStatus" method="_0lzPMNQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_JoIw0PiGEeSlpJn94rgDzA" name="status" type="_6aglgPiEEeSlpJn94rgDzA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Mqu0kPiFEeSlpJn94rgDzA" name="getStatus" method="_0lz2QNQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QL9qMPiGEeSlpJn94rgDzA" type="_6aglgPiEEeSlpJn94rgDzA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N4aIoPiFEeSlpJn94rgDzA" name="addIncomingTransition" method="_0l0dUNQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_T_j3oPiGEeSlpJn94rgDzA" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_QurLIPiFEeSlpJn94rgDzA" name="addOutgoingTransition" method="_0l0dVNQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_d42Q8PiGEeSlpJn94rgDzA" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_SgqGIPiFEeSlpJn94rgDzA" name="getVertexActivation" visibility="protected" method="_0l1EYNQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_mblHAPiGEeSlpJn94rgDzA" name="vertex">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Vertex"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oEpWkPiGEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_YlPewPiFEeSlpJn94rgDzA" name="tagOutgoingTransition" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_tadksPiGEeSlpJn94rgDzA" type="_kHnqIPfzEeS41tijFXo_Iw"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_aoxcwPiFEeSlpJn94rgDzA" name="tagIncomingTransition" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_vbfoUPiGEeSlpJn94rgDzA" type="_kHnqIPfzEeS41tijFXo_Iw"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_gkWDUPiFEeSlpJn94rgDzA" name="isActive" method="_0l3goNQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_PFMDAMDyEeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_3waE0PiGEeSlpJn94rgDzA" name="getAscendingHierachy" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-YKb8PiGEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AH2Q4PiHEeSlpJn94rgDzA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AH4tIPiHEeSlpJn94rgDzA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Iuv1sJRNEeWAs5MYUhc8EQ" name="enter" method="_0l2SgNQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_NFtO4JRNEeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WJEFwJRNEeWAs5MYUhc8EQ" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_b_92QJ3mEeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cADV0J3mEeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_JttYUJRNEeWAs5MYUhc8EQ" name="exit" method="_0l25kNQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_aXM6IJRNEeWAs5MYUhc8EQ" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_snfIgJ3uEeWR28_9aJ_f5g" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uZUSgJ3uEeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uZaZIJ3uEeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_gA3f4J3mEeWR28_9aJ_f5g" name="getLeastCommonAncestor" method="_0l4HsNQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ivnrgJ3uEeWR28_9aJ_f5g" name="vertexActivation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_eJYgMJ3uEeWR28_9aJ_f5g" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Mx05QMDyEeWiyPv18KZ0lg" name="getIncomingTransitions" method="_7D2QsNQuEeW-v_063gYgPA" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="__TTCIMDyEeWiyPv18KZ0lg" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_CaQMAMDzEeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CaSoQMDzEeWiyPv18KZ0lg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_2Wh7cMDyEeWiyPv18KZ0lg" name="getOutgoingTransitions" method="_7D1poNQuEeW-v_063gYgPA" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_FdCAgMDzEeWiyPv18KZ0lg" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FdCAgcDzEeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FdCAgsDzEeWiyPv18KZ0lg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_JrjPYMDzEeWiyPv18KZ0lg" name="isEnterable" method="_0l4uwNQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_O-QfIMDzEeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_TrNWcMDzEeWiyPv18KZ0lg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_KIEMQMDzEeWiyPv18KZ0lg" name="isExitable" method="_0l584NQuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_PVuj8MDzEeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_VcefwMDzEeWiyPv18KZ0lg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_d6aVYMDzEeWiyPv18KZ0lg" name="terminate" method="_0l5859QuEeWMJphss3BZSg" class="_z0JjMHV3EeSvTf7EWD7QRA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vblQoMD0EeWiyPv18KZ0lg" name="ExternalTransitionActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_RKpzUMD1EeWiyPv18KZ0lg" general="_vJ5akHV3EeSvTf7EWD7QRA" specific="_vblQoMD0EeWiyPv18KZ0lg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l-1YNQuEeWMJphss3BZSg" name="exitSource" specification="_WjIT4MD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// The exiting phase of the source vertex activation is conditioned both by
// the prerequisites that apply to leave the source and the prerequisites that
// apply to enter the target. 
// 1 - The source can be exited and its target can be entered
//	 	-> The source is exited using the common ancestor
// 2 - The source can be exited but is target is not ready to be entered
//		-> The source is exited but the common ancestor is used. This implies
//         the exiting phase is not propagated to parent state (if required)
if(this.vertexSourceActivation.isExitable(this)){
	if(this.vertexTargetActivation.isEnterable(this)){
		this.vertexSourceActivation.exit(this, this.getLeastCommonAncestor());
	}else{
		this.vertexSourceActivation.exit(this, null);	
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l_ccNQuEeWMJphss3BZSg" name="enterTarget" specification="_WjHFwMD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// If the target vertex activation can be entered (i.e., its possible prerequisites
// are satisfied) then the entering process begins. Note that this process may lead
// to enter other states based on what is the common ancestor exiting between the
// the source and the target. Besides the prerequisites imposed by the target vertex
// activation there are no other constraints to enter the target state
if(this.vertexTargetActivation.isEnterable(this)){
	this.vertexTargetActivation.enter(this, this.getLeastCommonAncestor());
}else{
	if(this.vertexTargetActivation instanceof StateActivation){
		StateActivation targetStateActivation = (StateActivation) this.vertexTargetActivation;
		int i = 0;
		RegionActivation containingRegionActivation = null;
		while(containingRegionActivation == null &amp;&amp; i &lt; targetStateActivation.regionActivation.size()){
			RegionActivation currentActivation = targetStateActivation.regionActivation.get(i);
			if(currentActivation.getVertexActivation((Vertex)this.vertexSourceActivation.getNode())!=null){
				containingRegionActivation = currentActivation;
			}
			i++;
		}
		if(containingRegionActivation!=null){
			containingRegionActivation.isCompleted = true;
			if(targetStateActivation.hasCompleted()){
				targetStateActivation.notifyCompletion();
			}
		}
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_WjHFwMD1EeWiyPv18KZ0lg" name="enterTarget" visibility="protected" method="_0l_ccNQuEeWMJphss3BZSg" class="_vblQoMD0EeWiyPv18KZ0lg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_WjIT4MD1EeWiyPv18KZ0lg" name="exitSource" visibility="protected" method="_0l-1YNQuEeWMJphss3BZSg" class="_vblQoMD0EeWiyPv18KZ0lg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_yFeEAMD0EeWiyPv18KZ0lg" name="InternalTransitionActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_P4qnAMD1EeWiyPv18KZ0lg" general="_vJ5akHV3EeSvTf7EWD7QRA" specific="_yFeEAMD0EeWiyPv18KZ0lg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mADgNQuEeWMJphss3BZSg" name="exitSource" specification="_UIWTgMD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// An internal transition does not cause exit of the source state
return;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mADgdQuEeWMJphss3BZSg" name="enterTarget" specification="_UIXhoMD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// An internal transition does not cause entry of the target state
return;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_UIWTgMD1EeWiyPv18KZ0lg" name="exitSource" visibility="protected" method="_0mADgNQuEeWMJphss3BZSg" class="_yFeEAMD0EeWiyPv18KZ0lg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_UIXhoMD1EeWiyPv18KZ0lg" name="enterTarget" visibility="protected" method="_0mADgdQuEeWMJphss3BZSg" class="_yFeEAMD0EeWiyPv18KZ0lg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_02O7cMD0EeWiyPv18KZ0lg" name="LocalTransitionActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_QiAe8MD1EeWiyPv18KZ0lg" general="_vJ5akHV3EeSvTf7EWD7QRA" specific="_02O7cMD0EeWiyPv18KZ0lg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mBRoNQuEeWMJphss3BZSg" name="getContainingState" specification="_eF0pQMD1EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mBRodQuEeWMJphss3BZSg" name="StateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mBRotQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mBRo9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The container of a local transition is determined in the following manner:
// 1 - If the source vertex is an entry point then the containing state is the
//     the state that has this entry point on its edge
// 2 - Else in the case where the source contains the target then the containing
//	   state is the source itself. Otherwise the source is the target
StateActivation containingState = null; 
if(this.vertexSourceActivation instanceof EntryPointActivation){
	containingState = (StateActivation) this.vertexSourceActivation.getParentState();
}else{
	if(this.vertexSourceActivation.getVertexActivation((Vertex)this.vertexTargetActivation.getNode())!=null){
		containingState = (StateActivation) this.vertexSourceActivation;
	}else{
		containingState = (StateActivation) this.vertexTargetActivation;
	}
}
return containingState;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mB4sNQuEeWMJphss3BZSg" name="exitSource" specification="_V81I4MD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// Exiting the source state of a local transition consists in the following set of actions:
// 1 - Check if the source state can be exited (if it cannot then do nothing)
// 2 - If the source can be exited and this latter is an entry point then the exit
//     of the source is trivial (i.e., it only consists in exiting the entry point)
//   - If the source can be exited and this latter is a composite state then the top
//     vertex that is located in the top region which contains (maybe in deep nesting)
//     the tar get is exited. At this point, if the source is not the containing state
//     then it is also exited
StateActivation containingState = this.getContainingState();
if(this.vertexSourceActivation.isExitable(this)){
	if(this.vertexSourceActivation instanceof EntryPointActivation){
		this.vertexSourceActivation.exit(this, null);
	}else{
		int i=0;
		RegionActivation containingRegion = null; 
		while(containingRegion==null &amp;&amp; i &lt; containingState.regionActivation.size()){
			RegionActivation regionActivation = containingState.regionActivation.get(i);
			if(regionActivation.getVertexActivation((Vertex)this.vertexTargetActivation.getNode())!=null){
				containingRegion = regionActivation;
			}
			i++;
		}
		if(containingRegion!=null){
			i = 0;
			VertexActivation vertexActivationToBeExited = null;
			Execution stateMachineExecution = this.getStateMachineExecution();
			while(vertexActivationToBeExited == null &amp;&amp; i &lt; containingRegion.vertexActivations.size()){
				VertexActivation currentActivation = containingRegion.vertexActivations.get(i);
				if(((StateMachineExecution)stateMachineExecution).getConfiguration().isActive(currentActivation)){
					vertexActivationToBeExited = currentActivation;
				}
				i++;
			}
			if(vertexActivationToBeExited != null){
				vertexActivationToBeExited.exit(this, null);
			}
		}
		if(this.vertexSourceActivation != containingState){
			this.vertexSourceActivation.exit(this, this.getLeastCommonAncestor());
		}
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mB4sdQuEeWMJphss3BZSg" name="enterTarget" specification="_V8z6wMD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// Entering the target of local transition consists in checking if the target can be entered. If
// this is the case then only when the target is not also the containing state it is entered 
if(this.vertexTargetActivation.isEnterable(this)){	
	if(this.vertexTargetActivation != this.getContainingState()){
		this.vertexTargetActivation.enter(this, this.getLeastCommonAncestor());
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_V8z6wMD1EeWiyPv18KZ0lg" name="enterTarget" visibility="protected" method="_0mB4sdQuEeWMJphss3BZSg" class="_02O7cMD0EeWiyPv18KZ0lg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_V81I4MD1EeWiyPv18KZ0lg" name="exitSource" visibility="protected" method="_0mB4sNQuEeWMJphss3BZSg" class="_02O7cMD0EeWiyPv18KZ0lg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_eF0pQMD1EeWiyPv18KZ0lg" name="getContainingState" visibility="protected" method="_0mBRoNQuEeWMJphss3BZSg" class="_02O7cMD0EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kqJ48MD1EeWiyPv18KZ0lg" name="StateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5yEqwIU8EeSZ05Pgomb11g" name="StateMachineConfiguration">
          <ownedAttribute xmi:type="uml:Property" xmi:id="_TBf1sYU_EeSZ05Pgomb11g" name="execution" type="_tAbzsHV3EeSvTf7EWD7QRA" association="_TBf1sIU_EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_TBf1soU_EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TBf1s4U_EeSZ05Pgomb11g" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_jC3ScIU9EeSZ05Pgomb11g" name="rootConfiguration" type="_0CstIIU8EeSZ05Pgomb11g" association="_jC680IU9EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jC3ScYU9EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jC3ScoU9EeSZ05Pgomb11g" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mGKINQuEeWMJphss3BZSg" name="getRoot" specification="_BMfWAPiNEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mGKIdQuEeWMJphss3BZSg" type="_0CstIIU8EeSZ05Pgomb11g" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mGKItQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mGKI9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.rootConfiguration;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mGxMNQuEeWMJphss3BZSg" name="getExecution" specification="_CY7T8PiNEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mGxMdQuEeWMJphss3BZSg" type="_tAbzsHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mGxMtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mGxM9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.execution;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mHYQNQuEeWMJphss3BZSg" name="register" specification="_cJr8QPiNEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mHYQdQuEeWMJphss3BZSg" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mHYQtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mHYQ9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mHYRNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mHYRdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mHYRtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Register the given state activation in the state-machine configuration.
// This occurs when the state activation is entered.
return this.add(stateActivation);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mH_UNQuEeWMJphss3BZSg" name="unregister" specification="_dgWNMPiNEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mH_UdQuEeWMJphss3BZSg" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mH_UtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mH_U9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mH_VNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mH_VdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mH_VtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Unregister the given state activation from the state-machine configuration
// This occurs when the state activation is exited. When the removal process
// is successful the last action is to release possibly deferred events related
// to that state activation.
boolean removed = this.remove(stateActivation);
if(removed){
	stateActivation.releaseDeferredEvents();
}
return removed;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mImYNQuEeWMJphss3BZSg" name="isActive" specification="_kcv-oPiNEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mImYdQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mImYtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mImY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mImZNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mImZdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mImZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A vertex that is currently active is part of the state-machine configuration
boolean found = false;
Iterator&lt;Integer> levelsIterator = this.cartorgraphy.keySet().iterator();
while(!found &amp;&amp; levelsIterator.hasNext()){
	found = this.cartorgraphy.get(levelsIterator.next()).contains(activation);
}
return found;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mJNcNQuEeWMJphss3BZSg" name="remove" specification="_EQXhQPiOEeSsfJID7KdsZQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mJNcdQuEeWMJphss3BZSg" name="vertexActivation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mJNctQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mJNc9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mJNdNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mJNddQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mJNdtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>boolean removed = this.rootConfiguration.removeChild(activation);
logger.info(this.toString());
return removed; 
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mJ0gNQuEeWMJphss3BZSg" name="add" specification="_Fm85sPiOEeSsfJID7KdsZQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mJ0gdQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mJ0gtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mJ0g9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mJ0hNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mJ0hdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mJ0htQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>boolean added = this.rootConfiguration.addChild(activation);
logger.info(this.toString());
return added;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_BMfWAPiNEeSlpJn94rgDzA" name="getRoot" method="_0mGKINQuEeWMJphss3BZSg" class="_5yEqwIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="__VGpcPlDEeSDPZmHIzgmig" type="_0CstIIU8EeSZ05Pgomb11g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_CY7T8PiNEeSlpJn94rgDzA" name="getExecution" method="_0mGxMNQuEeWMJphss3BZSg" class="_5yEqwIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_D-10sPlEEeSDPZmHIzgmig" type="_tAbzsHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_RAmH8PiNEeSlpJn94rgDzA" name="getVertexActivationsAtLevel" class="_5yEqwIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GYUqEM9XEeWYevbRTGHfwg" name="level">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_M785oPlEEeSDPZmHIzgmig" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Bmqo8NAHEeW1e7U-Wzl1ng"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BmseINAHEeW1e7U-Wzl1ng" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_cJr8QPiNEeSlpJn94rgDzA" name="register" method="_0mHYQNQuEeWMJphss3BZSg" class="_5yEqwIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f1CfgPlEEeSDPZmHIzgmig" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0LmwAPlEEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_dgWNMPiNEeSlpJn94rgDzA" name="unregister" method="_0mH_UNQuEeWMJphss3BZSg" class="_5yEqwIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_lK5J4PlEEeSDPZmHIzgmig" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_1i4sAPlEEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_jOpMwPiNEeSlpJn94rgDzA" name="isStable" class="_5yEqwIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_3Rh_IPlEEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_kcv-oPiNEeSlpJn94rgDzA" name="isActive" method="_0mImYNQuEeWMJphss3BZSg" class="_5yEqwIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_sGx98PlEEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_vipn4PlEEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_EQXhQPiOEeSsfJID7KdsZQ" name="remove" visibility="protected" method="_0mJNcNQuEeWMJphss3BZSg" class="_5yEqwIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Sw3CEPlFEeSDPZmHIzgmig" name="vertexActivation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_V41foPlFEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Fm85sPiOEeSsfJID7KdsZQ" name="add" visibility="protected" method="_0mJ0gNQuEeWMJphss3BZSg" class="_5yEqwIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_b6SrwPlFEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ZiBM0PlFEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CDaHsKlAEeSY3-SNA3r3jg" name="ConnectionPointActivation" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_HAJHcKlAEeSY3-SNA3r3jg" general="_htW88HV3EeSvTf7EWD7QRA" specific="_CDaHsKlAEeSY3-SNA3r3jg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mLpsNQuEeWMJphss3BZSg" name="getParentState" specification="_-00GMPlLEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mLpsdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mLpstQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mLps9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The parent state of a connection point reference is its owning state
return (VertexActivation)this.getParent();
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-00GMPlLEeSDPZmHIzgmig" name="getParentState" method="_0mLpsNQuEeWMJphss3BZSg" class="_CDaHsKlAEeSY3-SNA3r3jg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-00GMflLEeSDPZmHIzgmig" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_a8oQAHV3EeSvTf7EWD7QRA" name="InitialPseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_YLFckHYTEeSvTf7EWD7QRA" general="_htW88HV3EeSvTf7EWD7QRA" specific="_a8oQAHV3EeSvTf7EWD7QRA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mM30NQuEeWMJphss3BZSg" name="enter" specification="_aCjJsJRWEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mM30dQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mM30tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mM309QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mM31NQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mM31dQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mM31tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// If there is an outgoing transition then this outgoing transition is fired.
// If there is a guard or a trigger associated with this initial pseudo state then
// they are not taken into account. If there is no outgoing transitions then the model
// is considered as being ill-formed, similar interpretation occurs if there are more than
// an single outgoing transition for the initial pseudo state.
super.enter(enteringTransition, leastCommonAncestor);
if(this.outgoingTransitionActivations.size()==0){
	this.outgoingTransitionActivations.get(0).fire();	
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_WvgPYHYTEeSvTf7EWD7QRA" name="run" class="_a8oQAHV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_aCjJsJRWEeWAs5MYUhc8EQ" name="enter" method="_0mM30NQuEeWMJphss3BZSg" class="_a8oQAHV3EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_aCjJsZRWEeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_aCjJspRWEeWAs5MYUhc8EQ" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_v6BkkJ4gEeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6HrMJ4gEeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_htW88HV3EeSvTf7EWD7QRA" name="PseudostateActivation" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_OoEOMHYTEeSvTf7EWD7QRA" general="_z0JjMHV3EeSvTf7EWD7QRA" specific="_htW88HV3EeSvTf7EWD7QRA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KYoNUIU9EeSZ05Pgomb11g" name="EntryPointActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_Mmu8QIVAEeSZ05Pgomb11g" general="_CDaHsKlAEeSY3-SNA3r3jg" specific="_KYoNUIU9EeSZ05Pgomb11g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mOtANQuEeWMJphss3BZSg" name="isExitable" specification="_HVX-AMD6EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mOtAdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mOtAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mOtA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mOtBNQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mOtBdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mOtBtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// An entry point can be exited as soon as every outgoing transition expect
// the current &quot;exitingTransition&quot; have been traversed.
int i = 0;
boolean isExitable = true;
while(isExitable &amp;&amp; i &lt; this.outgoingTransitionActivations.size()){
	TransitionActivation transitionActivation = this.outgoingTransitionActivations.get(i);
	if(transitionActivation != exitingTransition){
		isExitable = transitionActivation.isTraversed();
	}
	i++;
}
return isExitable;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mPUENQuEeWMJphss3BZSg" name="enter" specification="_EbK8IJRXEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mPUEdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mPUEtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mPUE9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mPUFNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mPUFdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mP7INQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Enter a state through an entry point. The state on which the entry point is
// placed can be a deeply nested state. Therefore parent state of that state must
// be entered before if it is not already the case.
super.enter(enteringTransition, leastCommonAncestor);
VertexActivation vertexActivation = this.getParentState();
if(vertexActivation!=null){
	vertexActivation.enter(enteringTransition, leastCommonAncestor);
}
// Fire all transitions originating from the entry point. These transitions
// are fired under the condition that the guard is true. 
for(int i = 0; i &lt; this.getOutgoingTransitions().size(); i++){
	TransitionActivation transitionActivation = this.getOutgoingTransitions().get(i);
	if(transitionActivation.evaluateGuard()){
		transitionActivation.fire();
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_EbK8IJRXEeWAs5MYUhc8EQ" name="enter" method="_0mPUENQuEeWMJphss3BZSg" class="_KYoNUIU9EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_EbK8IZRXEeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_EbK8IpRXEeWAs5MYUhc8EQ" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_X-vasJ4hEeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X-06QJ4hEeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_HVX-AMD6EeWiyPv18KZ0lg" name="isExitable" method="_0mOtANQuEeWMJphss3BZSg" class="_KYoNUIU9EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVX-AcD6EeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVX-AsD6EeWiyPv18KZ0lg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NBEPMIU9EeSZ05Pgomb11g" name="ExitPointActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_L6BnQIVAEeSZ05Pgomb11g" general="_CDaHsKlAEeSY3-SNA3r3jg" specific="_NBEPMIU9EeSZ05Pgomb11g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mS-cNQuEeWMJphss3BZSg" name="isEnterable" specification="_bSsBAMD6EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mS-cdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mS-ctQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mS-c9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mS-dNQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mS-ddQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mS-dtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Determine if this exit point satisfied its requirement to be exited.
// The requirement is: all incoming transitions must have been fired once
// if they originate from sub-states located in orthogonal regions
int i = 0;
boolean isReady = true;
while (isReady &amp;&amp; i &lt; this.incomingTransitionActivations.size()) {
	TransitionActivation transitionActivation = this.incomingTransitionActivations.get(i);
	if(enteringTransition!=transitionActivation &amp;&amp; !transitionActivation.isTraversed()){
		isReady = false;
	}
	i++;
}
return isReady;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mTlgNQuEeWMJphss3BZSg" name="enter" specification="_8hu6sJRWEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mTlgdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mTlgtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mTlg9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mTlhNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mTlhdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mTlhtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When the ExitPoint is entered then the state on which it is placed is exited.
// One outgoing transition is chosen non-deterministically in set of transition
// that can be used to leave the ExitPoint. This transition is fired. This lead
// to exit and parent states in cascade if required.
List&lt;TransitionActivation> fireableTransitions = this.getFireableTransitions();
if (!fireableTransitions.isEmpty()) {
	ChoiceStrategy choiceStrategy = (ChoiceStrategy) this.getExecutionLocus().factory.getStrategy(&quot;choice&quot;);
	int chosenIndex = choiceStrategy.choose(fireableTransitions.size());
	TransitionActivation selectedTransition = fireableTransitions.get(chosenIndex - 1);
	RegionActivation newLeastCommonAncestor = this.getLeastCommonAncestor(selectedTransition.getTargetActivation());
	super.enter(enteringTransition, leastCommonAncestor);
	VertexActivation vertexActivation = this.getParentState();
	if (vertexActivation != null) {
		vertexActivation.exit(enteringTransition, newLeastCommonAncestor);
	}
	selectedTransition.fire();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7EDFANQuEeW-v_063gYgPA" name="getFireableTransitions" specification="_dYTpsMD6EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EDFAdQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EDsENQuEeW-v_063gYgPA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EDsEdQuEeW-v_063gYgPA" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Determine the list of transitions originating from this pseudo-state that can be fired.
// A transition is considered as being fireable as soon as its guard evaluates to true.
List&lt;TransitionActivation> fireableTransitions = new ArrayList&lt;TransitionActivation>();
for (int i = 0; i &lt; this.outgoingTransitionActivations.size(); i++) {
	TransitionActivation transitionActivation = this.outgoingTransitionActivations.get(i);
	if (transitionActivation.evaluateGuard()) {
		fireableTransitions.add(transitionActivation);
	}
}
return fireableTransitions;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_8hu6sJRWEeWAs5MYUhc8EQ" name="enter" method="_0mTlgNQuEeWMJphss3BZSg" class="_NBEPMIU9EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_8hu6sZRWEeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_8hu6spRWEeWAs5MYUhc8EQ" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eo7awJ4hEeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epCIcJ4hEeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_bSsBAMD6EeWiyPv18KZ0lg" name="isEnterable" method="_0mS-cNQuEeWMJphss3BZSg" class="_NBEPMIU9EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bSsBAcD6EeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bSsBAsD6EeWiyPv18KZ0lg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_dYTpsMD6EeWiyPv18KZ0lg" name="getFireableTransitions" visibility="protected" method="_7EDFANQuEeW-v_063gYgPA" class="_NBEPMIU9EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_h1GlIMD6EeWiyPv18KZ0lg" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_cCFw0J4gEeWR28_9aJ_f5g" name="ChoicePseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_LZULQJ4hEeWR28_9aJ_f5g" general="_htW88HV3EeSvTf7EWD7QRA" specific="_cCFw0J4gEeWR28_9aJ_f5g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mVasNQuEeWMJphss3BZSg" name="enter" specification="_n57FAJ4hEeWR28_9aJ_f5g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mVasdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mVastQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mVas9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mVatNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mVatdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mVattQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When an choice pseudo-state is reached then guards placed are evaluated dynamically
// If more than a guard evaluates to true then the selected transition is selected using
// using the first choice semantic strategy
super.enter(enteringTransition, leastCommonAncestor);
TransitionActivation elseTransitionActivation = null;
List&lt;TransitionActivation> fireableTransitons = new ArrayList&lt;TransitionActivation>();
for (int i = 0; i &lt; this.outgoingTransitionActivations.size(); i++) {
	TransitionActivation currentTransitionActivation = this.outgoingTransitionActivations.get(i);
	if(this.isElseTransition(currentTransitionActivation)){
		elseTransitionActivation = currentTransitionActivation;
	}else{
		if (currentTransitionActivation.evaluateGuard()) {
			fireableTransitons.add(currentTransitionActivation);
		}
	}
}
if (fireableTransitons.size() == 1) {
	fireableTransitons.get(0).fire();
} else if (fireableTransitons.size() > 1) {
	ChoiceStrategy strategy =  (ChoiceStrategy)this.getExecutionContext().locus.factory.getStrategy(&quot;choice&quot;);
	TransitionActivation transitionActivation = fireableTransitons.get(strategy.choose(fireableTransitons.size()-1));
	transitionActivation.fire();
} else if (elseTransitionActivation!=null) {
	elseTransitionActivation.fire();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mWo0NQuEeWMJphss3BZSg" name="isElseTransition" specification="_M6gP8MD5EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mWo0dQuEeWMJphss3BZSg" name="transition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mWo0tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mWo09QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mWo1NQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mWo1dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mWo1tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Determine if the given transition materialize the else branch of a choice pseudo state.
// A transition materializes an else branch since it has a guard which specification is
// an Expression that has no operand(s) and whose symbol is &quot;else&quot;
boolean isElse = false;
if(transitionActivation!=null){
	Transition transition = (Transition)transitionActivation.getNode();
	if(transition.getGuard()!=null &amp;&amp; transition.getGuard().getSpecification() instanceof Expression){
		Expression expression = (Expression) transition.getGuard().getSpecification();
		isElse = expression.getOperands().isEmpty() &amp;&amp; expression.getSymbol() !=null &amp;&amp; expression.getSymbol().toLowerCase().equals(ELSE_OPERATOR);
	}
}
return isElse;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_n57FAJ4hEeWR28_9aJ_f5g" name="enter" method="_0mVasNQuEeWMJphss3BZSg" class="_cCFw0J4gEeWR28_9aJ_f5g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_n57FAZ4hEeWR28_9aJ_f5g" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_n57FAp4hEeWR28_9aJ_f5g" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_n57FA54hEeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n57FBJ4hEeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_M6gP8MD5EeWiyPv18KZ0lg" name="isElseTransition" visibility="protected" method="_0mWo0NQuEeWMJphss3BZSg" class="_cCFw0J4gEeWR28_9aJ_f5g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_U08-AMD5EeWiyPv18KZ0lg" name="transition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_YT7mUMD5EeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_hfOGoMD4EeWiyPv18KZ0lg" name="ForkPseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_oDnyUMD5EeWiyPv18KZ0lg" general="_htW88HV3EeSvTf7EWD7QRA" specific="_hfOGoMD4EeWiyPv18KZ0lg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mX28NQuEeWMJphss3BZSg" name="isExitable" specification="_iHX2UMD5EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mX28dQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mX28tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mX289QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mX29NQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mX29dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mX29tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The Fork node activation can only be exited when all of its outgoing transitions
// (expect the current &quot;exitingTransition&quot;)previously fired.
int i = 0;
boolean isExitable = true;
while(isExitable &amp;&amp; i &lt; this.outgoingTransitionActivations.size()){
	TransitionActivation transitionActivation = this.outgoingTransitionActivations.get(i);
	if(transitionActivation != exitingTransition){
		isExitable = transitionActivation.isTraversed();
	}
	i++;
}
return isExitable;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mZFENQuEeWMJphss3BZSg" name="enter" specification="_kqq5gMD5EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mZFEdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mZFEtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mZFE9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mZFFNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mZFFdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mZFFtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Fires all outgoing transitions of the for **concurrently**
// Transitions outgoing from a fork are not guarded nor triggered
// If required parent state is entered first (the rule applies recursively)
if (leastCommonAncestor != null &amp;&amp; this.getParent() != leastCommonAncestor) {
	VertexActivation parentVertexActivation = this.getParentState();
	if (parentVertexActivation != null) {
		parentVertexActivation.enter(enteringTransition, leastCommonAncestor);
	}
}
super.enter(enteringTransition, leastCommonAncestor);
for(int i=0; i &lt; this.outgoingTransitionActivations.size(); i++){
	this.outgoingTransitionActivations.get(i).fire();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mZsINQuEeWMJphss3BZSg" name="exit" specification="_kqsHoMD5EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mZsIdQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mZsItQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mZsI9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mZsJNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mZsJdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mZsJtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A fork will only be allowed to exit when all other transitions outgoing
//this pseudo state have already been traversed
super.exit(exitingTransition, leastCommonAncestor);
// If required parent state is exited (the rule applies recursively)
if (leastCommonAncestor != null &amp;&amp; this.getParent() != leastCommonAncestor) {
	VertexActivation parentVertexActivation = this.getParentState();
	if (parentVertexActivation != null) {
		parentVertexActivation.enter(exitingTransition, leastCommonAncestor);
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_iHX2UMD5EeWiyPv18KZ0lg" name="isExitable" method="_0mX28NQuEeWMJphss3BZSg" class="_hfOGoMD4EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_iHX2UcD5EeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_iHX2UsD5EeWiyPv18KZ0lg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_kqq5gMD5EeWiyPv18KZ0lg" name="enter" method="_0mZFENQuEeWMJphss3BZSg" class="_hfOGoMD4EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kqq5gcD5EeWiyPv18KZ0lg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kqq5gsD5EeWiyPv18KZ0lg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kqq5g8D5EeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kqq5hMD5EeWiyPv18KZ0lg" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_kqsHoMD5EeWiyPv18KZ0lg" name="exit" method="_0mZsINQuEeWMJphss3BZSg" class="_hfOGoMD4EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kqsHocD5EeWiyPv18KZ0lg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kqsHosD5EeWiyPv18KZ0lg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kqsHo8D5EeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kqsHpMD5EeWiyPv18KZ0lg" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_i65acMD4EeWiyPv18KZ0lg" name="JoinPseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_2FBQgMD5EeWiyPv18KZ0lg" general="_htW88HV3EeSvTf7EWD7QRA" specific="_i65acMD4EeWiyPv18KZ0lg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ma6QNQuEeWMJphss3BZSg" name="isEnterable" specification="_tu7IQMD5EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0ma6QdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ma6QtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ma6Q9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0ma6RNQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ma6RdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ma6RtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Determine if all incoming transitions except this one already have been traversed
// If this is the case then this node is ready to be entered
boolean isReady = true;
int i = 0;
while (isReady &amp;&amp; i &lt; this.incomingTransitionActivations.size()) {
	TransitionActivation transitionActivation = this.incomingTransitionActivations.get(i);
	if (enteringTransition != transitionActivation &amp;&amp; !transitionActivation.isTraversed()) {
		isReady = false;
	}
	i++;
}
return isReady;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mbhUNQuEeWMJphss3BZSg" name="enter" specification="_xS1T4MD5EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mbhUdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mbhUtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mbhU9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mbhVNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mbhVdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mbhVtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When entered by the last incoming transition that had not already fired the Fork pseudo state
// is allowed to continue its execution. The continuation of the execution consist in firing the
// outgoing transition of the Join. Note that a Fork cannot have more than an outgoing transition
// (if this is the case then the model is ill-formed).
// The guard of the outgoing transition is evaluated to verify that the transition can be fired
// If required parent state is entered first (the rule applies recursively)
if (leastCommonAncestor != null &amp;&amp; this.getParent() != leastCommonAncestor) {
	VertexActivation parentVertexActivation = this.getParentState();
	if (parentVertexActivation != null) {
		parentVertexActivation.enter(enteringTransition, leastCommonAncestor);
	}
}
// The Join pseudo state is entered and its outgoing transition is fired (if possible)
super.enter(enteringTransition, leastCommonAncestor);
if (!this.outgoingTransitionActivations.isEmpty()) {
	TransitionActivation transitionActivation = this.outgoingTransitionActivations.get(0);
	if (transitionActivation.evaluateGuard()) {
		transitionActivation.fire();
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mcIYNQuEeWMJphss3BZSg" name="exit" specification="_xSzesMD5EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mcIYdQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mcIYtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mcIY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mcIZNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mcIZdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mcIZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When the join pseudo state is exited then it also provokes the exit of all containing
// state that not directly belong to the least common ancestor before its outgoing transition
// fires
super.exit(exitingTransition, leastCommonAncestor);
if (leastCommonAncestor != null &amp;&amp; this.getParent() != leastCommonAncestor) {
	VertexActivation parentVertexActivation = this.getParentState();
	if (parentVertexActivation != null) {
		parentVertexActivation.exit(exitingTransition, leastCommonAncestor);
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_tu7IQMD5EeWiyPv18KZ0lg" name="isEnterable" method="_0ma6QNQuEeWMJphss3BZSg" class="_i65acMD4EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_tu7IQcD5EeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_tu7IQsD5EeWiyPv18KZ0lg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_xSzesMD5EeWiyPv18KZ0lg" name="exit" method="_0mcIYNQuEeWMJphss3BZSg" class="_i65acMD4EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_xSzescD5EeWiyPv18KZ0lg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_xSzessD5EeWiyPv18KZ0lg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xSzes8D5EeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xSzetMD5EeWiyPv18KZ0lg" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_xS1T4MD5EeWiyPv18KZ0lg" name="enter" method="_0mbhUNQuEeWMJphss3BZSg" class="_i65acMD4EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_xS1T4cD5EeWiyPv18KZ0lg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_xS1T4sD5EeWiyPv18KZ0lg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xS1T48D5EeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xS1T5MD5EeWiyPv18KZ0lg" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_p6b_cMD4EeWiyPv18KZ0lg" name="TerminatePseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="__oTkoMD5EeWiyPv18KZ0lg" general="_htW88HV3EeSvTf7EWD7QRA" specific="_p6b_cMD4EeWiyPv18KZ0lg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mdWgNQuEeWMJphss3BZSg" name="enter" specification="_-iRJoMD5EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mdWgdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mdWgtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mdWg9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mdWhNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mdWhdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mdWhtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When a terminate pseudo state is entered the state-machine executing terminates its execution.
// This termination occurs without exiting &quot;exit&quot; behaviors of state(s) that are currently
// registered in the state-machine configuration.
// 
// Note: the termination of the current state-machine execution leads
// to the destruction of its context object. This means the object
// will be stopped and consequently no any other event will be dispatched
// and the object will finally be removed from the locus.
if (leastCommonAncestor != null &amp;&amp; this.getParent() != leastCommonAncestor) {
	VertexActivation parentVertexActivation = this.getParentState();
	if (parentVertexActivation != null) {
		parentVertexActivation.enter(enteringTransition, leastCommonAncestor);
	}
}
super.enter(enteringTransition, leastCommonAncestor);
Execution stateMachineExecution = this.getStateMachineExecution();
stateMachineExecution.terminate();
stateMachineExecution.context.destroy();
super.exit(enteringTransition, leastCommonAncestor);
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-iRJoMD5EeWiyPv18KZ0lg" name="enter" method="_0mdWgNQuEeWMJphss3BZSg" class="_p6b_cMD4EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-iRJocD5EeWiyPv18KZ0lg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-iRJosD5EeWiyPv18KZ0lg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-iRJo8D5EeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-iRJpMD5EeWiyPv18KZ0lg" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_tryQkJRKEeWAs5MYUhc8EQ" name="CompletionEventOccurrence">
          <generalization xmi:type="uml:Generalization" xmi:id="_9UlKYJRKEeWAs5MYUhc8EQ" general="Semantics-CommonBehaviors-Communications-EventOccurrence" specific="_tryQkJRKEeWAs5MYUhc8EQ"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_HtNLE5RLEeWAs5MYUhc8EQ" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" association="_HtNLEJRLEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_cmoW8M9lEeWYevbRTGHfwg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cmplEM9lEeWYevbRTGHfwg" value="1"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_HtNLEJRLEeWAs5MYUhc8EQ" name="A_stateActivation_eventOccurrence" memberEnd="_HtNLE5RLEeWAs5MYUhc8EQ _HtNyIJRLEeWAs5MYUhc8EQ">
          <ownedEnd xmi:type="uml:Property" xmi:id="_HtNyIJRLEeWAs5MYUhc8EQ" name="eventOccurrence" type="_tryQkJRKEeWAs5MYUhc8EQ" owningAssociation="_HtNLEJRLEeWAs5MYUhc8EQ" association="_HtNLEJRLEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_CKOyAMNvEeWpYp0WmASFoQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CKQAIMNvEeWpYp0WmASFoQ" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_xkTAcHV3EeSvTf7EWD7QRA" name="StateMachineEventAccepter">
          <generalization xmi:type="uml:Generalization" xmi:id="_H2cF8JRTEeWAs5MYUhc8EQ" general="Semantics-CommonBehaviors-Communications-EventAccepter" specific="_xkTAcHV3EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_cSWwgZRTEeWAs5MYUhc8EQ" name="registrationContext" type="_tAbzsHV3EeSvTf7EWD7QRA" association="_cSWJcJRTEeWAs5MYUhc8EQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mfLsNQuEeWMJphss3BZSg" name="accept" specification="_D0f6gJRTEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mfywNQuEeWMJphss3BZSg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mfywdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mfywtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When an event occurrence is accepted this marks the beginning of a new RTC step for
// the executed state-machine. The following set of actions takes place:
// 1 - The list of transition that can be fired using the given event occurrence is computed
// 2 - This list is organized as a different sub-set of transitions that can be fired. One of the
//     subset is chosen to be fired. Each transition fires **Concurrently**
// 3 - When the RTC step is about to complete a new event accepter for the state-machine
//     is registered at the waiting event accepter list handled by the object activation
// Note that there always is a single event accepter for a state-machine (this works differently
// than for activities).
if(this.selectionStrategy.isDeferred(eventOccurrence)){
	this.selectionStrategy.defer(eventOccurrence);
}else{
	List&lt;TransitionActivation> fireableTransition = this.selectionStrategy.select(eventOccurrence);
	if(!fireableTransition.isEmpty()){
		int i = 0;
		while(i &lt; fireableTransition.size()){
			fireableTransition.get(i).fire();
			i++;
		}
	}
}
Object_ context = this.registrationContext.context;
if(context!=null &amp;&amp; context.objectActivation!=null){
	context.register(new StateMachineEventAccepter(this.registrationContext));
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mgZ0NQuEeWMJphss3BZSg" name="match" specification="_D0esYJRTEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mgZ0dQuEeWMJphss3BZSg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mgZ0tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mgZ09QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mgZ1NQuEeWMJphss3BZSg" name="result" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mgZ1dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mgZ1tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// There are two cases in which the state machine event accepter can match
// 1 - In the current state machine configuration the event can be deferred
// 2 - In the current state machine configuration the current event can trigger one or more transitions
return this.selectionStrategy.isDeferred(eventOccurrence) | this.selectionStrategy.isTriggering(eventOccurrence);
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_D0esYJRTEeWAs5MYUhc8EQ" name="match" visibility="public" method="_0mgZ0NQuEeWMJphss3BZSg" class="_xkTAcHV3EeSvTf7EWD7QRA">
            <ownedComment xmi:type="uml:Comment" xmi:id="_D0esYZRTEeWAs5MYUhc8EQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_D0esYpRTEeWAs5MYUhc8EQ" name="eventOccurrence" visibility="public" type="Semantics-CommonBehaviors-Communications-EventOccurrence" effect="create"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_D0esY5RTEeWAs5MYUhc8EQ" name="result" visibility="public" direction="return" effect="create">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_D0f6gJRTEeWAs5MYUhc8EQ" name="accept" visibility="public" method="_0mfLsNQuEeWMJphss3BZSg" class="_xkTAcHV3EeSvTf7EWD7QRA">
            <ownedComment xmi:type="uml:Comment" xmi:id="_D0f6gZRTEeWAs5MYUhc8EQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_D0ghkJRTEeWAs5MYUhc8EQ" name="eventOccurrence" visibility="public" type="Semantics-CommonBehaviors-Communications-EventOccurrence" effect="create"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Snh_EKVsEeWdedL6rOcLVw" name="DoActivityExecutionEventAccepter">
          <generalization xmi:type="uml:Generalization" xmi:id="_ZiSKsKVsEeWdedL6rOcLVw" general="Semantics-CommonBehaviors-Communications-EventAccepter" specific="_Snh_EKVsEeWdedL6rOcLVw"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_mxIbQMDvEeWiyPv18KZ0lg" name="context" type="_EF92AMDqEeWpevkdGfdnMA" association="_mxF_AMDvEeWiyPv18KZ0lg"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_8kZTQcDvEeWiyPv18KZ0lg" name="encapsulatedAccepter" type="Semantics-CommonBehaviors-Communications-EventAccepter" aggregation="composite" association="_8kYsMMDvEeWiyPv18KZ0lg">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SmG5IMNwEeWpYp0WmASFoQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SmJVYMNwEeWpYp0WmASFoQ" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mhn8NQuEeWMJphss3BZSg" name="accept" specification="_bZwCoKVsEeWdedL6rOcLVw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mhn8dQuEeWMJphss3BZSg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mhn8tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mhn89QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Execute the RTC step related to the acceptance of this event.
// Afterwards check if there are remaining accepters registered in
// the for the object activation which is attached to the do activity
// context object.
this.context.unregister(this.encapsulatedAccepter);
this.encapsulatedAccepter.accept(eventOccurrence);
if(this.context.objectActivation.waitingEventAccepters.isEmpty()){
	// Make the state to complete if it is ready to do so
	if(this.context.owner!=null){
		this.context.owner.isDoActivityCompleted = true;
		if(this.context.owner.hasCompleted()){
			this.context.owner.notifyCompletion();
		}
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0miPANQuEeWMJphss3BZSg" name="match" specification="_bZsYQKVsEeWdedL6rOcLVw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0miPAdQuEeWMJphss3BZSg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0miPAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0miPA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0miPBNQuEeWMJphss3BZSg" name="result" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0miPBdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0miPBtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Simply delegates to the match operation of the encapsulated accepter.
return this.encapsulatedAccepter.match(eventOccurrence);
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_bZsYQKVsEeWdedL6rOcLVw" name="match" visibility="public" method="_0miPANQuEeWMJphss3BZSg" class="_Snh_EKVsEeWdedL6rOcLVw">
            <ownedComment xmi:type="uml:Comment" xmi:id="_bZsYQaVsEeWdedL6rOcLVw"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bZsYQqVsEeWdedL6rOcLVw" name="eventOccurrence" visibility="public" type="Semantics-CommonBehaviors-Communications-EventOccurrence" effect="create"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bZsYQ6VsEeWdedL6rOcLVw" name="result" visibility="public" direction="return" effect="create">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_bZwCoKVsEeWdedL6rOcLVw" name="accept" visibility="public" method="_0mhn8NQuEeWMJphss3BZSg" class="_Snh_EKVsEeWdedL6rOcLVw">
            <ownedComment xmi:type="uml:Comment" xmi:id="_bZwCoaVsEeWdedL6rOcLVw"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bZwCoqVsEeWdedL6rOcLVw" name="eventOccurrence" visibility="public" type="Semantics-CommonBehaviors-Communications-EventOccurrence" effect="create"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mxF_AMDvEeWiyPv18KZ0lg" name="A_context_doActivityEventAccepter" memberEnd="_mxIbQMDvEeWiyPv18KZ0lg _mxIbQcDvEeWiyPv18KZ0lg">
          <ownedEnd xmi:type="uml:Property" xmi:id="_mxIbQcDvEeWiyPv18KZ0lg" name="doActivityEventAccepter" type="_Snh_EKVsEeWdedL6rOcLVw" owningAssociation="_mxF_AMDvEeWiyPv18KZ0lg" association="_mxF_AMDvEeWiyPv18KZ0lg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_8kYsMMDvEeWiyPv18KZ0lg" name="A_encapsulatedAccepter_encpasulatingAccepter" memberEnd="_8kZTQcDvEeWiyPv18KZ0lg _8kZTQsDvEeWiyPv18KZ0lg">
          <ownedEnd xmi:type="uml:Property" xmi:id="_8kZTQsDvEeWiyPv18KZ0lg" name="encapsulatingAccepter" type="_Snh_EKVsEeWdedL6rOcLVw" owningAssociation="_8kYsMMDvEeWiyPv18KZ0lg" association="_8kYsMMDvEeWiyPv18KZ0lg">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pzaAoM9tEeW1e7U-Wzl1ng"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pzcc4M9tEeW1e7U-Wzl1ng" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_2Y06MIVAEeSZ05Pgomb11g" name="TransitionSelectionStrategy" isAbstract="true">
          <ownedOperation xmi:type="uml:Operation" xmi:id="_hQbtMPlJEeSDPZmHIzgmig" name="selectTransitions" isAbstract="true" class="_2Y06MIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GcOjAJRZEeWAs5MYUhc8EQ" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Xzr-EJRZEeWAs5MYUhc8EQ" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZH1tkJRZEeWAs5MYUhc8EQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZH3iwJRZEeWAs5MYUhc8EQ" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_8yqi8NG9EeWB0O9YzCwUNg" name="isDeferred" class="_2Y06MIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWVFING-EeWB0O9YzCwUNg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oett8NG-EeWB0O9YzCwUNg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_QZTyYNG-EeWB0O9YzCwUNg" name="defer" class="_2Y06MIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WeAfwNG-EeWB0O9YzCwUNg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_XahLUNG-EeWB0O9YzCwUNg" name="isTriggering" class="_2Y06MIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bJRVANG-EeWB0O9YzCwUNg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kXPgcNG-EeWB0O9YzCwUNg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_800tQIVAEeSZ05Pgomb11g" name="DefaultTransitionSelectionStrategy">
          <generalization xmi:type="uml:Generalization" xmi:id="_gxP4UIVBEeSZ05Pgomb11g" general="_2Y06MIVAEeSZ05Pgomb11g" specific="_800tQIVAEeSZ05Pgomb11g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ml5YNQuEeWMJphss3BZSg" name="isDeferred" specification="_oaIHENG-EeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0ml5YdQuEeWMJphss3BZSg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ml5YtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ml5Y9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0ml5ZNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ml5ZdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ml5ZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Returns true when at least one state within the configuration can defers the given
// event occurrence. The evaluation starts from the innermost part of the state-machine
// configuration. If no state can defer the given event occurrence false is returned.
boolean isDeferred = false;
boolean isTriggered = false;
Map&lt;Integer, List&lt;VertexActivation>> cartography = this.execution.getConfiguration().getCartography();
int i = cartography.size();
while(i >= 1 &amp;&amp; (!isDeferred &amp;&amp; !isTriggered)){
	List&lt;VertexActivation> verticesActivations = cartography.get(i);
	int j = 0;
	while(j &lt; verticesActivations.size() &amp;&amp; (!isDeferred &amp;&amp; !isTriggered)){
		StateActivation currentStateActivation = (StateActivation) verticesActivations.get(j);
		isTriggered = !currentStateActivation.getFireableTransitions(eventOccurrence).isEmpty();
		if(!isTriggered &amp;&amp; currentStateActivation.canDefer(eventOccurrence)){
			isDeferred = true;
		}
		j++;
	}
	i--;
}
return isDeferred;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mmgcNQuEeWMJphss3BZSg" name="defer" specification="_oaJVMNG-EeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mmgcdQuEeWMJphss3BZSg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mmgctQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mmgc9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The state indicating that the given event occurrence is deferred defers the given event
// occurrence. When deferred the event occurrence is placed within the deferred event pool.
// This operation is intended to be called only and only if the &quot;isDeferred&quot; operation
// returned true.
boolean isDeferred = false;
Map&lt;Integer, List&lt;VertexActivation>> cartography = this.execution.getConfiguration().getCartography();
int i = cartography.size();
while(i >= 1 &amp;&amp; !isDeferred){
	int j = 0;
	List&lt;VertexActivation> verticesActivations = cartography.get(i);
	while(j &lt; verticesActivations.size() &amp;&amp; !isDeferred){
		StateActivation currentStateActivation = (StateActivation) verticesActivations.get(j);
		if(currentStateActivation.canDefer(eventOccurrence)){
			currentStateActivation.defer(eventOccurrence);
			isDeferred = true;
		}
		j++;
	}
	i--;
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mnHgNQuEeWMJphss3BZSg" name="isTriggering" specification="_oaKjUNG-EeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mnukNQuEeWMJphss3BZSg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mnukdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mnuktQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mnuk9QuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mnulNQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mnuldQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Returns true when one or more transition are ready to be fired using this event
// occurrence; false otherwise.
return !this.select(eventOccurrence).isEmpty();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7EOEINQuEeW-v_063gYgPA" name="group" specification="_r05k0NG-EeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EOEIdQuEeW-v_063gYgPA" name="fireableTransitions" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EOEItQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EOEI9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EOEJNQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EOEJdQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EOEJtQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The purpose here is to choose among a set of fireable transitions a subset that will
// effectively be fired. This subset can contain in the most trivial case a single
// transition. In the case of orthogonal region it can contain several transitions
// that will be fired using the same event occurrence
Map&lt;VertexActivation, List&lt;TransitionActivation>> transitionGroups = new HashMap&lt;VertexActivation, List&lt;TransitionActivation>>();
List&lt;List&lt;TransitionActivation>> groupingResults = new ArrayList&lt;List&lt;TransitionActivation>>();
if(fireableTransitions.isEmpty()){
	groupingResults.add(new ArrayList&lt;TransitionActivation>());
}else{
	int i = 0;
	while(i &lt; fireableTransitions.size()){
		TransitionActivation transitionActivation = fireableTransitions.get(i);
		List&lt;TransitionActivation> group = transitionGroups.get(transitionActivation.getSourceActivation().getParentState());
		if(group==null){
			group = new ArrayList&lt;TransitionActivation>();
			group.add(transitionActivation);
			transitionGroups.put(transitionActivation.getSourceActivation().getParentState(), group);
		}else{
			group.add(transitionActivation);
		}
		i++;
	}
	for(VertexActivation vertexActivation: transitionGroups.keySet()){
		List&lt;TransitionActivation> group = transitionGroups.get(vertexActivation);
		List&lt;TransitionActivation> conflictingTransitions = this.getConflictingTransitions(group);
		if(!conflictingTransitions.isEmpty()){
			this.resolveConflitcs(group, conflictingTransitions);
		}
		groupingResults.add(group);
		i++;
	}
}
return groupingResults;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7EOrMNQuEeW-v_063gYgPA" name="getConflictingTransitions" specification="_GjV9YNG_EeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EOrMdQuEeW-v_063gYgPA" name="group" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EOrMtQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EOrM9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EOrNNQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EPSQNQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EPSQdQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Detect conflicting transitions located in a group of transitions. Conflicting transitions
// are transitions which are in the firing set but which originate from the same source vertex.
List&lt;TransitionActivation> conflictingTransitions = new ArrayList&lt;TransitionActivation>();
int i = 0;
while(i &lt; group.size()){
	TransitionActivation referenceTransition = group.get(i);
	for(int j=0; j &lt; group.size(); j++){
		TransitionActivation currentTransition = group.get(j);
		if(referenceTransition!=currentTransition 
				&amp;&amp; !conflictingTransitions.contains(currentTransition)
				&amp;&amp; referenceTransition.getSourceActivation()==currentTransition.getSourceActivation()){
				if(!conflictingTransitions.contains(referenceTransition)){
					conflictingTransitions.add(referenceTransition);
				}
				conflictingTransitions.add(currentTransition);
		}
	}
	i++;
}
return conflictingTransitions;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_b5nRoJRZEeWAs5MYUhc8EQ" name="selectTransitions" class="_800tQIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_b5nRopRZEeWAs5MYUhc8EQ" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_b5nRo5RZEeWAs5MYUhc8EQ" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_b5nRpJRZEeWAs5MYUhc8EQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_b5nRpZRZEeWAs5MYUhc8EQ" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="__a8kcMNyEeWpYp0WmASFoQ" name="choose" visibility="protected" class="_800tQIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QgCdIMNzEeWpYp0WmASFoQ" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R80kMMNzEeWpYp0WmASFoQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R82ZYMNzEeWpYp0WmASFoQ" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_e0s1kMNzEeWpYp0WmASFoQ" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_iOXgEMNzEeWpYp0WmASFoQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iOZVQMNzEeWpYp0WmASFoQ" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_jR1cYJRZEeWAs5MYUhc8EQ" name="isFireable" visibility="private" class="_800tQIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_n_5G8JRZEeWAs5MYUhc8EQ" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_rOqwEJRZEeWAs5MYUhc8EQ" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_t2twYJRZEeWAs5MYUhc8EQ" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_oaIHENG-EeWB0O9YzCwUNg" name="isDeferred" method="_0ml5YNQuEeWMJphss3BZSg" class="_800tQIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oaIHEdG-EeWB0O9YzCwUNg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oaIHEtG-EeWB0O9YzCwUNg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_oaJVMNG-EeWB0O9YzCwUNg" name="defer" method="_0mmgcNQuEeWMJphss3BZSg" class="_800tQIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oaJVMdG-EeWB0O9YzCwUNg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_oaKjUNG-EeWB0O9YzCwUNg" name="isTriggering" method="_0mnHgNQuEeWMJphss3BZSg" class="_800tQIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oaKjUdG-EeWB0O9YzCwUNg" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oaKjUtG-EeWB0O9YzCwUNg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_r05k0NG-EeWB0O9YzCwUNg" name="group" visibility="package" method="_7EOEINQuEeW-v_063gYgPA" class="_800tQIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_73h68NG-EeWB0O9YzCwUNg" name="fireableTransitions" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_DamDwNG_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dan48NG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ag7H8NG_EeWB0O9YzCwUNg" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EwnbgNG_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EwopoNG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_GjV9YNG_EeWB0O9YzCwUNg" name="getConflictingTransitions" method="_7EOrMNQuEeW-v_063gYgPA" class="_800tQIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_NbC1ANG_EeWB0O9YzCwUNg" name="group" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_QXMdENG_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QXNrMNG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WwmPING_EeWB0O9YzCwUNg" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XhReING_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XhSFMNG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_a1BG0NG_EeWB0O9YzCwUNg" name="resolveConflicts" class="_800tQIVAEeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_igEG8NG_EeWB0O9YzCwUNg" name="group" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="inout">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lQtpoNG_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lQu3wNG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_po6Y8NG_EeWB0O9YzCwUNg" name="conflictingTransitions" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qkkv8NG_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkl-ENG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_0CstIIU8EeSZ05Pgomb11g" name="StateConfiguration">
          <ownedAttribute xmi:type="uml:Property" xmi:id="_yajzsPlFEeSDPZmHIzgmig" name="level" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_jC680YU9EeSZ05Pgomb11g" name="completeConfiguration" type="_5yEqwIU8EeSZ05Pgomb11g" association="_jC680IU9EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jC680oU9EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jC6804U9EeSZ05Pgomb11g" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_deFl0IU-EeSZ05Pgomb11g" name="vertexActivation" type="_z0JjMHV3EeSvTf7EWD7QRA" association="_deGz8IU-EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_deFl0YU-EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_deFl0oU-EeSZ05Pgomb11g" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_rkhKcIU9EeSZ05Pgomb11g" name="children" type="_0CstIIU8EeSZ05Pgomb11g" aggregation="composite" association="_rkkNwIU9EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rkhKcYU9EeSZ05Pgomb11g"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rkhKcoU9EeSZ05Pgomb11g" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mpjwNQuEeWMJphss3BZSg" name="getLevel" specification="_7GtEcPlFEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mpjwdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mpjwtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mpjw9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.level;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mpjxNQuEeWMJphss3BZSg" name="getParent" specification="_R6zHUPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mqK0NQuEeWMJphss3BZSg" type="_0CstIIU8EeSZ05Pgomb11g" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mqK0dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mqK0tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.parent;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mqK09QuEeWMJphss3BZSg" name="getVertexActivation" specification="_UGXnAPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mqK1NQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mqK1dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mqK1tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.vertexActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mqx4NQuEeWMJphss3BZSg" name="setParent" specification="_WfqZoPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mqx4dQuEeWMJphss3BZSg" name="stateConfiguration" type="_0CstIIU8EeSZ05Pgomb11g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mqx4tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mqx49QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.parent = configuration;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mrY8NQuEeWMJphss3BZSg" name="remove" specification="_fyxjwPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mrY8dQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mrY8tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mrY89QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mrY9NQuEeWMJphss3BZSg" name="context" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mrY9dQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mrY9tQuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>boolean removed = false;
if(!context.isEmpty()){
	VertexActivation current = context.get(context.size()-1);
	StateConfiguration selectedStateConfiguration = null; 
	int i = 0;
	while(i &lt; this.children.size() &amp;&amp; selectedStateConfiguration==null){
		if(this.children.get(i).vertexActivation==current){
			selectedStateConfiguration = this.children.get(i);
		}
		i++;
	}
	if(selectedStateConfiguration!=null){
		removed = selectedStateConfiguration.remove(activation, context.subList(0, context.size()-1));
	}
}else{
	int i = 0;
	while(i &lt; this.children.size() &amp;&amp; !removed){
		if(this.children.get(i).vertexActivation==activation){
			this.completeConfiguration.deleteFromCartography(this.children.get(i));
			this.children.remove(i);
			removed = true;
		}
		i++;
	}
}
return removed;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0msAANQuEeWMJphss3BZSg" name="add" specification="_jl7FQPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0msAAdQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0msAAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0msAA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0msABNQuEeWMJphss3BZSg" name="context" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0msABdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0msABtQuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>boolean added = false;
if(!context.isEmpty()){
	VertexActivation current = context.get(context.size()-1);
	StateConfiguration selectedStateConfiguration = null; 
	int i = 0;
	while(i &lt; this.children.size() &amp;&amp; selectedStateConfiguration==null){
		if(this.children.get(i).vertexActivation==current){
			selectedStateConfiguration = this.children.get(i);
		}
		i++;
	}
	if(selectedStateConfiguration!=null){
		added = selectedStateConfiguration.add(activation, context.subList(0, context.size()-1));
	}
}else{
	int i = 0;
	boolean alreadyAdded = false;
	while(i &lt; this.children.size() &amp;&amp; !alreadyAdded){
		if(this.children.get(i).vertexActivation==activation){
			alreadyAdded = true;
		}
		i++;
	}
	if(!alreadyAdded){
		StateConfiguration newConfiguration = new StateConfiguration(activation);
		newConfiguration.level = this.level + 1;
		newConfiguration.completeConfiguration = this.completeConfiguration;
		this.completeConfiguration.addToCartography(newConfiguration);
		added = this.children.add(newConfiguration);
	}
}
return added;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0msnENQuEeWMJphss3BZSg" name="removeChild" specification="_apJXgPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0msnEdQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0msnEtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0msnE9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.remove(activation, this.getContext(activation));
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mtOINQuEeWMJphss3BZSg" name="addChild" specification="_icNrMPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mtOIdQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mtOItQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mtOI9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.add(activation, this.getContext(activation));	
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7ERugNQuEeW-v_063gYgPA" name="getChildren" specification="_J6eawPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7ERugdQuEeW-v_063gYgPA" type="_0CstIIU8EeSZ05Pgomb11g" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7ERugtQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7ERug9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.children;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7ESVkNQuEeW-v_063gYgPA" name="getContext" specification="_YytaUPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7ESVkdQuEeW-v_063gYgPA" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7ESVktQuEeW-v_063gYgPA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7ESVk9QuEeW-v_063gYgPA" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7ESVlNQuEeW-v_063gYgPA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7ESVldQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7ESVltQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>List&lt;VertexActivation> context = new ArrayList&lt;VertexActivation>();
List&lt;VertexActivation> hierarchy = activation.getAscendingHierarchy();
int i = hierarchy.size();
int j = 0;
boolean found = false;
while(i >= 1 &amp;&amp; !found){
	while(j &lt; this.children.size() &amp;&amp; !found){
		if(this.children.get(j).vertexActivation==hierarchy.get(i-1)){
			found = true;
			context = hierarchy.subList(1, i);
		}
		j++;
	}
	j = 0;
	i--;
}
return context;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7GtEcPlFEeSDPZmHIzgmig" name="getLevel" visibility="protected" method="_0mpjwNQuEeWMJphss3BZSg" class="_0CstIIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GO2oIPlHEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_J6eawPlGEeSDPZmHIzgmig" name="getChildren" method="_7ERugNQuEeW-v_063gYgPA" class="_0CstIIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KbLeoPlHEeSDPZmHIzgmig" type="_0CstIIU8EeSZ05Pgomb11g" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MCxHgPlHEeSDPZmHIzgmig"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MCyVoPlHEeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_R6zHUPlGEeSDPZmHIzgmig" name="getParent" method="_0mpjxNQuEeWMJphss3BZSg" class="_0CstIIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_SzJPIPlHEeSDPZmHIzgmig" type="_0CstIIU8EeSZ05Pgomb11g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_UGXnAPlGEeSDPZmHIzgmig" name="getVertexActivation" method="_0mqK09QuEeWMJphss3BZSg" class="_0CstIIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WLu7kPlHEeSDPZmHIzgmig" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_WfqZoPlGEeSDPZmHIzgmig" name="setParent" method="_0mqx4NQuEeWMJphss3BZSg" class="_0CstIIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_YSga0PlHEeSDPZmHIzgmig" name="stateConfiguration" type="_0CstIIU8EeSZ05Pgomb11g"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_YytaUPlGEeSDPZmHIzgmig" name="getContext" visibility="private" method="_7ESVkNQuEeW-v_063gYgPA" class="_0CstIIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bsOvsPlHEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kK-doPlHEeSDPZmHIzgmig" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lYJbYPlHEeSDPZmHIzgmig"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lYNFwPlHEeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_apJXgPlGEeSDPZmHIzgmig" name="removeChild" method="_0msnENQuEeWMJphss3BZSg" class="_0CstIIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_pcuEEPlHEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_fyxjwPlGEeSDPZmHIzgmig" name="remove" visibility="private" method="_0mrY8NQuEeWMJphss3BZSg" class="_0CstIIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_uN-MkPlHEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_vPsIQPlHEeSDPZmHIzgmig" name="context" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wZnkwPlHEeSDPZmHIzgmig"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wZoL0PlHEeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_icNrMPlGEeSDPZmHIzgmig" name="addChild" method="_0mtOINQuEeWMJphss3BZSg" class="_0CstIIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_yf1qYPlHEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_jl7FQPlGEeSDPZmHIzgmig" name="add" visibility="private" method="_0msAANQuEeWMJphss3BZSg" class="_0CstIIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_z8hDwPlHEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_1WbdAPlHEeSDPZmHIzgmig" name="context" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2L5scPlHEeSDPZmHIzgmig" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2L6TgPlHEeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_oV-68PlGEeSDPZmHIzgmig" name="isActive" class="_0CstIIU8EeSZ05Pgomb11g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t2EwPlHEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_jC680IU9EeSZ05Pgomb11g" name="A_rootConfiguration_completeConfiguration" memberEnd="_jC680YU9EeSZ05Pgomb11g _jC3ScIU9EeSZ05Pgomb11g"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_rkkNwIU9EeSZ05Pgomb11g" name="A_children_parent" memberEnd="_rkkNwYU9EeSZ05Pgomb11g _rkhKcIU9EeSZ05Pgomb11g" navigableOwnedEnd="_rkkNwYU9EeSZ05Pgomb11g">
          <ownedEnd xmi:type="uml:Property" xmi:id="_rkkNwYU9EeSZ05Pgomb11g" name="parent" type="_0CstIIU8EeSZ05Pgomb11g" owningAssociation="_rkkNwIU9EeSZ05Pgomb11g" association="_rkkNwIU9EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rkkNwoU9EeSZ05Pgomb11g"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rkkNw4U9EeSZ05Pgomb11g" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_deGz8IU-EeSZ05Pgomb11g" name="A_vertexActivations_stateConfiguration" memberEnd="_deGz8YU-EeSZ05Pgomb11g _deFl0IU-EeSZ05Pgomb11g">
          <ownedEnd xmi:type="uml:Property" xmi:id="_deGz8YU-EeSZ05Pgomb11g" name="stateConfiguration" type="_0CstIIU8EeSZ05Pgomb11g" owningAssociation="_deGz8IU-EeSZ05Pgomb11g" association="_deGz8IU-EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_deGz8oU-EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_deGz84U-EeSZ05Pgomb11g" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EF92AMDqEeWpevkdGfdnMA" name="DoActivityContextObject">
          <generalization xmi:type="uml:Generalization" xmi:id="_TCHsQMDqEeWpevkdGfdnMA" general="Semantics-Classes-Kernel-Object" specific="_EF92AMDqEeWpevkdGfdnMA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_gQD3w8DrEeWpevkdGfdnMA" name="context" type="Semantics-Classes-Kernel-Object" association="_gQD3wMDrEeWpevkdGfdnMA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_BRoQsMDrEeWpevkdGfdnMA" name="owner" type="_rVacUHV3EeSvTf7EWD7QRA" association="_BRefsMDrEeWpevkdGfdnMA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mvDUNQuEeWMJphss3BZSg" name="initialize" specification="_2QwAYMDuEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mvDUdQuEeWMJphss3BZSg" name="context" type="Semantics-Classes-Kernel-Object">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mvDUtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mvDU9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Create the object activation and reference the context of the executing state-machine
this.objectActivation = new ObjectActivation();
this.objectActivation.object = this;
if(context!=null){
	this.context = context;
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mvDVNQuEeWMJphss3BZSg" name="register" specification="_P1WG4sDtEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mvDVdQuEeWMJphss3BZSg" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mvDVtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mvDV9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The accepter is registered in the object activation event accepter list.
// In addition the accepter is also registered in the object activation of
// the context object of state machine to which the state activation belongs
super.register(accepter);
if(this.owner!=null){
	Object_ stateMachineExecutionContext =  this.owner.getExecutionContext();
	DoActivityExecutionEventAccepter encapsulatingAccepter = new DoActivityExecutionEventAccepter();
	encapsulatingAccepter.encapsulatedAccepter = accepter;
	encapsulatingAccepter.context = this;
	stateMachineExecutionContext.register(encapsulatingAccepter);
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mvqYNQuEeWMJphss3BZSg" name="getFeatureValue" specification="_ylb3IMDsEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mvqYdQuEeWMJphss3BZSg" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mvqYtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mvqY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mvqZNQuEeWMJphss3BZSg" name="feature">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mvqZdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mvqZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Delegate read of a particular feature to the state-machine context
FeatureValue featureValue = null;
if(this.context!=null){
	featureValue = this.context.getFeatureValue(feature);
}
return featureValue;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mw4gNQuEeWMJphss3BZSg" name="setFeatureValue" specification="_ylb3I8DsEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mw4gdQuEeWMJphss3BZSg" name="feature">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mw4gtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mw4g9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mw4hNQuEeWMJphss3BZSg" name="values" type="Semantics-Classes-Kernel-Value">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mw4hdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mw4htQuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mw4h9QuEeWMJphss3BZSg" name="position">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mw4iNQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mw4idQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Delegate write of particular feature to the state-machine context
if(this.context!=null){
	this.context.setFeatureValue(feature, values, position);
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mxfkNQuEeWMJphss3BZSg" name="dispatch" specification="_KeaecMDtEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mxfkdQuEeWMJphss3BZSg" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mxfktQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mxfk9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mxflNQuEeWMJphss3BZSg" name="operation">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mxfldQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mxfltQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Delegate operation call to the state-machine context
Execution execution = null;
if(this.context!=null){
	execution = this.context.dispatch(operation);
}
return execution;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0myGoNQuEeWMJphss3BZSg" name="send" specification="_Keaec8DtEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0myGodQuEeWMJphss3BZSg" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0myGotQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0myGo9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Delegate the reception of a signal to the state-machine context
if(this.context!=null){
	this.context.send(signalInstance);
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0myGpNQuEeWMJphss3BZSg" name="destroy" specification="_de9hwMDuEeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// When destroyed in addition to the usual behavior, the do activity context object
// has to remove the encapsulating accepters it may have registered.
for(int i=0; i &lt; this.objectActivation.waitingEventAccepters.size(); i++){
	this.unregisterFromContext(this.objectActivation.waitingEventAccepters.get(i));
}
super.destroy();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mytsNQuEeWMJphss3BZSg" name="unregisterFromContext" specification="_fkDmAMDuEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mytsdQuEeWMJphss3BZSg" name="encapsulatedAccepter" type="Semantics-CommonBehaviors-Communications-EventAccepter">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mytstQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0myts9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Unregister in the context of this do activity context the encapsulating
// event accepter.
ObjectActivation contextObjectActivation = this.context.objectActivation;
if(contextObjectActivation!=null){
	DoActivityExecutionEventAccepter encapsulatingAccepter = null;
	int i = 0;
	while(encapsulatingAccepter==null &amp;&amp; i &lt; contextObjectActivation.waitingEventAccepters.size()){
		EventAccepter currentAccepter = contextObjectActivation.waitingEventAccepters.get(i);
		if(currentAccepter instanceof DoActivityExecutionEventAccepter
				&amp;&amp; ((DoActivityExecutionEventAccepter)currentAccepter).encapsulatedAccepter==encapsulatedAccepter){
			encapsulatingAccepter = (DoActivityExecutionEventAccepter) currentAccepter;
		}
		i++;
	}
	if(encapsulatingAccepter!=null){
		contextObjectActivation.unregister(encapsulatingAccepter);
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ylb3IMDsEeWpevkdGfdnMA" name="getFeatureValue" visibility="public" method="_0mvqYNQuEeWMJphss3BZSg" class="_EF92AMDqEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ylb3IcDsEeWpevkdGfdnMA" name="ReturnResult" visibility="public" type="Semantics-Classes-Kernel-FeatureValue" direction="return" effect="create"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ylb3IsDsEeWpevkdGfdnMA" name="feature" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ylb3I8DsEeWpevkdGfdnMA" name="setFeatureValue" visibility="public" method="_0mw4gNQuEeWMJphss3BZSg" class="_EF92AMDqEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ylb3JMDsEeWpevkdGfdnMA" name="feature" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ylb3JcDsEeWpevkdGfdnMA" name="values" visibility="public" type="Semantics-Classes-Kernel-Value" effect="create">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ylb3JsDsEeWpevkdGfdnMA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ylb3J8DsEeWpevkdGfdnMA" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ylb3KMDsEeWpevkdGfdnMA" name="position" visibility="public" effect="create">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ylb3KcDsEeWpevkdGfdnMA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_KeaecMDtEeWpevkdGfdnMA" name="dispatch" visibility="public" method="_0mxfkNQuEeWMJphss3BZSg" class="_EF92AMDqEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KeaeccDtEeWpevkdGfdnMA" name="ReturnResult" visibility="public" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return" effect="create"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KeaecsDtEeWpevkdGfdnMA" name="operation" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Keaec8DtEeWpevkdGfdnMA" name="send" visibility="public" method="_0myGoNQuEeWMJphss3BZSg" class="_EF92AMDqEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KeaedMDtEeWpevkdGfdnMA" name="signalInstance" visibility="public" type="Semantics-CommonBehaviors-Communications-SignalInstance" effect="create"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_P1WG4MDtEeWpevkdGfdnMA" name="unregister" visibility="public" class="_EF92AMDqEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_P1WG4cDtEeWpevkdGfdnMA" name="accepter" visibility="public" type="Semantics-CommonBehaviors-Communications-EventAccepter" effect="create"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_P1WG4sDtEeWpevkdGfdnMA" name="register" visibility="public" method="_0mvDVNQuEeWMJphss3BZSg" class="_EF92AMDqEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_P1WG48DtEeWpevkdGfdnMA" name="accepter" visibility="public" type="Semantics-CommonBehaviors-Communications-EventAccepter" effect="create"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_de9hwMDuEeWiyPv18KZ0lg" name="destroy" visibility="public" method="_0myGpNQuEeWMJphss3BZSg" class="_EF92AMDqEeWpevkdGfdnMA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_fkDmAMDuEeWiyPv18KZ0lg" name="unregisterFromContext" visibility="protected" method="_0mytsNQuEeWMJphss3BZSg" class="_EF92AMDqEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_lV5BwMDuEeWiyPv18KZ0lg" name="encapsulatedAccepter" visibility="public" type="Semantics-CommonBehaviors-Communications-EventAccepter" effect="create"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_2QwAYMDuEeWiyPv18KZ0lg" name="initialize" method="_0mvDUNQuEeWMJphss3BZSg" class="_EF92AMDqEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7OGrMMDuEeWiyPv18KZ0lg" name="context" type="Semantics-Classes-Kernel-Object"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BRefsMDrEeWpevkdGfdnMA" name="A_owner_doActivityContextObject" memberEnd="_BRoQsMDrEeWpevkdGfdnMA _BRoQscDrEeWpevkdGfdnMA">
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gQD3wMDrEeWpevkdGfdnMA" name="A_context_doActivityContextObject" memberEnd="_gQD3w8DrEeWpevkdGfdnMA _gQD3xMDrEeWpevkdGfdnMA">
          <ownedEnd xmi:type="uml:Property" xmi:id="_gQD3xMDrEeWpevkdGfdnMA" name="doActivityContextObject" type="_EF92AMDqEeWpevkdGfdnMA" owningAssociation="_gQD3wMDrEeWpevkdGfdnMA" association="_gQD3wMDrEeWpevkdGfdnMA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_POCAUM90EeW1e7U-Wzl1ng"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_PODOcM90EeW1e7U-Wzl1ng" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_yWknYHV2EeSvTf7EWD7QRA" name="StateMachineSemanticVisitor" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_WzJ94JRIEeWAs5MYUhc8EQ" general="Semantics-Loci-LociL1-SemanticVisitor" specific="_yWknYHV2EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_zl1UgpRHEeWAs5MYUhc8EQ" name="node" association="_zl0tcJRHEeWAs5MYUhc8EQ">
            <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#NamedElement"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_HOBBQHWAEeSvTf7EWD7QRA" name="parent" type="Semantics-Loci-LociL1-SemanticVisitor" association="_HOCPYHWAEeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOBoUHWAEeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOBoUXWAEeSvTf7EWD7QRA" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mz70NQuEeWMJphss3BZSg" name="getNode" specification="_P4IKwPP9EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mz70dQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#NamedElement"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mz70tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mz709QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return node;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m0i4NQuEeWMJphss3BZSg" name="setNode" specification="_QTM9MPP9EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m0i4dQuEeWMJphss3BZSg">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#NamedElement"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m0i4tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m0i49QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.node = node;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m0i5NQuEeWMJphss3BZSg" name="getParent" specification="_QsMsAPP9EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m0i5dQuEeWMJphss3BZSg" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m0i5tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m0i59QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return parent;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m1J8NQuEeWMJphss3BZSg" name="setParent" specification="_RHuKYPP9EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m1J8dQuEeWMJphss3BZSg" type="Semantics-Loci-LociL1-SemanticVisitor">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m1J8tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m1J89QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.parent = parent;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m1xANQuEeWMJphss3BZSg" name="getStateMachineExecution" specification="_diRwsHWEEeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m1xAdQuEeWMJphss3BZSg" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m1xAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m1xA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return the state-machine execution from which the caller of this operation belongs
if(this.parent!=null &amp;&amp; this.parent instanceof StateMachineExecution){
	return (Execution)this.parent;
}else{
	return ((StateMachineSemanticVisitor)this.parent).getStateMachineExecution();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m1xBNQuEeWMJphss3BZSg" name="getExecutionLocus" specification="_ubgYEPP-EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m2YENQuEeWMJphss3BZSg" type="Semantics-Loci-LociL1-Locus" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m2YEdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m2YEtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.getStateMachineExecution().locus;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m2YE9QuEeWMJphss3BZSg" name="getExecutionContext" specification="_vCEo0PP-EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m2YFNQuEeWMJphss3BZSg" type="Semantics-Classes-Kernel-Object" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m2YFdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m2YFtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.getStateMachineExecution().context;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m2_INQuEeWMJphss3BZSg" name="activate" specification="_evimUHWKEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// This operation is intended to be overridden by sub-classes. For required sub-classes
// (e.g., RegionActivation, StateActivation) it will initiate the instantiation phase of
// child semantic visitors. By default activate does nothing.
return;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m2_IdQuEeWMJphss3BZSg" name="activateTransitions" specification="_75aHoPP-EeSZYezF3nFWWw">
            <language>Java</language>
            <body>// ActivateTransition is intended to be overridden by sub-classes. It will capture the instantiation
// of transitions visitors as well as the linking between these visitors and the required vertices
// activation. By default activate does nothing.
return;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m3mMNQuEeWMJphss3BZSg" name="getExecutionFor" specification="_-QpEwPP-EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m3mMdQuEeWMJphss3BZSg" name="behavior">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Behavior"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m3mMtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m3mM9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m3mNNQuEeWMJphss3BZSg" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m3mNdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m3mNtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Convenience method to make easier for each semantic visitor of the state-machine
// the creation of an execution for a particular behavior. This is particularly useful
// for visitors such as TransitionActivation and StateActivation.
Locus locus = this.getExecutionLocus();
if(behavior==null){
	return null;
}else{
	return locus.factory.createExecution(behavior, this.getExecutionContext());
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7EYcMNQuEeW-v_063gYgPA" name="getContextChain" specification="_c8HvoHWEEeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EYcMdQuEeW-v_063gYgPA" name="contextChain" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EYcMtQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EYcM9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return the hierarchy of visitors that need to be traversed to access
// the visitor that called context chain. The caller is part of the returned
// context chain.
List&lt;SemanticVisitor> contextChain = new ArrayList&lt;SemanticVisitor>();
if(!(this instanceof ExitPointActivation) &amp;&amp; !(this instanceof EntryPointActivation)){
	contextChain.add(this);
}
if(this.parent!=null){
	if(this.parent instanceof StateMachineExecution){
		contextChain.add(this.parent);
	}else{
		contextChain.addAll(((StateMachineSemanticVisitor)this.parent).getContextChain());
	}
}
return contextChain;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_P4IKwPP9EeSZYezF3nFWWw" name="getNode" method="_0mz70NQuEeWMJphss3BZSg" class="_yWknYHV2EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Fsb9YPP-EeSZYezF3nFWWw" direction="return">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#NamedElement"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_QTM9MPP9EeSZYezF3nFWWw" name="setNode" method="_0m0i4NQuEeWMJphss3BZSg" class="_yWknYHV2EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KAyHcPP-EeSZYezF3nFWWw">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#NamedElement"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_QsMsAPP9EeSZYezF3nFWWw" name="getParent" method="_0m0i5NQuEeWMJphss3BZSg" class="_yWknYHV2EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_cuiAAPP-EeSZYezF3nFWWw" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_RHuKYPP9EeSZYezF3nFWWw" name="setParent" method="_0m1J8NQuEeWMJphss3BZSg" class="_yWknYHV2EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_qTy70PP-EeSZYezF3nFWWw" type="Semantics-Loci-LociL1-SemanticVisitor"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_diRwsHWEEeSvTf7EWD7QRA" name="getStateMachineExecution" method="_0m1xANQuEeWMJphss3BZSg" class="_yWknYHV2EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_5hPy4PP9EeSZYezF3nFWWw" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_vCEo0PP-EeSZYezF3nFWWw" name="getExecutionContext" method="_0m2YE9QuEeWMJphss3BZSg" class="_yWknYHV2EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_TzecUPfqEeS41tijFXo_Iw" type="Semantics-Classes-Kernel-Object" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ubgYEPP-EeSZYezF3nFWWw" name="getExecutionLocus" method="_0m1xBNQuEeWMJphss3BZSg" class="_yWknYHV2EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Fcp_gPP_EeSZYezF3nFWWw" type="Semantics-Loci-LociL1-Locus" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_c8HvoHWEEeSvTf7EWD7QRA" name="getContextChain" method="_7EYcMNQuEeW-v_063gYgPA" class="_yWknYHV2EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_qX2U8HWEEeSvTf7EWD7QRA" name="contextChain" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ulQwkHWEEeSvTf7EWD7QRA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ulRXoHWEEeSvTf7EWD7QRA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_evimUHWKEeSvTf7EWD7QRA" name="activate" method="_0m2_INQuEeWMJphss3BZSg" class="_yWknYHV2EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_75aHoPP-EeSZYezF3nFWWw" name="activateTransitions" method="_0m2_IdQuEeWMJphss3BZSg" class="_yWknYHV2EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-QpEwPP-EeSZYezF3nFWWw" name="getExecutionFor" visibility="protected" method="_0m3mMNQuEeWMJphss3BZSg" class="_yWknYHV2EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_F-b_IPfqEeS41tijFXo_Iw" name="behavior">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Behavior"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhyxIPfqEeS41tijFXo_Iw" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_HOCPYHWAEeSvTf7EWD7QRA" name="A_parent_visitor" memberEnd="_HOCPYXWAEeSvTf7EWD7QRA _HOBBQHWAEeSvTf7EWD7QRA">
          <ownedEnd xmi:type="uml:Property" xmi:id="_HOCPYXWAEeSvTf7EWD7QRA" name="visitor" type="_yWknYHV2EeSvTf7EWD7QRA" owningAssociation="_HOCPYHWAEeSvTf7EWD7QRA" association="_HOCPYHWAEeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOCPYnWAEeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOCPY3WAEeSvTf7EWD7QRA" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zl0tcJRHEeWAs5MYUhc8EQ" name="A_node_visitor" memberEnd="_zl1UgpRHEeWAs5MYUhc8EQ _zl17kJRHEeWAs5MYUhc8EQ">
          <ownedEnd xmi:type="uml:Property" xmi:id="_zl17kJRHEeWAs5MYUhc8EQ" name="visitor" type="_yWknYHV2EeSvTf7EWD7QRA" owningAssociation="_zl0tcJRHEeWAs5MYUhc8EQ" association="_zl0tcJRHEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pHxygM7lEeWm66KqBui2pQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pH0OwM7lEeWm66KqBui2pQ" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_6aglgPiEEeSlpJn94rgDzA" name="StateMetadata">
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_9M838PiEEeSlpJn94rgDzA" name="idle" enumeration="_6aglgPiEEeSlpJn94rgDzA"/>
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-GXMMPiEEeSlpJn94rgDzA" name="active" enumeration="_6aglgPiEEeSlpJn94rgDzA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_kHnqIPfzEeS41tijFXo_Iw" name="TransitionMetadata">
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_ilq-sPiBEeS41tijFXo_Iw" name="none" enumeration="_kHnqIPfzEeS41tijFXo_Iw"/>
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_jzZWEPiBEeS41tijFXo_Iw" name="reached" enumeration="_kHnqIPfzEeS41tijFXo_Iw"/>
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_lLOEoPiBEeS41tijFXo_Iw" name="traversed" enumeration="_kHnqIPfzEeS41tijFXo_Iw"/>
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_mLrcEPiBEeS41tijFXo_Iw" name="completed" enumeration="_kHnqIPfzEeS41tijFXo_Iw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_VpelING2EeWMvYElZ5Ee4w" name="DeferredEventOccurrence">
          <generalization xmi:type="uml:Generalization" xmi:id="_rNbOwNG2EeWMvYElZ5Ee4w" general="Semantics-CommonBehaviors-Communications-EventOccurrence" specific="_VpelING2EeWMvYElZ5Ee4w"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_8w1B0NG7EeWB0O9YzCwUNg" name="constrainingStateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" association="_8wTdYNG7EeWB0O9YzCwUNg"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_B5LmQdG9EeWB0O9YzCwUNg" name="deferredEventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence" association="_B5KYING9EeWB0O9YzCwUNg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_8wTdYNG7EeWB0O9YzCwUNg" name="A_constrainingStateActivation_deferredEventOccurrence" memberEnd="_8w1B0NG7EeWB0O9YzCwUNg _8w7vgNG7EeWB0O9YzCwUNg">
          <ownedEnd xmi:type="uml:Property" xmi:id="_8w7vgNG7EeWB0O9YzCwUNg" name="deferredEventOccurrence" type="_VpelING2EeWMvYElZ5Ee4w" owningAssociation="_8wTdYNG7EeWB0O9YzCwUNg" association="_8wTdYNG7EeWB0O9YzCwUNg">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pn-PsNG9EeWB0O9YzCwUNg"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pn-2wNG9EeWB0O9YzCwUNg" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_OWjiYNG8EeWB0O9YzCwUNg" memberEnd="_OWkJctG8EeWB0O9YzCwUNg _OWl-oNG8EeWB0O9YzCwUNg">
          <ownedEnd xmi:type="uml:Property" xmi:id="_OWkJctG8EeWB0O9YzCwUNg" name="stateactivation" type="_rVacUHV3EeSvTf7EWD7QRA" owningAssociation="_OWjiYNG8EeWB0O9YzCwUNg" association="_OWjiYNG8EeWB0O9YzCwUNg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_B5KYING9EeWB0O9YzCwUNg" name="A_deferredEventOccurrence_deferral" memberEnd="_B5LmQdG9EeWB0O9YzCwUNg _B5LmQtG9EeWB0O9YzCwUNg">
          <ownedEnd xmi:type="uml:Property" xmi:id="_B5LmQtG9EeWB0O9YzCwUNg" name="deferral" type="_VpelING2EeWMvYElZ5Ee4w" owningAssociation="_B5KYING9EeWB0O9YzCwUNg" association="_B5KYING9EeWB0O9YzCwUNg">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZEzoNG9EeWB0O9YzCwUNg"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZHP4NG9EeWB0O9YzCwUNg" value="*"/>
          </ownedEnd>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_LFUAwHVxEeSfVojhNHzNrw" name="Loci">
        <packageImport xmi:type="uml:PackageImport" xmi:id="_97AFkMN7EeWpYp0WmASFoQ" importedPackage="_3NM98N-9EeGnO-TF_1T_iQ" importingNamespace="_LFUAwHVxEeSfVojhNHzNrw"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_eZDr0M5-EeWF7I4YWspV6w" importedPackage="_LFUAwHVxEeSfVojhNHzNrw" importingNamespace="_LFUAwHVxEeSfVojhNHzNrw"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tTknkHV2EeSvTf7EWD7QRA" name="SM_ExecutionFactory">
          <generalization xmi:type="uml:Generalization" xmi:id="__s09MHV-EeSvTf7EWD7QRA" general="_ScbvYN--EeGnO-TF_1T_iQ" specific="_tTknkHV2EeSvTf7EWD7QRA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m5bYNQuEeWMJphss3BZSg" name="instantiateVisitor" specification="_EoMD8HV_EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m5bYdQuEeWMJphss3BZSg" name="element">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m5bYtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m5bY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m5bZNQuEeWMJphss3BZSg" name="result" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m5bZdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m5bZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Provide the semantic visitor corresponding to the syntactic
// element provided as a parameter
SemanticVisitor visitor = null ;
if(element instanceof StateMachine){
	visitor = new StateMachineExecution();
}else if (element instanceof Pseudostate) {
	Pseudostate pseudostate = (Pseudostate) element;
	switch(pseudostate.getKind()){
		case INITIAL_LITERAL: visitor = new InitialPseudostateActivation(); break;
		case ENTRY_POINT_LITERAL: visitor = new EntryPointActivation(); break;
		case EXIT_POINT_LITERAL: visitor = new ExitPointActivation(); break;
		case CHOICE_LITERAL: visitor = new ChoicePseudostateActivation(); break;
		case FORK_LITERAL: visitor = new ForkPseudostateActivation(); break;
		case JOIN_LITERAL: visitor = new JoinPseudostateActivation(); break;
		case TERMINATE_LITERAL: visitor = new TerminatePseudostateActivation(); break;
		default: System.err.println(&quot;Element: &quot;+element+&quot; is not supported&quot;);break;
	}
}else if (element instanceof State) {
	if(element instanceof FinalState){
		visitor = new FinalStateActivation();
	}else{
		visitor = new StateActivation() ;
	}
}else if (element instanceof Transition) {
	Transition transition = (Transition) element;
	switch(transition.getKind()){
		case EXTERNAL_LITERAL: visitor = new ExternalTransitionActivation(); break;
		case INTERNAL_LITERAL: visitor = new InternalTransitionActivation(); break;
		case LOCAL_LITERAL: visitor = new LocalTransitionActivation(); break;
	}
}else if (element instanceof Region) {
	visitor = new RegionActivation();
}else if(element instanceof OpaqueExpression) {
	visitor = new SM_OpaqueExpressionEvaluation();
}else {
	visitor = super.instantiateVisitor(element);
}
return visitor;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_EoMD8HV_EeSvTf7EWD7QRA" name="instantiateVisitor" visibility="public" method="_0m5bYNQuEeWMJphss3BZSg" class="_tTknkHV2EeSvTf7EWD7QRA">
            <ownedComment xmi:type="uml:Comment" xmi:id="_EoMD8XV_EeSvTf7EWD7QRA">
              <body>&lt;&lt;TextualRepresentation>>public instantiateVisitor (in element : Element ) : SemanticVisitor {
	// TODO
	return super.instantiateVisitor(element) ;
}</body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_EoMD8nV_EeSvTf7EWD7QRA" name="element">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EoMD83V_EeSvTf7EWD7QRA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EoMD9HV_EeSvTf7EWD7QRA" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_EoMD9XV_EeSvTf7EWD7QRA" name="result" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EoMD9nV_EeSvTf7EWD7QRA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EoMD93V_EeSvTf7EWD7QRA" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_0IXkYJRIEeWAs5MYUhc8EQ" name="SM_Locus">
          <generalization xmi:type="uml:Generalization" xmi:id="_GhNj8JRJEeWAs5MYUhc8EQ" general="_m8YmQOYdEeGYZqnbU6eCYw" specific="_0IXkYJRIEeWAs5MYUhc8EQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m73oNQuEeWMJphss3BZSg" name="instantiate" specification="_LjFiYJRJEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m73odQuEeWMJphss3BZSg" name="type">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m73otQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m73o9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m73pNQuEeWMJphss3BZSg" name="result" type="Semantics-Classes-Kernel-Object" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m73pdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m73ptQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>Object_ object = null;
if (type instanceof Behavior) {
	object = super.instantiate(type);
} else {
	object = new SM_Object();
	object.types.add(type);
	object.createFeatureValues();
	this.add(object);
}
return object;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_LjFiYJRJEeWAs5MYUhc8EQ" name="instantiate" visibility="public" method="_0m73oNQuEeWMJphss3BZSg" class="_0IXkYJRIEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_LjFiYZRJEeWAs5MYUhc8EQ" name="type">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_LjFiYpRJEeWAs5MYUhc8EQ" name="result" type="Semantics-Classes-Kernel-Object" direction="return"/>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Model" xmi:id="_rP7eQNyJEeGru4CffneBug" name="PSCS_Semantics">
      <packagedElement xmi:type="uml:Package" xmi:id="_W_JVwNzCEeGru4CffneBug" name="Semantics">
        <packagedElement xmi:type="uml:Package" xmi:id="_RDIo4N-4EeGnO-TF_1T_iQ" name="Actions">
          <packagedElement xmi:type="uml:Class" xmi:id="_wUwMCN2JEeGnO-TF_1T_iQ" name="CS_AddStructuralFeatureValueActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="_wUwMCd2JEeGnO-TF_1T_iQ">
              <body>The behavior of fUML AddStructuralFeatureActionActivation::doAction() is overriden. In the case where the targeted structural feature is a port and the value to be added is a Reference, an interaction point is created on the basis of the given Reference. It then behaves like in fUML, except that the execution continues using the created interaction point instead of the given Reference.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_hMIDUOH1EeG4NZyomhkW-A">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_InteractionPoint;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Link;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Reference;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.InternalStructures.Property;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.Ports.Port;&#xD;
import fUML.Semantics.Actions.IntermediateActions.AddStructuralFeatureValueActionActivation;&#xD;
import fUML.Semantics.Classes.Kernel.FeatureValue;&#xD;
import fUML.Semantics.Classes.Kernel.Link;&#xD;
import fUML.Semantics.Classes.Kernel.LinkList;&#xD;
import fUML.Semantics.Classes.Kernel.Reference;&#xD;
import fUML.Semantics.Classes.Kernel.StructuredValue;&#xD;
import fUML.Semantics.Classes.Kernel.UnlimitedNaturalValue;&#xD;
import fUML.Semantics.Classes.Kernel.Value;&#xD;
import fUML.Semantics.Classes.Kernel.ValueList;&#xD;
import fUML.Semantics.Loci.LociL1.ChoiceStrategy;&#xD;
import fUML.Syntax.Actions.IntermediateActions.AddStructuralFeatureValueAction;&#xD;
import fUML.Syntax.Classes.Kernel.Association;&#xD;
import fUML.Syntax.Classes.Kernel.StructuralFeature;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_wUwMEt2JEeGnO-TF_1T_iQ" general="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation" specific="_wUwMCN2JEeGnO-TF_1T_iQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwME92JEeGnO-TF_1T_iQ" name="doAction" specification="_wUwMFN2JEeGnO-TF_1T_iQ">
              <language>Java</language>
              <body>		// If the feature is a port and the input value to be added is a&#xD;
		// Reference,&#xD;
		// Replaces this Reference by an InteractionPoint, and then behaves&#xD;
		// as usual.&#xD;
		// If the feature is not a port, behaves as usual&#xD;
&#xD;
		AddStructuralFeatureValueAction action = (AddStructuralFeatureValueAction) (this.node);&#xD;
		StructuralFeature feature = action.structuralFeature;&#xD;
&#xD;
		if (!(feature instanceof Port)) {&#xD;
			// Behaves as usual&#xD;
			this.doActionDefault() ;&#xD;
		} &#xD;
		else {&#xD;
			ValueList inputValues = this.takeTokens(action.value);&#xD;
			// NOTE: Multiplicity of the value input pin is required to be 1..1.&#xD;
			Value inputValue = inputValues.getValue(0);&#xD;
			if (inputValue instanceof Reference) {&#xD;
				// First constructs an InteractionPoint from the inputValue&#xD;
				Reference reference = (Reference) inputValue;&#xD;
				CS_InteractionPoint interactionPoint = new CS_InteractionPoint();&#xD;
				interactionPoint.referent = reference.referent;&#xD;
				interactionPoint.definingPort = (Port) feature;&#xD;
				// The value on action.object is necessarily instanceof&#xD;
				// ReferenceToCompositeStructure (otherwise, the feature cannot&#xD;
				// be a port)&#xD;
				CS_Reference owner = (CS_Reference) this.takeTokens(&#xD;
						action.object).getValue(0);&#xD;
				interactionPoint.owner = owner;&#xD;
				// Then replaces the Reference by an InteractionPoint&#xD;
				// in the inputValues&#xD;
				inputValues.remove(0);&#xD;
				inputValues.addValue(0, interactionPoint);&#xD;
				// Finally concludes with usual fUML behavior of&#xD;
				// AddStructuralFeatureValueAction (i.e., the usual behavior&#xD;
				// when&#xD;
				// the value on action.object pin is a StructuredValue)&#xD;
				Integer insertAt = 0;&#xD;
				if (action.insertAt != null) {&#xD;
					insertAt = ((UnlimitedNaturalValue) this.takeTokens(&#xD;
							action.insertAt).getValue(0)).value.naturalValue;&#xD;
				}&#xD;
				if (action.isReplaceAll) {&#xD;
					owner.setFeatureValue(feature, inputValues, 0);&#xD;
				} &#xD;
				else {&#xD;
					FeatureValue featureValue = owner.getFeatureValue(feature);&#xD;
&#xD;
					if (featureValue.values.size() > 0 &amp; insertAt == 0) {&#xD;
						// If there is no insertAt pin, then the structural&#xD;
						// feature must&#xD;
						// be unordered, and the insertion position is&#xD;
						// immaterial.&#xD;
						insertAt = ((ChoiceStrategy) this.getExecutionLocus().factory&#xD;
								.getStrategy(&quot;choice&quot;))&#xD;
								.choose(featureValue.values.size());&#xD;
					}&#xD;
					if (feature.multiplicityElement.isUnique) {&#xD;
						// Remove any existing value that duplicates the input&#xD;
						// value&#xD;
						Integer j = position(interactionPoint, featureValue.values, 1);&#xD;
						if (j > 0) {&#xD;
							featureValue.values.remove(j - 1);&#xD;
							if (insertAt > 0 &amp; j &lt; insertAt) {&#xD;
								insertAt = insertAt - 1;&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
&#xD;
					if (insertAt &lt;= 0) {&#xD;
						// Note: insertAt = -1 indicates an unlimited value of&#xD;
						// &quot;*&quot;&#xD;
						featureValue.values.addValue(interactionPoint);&#xD;
					} else {&#xD;
						featureValue.values.addValue(insertAt - 1, interactionPoint);&#xD;
					}&#xD;
				}&#xD;
				if (action.result != null) {&#xD;
					this.putToken(action.result, owner);&#xD;
				}&#xD;
			} &#xD;
			else {&#xD;
				// behaves as usual&#xD;
				this.doActionDefault() ;&#xD;
			}&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AlLQQOYcEeGYZqnbU6eCYw" name="doActionDefault" specification="_7f6moOYbEeGYZqnbU6eCYw">
              <language>Java</language>
              <body>		// Get the values of the object and value input pins.&#xD;
		// If the given feature is an association end, then create a link&#xD;
		// between the object and value inputs.&#xD;
		// Otherwise, if the object input is a structural value, then add a&#xD;
		// value to the values for the feature.&#xD;
		// If isReplaceAll is true, first remove all current matching links or&#xD;
		// feature values.&#xD;
		// If isReplaceAll is false and there is an insertAt pin, insert the&#xD;
		// value at the appropriate position.&#xD;
		// This operation captures same semantics as fUML &#xD;
		// AddStructuralFeatureValueActionActivation.doAction(), except that&#xD;
		// when the feature is an association end, a CS_Link will be created instead&#xD;
		// of a Link&#xD;
&#xD;
		AddStructuralFeatureValueAction action = (AddStructuralFeatureValueAction) (this.node);&#xD;
		StructuralFeature feature = action.structuralFeature;&#xD;
		Association association = this.getAssociation(feature);&#xD;
&#xD;
		Value value = this.takeTokens(action.object).getValue(0);&#xD;
		ValueList inputValues = this.takeTokens(action.value);&#xD;
&#xD;
		// NOTE: Multiplicity of the value input pin is required to be 1..1.&#xD;
		Value inputValue = inputValues.getValue(0);&#xD;
&#xD;
		int insertAt = 0;&#xD;
		if (action.insertAt != null) {&#xD;
			insertAt = ((UnlimitedNaturalValue) this&#xD;
					.takeTokens(action.insertAt).getValue(0)).value.naturalValue;&#xD;
		}&#xD;
&#xD;
		if (association != null) {&#xD;
			LinkList links = this.getMatchingLinks(association, feature, value);&#xD;
&#xD;
			Property oppositeEnd = this.getOppositeEnd(association, feature);&#xD;
			int position = 0;&#xD;
			if (oppositeEnd.multiplicityElement.isOrdered) {&#xD;
				position = -1;&#xD;
			}&#xD;
&#xD;
			if (action.isReplaceAll) {&#xD;
				for (int i = 0; i &lt; links.size(); i++) {&#xD;
					Link link = links.getValue(i);&#xD;
					link.destroy();&#xD;
				}&#xD;
			} else if (feature.multiplicityElement.isUnique) {&#xD;
				for (int i = 0; i &lt; links.size(); i++) {&#xD;
					Link link = links.getValue(i);&#xD;
					FeatureValue featureValue = link.getFeatureValue(feature);&#xD;
					if (featureValue.values.getValue(0).equals(inputValue)) {&#xD;
						position = link.getFeatureValue(oppositeEnd).position;&#xD;
						if (insertAt > 0 &amp; featureValue.position &lt; insertAt) {&#xD;
							insertAt = insertAt - 1;&#xD;
						}&#xD;
						link.destroy();&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
&#xD;
			CS_Link newLink = new CS_Link();&#xD;
			newLink.type = association;&#xD;
&#xD;
			// This necessary when setting a feature value with an insertAt&#xD;
			// position&#xD;
			newLink.locus = this.getExecutionLocus();&#xD;
&#xD;
			newLink.setFeatureValue(feature, inputValues, insertAt);&#xD;
&#xD;
			ValueList oppositeValues = new ValueList();&#xD;
			oppositeValues.addValue(value);&#xD;
			newLink.setFeatureValue(oppositeEnd, oppositeValues, position);&#xD;
&#xD;
			newLink.locus.add(newLink);&#xD;
&#xD;
		} else if (value instanceof StructuredValue) {&#xD;
			StructuredValue structuredValue = (StructuredValue) value;&#xD;
&#xD;
			if (action.isReplaceAll) {&#xD;
				structuredValue.setFeatureValue(feature, inputValues, 0);&#xD;
			} else {&#xD;
				FeatureValue featureValue = structuredValue&#xD;
						.getFeatureValue(feature);&#xD;
&#xD;
				if (featureValue.values.size() > 0 &amp; insertAt == 0) {&#xD;
					// *** If there is no insertAt pin, then the structural&#xD;
					// feature must be unordered, and the insertion position is&#xD;
					// immaterial. ***&#xD;
					insertAt = ((ChoiceStrategy) this.getExecutionLocus().factory&#xD;
							.getStrategy(&quot;choice&quot;)).choose(featureValue.values&#xD;
									.size());&#xD;
				}&#xD;
&#xD;
				if (feature.multiplicityElement.isUnique) {&#xD;
					// Remove any existing value that duplicates the input value&#xD;
					int j = position(inputValue, featureValue.values, 1);&#xD;
					if (j > 0) {&#xD;
						featureValue.values.remove(j - 1);&#xD;
						if (insertAt > 0 &amp; j &lt; insertAt) {&#xD;
							insertAt = insertAt - 1;&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
&#xD;
				if (insertAt &lt;= 0) { // Note: insertAt = -1 indicates an&#xD;
					// unlimited value of &quot;*&quot;&#xD;
					featureValue.values.addValue(inputValue);&#xD;
				} else {&#xD;
					featureValue.values.addValue(insertAt - 1, inputValue);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (action.result != null) {&#xD;
			this.putToken(action.result, value);&#xD;
		}</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwMFN2JEeGnO-TF_1T_iQ" name="doAction" visibility="public" method="_wUwME92JEeGnO-TF_1T_iQ" class="_wUwMCN2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwMFd2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public doAction () { &#xD;
	// If the feature is a port and the input value to be added is a Reference,&#xD;
	// Replaces this Reference by an InteractionPoint, and then behaves &#xD;
	// as usual.&#xD;
	// If the feature is not a port, behaves as usual&#xD;
&#xD;
	AddStructuralFeatureValueAction action = &#xD;
							(AddStructuralFeatureValueAction)(this.node);&#xD;
	StructuralFeature feature = action.structuralFeature;&#xD;
&#xD;
	if (! (feature instanceof Port)) {&#xD;
		// Behaves as usual&#xD;
		super.doAction() ;&#xD;
	}&#xD;
	else {&#xD;
		ValueList inputValues = this.takeTokens(action.value);&#xD;
		// NOTE: Multiplicity of the value input pin is required to be 1..1.&#xD;
		Value inputValue = inputValues.getValue(0);&#xD;
		if (inputValue instanceof Reference) {&#xD;
			// First constructs an InteractionPoint from the inputValue&#xD;
			Reference reference = (Reference)inputValue ;&#xD;
			InteractionPoint interactionPoint = new InteractionPoint() ;&#xD;
			interactionPoint.referent = reference.referent ;&#xD;
			interactionPoint.definingPort = (Port)feature ;&#xD;
			// The value on action.object is necessarily instanceof &#xD;
			// ReferenceToCompositeStructure (otherwise, the feature cannot &#xD;
			// be a port)&#xD;
			ReferenceToCompositeStructure owner = &#xD;
									(ReferenceToCompositeStructure)this&#xD;
													.takeTokens(action.object).getValue(0);&#xD;
			interactionPoint.owner = owner ;&#xD;
			// Then replaces the Reference by an InteractionPoint &#xD;
			// in the inputValues&#xD;
			inputValues.remove(0) ;&#xD;
			inputValues.addValue(0,interactionPoint) ;&#xD;
			// Finally concludes with usual fUML behavior of &#xD;
			// AddStructuralFeatureValueAction (i.e., the usual behavior when &#xD;
			// the value on action.object pin is a StructuredValue)&#xD;
			Integer insertAt = 0;&#xD;
			if (action.insertAt != null) {&#xD;
	    		insertAt = ((UnlimitedNaturalValue)this&#xD;
												.takeTokens(action.insertAt).getValue(0))&#xD;
												.value.naturalValue;&#xD;
			}&#xD;
			if (action.isReplaceAll) {&#xD;
	        	owner.setFeatureValue(feature, inputValues, 0);&#xD;
	    	} else {&#xD;
	        	FeatureValue featureValue = owner.getFeatureValue(feature);&#xD;
	&#xD;
		        if (featureValue.values.size() > 0 &amp; insertAt == 0 ) {&#xD;
		            // If there is no insertAt pin, then the structural feature must &#xD;
					// be unordered, and the insertion position is immaterial.&#xD;
	    	        insertAt = ((ChoiceStrategy)this.getExecutionLocus()&#xD;
												.factory.getStrategy(&quot;choice&quot;))&#xD;
												.choose(featureValue.values.size());&#xD;
	        	}&#xD;
	        	if (feature.multiplicityElement.'isUnique') {&#xD;
	            	// Remove any existing value that duplicates the input value&#xD;
		            Integer j = position(inputValue, featureValue.values, 1);&#xD;
		            if (j > 0) {&#xD;
	    	            featureValue.values.remove(j-1);&#xD;
	        	        if (insertAt > 0 &amp; j &lt; insertAt) {&#xD;
	            	        insertAt = insertAt - 1;&#xD;
	                	}&#xD;
		            }&#xD;
		        }&#xD;
	&#xD;
	    	    if (insertAt &lt;= 0) {  &#xD;
					// Note: insertAt = -1 indicates an unlimited value of &quot;*&quot;&#xD;
	        	    featureValue.values.addValue(inputValue);&#xD;
		        } else {&#xD;
		            featureValue.values.addValue(insertAt - 1, inputValue);&#xD;
	    	    }&#xD;
		    }&#xD;
		}&#xD;
		else {&#xD;
			// behaves as usual&#xD;
			super.doAction();&#xD;
		}&#xD;
	}	&#xD;
} </body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_7f6moOYbEeGYZqnbU6eCYw" name="doActionDefault" method="_AlLQQOYcEeGYZqnbU6eCYw" class="_wUwMCN2JEeGnO-TF_1T_iQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_xBSTUOYVEeGYZqnbU6eCYw" name="CS_CreateObjectActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="_UrRfAOYgEeGYZqnbU6eCYw">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Object;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Reference;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.StructuredClasses.Class_;&#xD;
import fUML.Semantics.Actions.IntermediateActions.CreateObjectActionActivation;&#xD;
import fUML.Semantics.Classes.Kernel.Object_;&#xD;
import fUML.Semantics.Classes.Kernel.Reference;&#xD;
import fUML.Syntax.Actions.IntermediateActions.CreateObjectAction;&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_SKurMOecEeGYZqnbU6eCYw">
              <body>Extends fUML semantics in the sense that the reference placed on the result pin is a CS_Reference (in the case where the instantiated object is a CS_Object) not a Reference. [Note: this extension can be avoided if fUML introduces a factory for Reference]</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_4vXZUOYVEeGYZqnbU6eCYw" general="Semantics-Actions-IntermediateActions-CreateObjectActionActivation" specific="_xBSTUOYVEeGYZqnbU6eCYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BEtToOYWEeGYZqnbU6eCYw" name="doAction" specification="_8AcIgOYVEeGYZqnbU6eCYw">
              <language>Java</language>
              <body>		// Create an object with the given classifier (which must be a class) as&#xD;
		// its type, at the same locus as the action activation.&#xD;
		// Place a reference to the object on the result pin of the action.&#xD;
		// Extends fUML semantics in the sense that the reference placed&#xD;
		// on the result pin is a CS_Reference (in the case where the instantiated object&#xD;
		// is a CS_Object) not a Reference&#xD;
		// Note that Locus.instantiate(Class) is extended in this specification&#xD;
		// to produce a CS_Object instead of an Object in the case where the class&#xD;
		// to be instantiated is not a behavior&#xD;
&#xD;
		CreateObjectAction action = (CreateObjectAction) (this.node);&#xD;
&#xD;
		Reference reference ;&#xD;
		Object_ referent =  this.getExecutionLocus().instantiate((Class_) (action.classifier));&#xD;
		if (referent instanceof CS_Object) {&#xD;
			reference = new CS_Reference() ;&#xD;
			((CS_Reference)reference).compositeReferent = (CS_Object)referent ;&#xD;
		}&#xD;
		else {&#xD;
			reference = new Reference() ;&#xD;
		}&#xD;
		reference.referent = referent ;&#xD;
&#xD;
		this.putToken(action.result, reference);</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_8AcIgOYVEeGYZqnbU6eCYw" name="doAction" method="_BEtToOYWEeGYZqnbU6eCYw" class="_xBSTUOYVEeGYZqnbU6eCYw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_eItOUOYWEeGYZqnbU6eCYw" name="CS_ReadSelfActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="_kiPXsOYgEeGYZqnbU6eCYw">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Object;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Reference;&#xD;
import fUML.Semantics.Actions.IntermediateActions.ReadSelfActionActivation;&#xD;
import fUML.Syntax.Actions.BasicActions.OutputPin;&#xD;
import fUML.Syntax.Actions.IntermediateActions.ReadSelfAction;&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_hG1eIOecEeGYZqnbU6eCYw">
              <body>Extends fUML semantics in the sense that the reference placed on the result pin is a CS_Reference, not a Reference. [Note: this extension can be avoided if fUML introduces a factory for instantiating Reference]</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_mf_pYOYWEeGYZqnbU6eCYw" general="Semantics-Actions-IntermediateActions-ReadSelfActionActivation" specific="_eItOUOYWEeGYZqnbU6eCYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vxuTcOYWEeGYZqnbU6eCYw" name="doAction" specification="_n7xq4OYWEeGYZqnbU6eCYw">
              <language>Java</language>
              <body>		// Get the context object of the activity execution containing this&#xD;
		// action activation and place a reference to it on the result output&#xD;
		// pin.&#xD;
		// Extends fUML semantics in the sense that the reference placed on&#xD;
		// the result pin is a CS_Reference, not a Reference&#xD;
&#xD;
		// Debug.println(&quot;[ReadSelfActionActivation] Start...&quot;);&#xD;
&#xD;
		CS_Reference context = new CS_Reference();&#xD;
		context.referent = this.getExecutionContext();&#xD;
		if (context.referent instanceof CS_Object) {// i.e. alternatively, it can be an execution&#xD;
			context.compositeReferent = (CS_Object)context.referent ;&#xD;
		}&#xD;
&#xD;
		// Debug.println(&quot;[ReadSelfActionActivation] context object = &quot; +&#xD;
		// context.referent);&#xD;
&#xD;
		OutputPin resultPin = ((ReadSelfAction) (this.node)).result;&#xD;
		this.putToken(resultPin, context);&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_n7xq4OYWEeGYZqnbU6eCYw" name="doAction" method="_vxuTcOYWEeGYZqnbU6eCYw" class="_eItOUOYWEeGYZqnbU6eCYw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_v_yAwOYaEeGYZqnbU6eCYw" name="CS_CreateLinkActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="_DplfoOYgEeGYZqnbU6eCYw">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Link;&#xD;
import fUML.Semantics.Actions.IntermediateActions.CreateLinkActionActivation;&#xD;
import fUML.Semantics.Classes.Kernel.ExtensionalValue;&#xD;
import fUML.Semantics.Classes.Kernel.ExtensionalValueList;&#xD;
import fUML.Semantics.Classes.Kernel.Link;&#xD;
import fUML.Semantics.Classes.Kernel.UnlimitedNaturalValue;&#xD;
import fUML.Syntax.Actions.IntermediateActions.CreateLinkAction;&#xD;
import fUML.Syntax.Actions.IntermediateActions.LinkEndCreationData;&#xD;
import fUML.Syntax.Actions.IntermediateActions.LinkEndCreationDataList;&#xD;
import fUML.Syntax.Classes.Kernel.Association;&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_uU2XkOecEeGYZqnbU6eCYw">
              <body>fUML semantics is extended in the sense that a CS_Link is created instead of a Link. [Note: This extension can be avoided if fUML introduces a factory for Link]</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_4HvmYOYaEeGYZqnbU6eCYw" general="Semantics-Actions-IntermediateActions-CreateLinkActionActivation" specific="_v_yAwOYaEeGYZqnbU6eCYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EmciwOYbEeGYZqnbU6eCYw" name="doAction" specification="_-lgUAOYaEeGYZqnbU6eCYw">
              <language>Java</language>
              <body>		// Get the extent at the current execution locus of the association for&#xD;
		// which a link is being created.&#xD;
		// Destroy all links that have a value for any end for which&#xD;
		// isReplaceAll is true.&#xD;
		// Create a new link for the association, at the current locus, with the&#xD;
		// given end data values,&#xD;
		// inserted at the given insertAt position (for ordered ends).&#xD;
		// fUML semantics is extended in the sense that a CS_Link is created instead of&#xD;
		// a Link&#xD;
&#xD;
		CreateLinkAction action = (CreateLinkAction) (this.node);&#xD;
		LinkEndCreationDataList endDataList = action.endData;&#xD;
&#xD;
		Association linkAssociation = this.getAssociation();&#xD;
		ExtensionalValueList extent = this.getExecutionLocus().getExtent(&#xD;
				linkAssociation);&#xD;
&#xD;
		Link oldLink = null;&#xD;
		for (int i = 0; i &lt; extent.size(); i++) {&#xD;
			ExtensionalValue value = extent.getValue(i);&#xD;
			Link link = (Link) value;&#xD;
&#xD;
			boolean noMatch = true;&#xD;
			int j = 1;&#xD;
			while (noMatch &amp; j &lt;= endDataList.size()) {&#xD;
				LinkEndCreationData endData = endDataList.getValue(j - 1);&#xD;
				if (endData.isReplaceAll&#xD;
						&amp; this.endMatchesEndData(link, endData)) {&#xD;
					oldLink = link;&#xD;
					link.destroy();&#xD;
					noMatch = false;&#xD;
				}&#xD;
				j = j + 1;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		CS_Link newLink = new CS_Link();&#xD;
		newLink.type = linkAssociation;&#xD;
&#xD;
		// This necessary when setting a feature value with an insertAt position&#xD;
		newLink.locus = this.getExecutionLocus();&#xD;
&#xD;
		for (int i = 0; i &lt; endDataList.size(); i++) {&#xD;
			LinkEndCreationData endData = endDataList.getValue(i);&#xD;
&#xD;
			int insertAt;&#xD;
			if (endData.insertAt == null) {&#xD;
				insertAt = 0;&#xD;
			} else {&#xD;
				insertAt = ((UnlimitedNaturalValue) (this&#xD;
						.takeTokens(endData.insertAt).getValue(0))).value.naturalValue;&#xD;
				if (oldLink != null) {&#xD;
					if (oldLink.getFeatureValue(endData.end).position &lt; insertAt) {&#xD;
						insertAt = insertAt - 1;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			newLink.setFeatureValue(endData.end,&#xD;
					this.takeTokens(endData.value), insertAt);&#xD;
		}&#xD;
&#xD;
		this.getExecutionLocus().add(newLink);</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_-lgUAOYaEeGYZqnbU6eCYw" name="doAction" method="_EmciwOYbEeGYZqnbU6eCYw" class="_v_yAwOYaEeGYZqnbU6eCYw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_qh0a8MEeEeKkJbQgitQ3JQ" name="CS_ClearStructuralFeatureActionActivation">
            <generalization xmi:type="uml:Generalization" xmi:id="_t_8HoMEeEeKkJbQgitQ3JQ" general="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation" specific="_qh0a8MEeEeKkJbQgitQ3JQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2YtwcsEeEeKkJbQgitQ3JQ" name="doAction" specification="_2YtwcMEeEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		// Get the value of the object input pin.&#xD;
		// If the given feature is an association end, then&#xD;
		// destroy all links that have the object input on the opposite end.&#xD;
		// Otherwise, if the object input is a structured value, then&#xD;
		// set the appropriate feature of the input value to be empty.&#xD;
		ClearStructuralFeatureAction action = (ClearStructuralFeatureAction)(this.node);&#xD;
		StructuralFeature feature = action.structuralFeature;&#xD;
		Association association = this.getAssociation(feature);&#xD;
		Value value = this.takeTokens(action.object).get(0);&#xD;
		if(association != null) {&#xD;
			LinkList links = this.getMatchingLinks(association, feature, value);&#xD;
			for(int i = 0; i &lt; links.size(); i++) {&#xD;
				Link link = links.get(i);&#xD;
				link.destroy();&#xD;
			}&#xD;
		} else if(value instanceof StructuredValue) {&#xD;
			// If the value is a data value, then it must be copied before&#xD;
			// any change is made.&#xD;
			if(!(value instanceof Reference)) {&#xD;
				value = value.copy();&#xD;
			}&#xD;
			else {&#xD;
				// extension to fUML&#xD;
				CS_LinkList linksToDestroy = this.getLinksToDestroy((StructuredValue)value, feature) ;&#xD;
				for (int i = 0 ; i &lt; linksToDestroy.size() ; i++) {&#xD;
					linksToDestroy.get(i).destroy() ;&#xD;
				}&#xD;
				//&#xD;
			}&#xD;
			((StructuredValue)value).setFeatureValue(action.structuralFeature, new ValueList(), 0);&#xD;
		}&#xD;
		if(action.result != null) {&#xD;
			this.putToken(action.result, value);&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_v1biQMEhEeKkJbQgitQ3JQ" name="getLinksToDestroy" specification="_Fc2MEMEhEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		CS_LinkList linksToDestroy = new CS_LinkList() ;&#xD;
		if (value instanceof CS_Reference) {&#xD;
			CS_Reference context = (CS_Reference)value ;&#xD;
			// Retrieves the feature values for the structural feature associated with this action,&#xD;
			// in the context of this reference &#xD;
			FeatureValue featureValue = context.getFeatureValue(feature) ;&#xD;
			if (feature instanceof Port) {&#xD;
				// all values are interaction points&#xD;
				// any link targeting this interaction point must be destroyed&#xD;
				for (int i = 0 ; i &lt; featureValue.values.size() ; i++) {&#xD;
					CS_InteractionPoint interactionPoint = (CS_InteractionPoint)featureValue.values.get(i) ;&#xD;
					CS_LinkList connectorInstances = context.compositeReferent.getLinks(interactionPoint) ;&#xD;
					for (int j = 0 ; j &lt; connectorInstances.size() ; j++) {&#xD;
						CS_Link link = connectorInstances.get(j) ;&#xD;
						linksToDestroy.add(link) ;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			else { // feature is an attribute&#xD;
				// Retrieve all potential link ends,&#xD;
				// separating potential link ends corresponding to the given feature,&#xD;
				// and potential link ends corresponding to other features.&#xD;
				// By &quot;potential link ends&quot;, we refer to the values of a given feature,&#xD;
				// as well as interaction points associated with this value, if any.&#xD;
				ValueList allValuesForFeature = new ValueList() ;&#xD;
				ValueList allOtherValues = new ValueList() ;&#xD;
				for (int i = 0 ; i &lt; context.referent.featureValues.size() ; i++) {&#xD;
					StructuralFeature currentFeature = context.referent.featureValues.get(i).feature ;&#xD;
					ValueList values = this.getPotentialLinkEnds(context, currentFeature) ;&#xD;
					for (int j = 0 ; j &lt; values.size() ; j++) {&#xD;
						Value v = values.get(j) ;&#xD;
						if (currentFeature != feature) {&#xD;
							allOtherValues.add(v) ;&#xD;
						}&#xD;
						else {&#xD;
							allValuesForFeature.add(v) ;&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
				// Retrieves all links available at the locus&#xD;
				ExtensionalValueList extensionalValues = this.getExecutionLocus().extensionalValues ;&#xD;
				CS_LinkList allLinks = new CS_LinkList() ;&#xD;
				for (int i = 0 ; i &lt; extensionalValues.size() ; i ++) {&#xD;
					ExtensionalValue extensionalValue = extensionalValues.get(i) ;&#xD;
					if (extensionalValue instanceof CS_Link) {&#xD;
						allLinks.add((CS_Link)extensionalValue) ;&#xD;
					}&#xD;
				}&#xD;
				// Retrieves links representing connector instances in the context object &#xD;
				for (int i = 0 ; i &lt; allLinks.size() ; i++) {&#xD;
					CS_Link link = allLinks.get(i) ;&#xD;
					boolean linkHasToBeDestroyed = false ;&#xD;
					for (int j = 0 ; j &lt; allValuesForFeature.size() &amp;&amp; !linkHasToBeDestroyed; j++) {&#xD;
						Value v = allValuesForFeature.get(j) ;&#xD;
						StructuralFeature featureForV = link.getFeature(v) ;&#xD;
						if (featureForV != null) {&#xD;
							// Check if feature values of this link for other features&#xD;
							// contains elements identified in allOtherValue&#xD;
							for (int k = 0 ; k &lt; link.featureValues.size() &amp;&amp; !linkHasToBeDestroyed ; k++) {&#xD;
								FeatureValue otherFeatureValue = link.featureValues.get(k) ;&#xD;
								if (otherFeatureValue.feature != featureForV) {&#xD;
									for (int l = 0 ; l &lt; otherFeatureValue.values.size() &amp;&amp; !linkHasToBeDestroyed ; l++) {&#xD;
										for (int m = 0 ; m &lt; allOtherValues.size() &amp;&amp; !linkHasToBeDestroyed ; m++) {&#xD;
											if (otherFeatureValue.values.get(l) == allOtherValues.get(m)) {&#xD;
												linkHasToBeDestroyed = true ;&#xD;
											}&#xD;
										}&#xD;
									}&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					if (linkHasToBeDestroyed) {&#xD;
						linksToDestroy.add(link) ;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return linksToDestroy ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7OazwMEhEeKkJbQgitQ3JQ" name="getPotentialLinkEnds" specification="_Hx6mAMEhEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		// Retrieves all feature values for the context object for the given feature,&#xD;
		// as well as all interaction point for these values&#xD;
		ValueList potentialLinkEnds = new ValueList() ;&#xD;
		FeatureValue featureValue = context.getFeatureValue(feature) ;&#xD;
		for (int i = 0 ; i &lt; featureValue.values.size() ; i++) {&#xD;
			Value v = featureValue.values.get(i) ;&#xD;
			potentialLinkEnds.add(v) ;&#xD;
			if (v instanceof CS_Reference) {&#xD;
				// add all interaction points associated with v&#xD;
				for (int j = 0 ; j &lt; ((CS_Reference)v).referent.featureValues.size() ; j++) {&#xD;
					if (((CS_Reference)v).referent.featureValues.get(j).feature instanceof Port) {&#xD;
						ValueList interactionPoints = (((CS_Reference)v).referent.featureValues.get(j)).values ;&#xD;
						for (int k = 0 ; k &lt; interactionPoints.size() ; k++) {&#xD;
							potentialLinkEnds.add(interactionPoints.get(k)) ;&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return potentialLinkEnds ;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_2YtwcMEeEeKkJbQgitQ3JQ" name="doAction" visibility="public" method="_2YtwcsEeEeKkJbQgitQ3JQ" class="_qh0a8MEeEeKkJbQgitQ3JQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_2YtwccEeEeKkJbQgitQ3JQ">
                <body>&lt;&lt;TextualRepresentation>>public doAction () { &#xD;
	// If the feature is a port and the input value to be added is a Reference,&#xD;
	// Replaces this Reference by an InteractionPoint, and then behaves &#xD;
	// as usual.&#xD;
	// If the feature is not a port, behaves as usual&#xD;
&#xD;
	AddStructuralFeatureValueAction action = &#xD;
							(AddStructuralFeatureValueAction)(this.node);&#xD;
	StructuralFeature feature = action.structuralFeature;&#xD;
&#xD;
	if (! (feature instanceof Port)) {&#xD;
		// Behaves as usual&#xD;
		super.doAction() ;&#xD;
	}&#xD;
	else {&#xD;
		ValueList inputValues = this.takeTokens(action.value);&#xD;
		// NOTE: Multiplicity of the value input pin is required to be 1..1.&#xD;
		Value inputValue = inputValues.getValue(0);&#xD;
		if (inputValue instanceof Reference) {&#xD;
			// First constructs an InteractionPoint from the inputValue&#xD;
			Reference reference = (Reference)inputValue ;&#xD;
			InteractionPoint interactionPoint = new InteractionPoint() ;&#xD;
			interactionPoint.referent = reference.referent ;&#xD;
			interactionPoint.definingPort = (Port)feature ;&#xD;
			// The value on action.object is necessarily instanceof &#xD;
			// ReferenceToCompositeStructure (otherwise, the feature cannot &#xD;
			// be a port)&#xD;
			ReferenceToCompositeStructure owner = &#xD;
									(ReferenceToCompositeStructure)this&#xD;
													.takeTokens(action.object).getValue(0);&#xD;
			interactionPoint.owner = owner ;&#xD;
			// Then replaces the Reference by an InteractionPoint &#xD;
			// in the inputValues&#xD;
			inputValues.remove(0) ;&#xD;
			inputValues.addValue(0,interactionPoint) ;&#xD;
			// Finally concludes with usual fUML behavior of &#xD;
			// AddStructuralFeatureValueAction (i.e., the usual behavior when &#xD;
			// the value on action.object pin is a StructuredValue)&#xD;
			Integer insertAt = 0;&#xD;
			if (action.insertAt != null) {&#xD;
	    		insertAt = ((UnlimitedNaturalValue)this&#xD;
												.takeTokens(action.insertAt).getValue(0))&#xD;
												.value.naturalValue;&#xD;
			}&#xD;
			if (action.isReplaceAll) {&#xD;
	        	owner.setFeatureValue(feature, inputValues, 0);&#xD;
	    	} else {&#xD;
	        	FeatureValue featureValue = owner.getFeatureValue(feature);&#xD;
	&#xD;
		        if (featureValue.values.size() > 0 &amp; insertAt == 0 ) {&#xD;
		            // If there is no insertAt pin, then the structural feature must &#xD;
					// be unordered, and the insertion position is immaterial.&#xD;
	    	        insertAt = ((ChoiceStrategy)this.getExecutionLocus()&#xD;
												.factory.getStrategy(&quot;choice&quot;))&#xD;
												.choose(featureValue.values.size());&#xD;
	        	}&#xD;
	        	if (feature.multiplicityElement.'isUnique') {&#xD;
	            	// Remove any existing value that duplicates the input value&#xD;
		            Integer j = position(inputValue, featureValue.values, 1);&#xD;
		            if (j > 0) {&#xD;
	    	            featureValue.values.remove(j-1);&#xD;
	        	        if (insertAt > 0 &amp; j &lt; insertAt) {&#xD;
	            	        insertAt = insertAt - 1;&#xD;
	                	}&#xD;
		            }&#xD;
		        }&#xD;
	&#xD;
	    	    if (insertAt &lt;= 0) {  &#xD;
					// Note: insertAt = -1 indicates an unlimited value of &quot;*&quot;&#xD;
	        	    featureValue.values.addValue(inputValue);&#xD;
		        } else {&#xD;
		            featureValue.values.addValue(insertAt - 1, inputValue);&#xD;
	    	    }&#xD;
		    }&#xD;
		}&#xD;
		else {&#xD;
			// behaves as usual&#xD;
			super.doAction();&#xD;
		}&#xD;
	}	&#xD;
} </body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Fc2MEMEhEeKkJbQgitQ3JQ" name="getLinksToDestroy" method="_v1biQMEhEeKkJbQgitQ3JQ" class="_qh0a8MEeEeKkJbQgitQ3JQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_SP_ucMEhEeKkJbQgitQ3JQ" name="value" type="Semantics-Classes-Kernel-StructuredValue"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_WIlwoMEhEeKkJbQgitQ3JQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ZdCj8MEhEeKkJbQgitQ3JQ" name="result" type="_wUyA5N2JEeGnO-TF_1T_iQ" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Fe92gMEiEeKkJbQgitQ3JQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FfHngMEiEeKkJbQgitQ3JQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Hx6mAMEhEeKkJbQgitQ3JQ" name="getPotentialLinkEnds" method="_7OazwMEhEeKkJbQgitQ3JQ" class="_qh0a8MEeEeKkJbQgitQ3JQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_geoXYMEhEeKkJbQgitQ3JQ" name="context" type="_wUwMMt2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_j4cL0MEhEeKkJbQgitQ3JQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_peiRoMEhEeKkJbQgitQ3JQ" name="result" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_B_0tgOYVEeGYZqnbU6eCYw" name="CS_ReadExtentActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="_1wMjYOYeEeGYZqnbU6eCYw">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Object;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Reference;&#xD;
import fUML.Semantics.Actions.CompleteActions.ReadExtentActionActivation;&#xD;
import fUML.Semantics.Classes.Kernel.ExtensionalValueList;&#xD;
import fUML.Semantics.Classes.Kernel.Object_;&#xD;
import fUML.Semantics.Classes.Kernel.Reference;&#xD;
import fUML.Semantics.Classes.Kernel.Value;&#xD;
import fUML.Semantics.Classes.Kernel.ValueList;&#xD;
import fUML.Syntax.Actions.CompleteActions.ReadExtentAction;</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_8j2M4OecEeGYZqnbU6eCYw">
              <body>Extends default fUML semantics in the sense that produced tokens contain CS_References instead of References, in the case where the object is a CS_Object. [Note: This extension can be avoided if fUML introduces a factory for Reference]</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_GfLNsOYVEeGYZqnbU6eCYw" general="Semantics-Actions-CompleteActions-ReadExtentActionActivation" specific="_B_0tgOYVEeGYZqnbU6eCYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_SKvc8OYVEeGYZqnbU6eCYw" name="doAction" specification="_KW8JcOYVEeGYZqnbU6eCYw">
              <language>Java</language>
              <body>		// Get the extent, at the current execution locus, of the classifier&#xD;
		// (which must be a class) identified in the action.&#xD;
		// Place references to the resulting set of objects on the result pin.&#xD;
		// Extends default fUML semantics in the sense that produced tokens contain&#xD;
		// CS_References instead of References, in the case where the object is a&#xD;
		// CS_Object&#xD;
&#xD;
		ReadExtentAction action = (ReadExtentAction) (this.node);&#xD;
		ExtensionalValueList objects = this.getExecutionLocus().getExtent(&#xD;
				action.classifier);&#xD;
&#xD;
		ValueList references = new ValueList();&#xD;
		for (int i = 0; i &lt; objects.size(); i++) {&#xD;
			Value object = objects.getValue(i);&#xD;
			Reference reference = null ;&#xD;
			if (object instanceof CS_Object) {&#xD;
				reference = new CS_Reference() ;&#xD;
				((CS_Reference)reference).compositeReferent = (CS_Object)object ;&#xD;
			}&#xD;
			else {&#xD;
				reference = new Reference() ;&#xD;
			}&#xD;
			reference.referent = (Object_) object;&#xD;
			references.addValue(reference);&#xD;
		}&#xD;
&#xD;
		this.putTokens(action.result, references);</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_KW8JcOYVEeGYZqnbU6eCYw" name="doAction" method="_SKvc8OYVEeGYZqnbU6eCYw" class="_B_0tgOYVEeGYZqnbU6eCYw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_xomMgDKBEeOOxr3mXNMmgg" name="CS_ReadIsClassifiedObjectActionActivation">
            <generalization xmi:type="uml:Generalization" xmi:id="_YfUlgDKCEeOOxr3mXNMmgg" general="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation" specific="_xomMgDKBEeOOxr3mXNMmgg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_cca3wDKDEeOOxr3mXNMmgg" name="checkAllParents" specification="_8ehNMDKBEeOOxr3mXNMmgg">
              <language>JAVA</language>
              <body>		// If the given classifier is not an Interface, behaves like in fUML.&#xD;
		// Otherwise, check if the given type (or one of its direct or indirect ancestors)&#xD;
		// has an InterfaceRealization relationships with the given classifier.&#xD;
		boolean matched = false ;&#xD;
		if (!(classifier instanceof Interface)) {&#xD;
			matched = super.checkAllParents(type, classifier);&#xD;
		}&#xD;
		else if (! (type instanceof Class_)){&#xD;
			matched = false ; &#xD;
		}&#xD;
		else if (this.realizesInterface((Class_)type, (Interface)classifier)) {&#xD;
			matched = true ;&#xD;
		}&#xD;
		else {&#xD;
			ClassifierList directParents = type.general;&#xD;
			int i = 1;&#xD;
			while(!matched &amp; i &lt;= directParents.size()) {&#xD;
				Classifier directParent = directParents.get(i - 1);&#xD;
				matched = this.checkAllParents(directParent, classifier);&#xD;
				i = i + 1;&#xD;
			}&#xD;
		}&#xD;
		return matched ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_kSbxwDKDEeOOxr3mXNMmgg" name="realizesInterface" specification="_BOhYgDKCEeOOxr3mXNMmgg">
              <language>JAVA</language>
              <body>		// Checks if the given type has an InterfaceRealization relationship&#xD;
		// with the given interface or a descendant of the interface.&#xD;
		InterfaceRealizationList realizations = type.interfaceRealization ;&#xD;
		boolean realized = false ;&#xD;
		int i = 1 ;&#xD;
		while (i &lt;= realizations.size() &amp;&amp; !realized) {&#xD;
			InterfaceRealization realization = realizations.get(i - 1) ;&#xD;
			Interface contract = realization.contract ;&#xD;
			if (contract == interface_) {&#xD;
				realized = true ;&#xD;
			}&#xD;
			else if (this.isDescendant(contract, interface_)) {&#xD;
				realized = true ;&#xD;
			}&#xD;
			i = i + 1 ;&#xD;
		}&#xD;
		return realized ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_veOUwDKDEeOOxr3mXNMmgg" name="isDescendant" specification="_NGQbgDKCEeOOxr3mXNMmgg">
              <language>JAVA</language>
              <body>		// Checks if the given contract is a descendant of the given interface_&#xD;
		boolean matched = false ;&#xD;
		ClassifierList descendants = contract.general ;&#xD;
		int i = 1 ;&#xD;
		while (i &lt;= descendants.size() &amp;&amp; ! matched) {&#xD;
			if (descendants.getValue(i-1) instanceof Interface) {&#xD;
				Interface descendant = (Interface)descendants.getValue(i-1) ;&#xD;
				if (descendant == interface_) {&#xD;
					matched = true ;&#xD;
				}&#xD;
				else {&#xD;
					matched = this.isDescendant(descendant, interface_) ;&#xD;
				}&#xD;
			}&#xD;
			i = i + 1 ;&#xD;
		}&#xD;
		return matched ;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_8ehNMDKBEeOOxr3mXNMmgg" name="checkAllParents" method="_cca3wDKDEeOOxr3mXNMmgg" class="_xomMgDKBEeOOxr3mXNMmgg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_8ehNMjKBEeOOxr3mXNMmgg" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_8ehNMzKBEeOOxr3mXNMmgg" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_8ehNNDKBEeOOxr3mXNMmgg" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_BOhYgDKCEeOOxr3mXNMmgg" name="realizesInterface" method="_kSbxwDKDEeOOxr3mXNMmgg" class="_xomMgDKBEeOOxr3mXNMmgg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GbYe8DKCEeOOxr3mXNMmgg" name="type"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Io2cEDKCEeOOxr3mXNMmgg" name="interface_"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_LWMMEDKCEeOOxr3mXNMmgg" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_NGQbgDKCEeOOxr3mXNMmgg" name="isDescendant" method="_veOUwDKDEeOOxr3mXNMmgg" class="_xomMgDKBEeOOxr3mXNMmgg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_QPv8ADKCEeOOxr3mXNMmgg" name="contact"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_SD-SsDKCEeOOxr3mXNMmgg" name="interface_"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_UASOYDKCEeOOxr3mXNMmgg" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_wUwzJd2JEeGnO-TF_1T_iQ" name="CS_AcceptEventActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="_wUwzJt2JEeGnO-TF_1T_iQ">
              <body>The behavior of fUML CallOperationActionActivation::match() is overriden, in order to account for the fact that a given signal instance may need to be matched with triggers where a list of ports is given. (NOTE: Addresses requirement R9 &quot;Specifying one or more ports for an event implies that the event triggers the execution of an associated behavior only if the event was received via one of the specified ports.&quot;)</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_pX-DYOH1EeG4NZyomhkW-A">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.InvocationActions.Trigger;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.Ports.Port;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.Ports.PortList;&#xD;
import fUML.Semantics.Actions.CompleteActions.AcceptEventActionActivation;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.SignalInstance;&#xD;
import fUML.Syntax.Actions.CompleteActions.AcceptEventAction;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.Signal;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.SignalEvent;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.TriggerList;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_wUwzLd2JEeGnO-TF_1T_iQ" general="Semantics-Actions-CompleteActions-AcceptEventActionActivation" specific="_wUwzJd2JEeGnO-TF_1T_iQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwzLt2JEeGnO-TF_1T_iQ" name="match" specification="_wUwzNd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzL92JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzMN2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzMd2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzMt2JEeGnO-TF_1T_iQ" name="result">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzM92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzNN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Return true if the given signal instance matches a trigger of the accept &#xD;
		// event action of this activation.&#xD;
		// Matching implies that the type of the signalInstance matches the Signal &#xD;
		// of one of the triggers.&#xD;
		// When the type matches with the Signal, and if the trigger specifies a &#xD;
		// list of ports,&#xD;
		// the signalInstance matches the trigger only if it occurred on a port &#xD;
		// identified in the list.&#xD;
&#xD;
		AcceptEventAction action = (AcceptEventAction)(this.node) ;&#xD;
		TriggerList triggers = action.trigger ;&#xD;
		Signal signal = signalInstance.type ;&#xD;
&#xD;
		Boolean matches = false;&#xD;
		Integer i = 1;&#xD;
		while (!matches &amp; i &lt;= triggers.size()) {&#xD;
			Trigger t = triggers.getValue(i-1) ;&#xD;
			matches = ((SignalEvent)t.event).signal == signal ;&#xD;
			if (matches &amp;&amp; t.port.size()>0 ) {&#xD;
				PortList portsOfTrigger = t.port ;&#xD;
				Port onPort =  &#xD;
						((CS_SignalInstance)signalInstance).interactionPoint.definingPort ;&#xD;
				Boolean portMatches = false ;&#xD;
				Integer j = 1 ;&#xD;
				while (! portMatches &amp; j &lt;= portsOfTrigger.size() ) {&#xD;
					portMatches = onPort == portsOfTrigger.getValue(j-1) ;&#xD;
					j = j + 1 ;&#xD;
				}&#xD;
				matches = portMatches ;&#xD;
			}&#xD;
			i = i + 1;&#xD;
		}&#xD;
&#xD;
		return matches;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwzNd2JEeGnO-TF_1T_iQ" name="match" visibility="public" method="_wUwzLt2JEeGnO-TF_1T_iQ" class="_wUwzJd2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwzNt2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public match (in signalInstance : SignalInstance) : Boolean {&#xD;
	// Return true if the given signal instance matches a trigger of the accept &#xD;
	// action of this activation.&#xD;
	// Matching implies that the type of the signalInstance matches the Signal &#xD;
	// of one of the triggers.&#xD;
	// When the type matches with the Signal, and if the trigger specifies a &#xD;
	// list of ports,&#xD;
	// the signalInstance matches the trigger only if it occured on a port &#xD;
	// identified in the list.&#xD;
&#xD;
	AcceptEventAction action = (AcceptEventAction)(this.node) ;&#xD;
	TriggerList triggers = action.trigger ;&#xD;
	Signal signal = signalInstance.type ;&#xD;
	&#xD;
	Boolean matches = false;&#xD;
	Integer i = 1;&#xD;
	while (!matches &amp; i &lt;= triggers.size()) {&#xD;
		Trigger t = triggers.getValue(i-1) ;&#xD;
		matches = ((SignalEvent)t.event).signal == signal ;&#xD;
		if (matches &amp;&amp; (t instanceof Composites::Syntax::Trigger)) {&#xD;
			if (! (signalInstance instanceof SignalInstanceWithPort)) {&#xD;
				matches = false ;&#xD;
			}&#xD;
			else {&#xD;
				PortList portsOfTrigger = ((Composites::Syntax::Trigger)t).port ;&#xD;
				Port onPort =  &#xD;
					((SignalInstanceWithPort)signalInstance).interactionPoint&#xD;
																							.definingPort ;&#xD;
				Boolean portMatches = false ;&#xD;
				Integer j = 1 ;&#xD;
				while (! portMatches &amp; j &lt;= portsOfTrigger.size() ) {&#xD;
					portMatches = onPort == portsOfTrigger.getValue(j-1) ;&#xD;
					j = j + 1 ;&#xD;
				}&#xD;
				matches = portMatches ;&#xD;
			}&#xD;
		}&#xD;
	    i = i + 1;&#xD;
	}&#xD;
	&#xD;
	return matches;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzN92JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzON2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzOd2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzOt2JEeGnO-TF_1T_iQ" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzO92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzPN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_wUwMI92JEeGnO-TF_1T_iQ" name="CS_CallOperationActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="_wUwMJN2JEeGnO-TF_1T_iQ">
              <body>Extends fUML CallOperationActionActivation::getCallExecution() to capture  dispatching semantics of requests across ports. (Note: Adresses requirement R2 &quot;Invocation actions may also be sent to a target via a given port, either on the sending object or on another object.&quot;)</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_0jKwgOH1EeG4NZyomhkW-A">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Reference;&#xD;
import fUML.Semantics.Actions.BasicActions.CallOperationActionActivation;&#xD;
import fUML.Semantics.Classes.Kernel.Object_;&#xD;
import fUML.Semantics.Classes.Kernel.Value;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.Execution;&#xD;
import fUML.Syntax.Actions.BasicActions.CallOperationAction;</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_wUwMKN2JEeGnO-TF_1T_iQ" general="Semantics-Actions-BasicActions-CallOperationActionActivation" specific="_wUwMI92JEeGnO-TF_1T_iQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwMKd2JEeGnO-TF_1T_iQ" name="getCallExecution" specification="_wUwMLd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwMKt2JEeGnO-TF_1T_iQ" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwMK92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwMLN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// If onPort is not specified, behaves like in fUML&#xD;
		// If onPort is specified, and if the value on the target input pin is a &#xD;
		// reference, dispatch the operation &#xD;
		// to it and return the resulting execution object.&#xD;
		// As compared to fUML, instead of dispatching directly to target reference &#xD;
		// by calling operation dispatch:&#xD;
		// - If the invoked BehavioralFeature is on a provided Interface but not on any required Interface, &#xD;
		// then, when the InvocationAction is executed, the invocation is made into the object given on &#xD;
		// the target InputPin through the given Port&#xD;
		// - If the invoked BehavioralFeature is on a required Interface but not on any provided Interface, &#xD;
		// then, if the InvocationAction is being executed inside the object given on the target InputPin, &#xD;
		// the invocation is forwarded out of the target object through the given Port.&#xD;
		// - If the invoked BehavioralFeature is on both a provided and a required Interface, &#xD;
		// then, if the InvocationAction is being executed inside the object given on the target InputPin, &#xD;
		// the invocation is made out of the target object through the given Port. &#xD;
		// Otherwise the invocation is made into the target object through the given Port.&#xD;
&#xD;
		CallOperationAction action = (CallOperationAction)(this.node);&#xD;
		Execution execution = null ; &#xD;
		if (action.onPort == null ) {&#xD;
			execution = super.getCallExecution() ;&#xD;
		}&#xD;
		else {&#xD;
			Value target = this.takeTokens(action.target).get(0);&#xD;
			if (target instanceof CS_Reference) {&#xD;
				// Tries to determine if the operation call has to be&#xD;
				// dispatched to the environment or to the internals of&#xD;
				// target, through onPort&#xD;
				CS_Reference targetReference = (CS_Reference)target ;&#xD;
				Object_ executionContext = this.group.activityExecution.context ;&#xD;
				boolean operationIsOnProvidedInterface = this.isOperationProvided(action.onPort, action.operation) ;&#xD;
				boolean operationIsOnRequiredInterface = this.isOperationRequired(action.onPort, action.operation) ;&#xD;
				// Operation on a provided interface only&#xD;
				if (operationIsOnProvidedInterface &amp;&amp; !operationIsOnRequiredInterface) {&#xD;
					execution = targetReference.dispatchIn(action.operation, action.onPort);&#xD;
				}&#xD;
				// Operation is on a required interface only&#xD;
				else if (!operationIsOnProvidedInterface &amp;&amp; operationIsOnRequiredInterface){&#xD;
					// If not executing in the context of the target,&#xD;
					// Semantics are undefined.&#xD;
					// Otherwise, dispatch outside.&#xD;
					if (executionContext == targetReference.referent &#xD;
							|| targetReference.compositeReferent.contains(executionContext)) {&#xD;
						execution = targetReference.dispatchOut(action.operation, action.onPort);&#xD;
					}&#xD;
				}&#xD;
				// Operation is both on a provided and a required interface&#xD;
				else if (operationIsOnProvidedInterface &amp;&amp; operationIsOnRequiredInterface) {&#xD;
					if (executionContext == targetReference.referent &#xD;
							|| targetReference.compositeReferent.contains(executionContext)) {&#xD;
						execution = targetReference.dispatchOut(action.operation, action.onPort);&#xD;
					}&#xD;
					else {&#xD;
						execution = targetReference.dispatchIn(action.operation, action.onPort);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return execution;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__AmB4MFCEeKkJbQgitQ3JQ" name="doAction" specification="_21gPwMFCEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		CallOperationAction action = (CallOperationAction)(this.node);&#xD;
		// First determines if this is a call to a constructor and if a default &#xD;
		// construction strategy needs to be applied.&#xD;
		// This is a call to a constructor if the called operation has &#xD;
		// stereotype &lt;&lt;Create>> applied. &#xD;
		// The default construction strategy is used if no method is associated with the &#xD;
		// &lt;&lt;Create>> operation.&#xD;
		// Otherwise, behaves like in fUML.&#xD;
		if (action.onPort == null &amp;&amp; this.isCreate(action.operation) &amp;&amp; action.operation.method.size() == 0) {&#xD;
			Locus locus = this.getExecutionLocus() ;&#xD;
			CS_ConstructStrategy strategy = ((CS_ConstructStrategy)locus.factory.getStrategy(&quot;constructStrategy&quot;)) ;&#xD;
			Value target = this.takeTokens(action.target).get(0);&#xD;
			if (target instanceof CS_Reference) {&#xD;
				strategy.construct(action.operation, ((CS_Reference)target).compositeReferent) ;&#xD;
				ParameterList parameters = action.operation.ownedParameter ;&#xD;
				OutputPinList resultPins = action.result ;&#xD;
				ValueList values = new ValueList() ;&#xD;
				values.add(target) ;&#xD;
				int i = 1 ;&#xD;
				while(i &lt;= parameters.size()) {&#xD;
					Parameter parameter = parameters.get(i - 1);&#xD;
					if(parameter.direction == ParameterDirectionKind.return_) {&#xD;
						OutputPin resultPin = resultPins.get(0);&#xD;
						this.putTokens(resultPin, values);&#xD;
					}&#xD;
					i = i + 1;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		else {&#xD;
			super.doAction();&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vWpcEMFDEeKkJbQgitQ3JQ" name="isOperationProvided" specification="_HZXqsMFDEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		boolean isProvided = false ;&#xD;
		if (operation.owner instanceof Interface) {&#xD;
			// We have to look in provided interfaces of the port if &#xD;
			// they define directly or indirectly the Operation&#xD;
			Integer interfaceIndex = 1 ;&#xD;
			// Iterates on provided interfaces of the port&#xD;
			InterfaceList providedInterfaces = port.provided ;&#xD;
			while (interfaceIndex &lt;= providedInterfaces.size() &amp;&amp; !isProvided) {&#xD;
				Interface interface_ = providedInterfaces.get(interfaceIndex-1) ;&#xD;
				// Iterates on members of the current Interface&#xD;
				Integer memberIndex = 1 ;&#xD;
				while (memberIndex &lt;= interface_.member.size() &amp;&amp; !isProvided) {&#xD;
					NamedElement cddOperation = interface_.member.get(memberIndex-1) ;&#xD;
					if (cddOperation instanceof Operation) {&#xD;
						isProvided = operation == cddOperation ;&#xD;
					}&#xD;
					memberIndex = memberIndex + 1 ;&#xD;
				}&#xD;
				interfaceIndex = interfaceIndex + 1 ;&#xD;
			}&#xD;
		}&#xD;
		return isProvided ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0nUEcMFDEeKkJbQgitQ3JQ" name="isOperationRequired" specification="_HlRYsMFDEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		boolean isRequired = false ;&#xD;
		Integer interfaceIndex = 1 ;&#xD;
		// Iterates on provided interfaces of the port&#xD;
		InterfaceList requiredInterfaces = port.required ;&#xD;
		while (interfaceIndex &lt;= requiredInterfaces.size() &amp;&amp; !isRequired) {&#xD;
			Interface interface_ = requiredInterfaces.get(interfaceIndex-1) ;&#xD;
			// Iterates on members of the current Interface&#xD;
			Integer memberIndex = 1 ;&#xD;
			while (memberIndex &lt;= interface_.member.size() &amp;&amp; !isRequired) {&#xD;
				NamedElement cddOperation = interface_.member.get(memberIndex-1) ;&#xD;
				if (cddOperation instanceof Operation) {&#xD;
					isRequired = operation == cddOperation ;&#xD;
				}&#xD;
				memberIndex = memberIndex + 1 ;&#xD;
			}&#xD;
			interfaceIndex = interfaceIndex + 1 ;&#xD;
		}&#xD;
		return isRequired ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_3_x1EMFDEeKkJbQgitQ3JQ" name="isCreate" specification="_Hw3ksMFDEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		CS_ExecutionFactory executionFactory = (CS_ExecutionFactory)this.getExecutionLocus().factory ;&#xD;
		Class_ stereotypeCreate = executionFactory.getStereotypeClass(&quot;StandardProfile&quot;, &quot;Create&quot;) ;&#xD;
		if (stereotypeCreate == null) {&#xD;
			// standard profile is not applied&#xD;
			return false ;&#xD;
		}&#xD;
		return executionFactory.getStereotypeApplication(stereotypeCreate, o) != null ;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwMLd2JEeGnO-TF_1T_iQ" name="getCallExecution" visibility="public" method="_wUwMKd2JEeGnO-TF_1T_iQ" class="_wUwMI92JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwMLt2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public getCallExecution() : Execution { &#xD;
	// If onPort is not specified, behaves like in fUML&#xD;
	// If onPort is specified, and if the value on the target input pin is a &#xD;
	// reference, dispatch the operation &#xD;
	// to it and return the resulting execution object.&#xD;
	// As compared to fUML, instead of dispatching directly to target reference &#xD;
	// by calling operation dispatch,&#xD;
    // dispatchOut is called, so that the operation call will be finally &#xD;
	// dispatched to the environment (from where the execution will be taken).&#xD;
	&#xD;
	CallOperationAction action = (CallOperationAction)(this.node);&#xD;
	Execution execution = null ; &#xD;
	if (action.onPort == null ) {&#xD;
		execution = super.getCallExecution() ;&#xD;
	}&#xD;
	else {&#xD;
		Value target = this.takeTokens(action.target).getValue(0);&#xD;
		if (target instanceof ReferenceToCompositeStructure) {&#xD;
	    	execution = ((ReferenceToCompositeStructure)target)&#xD;
										.dispatchOut(action.operation, action.onPort);&#xD;
		}&#xD;
	}&#xD;
	return execution;&#xD;
&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwML92JEeGnO-TF_1T_iQ" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwMMN2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwMMd2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_21gPwMFCEeKkJbQgitQ3JQ" name="doAction" method="__AmB4MFCEeKkJbQgitQ3JQ" class="_wUwMI92JEeGnO-TF_1T_iQ"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HZXqsMFDEeKkJbQgitQ3JQ" name="isOperationProvided" method="_vWpcEMFDEeKkJbQgitQ3JQ" class="_wUwMI92JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_QEwGcMFDEeKkJbQgitQ3JQ" name="port"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Tdzs8MFDEeKkJbQgitQ3JQ" name="operation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_WElh8MFDEeKkJbQgitQ3JQ" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HlRYsMFDEeKkJbQgitQ3JQ" name="isOperationRequired" method="_0nUEcMFDEeKkJbQgitQ3JQ" class="_wUwMI92JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_dmdX8cFDEeKkJbQgitQ3JQ" name="port"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_dmdX8sFDEeKkJbQgitQ3JQ" name="operation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_dmdX8MFDEeKkJbQgitQ3JQ" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Hw3ksMFDEeKkJbQgitQ3JQ" name="isCreate" method="_3_x1EMFDEeKkJbQgitQ3JQ" class="_wUwMI92JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_eZySUcFDEeKkJbQgitQ3JQ" name="operation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_eZySUsFDEeKkJbQgitQ3JQ" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_wUwMFt2JEeGnO-TF_1T_iQ" name="CS_SendSignalActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="_wUwMF92JEeGnO-TF_1T_iQ">
              <body>Extends semantics of fUML SendSignalActionActivation::doAction() to capture propagation of signals across ports. (Note: Addresses requirement R2 &quot;Invocation actions may also be sent to a target via a given port, either on the sending object or on another object.&quot;)</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_5bWAYOH1EeG4NZyomhkW-A">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Reference;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.InternalStructures.Property;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.InternalStructures.PropertyList;&#xD;
import fUML.Semantics.Actions.BasicActions.SendSignalActionActivation;&#xD;
import fUML.Semantics.Classes.Kernel.Object_;&#xD;
import fUML.Semantics.Classes.Kernel.Reference;&#xD;
import fUML.Semantics.Classes.Kernel.Value;&#xD;
import fUML.Semantics.Classes.Kernel.ValueList;&#xD;
import fUML.Syntax.Actions.BasicActions.InputPin;&#xD;
import fUML.Syntax.Actions.BasicActions.InputPinList;&#xD;
import fUML.Syntax.Actions.BasicActions.SendSignalAction;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.Signal;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_wUwMH92JEeGnO-TF_1T_iQ" general="Semantics-Actions-BasicActions-SendSignalActionActivation" specific="_wUwMFt2JEeGnO-TF_1T_iQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwMIN2JEeGnO-TF_1T_iQ" name="doAction" specification="_wUwMId2JEeGnO-TF_1T_iQ">
              <language>Java</language>
              <body>		// If onPort is not specified, behaves like in fUML&#xD;
		// If onPort is specified,&#xD;
		// Get the value from the target pin. If the value is not a reference, &#xD;
		// then do nothing.&#xD;
		// Otherwise, construct a signal using the values from the argument pins&#xD;
		// As compared to fUML, instead of sending directly to target reference &#xD;
		// by calling operation send:&#xD;
		// - If the InvocationAction is being executed inside the object given &#xD;
		// on the target InputPin, the invocation is made out of the target object &#xD;
		// through the given Port. &#xD;
		// Otherwise the invocation is made into the target object through the &#xD;
		// given Port.&#xD;
&#xD;
		SendSignalAction action = (SendSignalAction)(this.node);&#xD;
&#xD;
		if (action.onPort == null) {&#xD;
			// Behaves like in fUML&#xD;
			this.doActionDefault() ;&#xD;
		}&#xD;
		else {&#xD;
			Value target = this.takeTokens(action.target).get(0) ;&#xD;
&#xD;
			if (target instanceof CS_Reference) {&#xD;
				// Constructs the signal instance&#xD;
				Signal signal = action.signal;&#xD;
				CS_SignalInstance signalInstance = new CS_SignalInstance();&#xD;
				signalInstance.type = signal;&#xD;
&#xD;
				PropertyList attributes = signal.ownedAttribute ;&#xD;
				InputPinList argumentPins = action.argument ;&#xD;
				Integer i = 0 ;&#xD;
				while ( i &lt; attributes.size()) {&#xD;
					Property attribute = attributes.get(i);&#xD;
					InputPin argumentPin = argumentPins.get(i);&#xD;
					ValueList values = this.takeTokens(argumentPin);&#xD;
					signalInstance.setFeatureValue(attribute, values, 0);&#xD;
					i = i + 1 ;&#xD;
				}&#xD;
&#xD;
				// Tries to determine if the signal has to be&#xD;
				// sent to the environment or to the internals of&#xD;
				// target, through onPort&#xD;
				CS_Reference targetReference = (CS_Reference)target ;&#xD;
				//Port onPort = action.onPort ;&#xD;
				Object_ executionContext = this.group.activityExecution.context ;&#xD;
				if (executionContext == targetReference.referent &#xD;
						|| targetReference.compositeReferent.contains(executionContext)) {&#xD;
					targetReference.sendOut(signalInstance, action.onPort);&#xD;
				}&#xD;
				else {&#xD;
					targetReference.sendIn(signalInstance, action.onPort);&#xD;
				}&#xD;
			}&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ta-20OYcEeGYZqnbU6eCYw" name="doActionDefault" specification="_nDvn8OYcEeGYZqnbU6eCYw">
              <language>Java</language>
              <body>		// Get the value from the target pin. If the value is not a reference,&#xD;
		// then do nothing.&#xD;
		// Otherwise, construct a signal using the values from the argument pins&#xD;
		// and send it to the referent object.&#xD;
		// This operation captures same semantics as fUML&#xD;
		// SendSignalActionActivation.doAction() except that it constructs&#xD;
		// a CS_SignalInstance instead of a SignalInstance&#xD;
&#xD;
		SendSignalAction action = (SendSignalAction) (this.node);&#xD;
		Value target = this.takeTokens(action.target).getValue(0);&#xD;
&#xD;
		if (target instanceof Reference) {&#xD;
			Signal signal = action.signal;&#xD;
&#xD;
			CS_SignalInstance signalInstance = new CS_SignalInstance();&#xD;
			signalInstance.type = signal;&#xD;
&#xD;
			PropertyList attributes = signal.ownedAttribute;&#xD;
			InputPinList argumentPins = action.argument;&#xD;
			for (int i = 0; i &lt; attributes.size(); i++) {&#xD;
				Property attribute = attributes.getValue(i);&#xD;
				InputPin argumentPin = argumentPins.getValue(i);&#xD;
				ValueList values = this.takeTokens(argumentPin);&#xD;
				signalInstance.setFeatureValue(attribute, values, 0);&#xD;
			}&#xD;
&#xD;
			((Reference) target).send(signalInstance);&#xD;
		}</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwMId2JEeGnO-TF_1T_iQ" name="doAction" visibility="public" method="_wUwMIN2JEeGnO-TF_1T_iQ" class="_wUwMFt2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwMIt2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public doAction () { &#xD;
    // If onPort is not specified, behaves like in fUML&#xD;
	// If onPort is specified,&#xD;
	// Get the value from the target pin. If the value is not a reference, &#xD;
	// then do nothing.&#xD;
	// Otherwise, construct a signal using the values from the argument pins&#xD;
	// As compared to fUML, instead of sending directly to target reference &#xD;
	// by calling operation send,&#xD;
    // sendOut is called, so that the constructed signal will be finally sent &#xD;
	// to the environment.&#xD;
	&#xD;
	SendSignalAction action = (SendSignalAction)(this.node);&#xD;
&#xD;
	if (action.onPort == null) {&#xD;
		super.doAction() ;&#xD;
	}&#xD;
	else {&#xD;
		Value target = this.takeTokens(action.target).getValue(0) ;&#xD;
	&#xD;
		if (target instanceof ReferenceToCompositeStructure) {&#xD;
		    Signal signal = action.signal;&#xD;
		    SignalInstance signalInstance = new SignalInstance();&#xD;
		    signalInstance.type = signal;&#xD;
	&#xD;
		    PropertyList attributes = signal.ownedAttribute;&#xD;
		    InputPinList argumentPins = action.argument;&#xD;
			Integer i = 0 ;&#xD;
		    while ( i &lt; attributes.size()) {&#xD;
		        Property attribute = attributes.getValue(i);&#xD;
		        InputPin argumentPin = argumentPins.getValue(i);&#xD;
		        ValueList values = this.takeTokens(argumentPin);&#xD;
		        signalInstance.setFeatureValue(attribute, values, 0);&#xD;
		    }&#xD;
	    &#xD;
			ReferenceToCompositeStructure targetReference = &#xD;
					(ReferenceToCompositeStructure)target ;&#xD;
			Port onPort = action.onPort ;&#xD;
			targetReference.sendOut(signalInstance, onPort) ;&#xD;
		}&#xD;
	}&#xD;
}</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_nDvn8OYcEeGYZqnbU6eCYw" name="doActionDefault" method="_ta-20OYcEeGYZqnbU6eCYw" class="_wUwMFt2JEeGnO-TF_1T_iQ"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_WuOboOeIEeGYZqnbU6eCYw" name="CS_RequestPropagationStrategy" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="_xMxR0OeaEeGYZqnbU6eCYw">
              <body>This semantic strategy is introduced to enable semantic variants related to propagation of requests through connectors, in the case where multiple propagation paths are possible. Concrete strategy classes shall provide a behavior for abstract operation select.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_Be7fcOegEeGYZqnbU6eCYw">
              <body>// Imports&#xD;
import fUML.Semantics.Classes.Kernel.ReferenceList;&#xD;
import fUML.Semantics.Loci.LociL1.SemanticStrategy;&#xD;
import fUML.Semantics.Loci.LociL1.SemanticVisitor;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_qnVUEOeIEeGYZqnbU6eCYw" general="Semantics-Loci-LociL1-SemanticStrategy" specific="_WuOboOeIEeGYZqnbU6eCYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_3ZSjoOeIEeGYZqnbU6eCYw" name="getName" specification="_uGsW4OeIEeGYZqnbU6eCYw">
              <language>Java</language>
              <body>		// a CS_RequestPropagationStrategy are always named &quot;requestPropagation&quot;&#xD;
		return &quot;requestPropagation&quot;;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_uGsW4OeIEeGYZqnbU6eCYw" name="getName" method="_3ZSjoOeIEeGYZqnbU6eCYw" class="_WuOboOeIEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_yybtQOeIEeGYZqnbU6eCYw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_-62QkOeIEeGYZqnbU6eCYw" name="select" isAbstract="true" class="_WuOboOeIEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_cNnnEOeJEeGYZqnbU6eCYw" name="potentialTargets" type="Semantics-Classes-Kernel-Reference">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_dcfN8OeJEeGYZqnbU6eCYw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dckGcOeJEeGYZqnbU6eCYw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_iOKNMOeJEeGYZqnbU6eCYw" name="context" type="Semantics-Loci-LociL1-SemanticVisitor"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_n8XtMOeJEeGYZqnbU6eCYw" name="result" type="Semantics-Classes-Kernel-Reference" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_o5Xg8OeJEeGYZqnbU6eCYw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_o5cZcOeJEeGYZqnbU6eCYw" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_A8IWYOeKEeGYZqnbU6eCYw" name="CS_DefaultRequestPropagationStrategy">
            <ownedComment xmi:type="uml:Comment" xmi:id="_C3r0YOebEeGYZqnbU6eCYw">
              <body>This class proposes a basic semantic variant for the semantic variation point captured by CS_RequestPropagationSrategy. This semantic variants consists in broadcasting the request to all possible targets in the case where the request concerns a signal sending. In the case where the request concerns an operation call, only the first target is kept.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_5WNE0OefEeGYZqnbU6eCYw">
              <body>// Imports&#xD;
import fUML.Semantics.Actions.BasicActions.SendSignalActionActivation;&#xD;
import fUML.Semantics.Classes.Kernel.ReferenceList;&#xD;
import fUML.Semantics.Loci.LociL1.SemanticVisitor;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_HSolcOeKEeGYZqnbU6eCYw" general="_WuOboOeIEeGYZqnbU6eCYw" specific="_A8IWYOeKEeGYZqnbU6eCYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_8dVaYOeKEeGYZqnbU6eCYw" name="select" specification="_OhIMcOeKEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_FrsAUOeLEeGYZqnbU6eCYw" name="potentialTargets" type="Semantics-Classes-Kernel-Reference">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OCzcQOeLEeGYZqnbU6eCYw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OC9NQOeLEeGYZqnbU6eCYw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HZipQOeLEeGYZqnbU6eCYw" name="semanticVisitor" type="Semantics-Loci-LociL1-SemanticVisitor"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_JMAscOeLEeGYZqnbU6eCYw" name="result" type="Semantics-Classes-Kernel-Reference" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZmQRUOeLEeGYZqnbU6eCYw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Zmb3gOeLEeGYZqnbU6eCYw" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// returns all potential targets in the case where the context is a SendSignalActionActivation&#xD;
		// returns the first potential target in the case where the context is anything else&#xD;
		ReferenceList selectedTargets = new ReferenceList() ;&#xD;
		if (context instanceof SendSignalActionActivation) {&#xD;
			for (int i = 0 ; i &lt; potentialTargets.size() ; i++) {&#xD;
				selectedTargets.addValue(potentialTargets.getValue(i)) ;&#xD;
			}&#xD;
		}&#xD;
		else { &#xD;
			if (potentialTargets.size() >= 1) {&#xD;
				selectedTargets.addValue(potentialTargets.get(0)) ;&#xD;
			}&#xD;
		}&#xD;
		return selectedTargets;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OhIMcOeKEeGYZqnbU6eCYw" name="select" method="_8dVaYOeKEeGYZqnbU6eCYw" class="_A8IWYOeKEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OhIMceeKEeGYZqnbU6eCYw" name="potentialTargets" type="Semantics-Classes-Kernel-Reference">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OhIMcueKEeGYZqnbU6eCYw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OhIMc-eKEeGYZqnbU6eCYw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OhIMdOeKEeGYZqnbU6eCYw" name="context" type="Semantics-Loci-LociL1-SemanticVisitor"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OhIMdeeKEeGYZqnbU6eCYw" name="result" type="Semantics-Classes-Kernel-Reference" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_OhIMdueKEeGYZqnbU6eCYw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OhIMd-eKEeGYZqnbU6eCYw" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_didLwJtyEeKfyJQ76Ld1Rg" name="CS_ConstructStrategy" isAbstract="true">
            <generalization xmi:type="uml:Generalization" xmi:id="_nFGfUJt1EeKfyJQ76Ld1Rg" general="Semantics-Loci-LociL1-SemanticStrategy" specific="_didLwJtyEeKfyJQ76Ld1Rg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_75QyoMFEEeKkJbQgitQ3JQ" name="getName" specification="_n60GsJtyEeKfyJQ76Ld1Rg">
              <language>Java</language>
              <body>		// a CS_ConstructionStrategy is always named &quot;constructStrategy&quot;&#xD;
		return &quot;constructStrategy&quot;;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_n60GsJtyEeKfyJQ76Ld1Rg" name="getName" method="_75QyoMFEEeKkJbQgitQ3JQ" class="_didLwJtyEeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_sTORYJtyEeKfyJQ76Ld1Rg" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_yQWXIJtyEeKfyJQ76Ld1Rg" name="construct" isAbstract="true" class="_didLwJtyEeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_-R6EgJtyEeKfyJQ76Ld1Rg" name="constructor">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_DptPoJtzEeKfyJQ76Ld1Rg" name="context" type="_wUwzPd2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_igycEJt0EeKfyJQ76Ld1Rg" name="result" type="Semantics-Classes-Kernel-Object" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_tzBlUJt0EeKfyJQ76Ld1Rg" name="CS_DefaultConstructStrategy">
            <generalization xmi:type="uml:Generalization" xmi:id="_0EFTsJt0EeKfyJQ76Ld1Rg" general="_didLwJtyEeKfyJQ76Ld1Rg" specific="_tzBlUJt0EeKfyJQ76Ld1Rg"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_aXlM0DJwEeOOxr3mXNMmgg" name="locus" type="Semantics-Loci-LociL1-Locus" association="_aXuWwDJwEeOOxr3mXNMmgg">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aXlM0TJwEeOOxr3mXNMmgg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aXlM0jJwEeOOxr3mXNMmgg" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_988Q0DJyEeOOxr3mXNMmgg" name="defaultAssociation" aggregation="composite" association="_99Go4DJyEeOOxr3mXNMmgg">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_988Q0TJyEeOOxr3mXNMmgg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_988Q0jJyEeOOxr3mXNMmgg" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uQ9pkMFHEeKkJbQgitQ3JQ" name="construct" specification="_4h3GkJt0EeKfyJQ76Ld1Rg">
              <language>Java</language>
              <body>		this.locus = context.locus ;&#xD;
		return this.constructObject(context, (Class_)constructor.type) ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_37ktsMFHEeKkJbQgitQ3JQ" name="canInstantiate" specification="_1Dms8MFFEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		// Instantiate is possible if:&#xD;
		// - p is composite&#xD;
		// - p is typed&#xD;
		// - This type is a Class and it is not abstract&#xD;
		// - Or p is a Port and the type is an Interface&#xD;
		if (p.isComposite) {&#xD;
			if (p.typedElement.type != null) {&#xD;
				if (p.typedElement.type instanceof Class_) {&#xD;
					return ! ((Class_)p.typedElement.type).isAbstract ;&#xD;
				}&#xD;
				else if (p.typedElement.type instanceof Interface) { &#xD;
					return p instanceof Port ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return false ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="__jjLsMFHEeKkJbQgitQ3JQ" name="constructObject" specification="_1M-rYMFFEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		CS_Reference referenceToContext = new CS_Reference() ;&#xD;
		referenceToContext.referent = context ;&#xD;
		referenceToContext.compositeReferent = (CS_Object)context ;&#xD;
		// FIXME detect infinite recursive instantiation&#xD;
		PropertyList allAttributes = type.attribute ;&#xD;
		int i = 1 ;&#xD;
		// Instantiate ports and parts&#xD;
		while (i &lt;= allAttributes.size()) {&#xD;
			Property p = allAttributes.get(i - 1) ;&#xD;
			if (p.default_ != null) {&#xD;
				ValueSpecification defaultValueSpecification = p.default_ ;&#xD;
				Evaluation evaluation = (Evaluation)context.locus.factory.instantiateVisitor(defaultValueSpecification) ;&#xD;
				evaluation.specification = defaultValueSpecification ;&#xD;
				evaluation.locus = context.locus ;&#xD;
				if (evaluation instanceof CS_OpaqueExpressionEvaluation) {&#xD;
					ValueList evaluations = ((CS_OpaqueExpressionEvaluation)evaluation).executeExpressionBehavior() ;&#xD;
					for (int j = 0 ; j &lt; evaluations.size() ; j++) {&#xD;
						this.addStructuralFeatureValue(referenceToContext, p, evaluations.get(j)) ;&#xD;
					}&#xD;
				}&#xD;
				else {&#xD;
					Value defaultValue = evaluation.evaluate() ;&#xD;
					this.addStructuralFeatureValue(referenceToContext, p, defaultValue) ;&#xD;
				}&#xD;
			}&#xD;
			else &#xD;
				if (this.canInstantiate(p)) {&#xD;
					int j = 1 ;&#xD;
					while (j &lt;= p.multiplicityElement.lower) {&#xD;
						Object_ value ;&#xD;
						// if p is a Port typed by an Interface&#xD;
						// creates an Object without type, but with FeatureValues corresponding to &#xD;
						// structural features of the interface.&#xD;
						if (p instanceof Port &amp;&amp; p.typedElement.type instanceof Interface) {&#xD;
							value = this.instantiateInterface((Interface)p.typedElement.type, this.locus) ;&#xD;
							this.addStructuralFeatureValue(referenceToContext, p, value);&#xD;
						}&#xD;
						else {&#xD;
							value = context.locus.instantiate((Class_)p.typedElement.type) ;&#xD;
							// TODO account for existing constructors&#xD;
							value = this.constructObject((CS_Object)value, (Class_)p.typedElement.type) ;&#xD;
							this.addStructuralFeatureValue(referenceToContext, p, (CS_Object)value) ;&#xD;
							if (((Class_)p.typedElement.type).isActive) {&#xD;
								value.startBehavior((Class_)p.typedElement.type, new ParameterValueList()) ;&#xD;
							}&#xD;
						}&#xD;
						j = j + 1 ;&#xD;
					}&#xD;
				}&#xD;
			i = i + 1 ;&#xD;
		}&#xD;
		// Instantiate connectors&#xD;
		NamedElementList allMembers = type.member ;&#xD;
		i = 1 ;&#xD;
		while (i &lt;= allMembers.size()) {&#xD;
			NamedElement member = allMembers.get(i - 1) ;&#xD;
			if (member instanceof Connector) {&#xD;
				Connector connector = (Connector)member ;&#xD;
				if (this.isArrayPattern(connector)) {&#xD;
					this.generateArrayPattern(referenceToContext, connector) ;&#xD;
				}&#xD;
				else if (this.isStarPattern(connector)) {&#xD;
					this.generateStarPattern(referenceToContext, connector) ;&#xD;
				}&#xD;
			}&#xD;
			i = i + 1 ;&#xD;
		}&#xD;
		return referenceToContext.referent ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JD6HoMFIEeKkJbQgitQ3JQ" name="generateArrayPattern" specification="_1ZLUUMFFEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		ConnectorEnd end1 = connector.end.getValue(0) ;&#xD;
		ConnectorEnd end2 = connector.end.getValue(1) ;&#xD;
		ReferenceList end1Values = this.getValuesFromConnectorEnd(context, end1) ;&#xD;
		ReferenceList end2Values = this.getValuesFromConnectorEnd(context, end2) ;&#xD;
		for (int i = 0 ; i &lt; end1Values.size() ; i++) {&#xD;
			CS_Link link = new CS_Link() ;&#xD;
			if (connector.type == null) {&#xD;
				link.type = this.getDefaultAssociation() ;&#xD;
			}&#xD;
			else {&#xD;
				link.type = connector.type ;&#xD;
			}&#xD;
			ValueList valuesForEnd1 = new ValueList() ;&#xD;
			valuesForEnd1.add(end1Values.get(i)) ;&#xD;
			ValueList valuesForEnd2 = new ValueList() ;&#xD;
			valuesForEnd2.add(end2Values.get(i)) ;&#xD;
			link.setFeatureValue(link.type.ownedEnd.getValue(0), valuesForEnd1, -1) ;&#xD;
			link.setFeatureValue(link.type.ownedEnd.getValue(1), valuesForEnd2, -1) ;&#xD;
			link.addTo(context.referent.locus) ;&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_QRQfIMFIEeKkJbQgitQ3JQ" name="generateStarPattern" specification="_1jvlkMFFEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		ConnectorEnd end1 = connector.end.getValue(0) ;&#xD;
		ConnectorEnd end2 = connector.end.getValue(1) ;&#xD;
		ReferenceList end1Values = this.getValuesFromConnectorEnd(context, end1) ;&#xD;
		ReferenceList end2Values = this.getValuesFromConnectorEnd(context, end2) ;&#xD;
		for (int i = 0 ; i &lt; end1Values.size() ; i++) {&#xD;
			for (int j = 0 ; j &lt; end2Values.size(); j++) {&#xD;
				CS_Link link = new CS_Link() ;&#xD;
				if (connector.type == null) {&#xD;
					link.type = this.getDefaultAssociation() ;&#xD;
				}&#xD;
				else {&#xD;
					link.type = connector.type ;&#xD;
				}&#xD;
				ValueList valuesForEnd1 = new ValueList() ;&#xD;
				valuesForEnd1.add(end1Values.get(i)) ;&#xD;
				ValueList valuesForEnd2 = new ValueList() ;&#xD;
				valuesForEnd2.add(end2Values.get(j)) ;&#xD;
				link.setFeatureValue(link.type.ownedEnd.get(0), valuesForEnd1, -1) ;&#xD;
				link.setFeatureValue(link.type.ownedEnd.get(1), valuesForEnd2, -1) ;&#xD;
				link.addTo(context.referent.locus) ;&#xD;
			}&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Zm4KsMFIEeKkJbQgitQ3JQ" name="getCardinality" specification="_1wircMFFEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		int lowerOfRole = end.role.actualConnectableElement.multiplicityElement.lower ;&#xD;
		if (lowerOfRole == 0) {&#xD;
			return 0 ;&#xD;
		}&#xD;
		else if (end.partWithPort == null) {&#xD;
			return lowerOfRole ;&#xD;
		}&#xD;
		else {&#xD;
			int lowerOfPart = end.partWithPort.multiplicityElement.lower ;&#xD;
			return lowerOfRole * lowerOfPart ;&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_jTjrYMFIEeKkJbQgitQ3JQ" name="getValuesFromConnectorEnd" specification="_18SocMFFEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		ReferenceList endValues = new ReferenceList() ;&#xD;
		if (end.partWithPort != null) {&#xD;
			FeatureValue valueForPart = context.getFeatureValue(end.partWithPort) ;&#xD;
			if (valueForPart != null) {&#xD;
				for (int i = 0 ; i &lt; valueForPart.values.size() ; i++) {&#xD;
					Reference reference = (Reference)valueForPart.values.get(i) ;&#xD;
					FeatureValue valueForPort = reference.getFeatureValue((Port)end.role.actualConnectableElement) ;&#xD;
					if (valueForPort != null) {&#xD;
						for (int j = 0 ; j &lt; valueForPort.values.size() ; j++) {&#xD;
							endValues.add((Reference)valueForPort.values.get(j)) ;&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		else {&#xD;
			FeatureValue valueForRole = context.getFeatureValue((Property)end.role.actualConnectableElement) ;&#xD;
			if (valueForRole != null) {&#xD;
				for (int i = 0 ; i &lt; valueForRole.values.size() ; i++) {&#xD;
					endValues.add((Reference)valueForRole.values.get(i)) ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return endValues ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sITegMFIEeKkJbQgitQ3JQ" name="isArrayPattern" specification="_2IClcMFFEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		// This is an array pattern if:&#xD;
		// - c is binary&#xD;
		// - lower bound of the two connector ends is 1&#xD;
		// - Cardinality of ends are equals&#xD;
		if (c.end.size() == 2) {&#xD;
			if (c.end.get(0).role.actualConnectableElement.multiplicityElement.lower == 1) {&#xD;
				if (c.end.get(1).role.actualConnectableElement.multiplicityElement.lower == 1) {&#xD;
					if (this.canInstantiate(c.end.get(0).role.actualConnectableElement)&#xD;
							&amp;&amp; this.canInstantiate(c.end.get(1).role.actualConnectableElement)) {&#xD;
						int cardinality1 = this.getCardinality(c.end.get(0)) ;&#xD;
						int cardinality2 = this.getCardinality(c.end.get(1)) ;&#xD;
						return cardinality1 == cardinality2 ;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return false ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zPjOAMFIEeKkJbQgitQ3JQ" name="isStarPattern" specification="_2U1rUMFFEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		// This is an array pattern if:&#xD;
		// - c is binary&#xD;
		// - lower bound of end1 equals cardinality of end1&#xD;
		// - lower bound of end2 equals cardinality of end2&#xD;
		if (c.end.size() == 2) {&#xD;
			if (this.canInstantiate(c.end.get(0).role.actualConnectableElement)&#xD;
					&amp;&amp; this.canInstantiate(c.end.get(1).role.actualConnectableElement)) {&#xD;
				int cardinalityOfEnd1 = this.getCardinality(c.end.get(0)) ;&#xD;
				int lowerBoundofEnd1 = c.end.get(0).role.actualConnectableElement.multiplicityElement.lower ;&#xD;
				if (cardinalityOfEnd1 == lowerBoundofEnd1) {&#xD;
					int cardinalityOfEnd2 = this.getCardinality(c.end.get(1)) ;&#xD;
					int lowerBoundofEnd2 = c.end.get(1).role.actualConnectableElement.multiplicityElement.lower ;&#xD;
					return cardinalityOfEnd2 == lowerBoundofEnd2 ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return false ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9Gp2AMFIEeKkJbQgitQ3JQ" name="addStructuralFeatureValue" specification="_04Tb4MFFEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		FeatureValue featureValue = context.getFeatureValue(feature) ;&#xD;
		if (featureValue != null) {&#xD;
			ValueList values = featureValue.values ;&#xD;
			if (feature instanceof Port) {&#xD;
				// insert an interaction point&#xD;
				CS_InteractionPoint interactionPoint = new CS_InteractionPoint() ;&#xD;
				interactionPoint.definingPort = (Port)feature ;&#xD;
				interactionPoint.referent = (CS_Object)value ;&#xD;
				interactionPoint.owner = context ;&#xD;
				values.add(interactionPoint) ;&#xD;
			}&#xD;
			else if (value instanceof CS_Object) {&#xD;
				// insert a reference&#xD;
				CS_Reference reference = new CS_Reference() ;&#xD;
				reference.compositeReferent = (CS_Object)value ;&#xD;
				reference.referent = (CS_Object)value ;&#xD;
				values.add(reference) ;&#xD;
			}&#xD;
			else {&#xD;
				values.add(value) ;&#xD;
			}&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hjaLQDJ5EeOOxr3mXNMmgg" name="getDefaultAssociation" specification="_Xw5XEDJzEeOOxr3mXNMmgg">
              <language>JAVA</language>
              <body>		// Computes an returns an Association with two untyped owned ends, &#xD;
		// with multiplicity [*].&#xD;
		// This association can be used to type links instantiated from untyped connectors&#xD;
		if (defaultAssociation == null) {&#xD;
			defaultAssociation = new Association() ;&#xD;
			defaultAssociation.name = &quot;DefaultGeneratedAssociation&quot;;&#xD;
			Property end1 = new Property() ;&#xD;
			end1.setName(&quot;x&quot;); ;&#xD;
			end1.setLower(0);&#xD;
			end1.setUpper(-1);&#xD;
			end1.setIsOrdered(true);&#xD;
			end1.setIsUnique(true);&#xD;
			defaultAssociation.addOwnedEnd(end1);&#xD;
			Property end2 = new Property() ;&#xD;
			end2.setName(&quot;y&quot;);&#xD;
			end2.setLower(0);&#xD;
			end2.setUpper(-1);&#xD;
			end2.setIsOrdered(true);&#xD;
			end2.setIsUnique(true);&#xD;
			defaultAssociation.addOwnedEnd(end2);&#xD;
		}&#xD;
		return defaultAssociation ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wEQlkDJ5EeOOxr3mXNMmgg" name="instantiateInterface" specification="_KRQQMDJ1EeOOxr3mXNMmgg">
              <language>JAVA</language>
              <body>		Class_ realizingClass = this.getRealizingClass(interface_) ;&#xD;
		Object_ object = locus.instantiate(realizingClass) ;&#xD;
		return object ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2yafoDJ5EeOOxr3mXNMmgg" name="getRealizingClass" specification="_tHXeADJ2EeOOxr3mXNMmgg">
              <language>JAVA</language>
              <body>		Class_ realizingClass = null ;&#xD;
		// TODO For cached RealizingClasses, search based on InterfaceRealizations rather than name&#xD;
		String realizingClassName = interface_.qualifiedName + &quot;GeneratedRealizingClass&quot; ;&#xD;
		int i = 1 ;&#xD;
		while (i &lt;= generatedRealizingClasses.size() &amp;&amp; realizingClass == null) {&#xD;
			Class_ cddRealizingClass = generatedRealizingClasses.getValue(i - 1) ;&#xD;
			if (cddRealizingClass.name.equals(realizingClassName)) {&#xD;
				realizingClass = cddRealizingClass ;&#xD;
			}&#xD;
			i = i + 1 ;&#xD;
		}&#xD;
		if (realizingClass == null) {&#xD;
			realizingClass = this.generateRealizingClass(interface_, realizingClassName) ;&#xD;
			generatedRealizingClasses.addValue(realizingClass) ;&#xD;
		}&#xD;
		return realizingClass ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BfOAkDJ6EeOOxr3mXNMmgg" name="generateRealizingClass" specification="_GSr28DJ3EeOOxr3mXNMmgg">
              <language>JAVA</language>
              <body>		Class_ realizingClass = new Class_() ;&#xD;
		realizingClass.setName(className) ;&#xD;
		InterfaceRealization realization = new InterfaceRealization() ;&#xD;
		realization.contract = interface_ ;&#xD;
		realization.implementingClassifier = realizingClass ;&#xD;
		realizingClass.interfaceRealization.addValue(realization); &#xD;
		// TODO Deal with structural features of the interface&#xD;
		// TODO Make a test case for reading/writing structural features of an interface&#xD;
		return realizingClass ;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_4h3GkJt0EeKfyJQ76Ld1Rg" name="construct" method="_uQ9pkMFHEeKkJbQgitQ3JQ" class="_tzBlUJt0EeKfyJQ76Ld1Rg" redefinedOperation="_yQWXIJtyEeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_4h3GkZt0EeKfyJQ76Ld1Rg" name="constructor">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_4h3Gkpt0EeKfyJQ76Ld1Rg" name="context" type="_wUwzPd2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_4h3Gk5t0EeKfyJQ76Ld1Rg" name="result" type="Semantics-Classes-Kernel-Object" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_04Tb4MFFEeKkJbQgitQ3JQ" name="addStructuralFeatureValue" method="_9Gp2AMFIEeKkJbQgitQ3JQ" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Fp_3cMFGEeKkJbQgitQ3JQ" name="context" type="_wUwMMt2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_I7BjUMFGEeKkJbQgitQ3JQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Property"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_LZLAwMFGEeKkJbQgitQ3JQ" name="value" type="Semantics-Classes-Kernel-Value"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_1Dms8MFFEeKkJbQgitQ3JQ" name="canInstantiate" method="_37ktsMFHEeKkJbQgitQ3JQ" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Xx1mkMFGEeKkJbQgitQ3JQ" name="p">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Property"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_adFE0MFGEeKkJbQgitQ3JQ" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_1M-rYMFFEeKkJbQgitQ3JQ" name="constructObject" method="__jjLsMFHEeKkJbQgitQ3JQ" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_jYrG0MFGEeKkJbQgitQ3JQ" name="context" type="_wUwzPd2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_mB06YMFGEeKkJbQgitQ3JQ" name="type"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_qplvsMFGEeKkJbQgitQ3JQ" name="result" type="Semantics-Classes-Kernel-Object" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_1ZLUUMFFEeKkJbQgitQ3JQ" name="generateArrayPattern" method="_JD6HoMFIEeKkJbQgitQ3JQ" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wnMWkMFGEeKkJbQgitQ3JQ" name="context" type="_wUwMMt2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_zSuvwMFGEeKkJbQgitQ3JQ" name="connector"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_1jvlkMFFEeKkJbQgitQ3JQ" name="generateStarPattern" method="_QRQfIMFIEeKkJbQgitQ3JQ" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_4GidAcFGEeKkJbQgitQ3JQ" name="context" type="_wUwMMt2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_4GidAMFGEeKkJbQgitQ3JQ" name="connector"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_1wircMFFEeKkJbQgitQ3JQ" name="getCardinality" method="_Zm4KsMFIEeKkJbQgitQ3JQ" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_AzGkgMFHEeKkJbQgitQ3JQ" name="end"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_DVHOQMFHEeKkJbQgitQ3JQ" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_18SocMFFEeKkJbQgitQ3JQ" name="getValuesFromConnectorEnd" method="_jTjrYMFIEeKkJbQgitQ3JQ" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_LIQacMFHEeKkJbQgitQ3JQ" name="context" type="_wUwMMt2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_NLBjcMFHEeKkJbQgitQ3JQ" name="end"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_QXSrIMFHEeKkJbQgitQ3JQ" name="result" type="Semantics-Classes-Kernel-Reference" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RRUDYMFHEeKkJbQgitQ3JQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RRUDYcFHEeKkJbQgitQ3JQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_2IClcMFFEeKkJbQgitQ3JQ" name="isArrayPattern" method="_sITegMFIEeKkJbQgitQ3JQ" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_dFh4UMFHEeKkJbQgitQ3JQ" name="c"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fPl8IMFHEeKkJbQgitQ3JQ" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_2U1rUMFFEeKkJbQgitQ3JQ" name="isStarPattern" method="_zPjOAMFIEeKkJbQgitQ3JQ" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_iSVUYMFHEeKkJbQgitQ3JQ" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_iSVUYcFHEeKkJbQgitQ3JQ" name="c"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Xw5XEDJzEeOOxr3mXNMmgg" name="getDefaultAssociation" method="_hjaLQDJ5EeOOxr3mXNMmgg" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_gJxGgDJzEeOOxr3mXNMmgg" name="result" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_KRQQMDJ1EeOOxr3mXNMmgg" name="instantiateInterface" method="_wEQlkDJ5EeOOxr3mXNMmgg" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fhWwwDJ1EeOOxr3mXNMmgg" name="interface"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_l9KWkDJ1EeOOxr3mXNMmgg" name="locus" type="Semantics-Loci-LociL1-Locus"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_tWulIDJ1EeOOxr3mXNMmgg" name="result" type="Semantics-Classes-Kernel-Object" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_tHXeADJ2EeOOxr3mXNMmgg" name="getRealizingClass" method="_2yafoDJ5EeOOxr3mXNMmgg" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_3AkXwDJ2EeOOxr3mXNMmgg" name="interface_"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_8rmA4DJ2EeOOxr3mXNMmgg" name="result" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_GSr28DJ3EeOOxr3mXNMmgg" name="generateRealizingClass" method="_BfOAkDJ6EeOOxr3mXNMmgg" class="_tzBlUJt0EeKfyJQ76Ld1Rg">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GSr28TJ3EeOOxr3mXNMmgg" name="interface_"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_GSr28jJ3EeOOxr3mXNMmgg" name="result" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Py8sQDJ3EeOOxr3mXNMmgg" name="className">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_aXuWwDJwEeOOxr3mXNMmgg" name="cS_DefaultConstructStrategy_locus_1" memberEnd="_aXuWwTJwEeOOxr3mXNMmgg _aXlM0DJwEeOOxr3mXNMmgg">
            <ownedEnd xmi:type="uml:Property" xmi:id="_aXuWwTJwEeOOxr3mXNMmgg" name="cS_DefaultConstructStrategy" type="_tzBlUJt0EeKfyJQ76Ld1Rg" owningAssociation="_aXuWwDJwEeOOxr3mXNMmgg" association="_aXuWwDJwEeOOxr3mXNMmgg">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aXuWwjJwEeOOxr3mXNMmgg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aXuWwzJwEeOOxr3mXNMmgg" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_99Go4DJyEeOOxr3mXNMmgg" name="cS_DefaultConstructStrategy_association_1" memberEnd="_99Go4TJyEeOOxr3mXNMmgg _988Q0DJyEeOOxr3mXNMmgg">
            <ownedEnd xmi:type="uml:Property" xmi:id="_99Go4TJyEeOOxr3mXNMmgg" name="cS_DefaultConstructStrategy" type="_tzBlUJt0EeKfyJQ76Ld1Rg" owningAssociation="_99Go4DJyEeOOxr3mXNMmgg" association="_99Go4DJyEeOOxr3mXNMmgg">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_99Go4jJyEeOOxr3mXNMmgg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_99Go4zJyEeOOxr3mXNMmgg" value="1"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_r1xDAOVMEeGVLZOJyKihvQ" name="CommonBehaviors">
          <packagedElement xmi:type="uml:Class" xmi:id="_wUwL2N2JEeGnO-TF_1T_iQ" name="CS_DispatchOperationOfInterfaceStrategy">
            <ownedComment xmi:type="uml:Comment" xmi:id="_wUwL2d2JEeGnO-TF_1T_iQ">
              <body>Extends fUML RedefinitionBasedDispatchStrategy to account for the fact that the invoked operation may belong to an interface, and not to one of the classifiers of the target object (NOTE: Not mandatory to have it defined as an extension of RedefinitionBasedDispatchStrategy. Could be defined as direct specialization of DispatchStrategy)</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_WaH5UOH1EeG4NZyomhkW-A">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.Classes.Interfaces.Operation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CommonBehaviors.Communications.Interface;&#xD;
import fUML.Semantics.Classes.Kernel.RedefinitionBasedDispatchStrategy;&#xD;
import fUML.Syntax.Classes.Kernel.Parameter;&#xD;
import fUML.Syntax.Classes.Kernel.ParameterList;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_wUwL3d2JEeGnO-TF_1T_iQ" general="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy" specific="_wUwL2N2JEeGnO-TF_1T_iQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwL6N2JEeGnO-TF_1T_iQ" name="operationsMatch" specification="_wUwL_d2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwL6d2JEeGnO-TF_1T_iQ" name="ownedOperation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwL6t2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwL692JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwL7N2JEeGnO-TF_1T_iQ" name="baseOperation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwL7d2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwL7t2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwL792JEeGnO-TF_1T_iQ" name="result">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwL8N2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwL8d2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Override operationsMatch, in the case where baseOperation belongs &#xD;
		// to an Interface.&#xD;
		// In this case, ownedOperation matches baseOperation if it has the same name and signature&#xD;
		// Otherwise, behaves like fUML RedefinitionBasedDispatchStrategy&#xD;
		boolean matches = true ;&#xD;
		if (baseOperation.namespace instanceof Interface) {&#xD;
			matches = (baseOperation.name == ownedOperation.name) ;&#xD;
			matches = matches &amp;&amp; (baseOperation.ownedParameter.size() == ownedOperation.ownedParameter.size()) ;&#xD;
			ParameterList ownedOperationParameters = ownedOperation.ownedParameter ;&#xD;
			ParameterList baseOperationParameters = baseOperation.ownedParameter ;&#xD;
			for (int i = 0 ; matches == true &amp;&amp; i &lt; ownedOperationParameters.size() ; i++) {&#xD;
				Parameter ownedParameter = ownedOperationParameters.getValue(i) ;&#xD;
				Parameter baseParameter = baseOperationParameters.getValue(i) ;&#xD;
				matches = (ownedParameter.type == baseParameter.type) ;&#xD;
				matches = matches &amp;&amp; (ownedParameter.multiplicityElement.lower == ownedParameter.multiplicityElement.lower) ;&#xD;
				matches = matches &amp;&amp; (ownedParameter.multiplicityElement.upper == ownedParameter.multiplicityElement.upper) ;&#xD;
				matches = matches &amp;&amp; (ownedParameter.direction == ownedParameter.direction) ;&#xD;
			}&#xD;
		}&#xD;
		else {&#xD;
			matches = super.operationsMatch(ownedOperation, baseOperation) ;&#xD;
		}&#xD;
&#xD;
		return matches ;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwL_d2JEeGnO-TF_1T_iQ" name="operationsMatch" visibility="public" method="_wUwL6N2JEeGnO-TF_1T_iQ" class="_wUwL2N2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwL_t2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public operationsMatch (in ownedOperation : Operation , &#xD;
											in baseOperation : Operation ) &#xD;
											: Boolean {&#xD;
	// Override operationsMatch, in the case where baseOperation belongs &#xD;
	// to an Interface&#xD;
	return false ;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwL_92JEeGnO-TF_1T_iQ" name="ownedOperation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwMAN2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwMAd2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwMAt2JEeGnO-TF_1T_iQ" name="baseOperation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwMA92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwMBN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwMBd2JEeGnO-TF_1T_iQ" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwMBt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwMB92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_HC0DIOVNEeGVLZOJyKihvQ" name="CS_StructuralFeatureOfInterfaceAccessStrategy" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="_VWDtAOVSEeGVLZOJyKihvQ">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Object;&#xD;
import fUML.Semantics.Classes.Kernel.FeatureValue;&#xD;
import fUML.Semantics.Classes.Kernel.ValueList;&#xD;
import fUML.Semantics.Loci.LociL1.SemanticStrategy;&#xD;
import fUML.Syntax.Classes.Kernel.StructuralFeature;</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_fvGBYOeXEeGYZqnbU6eCYw">
              <body>This abstract strategy class enables to deal with realization of structural features by a behaviored classifier, in the case where these structural features belong to an interface realized by this classifier. Concrete realization of this abstract class shall specify behaviors for abstract operations read and write.</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_DFVrgOVOEeGVLZOJyKihvQ" general="Semantics-Loci-LociL1-SemanticStrategy" specific="_HC0DIOVNEeGVLZOJyKihvQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_V7pqMOVOEeGVLZOJyKihvQ" name="getName" specification="_du9q8OVNEeGVLZOJyKihvQ">
              <language>Java</language>
              <body>		// StructuralFeatureAccessStrategy are always named &quot;structuralFeature&quot;&#xD;
		return &quot;structuralFeature&quot;;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_du9q8OVNEeGVLZOJyKihvQ" name="getName" method="_V7pqMOVOEeGVLZOJyKihvQ" class="_HC0DIOVNEeGVLZOJyKihvQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_63F3sOVNEeGVLZOJyKihvQ" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_e8Yq4OVOEeGVLZOJyKihvQ" name="read" isAbstract="true" class="_HC0DIOVNEeGVLZOJyKihvQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_5uKn8OeWEeGYZqnbU6eCYw">
                <body>// This abstract operation is intented to return the feature value for the given structural feature, &#xD;
// in the context of the given object, in the case where the feature belongs to an Interface</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_l5XEEOVOEeGVLZOJyKihvQ" name="cs_Object" type="_wUwzPd2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_u-DXsOVOEeGVLZOJyKihvQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_0j60AOVOEeGVLZOJyKihvQ" name="result" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_r0tN4OVeEeGVLZOJyKihvQ" name="write" isAbstract="true" class="_HC0DIOVNEeGVLZOJyKihvQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_TASMcOeXEeGYZqnbU6eCYw">
                <body>// This abstract operation is intented to capture the way the given structural feature is set,&#xD;
// in the context of the given object, in the case where the feature belongs to an Interface</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_z5-E0OVeEeGVLZOJyKihvQ" name="cs_Object" type="_wUwzPd2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_5No94OVeEeGVLZOJyKihvQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_-3-qgOVeEeGVLZOJyKihvQ" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SozwsOVfEeGVLZOJyKihvQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_So4CIOVfEeGVLZOJyKihvQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_CRxQ0OVfEeGVLZOJyKihvQ" name="position">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_-BGgIOVOEeGVLZOJyKihvQ" name="CS_NameBased_StructuralFeatureOfInterfaceAccessStrategy">
            <ownedComment xmi:type="uml:Comment" xmi:id="_O7JfEOVSEeGVLZOJyKihvQ">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Object;&#xD;
import fUML.Semantics.Classes.Kernel.FeatureValue;&#xD;
import fUML.Semantics.Classes.Kernel.FeatureValueList;&#xD;
import fUML.Semantics.Classes.Kernel.ValueList;&#xD;
import fUML.Syntax.Classes.Kernel.StructuralFeature;</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_70Mq4OeXEeGYZqnbU6eCYw">
              <body>This class provides a realization of semantic strategy CS_StructuralFeatureOfInterfaceAccessStrategy. This realization makes the hypothesis that, for a given behaviored classifier to actually realize an interface, it shall have structural features which exactly match structural features of the realized interface. Realizing features shall have same name, type and multiplicity as structural features of the interface.</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_PKNWIOVPEeGVLZOJyKihvQ" general="_HC0DIOVNEeGVLZOJyKihvQ" specific="_-BGgIOVOEeGVLZOJyKihvQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oFfvAOVPEeGVLZOJyKihvQ" name="read" specification="_Qc5tEOVPEeGVLZOJyKihvQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_0KCe8OVPEeGVLZOJyKihvQ" name="cs_Object" type="_wUwzPd2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_1XkpEOVPEeGVLZOJyKihvQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_2vWUUOVPEeGVLZOJyKihvQ" name="result" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
              <language>Java</language>
              <body>		// returns the a copy of the first feature value of cs_Object where the name of the corresponding feature&#xD;
		// matches the name of the feature given as a parameter&#xD;
		// Otherwise, returns an empty feature value&#xD;
		FeatureValueList featureValues = cs_Object.featureValues ;&#xD;
		FeatureValue matchingFeatureValue = null ;&#xD;
		for (int i = 0 ; i &lt; featureValues.size() &amp;&amp; matchingFeatureValue == null ; i++) {&#xD;
			FeatureValue featureValue = featureValues.getValue(i) ; &#xD;
			if (featureValue.feature.name.equals(feature.name)) {&#xD;
				matchingFeatureValue = featureValue ;&#xD;
			}&#xD;
		}&#xD;
		if (matchingFeatureValue != null) {&#xD;
			matchingFeatureValue = matchingFeatureValue.copy() ;&#xD;
			matchingFeatureValue.feature = feature ;&#xD;
		}&#xD;
		else {&#xD;
			matchingFeatureValue = new FeatureValue() ;&#xD;
			matchingFeatureValue.feature = feature ;&#xD;
			matchingFeatureValue.values = new ValueList() ;&#xD;
			matchingFeatureValue.position = 0 ;&#xD;
		}&#xD;
		&#xD;
		return matchingFeatureValue ;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nOZUoOVfEeGVLZOJyKihvQ" name="write" specification="_OssgcOVfEeGVLZOJyKihvQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_qgQG8OVfEeGVLZOJyKihvQ" name="cs_Object" type="_wUwzPd2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_sCcScOVfEeGVLZOJyKihvQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_tRccMOVfEeGVLZOJyKihvQ" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_8pJmAOVfEeGVLZOJyKihvQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8pSv8OVfEeGVLZOJyKihvQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_vIYvsOVfEeGVLZOJyKihvQ" name="position">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
              <language>Java</language>
              <body>	// Retrieves the first feature value of cs_Object where the name of the corresponding feature&#xD;
	// matches the name of the feature given as a parameter&#xD;
	// Then updates the values for this feature value&#xD;
	FeatureValueList featureValues = cs_Object.featureValues ;&#xD;
	FeatureValue matchingFeatureValue = null ;&#xD;
	for (int i = 0 ; i &lt; featureValues.size() &amp;&amp; matchingFeatureValue == null ; i++) {&#xD;
		FeatureValue featureValue = featureValues.getValue(i) ; &#xD;
		if (featureValue.feature.name.equals(feature.name)) {&#xD;
			matchingFeatureValue = featureValue ;&#xD;
		}&#xD;
	}&#xD;
	if (matchingFeatureValue != null) {&#xD;
		cs_Object.setFeatureValue(matchingFeatureValue.feature, values, position) ;&#xD;
	}&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Qc5tEOVPEeGVLZOJyKihvQ" name="read" method="_oFfvAOVPEeGVLZOJyKihvQ" class="_-BGgIOVOEeGVLZOJyKihvQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VDQ0MOVPEeGVLZOJyKihvQ" name="cs_Object" type="_wUwzPd2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Yhf1oOVPEeGVLZOJyKihvQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_dC7ZcOVPEeGVLZOJyKihvQ" name="result" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_OssgcOVfEeGVLZOJyKihvQ" name="write" method="_nOZUoOVfEeGVLZOJyKihvQ" class="_-BGgIOVOEeGVLZOJyKihvQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OssgceVfEeGVLZOJyKihvQ" name="cs_Object" type="_wUwzPd2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OssgcuVfEeGVLZOJyKihvQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ossgc-VfEeGVLZOJyKihvQ" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_U82P4OVfEeGVLZOJyKihvQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U856QOVfEeGVLZOJyKihvQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OssgdOVfEeGVLZOJyKihvQ" name="position">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ddeK4OYUEeGYZqnbU6eCYw" name="Values">
          <packagedElement xmi:type="uml:Class" xmi:id="_YflXwOYYEeGYZqnbU6eCYw" name="CS_InstanceValueEvaluation">
            <ownedComment xmi:type="uml:Comment" xmi:id="_FlTI8OYhEeGYZqnbU6eCYw">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Object;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Reference;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.InternalStructures.Classifier;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.InternalStructures.ClassifierList;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.StructuredClasses.Class_;&#xD;
import fUML.Debug;&#xD;
import fUML.Semantics.Classes.Kernel.DataValue;&#xD;
import fUML.Semantics.Classes.Kernel.EnumerationValue;&#xD;
import fUML.Semantics.Classes.Kernel.InstanceValueEvaluation;&#xD;
import fUML.Semantics.Classes.Kernel.Object_;&#xD;
import fUML.Semantics.Classes.Kernel.Reference;&#xD;
import fUML.Semantics.Classes.Kernel.StructuredValue;&#xD;
import fUML.Semantics.Classes.Kernel.Value;&#xD;
import fUML.Semantics.Classes.Kernel.ValueList;&#xD;
import fUML.Syntax.Classes.Kernel.DataType;&#xD;
import fUML.Syntax.Classes.Kernel.Enumeration;&#xD;
import fUML.Syntax.Classes.Kernel.EnumerationLiteral;&#xD;
import fUML.Syntax.Classes.Kernel.InstanceSpecification;&#xD;
import fUML.Syntax.Classes.Kernel.InstanceValue;&#xD;
import fUML.Syntax.Classes.Kernel.Slot;&#xD;
import fUML.Syntax.Classes.Kernel.SlotList;&#xD;
import fUML.Syntax.Classes.Kernel.ValueSpecification;&#xD;
import fUML.Syntax.Classes.Kernel.ValueSpecificationList;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.Behavior;&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_4of8MOedEeGYZqnbU6eCYw">
              <body>Extends fUML semantics in the sense that when the instance specification is for an object which is not typed by a Behavior, a CS_Reference (to a CS_Object) is produced instead of a Reference (to an Object)</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_lQfecOYYEeGYZqnbU6eCYw" general="Semantics-Classes-Kernel-InstanceValueEvaluation" specific="_YflXwOYYEeGYZqnbU6eCYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n74GoOYYEeGYZqnbU6eCYw" name="evaluate" specification="_d-9xkOYYEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_93qu4OYgEeGYZqnbU6eCYw" name="result" type="Semantics-Classes-Kernel-Value" direction="return"/>
              <language>Java</language>
              <body>		// If the instance specification is for an enumeration, then return the&#xD;
		// identified enumeration literal.&#xD;
		// If the instance specification is for a data type (but not a primitive&#xD;
		// value or an enumeration), then create a data value of the given data&#xD;
		// type.&#xD;
		// If the instance specification is for an object, then create an object&#xD;
		// at the current locus with the specified types.&#xD;
		// Set each feature of the created value to the result of evaluating the&#xD;
		// value specifications for the specified slot for the feature.&#xD;
		// Extends fUML semantics in the sense that when the instance specification&#xD;
		// is for an object which is not typed by a Behaviore, A CS_Reference (to a &#xD;
		// CS_Object) is produced instead of a Reference (to an Object)&#xD;
&#xD;
		// Debug.println(&quot;[evaluate] InstanceValueEvaluation...&quot;);&#xD;
&#xD;
		InstanceSpecification instance = ((InstanceValue) this.specification).instance;&#xD;
		ClassifierList types = instance.classifier;&#xD;
		Classifier myType = types.getValue(0);&#xD;
&#xD;
		Debug.println(&quot;[evaluate] type = &quot; + myType.name);&#xD;
&#xD;
		Value value;&#xD;
		if (instance instanceof EnumerationLiteral) {&#xD;
			// Debug.println(&quot;[evaluate] Type is an enumeration.&quot;);&#xD;
			EnumerationValue enumerationValue = new EnumerationValue();&#xD;
			enumerationValue.type = (Enumeration) myType;&#xD;
			enumerationValue.literal = (EnumerationLiteral) instance;&#xD;
			value = enumerationValue;&#xD;
		} &#xD;
		else {&#xD;
			StructuredValue structuredValue = null;&#xD;
&#xD;
			if (myType instanceof DataType) {&#xD;
				// Debug.println(&quot;[evaluate] Type is a data type.&quot;);&#xD;
				DataValue dataValue = new DataValue();&#xD;
				dataValue.type = (DataType) myType;&#xD;
				structuredValue = dataValue;&#xD;
			} &#xD;
			else {&#xD;
				Object_ object = null;&#xD;
				if (myType instanceof Behavior) {&#xD;
					// Debug.println(&quot;[evaluate] Type is a behavior.&quot;);&#xD;
					object = this.locus.factory.createExecution(&#xD;
							(Behavior) myType, null);&#xD;
				} &#xD;
				else {&#xD;
					// Debug.println(&quot;[evaluate] Type is a class.&quot;);&#xD;
					object = new CS_Object();&#xD;
					for (int i = 0; i &lt; types.size(); i++) {&#xD;
						Classifier type = types.getValue(i);&#xD;
						object.types.addValue((Class_) type);&#xD;
					}&#xD;
				}&#xD;
&#xD;
				this.locus.add(object);&#xD;
&#xD;
				Reference reference ;&#xD;
				if (object instanceof CS_Object) {&#xD;
					reference = new CS_Reference();&#xD;
					((CS_Reference)reference).compositeReferent = (CS_Object)object ;&#xD;
				}&#xD;
				else {&#xD;
					reference = new Reference() ;&#xD;
				}&#xD;
				reference.referent = object;&#xD;
				structuredValue = reference;&#xD;
			}&#xD;
&#xD;
			structuredValue.createFeatureValues();&#xD;
&#xD;
			// Debug.println(&quot;[evaluate] &quot; + instance.slot.size() +&#xD;
			// &quot; slot(s).&quot;);&#xD;
&#xD;
			SlotList instanceSlots = instance.slot;&#xD;
			for (int i = 0; i &lt; instanceSlots.size(); i++) {&#xD;
				Slot slot = instanceSlots.getValue(i);&#xD;
				ValueList values = new ValueList();&#xD;
&#xD;
				// Debug.println(&quot;[evaluate] feature = &quot; +&#xD;
				// slot.definingFeature.name + &quot;, &quot; + slot.value.size() +&#xD;
				// &quot; value(s).&quot;);&#xD;
				ValueSpecificationList slotValues = slot.value;&#xD;
				for (int j = 0; j &lt; slotValues.size(); j++) {&#xD;
					ValueSpecification slotValue = slotValues.getValue(j);&#xD;
					// Debug.println(&quot;[evaluate] Value = &quot; +&#xD;
					// slotValue.getClass().getName());&#xD;
					values.addValue(this.locus.executor.evaluate(slotValue));&#xD;
				}&#xD;
				structuredValue.setFeatureValue(slot.definingFeature, values, 0);&#xD;
			}&#xD;
&#xD;
			value = structuredValue;&#xD;
		}&#xD;
&#xD;
		return value;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_d-9xkOYYEeGYZqnbU6eCYw" name="evaluate" method="_n74GoOYYEeGYZqnbU6eCYw" class="_YflXwOYYEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_7zDy0OYgEeGYZqnbU6eCYw" name="result" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_90nNMMEREeKkJbQgitQ3JQ" name="CS_OpaqueExpressionEvaluation">
            <generalization xmi:type="uml:Generalization" xmi:id="_0JzX8MEVEeKkJbQgitQ3JQ" general="Semantics-Classes-Kernel-Evaluation" specific="_90nNMMEREeKkJbQgitQ3JQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LiOzwsESEeKkJbQgitQ3JQ" name="evaluate" specification="_LiOzwMESEeKkJbQgitQ3JQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_LiOzw8ESEeKkJbQgitQ3JQ" name="result" type="Semantics-Classes-Kernel-Value" direction="return"/>
              <language>Java</language>
              <body>		// Execute the behavior associated with the context OpaqueExpression, if any.&#xD;
		// If multiple return values are computed, then return the first one.&#xD;
		// If no value are computed, return null&#xD;
		ValueList evaluation = this.executeExpressionBehavior() ;&#xD;
		if (evaluation.size() > 0) {&#xD;
			return evaluation.get(0) ;&#xD;
		}&#xD;
		else {&#xD;
			return null ;&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9xH3gMEVEeKkJbQgitQ3JQ" name="executeExpressionBehavior" specification="_itG3kMEVEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>		// If a behavior is associated with the context OpaqueExpression,&#xD;
		// then execute this behavior, and return computed values.&#xD;
		// Otherwise, return an empty list of values.&#xD;
		ValueList evaluation = new ValueList() ;&#xD;
		OpaqueExpression expression = (OpaqueExpression)this.specification ;&#xD;
		Behavior behavior = expression.behavior ;&#xD;
		if (behavior != null) {&#xD;
			ParameterValueList inputs = new ParameterValueList() ;&#xD;
			ParameterValueList results = this.locus.executor.execute(behavior, null, inputs) ;&#xD;
			for (int i = 0 ; i &lt; results.size() ; i++) { // results.size should be 1&#xD;
				ParameterValue parameterValue = results.get(i) ;&#xD;
				ValueList values = parameterValue.values ;&#xD;
				for (int j = 0 ; j &lt; values.size() ; j++) {&#xD;
					evaluation.add(values.get(j)) ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return evaluation ;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_LiOzwMESEeKkJbQgitQ3JQ" name="evaluate" method="_LiOzwsESEeKkJbQgitQ3JQ" class="_90nNMMEREeKkJbQgitQ3JQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_LiOzwcESEeKkJbQgitQ3JQ" name="result" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_itG3kMEVEeKkJbQgitQ3JQ" name="executeExpressionBehavior" method="_9xH3gMEVEeKkJbQgitQ3JQ" class="_90nNMMEREeKkJbQgitQ3JQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_oTWuYMEVEeKkJbQgitQ3JQ" name="result" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rcC9oMEVEeKkJbQgitQ3JQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rcMuoMEVEeKkJbQgitQ3JQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_3NM98N-9EeGnO-TF_1T_iQ" name="Loci">
          <packageImport xmi:type="uml:PackageImport" xmi:id="_OQNUwND2EeWMvYElZ5Ee4w" importedPackage="Semantics-Loci" importingNamespace="_3NM98N-9EeGnO-TF_1T_iQ"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_ScbvYN--EeGnO-TF_1T_iQ" name="CS_ExecutionFactory">
            <ownedComment xmi:type="uml:Comment" xmi:id="_IYqJsOH1EeG4NZyomhkW-A">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.Actions.CompleteActions.CS_ReadExtentActionActivation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.Actions.IntermediateActions.CS_AddStructuralFeatureValueActionActivation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.Actions.IntermediateActions.CS_CreateLinkActionActivation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.Actions.IntermediateActions.CS_CreateObjectActionActivation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.Actions.IntermediateActions.CS_ReadSelfActionActivation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.Classes.Kernel.CS_InstanceValueEvaluation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.InvocationActions.CS_AcceptEventActionActivation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.InvocationActions.CS_CallOperationActionActivation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.InvocationActions.CS_SendSignalActionActivation;&#xD;
import fUML.Semantics.Loci.LociL1.SemanticVisitor;&#xD;
import fUML.Semantics.Loci.LociL3.ExecutionFactoryL3;&#xD;
import fUML.Syntax.Actions.BasicActions.CallOperationAction;&#xD;
import fUML.Syntax.Actions.BasicActions.SendSignalAction;&#xD;
import fUML.Syntax.Actions.CompleteActions.AcceptEventAction;&#xD;
import fUML.Syntax.Actions.CompleteActions.ReadExtentAction;&#xD;
import fUML.Syntax.Actions.IntermediateActions.AddStructuralFeatureValueAction;&#xD;
import fUML.Syntax.Actions.IntermediateActions.CreateLinkAction;&#xD;
import fUML.Syntax.Actions.IntermediateActions.CreateObjectAction;&#xD;
import fUML.Syntax.Actions.IntermediateActions.ReadSelfAction;&#xD;
import fUML.Syntax.Classes.Kernel.Element;&#xD;
import fUML.Syntax.Classes.Kernel.InstanceValue;&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_IkWKUOedEeGYZqnbU6eCYw">
              <body>Extends fUML semantics in the sense that newly introduced semantic visitors are instantiated instead of fUML visitors.</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_vavRwN--EeGnO-TF_1T_iQ" general="Semantics-Loci-LociL3-ExecutionFactoryL3" specific="_ScbvYN--EeGnO-TF_1T_iQ"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_9_4-kMFdEeKkJbQgitQ3JQ" name="appliedProfiles" association="_9_4-k8FdEeKkJbQgitQ3JQ">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Package"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9_4-kcFdEeKkJbQgitQ3JQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9_4-ksFdEeKkJbQgitQ3JQ" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7hxIEOH6EeGD-8FkSWTrOg" name="instantiateVisitor" specification="_WWIk0N--EeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_7h4c0OH6EeGD-8FkSWTrOg" name="element">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7h65EOH6EeGD-8FkSWTrOg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7h8HMOH6EeGD-8FkSWTrOg" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_7iEqEOH6EeGD-8FkSWTrOg" name="result" type="Semantics-Loci-LociL1-SemanticVisitor">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7iHGUOH6EeGD-8FkSWTrOg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7iIUcOH6EeGD-8FkSWTrOg" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Extends fUML semantics in the sense that newly introduced &#xD;
		// semantic visitors are instantiated instead of fUML visitors&#xD;
&#xD;
		// Extends fUML semantics in the sense that newly introduced &#xD;
		// semantic visitors are instantiated instead of fUML visitors&#xD;
&#xD;
		SemanticVisitor visitor = null ;&#xD;
		if (element instanceof ReadExtentAction) {&#xD;
			visitor =new CS_ReadExtentActionActivation() ;&#xD;
		}&#xD;
		else if (element instanceof ReadIsClassifiedObjectAction) {&#xD;
			visitor = new CS_ReadIsClassifiedObjectActionActivation() ;&#xD;
		}&#xD;
		else if (element instanceof AddStructuralFeatureValueAction) {&#xD;
			visitor = new CS_AddStructuralFeatureValueActionActivation() ;&#xD;
		}&#xD;
		else if (element instanceof ClearStructuralFeatureAction) {&#xD;
			visitor = new CS_ClearStructuralFeatureValueActionActivation() ;&#xD;
		}&#xD;
		else if (element instanceof CreateLinkAction) {&#xD;
			visitor = new CS_CreateLinkActionActivation() ;&#xD;
		}&#xD;
		else if (element instanceof CreateObjectAction) {&#xD;
			visitor = new CS_CreateObjectActionActivation() ;&#xD;
		}&#xD;
		else if (element instanceof ReadSelfAction) {&#xD;
			visitor = new CS_ReadSelfActionActivation() ;&#xD;
		}&#xD;
		else if (element instanceof InstanceValue) {&#xD;
			visitor = new CS_InstanceValueEvaluation() ;&#xD;
		}&#xD;
		else if (element instanceof AcceptEventAction) {&#xD;
			visitor = new CS_AcceptEventActionActivation() ;&#xD;
		}&#xD;
		else if (element instanceof CallOperationAction) {&#xD;
			visitor = new CS_CallOperationActionActivation() ;&#xD;
		}&#xD;
		else if (element instanceof SendSignalAction) {&#xD;
			visitor = new CS_SendSignalActionActivation() ;&#xD;
		}&#xD;
		else if (element instanceof OpaqueExpression) {&#xD;
			visitor = new CS_OpaqueExpressionEvaluation() ;&#xD;
		}&#xD;
		else {&#xD;
			visitor = super.instantiateVisitor(element) ;&#xD;
		}&#xD;
		return visitor ;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_WWIk0N--EeGnO-TF_1T_iQ" name="instantiateVisitor" visibility="public" method="_7hxIEOH6EeGD-8FkSWTrOg" class="_ScbvYN--EeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_7iJikOH6EeGD-8FkSWTrOg">
                <body>&lt;&lt;TextualRepresentation>>public instantiateVisitor (in element : Element ) : SemanticVisitor {
	// TODO
	return super.instantiateVisitor(element) ;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_7hzkUOH6EeGD-8FkSWTrOg" name="element">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7h1ZgOH6EeGD-8FkSWTrOg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7h2noOH6EeGD-8FkSWTrOg" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_7h9VUOH6EeGD-8FkSWTrOg" name="result" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7h-jcOH6EeGD-8FkSWTrOg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7iBmwOH6EeGD-8FkSWTrOg" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_D4tBgMFdEeKkJbQgitQ3JQ" name="getStereotypeClass" class="_ScbvYN--EeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_LBb-wMFdEeKkJbQgitQ3JQ" name="profileName">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_NaFRIMFdEeKkJbQgitQ3JQ" name="stereotypeName">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_RVzf0MFdEeKkJbQgitQ3JQ" name="result" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EaLW4MFdEeKkJbQgitQ3JQ" name="getStereotypeApplication" class="_ScbvYN--EeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Xvha8MFdEeKkJbQgitQ3JQ" name="stereotype">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_afFYgMFdEeKkJbQgitQ3JQ" name="element">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_deZpUMFdEeKkJbQgitQ3JQ" name="result" type="Semantics-Classes-Kernel-Object" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_XUMGMOYZEeGYZqnbU6eCYw" name="CS_Executor">
            <ownedComment xmi:type="uml:Comment" xmi:id="_e1ezwOYhEeGYZqnbU6eCYw">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Object;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Reference;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.StructuredClasses.Class_;&#xD;
import fUML.Debug;&#xD;
import fUML.Semantics.Classes.Kernel.Object_;&#xD;
import fUML.Semantics.Classes.Kernel.Reference;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.ParameterValueList;&#xD;
import fUML.Semantics.Loci.LociL1.Executor;&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_Tr3RUOedEeGYZqnbU6eCYw">
              <body>fUML semantics is extended in the sense that when the instantiated object is a CS_Object, a CS_Reference is returned (instead of a Reference). [Note: this can be avoided if fUML introduces a factory for Reference]</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_CntaoOYaEeGYZqnbU6eCYw" general="Semantics-Loci-LociL1-Executor" specific="_XUMGMOYZEeGYZqnbU6eCYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IANJUOYaEeGYZqnbU6eCYw" name="start" specification="_f0MYYOYZEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_PNeoUOYaEeGYZqnbU6eCYw" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_QpBZQOYaEeGYZqnbU6eCYw" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_YD-u8OYaEeGYZqnbU6eCYw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YEE1kOYaEeGYZqnbU6eCYw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Rz8UQOYaEeGYZqnbU6eCYw" name="result" type="Semantics-Classes-Kernel-Reference" direction="return"/>
              <language>Java</language>
              <body>		// Instantiate the given class and start any behavior of the resulting&#xD;
		// object.&#xD;
		// (The behavior of an object includes any classifier behaviors for an&#xD;
		// active object or the class of the object itself, if that is a&#xD;
		// behavior.)&#xD;
		// fUML semantics is extended in the sense that when the instantiated object&#xD;
		// is a CS_Object, a CS_Reference is returned (instead of a Reference)&#xD;
&#xD;
		Debug.println(&quot;[start] Starting &quot; + type.name + &quot;...&quot;);&#xD;
&#xD;
		Object_ object = this.locus.instantiate(type);&#xD;
&#xD;
		Debug.println(&quot;[start] Object = &quot; + object);&#xD;
		object.startBehavior(type, inputs);&#xD;
&#xD;
		Reference reference ;&#xD;
		if (object instanceof CS_Object) {&#xD;
			reference = new CS_Reference();&#xD;
			((CS_Reference)reference).compositeReferent = (CS_Object)object ;&#xD;
		}&#xD;
		else {&#xD;
			reference = new Reference() ;&#xD;
		}&#xD;
		reference.referent = object;&#xD;
&#xD;
		return reference;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_f0MYYOYZEeGYZqnbU6eCYw" name="start" method="_IANJUOYaEeGYZqnbU6eCYw" class="_XUMGMOYZEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_kEaQYOYZEeGYZqnbU6eCYw" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_lLvE0OYZEeGYZqnbU6eCYw" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1sSGAOYZEeGYZqnbU6eCYw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1sZawOYZEeGYZqnbU6eCYw" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_mNRaUOYZEeGYZqnbU6eCYw" name="result" type="Semantics-Classes-Kernel-Reference" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_m8YmQOYdEeGYZqnbU6eCYw" name="CS_Locus">
            <ownedComment xmi:type="uml:Comment" xmi:id="_op7JUOYhEeGYZqnbU6eCYw">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_Object;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.StructuredClasses.Class_;&#xD;
import fUML.Semantics.Classes.Kernel.Object_;&#xD;
import fUML.Semantics.Loci.LociL1.Locus;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.Behavior;&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_ex6_wOedEeGYZqnbU6eCYw">
              <body>Extends fUML semantics by instantiating a CS_Object in the case where type is not a Behavior. Otherwise behaves like in fUML.</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_sXs_cOYdEeGYZqnbU6eCYw" general="Semantics-Loci-LociL1-Locus" specific="_m8YmQOYdEeGYZqnbU6eCYw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1dZgOYeEeGYZqnbU6eCYw" name="instantiate" specification="_v1ptAOYdEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ME-pgOYeEeGYZqnbU6eCYw" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Nen9AOYeEeGYZqnbU6eCYw" name="result" type="Semantics-Classes-Kernel-Object" direction="return"/>
              <language>Java</language>
              <body>		// Extends fUML semantics by instantiating a CS_Object&#xD;
		// in the case where type is not a Behavior.&#xD;
		// Otherwise behaves like in fUML&#xD;
&#xD;
		Object_ object = null;&#xD;
&#xD;
		if (type instanceof Behavior) {&#xD;
			object = super.instantiate(type);&#xD;
		} else {&#xD;
			object = new CS_Object() ;&#xD;
			object.types.addValue(type);&#xD;
			object.createFeatureValues();&#xD;
			this.add(object);&#xD;
		}&#xD;
&#xD;
		return object;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_v1ptAOYdEeGYZqnbU6eCYw" name="instantiate" method="_I1dZgOYeEeGYZqnbU6eCYw" class="_m8YmQOYdEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_3gsGEOYdEeGYZqnbU6eCYw" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_48xCgOYdEeGYZqnbU6eCYw" name="result" type="Semantics-Classes-Kernel-Object" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_9_4-k8FdEeKkJbQgitQ3JQ" name="cS_ExecutionFactory_package_1" memberEnd="_9_4-lMFdEeKkJbQgitQ3JQ _9_4-kMFdEeKkJbQgitQ3JQ">
            <ownedEnd xmi:type="uml:Property" xmi:id="_9_4-lMFdEeKkJbQgitQ3JQ" name="cS_ExecutionFactory" type="_ScbvYN--EeGnO-TF_1T_iQ" owningAssociation="_9_4-k8FdEeKkJbQgitQ3JQ" association="_9_4-k8FdEeKkJbQgitQ3JQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9_4-lcFdEeKkJbQgitQ3JQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9_4-lsFdEeKkJbQgitQ3JQ" value="1"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_TPJywM98EeW1e7U-Wzl1ng" name="SimpleClassifiers">
          <packagedElement xmi:type="uml:Class" xmi:id="_wUwzEN2JEeGnO-TF_1T_iQ" name="CS_SignalInstance">
            <ownedComment xmi:type="uml:Comment" xmi:id="_wUwzEd2JEeGnO-TF_1T_iQ">
              <body>CS_SignalInstance extends fUML SignalInstance with the ability to reference the specific interaction point on which it occured. This is introduced to address the following requirements R9 (&quot;Specifying one or more ports for an event implies that the event triggers the execution of an associated behavior only if the event was received via one of the specified ports.&quot;).</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="__njrAOH1EeG4NZyomhkW-A">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.StructuredClasses.CS_InteractionPoint;&#xD;
import fUML.Semantics.Classes.Kernel.Value;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.SignalInstance;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_wUwzE92JEeGnO-TF_1T_iQ" general="Semantics-CommonBehaviors-Communications-SignalInstance" specific="_wUwzEN2JEeGnO-TF_1T_iQ"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_wUwzFN2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ" association="_wUwzId2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwzFd2JEeGnO-TF_1T_iQ">
                <body>The InteractionPoint on which this signal instance occured.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzFt2JEeGnO-TF_1T_iQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzF92JEeGnO-TF_1T_iQ" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwzGN2JEeGnO-TF_1T_iQ" name="copy" specification="_wUwzHN2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzGd2JEeGnO-TF_1T_iQ" name="result" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzGt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzG92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Create a new signal instance with the same type, interaction point and feature values as this signal instance.&#xD;
		CS_SignalInstance newValue = (CS_SignalInstance) (super.copy());&#xD;
		newValue.type = this.type  ;&#xD;
		newValue.interactionPoint = this.interactionPoint ;&#xD;
		return newValue;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tr3l0BE6EeKT3tsL4v_Daw" name="new_" specification="_JQJXABE3EeKT3tsL4v_Daw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wwhCkBE6EeKT3tsL4v_Daw" name="result" type="Semantics-Classes-Kernel-Value" direction="return"/>
              <language>Java</language>
              <body>		// Create a new signal instance with no type or feature values.&#xD;
		return new CS_SignalInstance();&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwzHN2JEeGnO-TF_1T_iQ" name="copy" visibility="public" method="_wUwzGN2JEeGnO-TF_1T_iQ" class="_wUwzEN2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwzHd2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public copy () : Value {&#xD;
	// Create a new signal instance with the same type, interaction point and feature values as this signal instance.&#xD;
	SignalInstanceWithPort newValue = (SignalInstanceWithPort) super.copy();&#xD;
	newValue.type = this.type  ;&#xD;
	newValue.interactionPoint = this.interactionPoint ;&#xD;
	return newValue;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzHt2JEeGnO-TF_1T_iQ" name="result" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzH92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzIN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_JQJXABE3EeKT3tsL4v_Daw" name="new_" method="_tr3l0BE6EeKT3tsL4v_Daw" class="_wUwzEN2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_QLR9IBE3EeKT3tsL4v_Daw" name="result" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_wUwzId2JEeGnO-TF_1T_iQ" name="A_signalInstanceWithPort_interactionPoint" memberEnd="_wUwzIt2JEeGnO-TF_1T_iQ _wUwzFN2JEeGnO-TF_1T_iQ">
            <ownedEnd xmi:type="uml:Property" xmi:id="_wUwzIt2JEeGnO-TF_1T_iQ" name="signalInstanceWithPort" type="_wUwzEN2JEeGnO-TF_1T_iQ" owningAssociation="_wUwzId2JEeGnO-TF_1T_iQ" association="_wUwzId2JEeGnO-TF_1T_iQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzI92JEeGnO-TF_1T_iQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzJN2JEeGnO-TF_1T_iQ" value="1"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_YlZoMN2OEeGnO-TF_1T_iQ" name="StructuredClassifiers">
          <packagedElement xmi:type="uml:Class" xmi:id="_wUvk8d2JEeGnO-TF_1T_iQ" name="CS_InteractionPoint">
            <ownedComment xmi:type="uml:Comment" xmi:id="_wUvk8t2JEeGnO-TF_1T_iQ">
              <body>A CS_InteractionPoint represents the runtime manifestation of a Reference to an Object playing the role of a Port. More specifically, it overrides operation dispatching and signal receptions in order to capture the specific propagation semantics of requests targeting a port.&#xD;
NOTE: This class is related to the following requirements:&#xD;
- R1. The target value of an invocation action may also be a port. In this case, the invocation request is sent to the object owning this port as identified by the port identity, and is, upon arrival, handled as described in &quot;Port&quot; clause</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_FkrwwOH2EeG4NZyomhkW-A">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.Classes.Interfaces.Operation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.Ports.Port;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.StructuredClasses.Class_;&#xD;
import fUML.Semantics.Classes.Kernel.Reference;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.Execution;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.ParameterValueList;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.SignalInstance;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_wUvk-N2JEeGnO-TF_1T_iQ" general="Semantics-Classes-Kernel-Reference" specific="_wUvk8d2JEeGnO-TF_1T_iQ"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_wUvk-d2JEeGnO-TF_1T_iQ" name="owner" type="_wUwMMt2JEeGnO-TF_1T_iQ" association="_wUwL0N2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUvk-t2JEeGnO-TF_1T_iQ">
                <body>Represents the Reference to the CompositeObject owning this InteractionPort. NOTE: This is introduced to address requirement R3 (It represents the &quot;link from that instance to the instance of the owning classifier [...] through which communication is forwarded to the instance of the owning classifier or through which the owning classifier communicates)</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUvk-92JEeGnO-TF_1T_iQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUvk_N2JEeGnO-TF_1T_iQ" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_wUvk_d2JEeGnO-TF_1T_iQ" name="definingPort" association="_wUwL1N2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUvk_t2JEeGnO-TF_1T_iQ">
                <body>The Port for which this InteractionPoint is a runtime manifestation</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Port"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUvk_92JEeGnO-TF_1T_iQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUvlAN2JEeGnO-TF_1T_iQ" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUvlAd2JEeGnO-TF_1T_iQ" name="startBehavior" specification="_wUwLu92JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUvlAt2JEeGnO-TF_1T_iQ" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUvlA92JEeGnO-TF_1T_iQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUvlBN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUvlBd2JEeGnO-TF_1T_iQ" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUvlBt2JEeGnO-TF_1T_iQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUvlB92JEeGnO-TF_1T_iQ" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Overriden to do nothing&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwLsN2JEeGnO-TF_1T_iQ" name="dispatch" specification="_wUwLw92JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwLsd2JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwLst2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwLs92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwLtN2JEeGnO-TF_1T_iQ" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwLtd2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwLtt2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Delegates dispatching to the owning object&#xD;
		return this.owner.dispatchIn(operation, this) ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwLt92JEeGnO-TF_1T_iQ" name="send" specification="_wUwLy92JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwLuN2JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwLud2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwLut2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Delegates sending to the owning object&#xD;
		this.owner.sendIn(signalInstance, this) ;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwLu92JEeGnO-TF_1T_iQ" name="startBehavior" visibility="public" method="_wUvlAd2JEeGnO-TF_1T_iQ" class="_wUvk8d2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwLvN2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public startBehavior (in classifier : Class [0..1], &#xD;
                                     in inputs : ParameterValue [*]) { &#xD;
	// Overriden to do nothing&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwLvd2JEeGnO-TF_1T_iQ" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwLvt2JEeGnO-TF_1T_iQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwLv92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwLwN2JEeGnO-TF_1T_iQ" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwLwd2JEeGnO-TF_1T_iQ" value="-1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwLwt2JEeGnO-TF_1T_iQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwLw92JEeGnO-TF_1T_iQ" name="dispatch" visibility="public" method="_wUwLsN2JEeGnO-TF_1T_iQ" class="_wUvk8d2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwLxN2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public dispatch (in operation : Operation ) : Execution { 
	// Delegates dispatching to the owning object
	return this.owner.dispatchIn(operation, this) ;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwLxd2JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwLxt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwLx92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwLyN2JEeGnO-TF_1T_iQ" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwLyd2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwLyt2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwLy92JEeGnO-TF_1T_iQ" name="send" visibility="public" method="_wUwLt92JEeGnO-TF_1T_iQ" class="_wUvk8d2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwLzN2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public send (in signalInstance : SignalInstance ) {&#xD;
	// Delegates sending to the owning object&#xD;
	this.owner.sendIn(signalInstance, this) ;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwLzd2JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwLzt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwLz92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_wUwL0N2JEeGnO-TF_1T_iQ" name="A_interactionPoint_owner" memberEnd="_wUwL0d2JEeGnO-TF_1T_iQ _wUvk-d2JEeGnO-TF_1T_iQ">
            <ownedEnd xmi:type="uml:Property" xmi:id="_wUwL0d2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ" owningAssociation="_wUwL0N2JEeGnO-TF_1T_iQ" association="_wUwL0N2JEeGnO-TF_1T_iQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwL0t2JEeGnO-TF_1T_iQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwL092JEeGnO-TF_1T_iQ" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_wUwL1N2JEeGnO-TF_1T_iQ" name="A_interactionPoint_definingPort" memberEnd="_wUwL1d2JEeGnO-TF_1T_iQ _wUvk_d2JEeGnO-TF_1T_iQ">
            <ownedEnd xmi:type="uml:Property" xmi:id="_wUwL1d2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ" owningAssociation="_wUwL1N2JEeGnO-TF_1T_iQ" association="_wUwL1N2JEeGnO-TF_1T_iQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwL1t2JEeGnO-TF_1T_iQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwL192JEeGnO-TF_1T_iQ" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_wUyA4N2JEeGnO-TF_1T_iQ" name="A_referenceToCompositeStructure_compositeReferent" memberEnd="_wUyA4d2JEeGnO-TF_1T_iQ _wUwyxN2JEeGnO-TF_1T_iQ">
            <ownedEnd xmi:type="uml:Property" xmi:id="_wUyA4d2JEeGnO-TF_1T_iQ" name="referenceToCompositeStructure" type="_wUwMMt2JEeGnO-TF_1T_iQ" owningAssociation="_wUyA4N2JEeGnO-TF_1T_iQ" association="_wUyA4N2JEeGnO-TF_1T_iQ">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUyA4t2JEeGnO-TF_1T_iQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUyA492JEeGnO-TF_1T_iQ" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_wUyA5N2JEeGnO-TF_1T_iQ" name="CS_Link">
            <ownedComment xmi:type="uml:Comment" xmi:id="_wUyA5d2JEeGnO-TF_1T_iQ">
              <body>CS_Link extends Link with the ability to specify that this association instance plays a particular Connector.&#xD;
NOTE: The execution model described in this specification makes the hypothesis that connectors are necessarily typed by an Association.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_J8k-EOH2EeG4NZyomhkW-A">
              <body>// Imports&#xD;
import fUML.Semantics.Classes.Kernel.FeatureValue;&#xD;
import fUML.Semantics.Classes.Kernel.FeatureValueList;&#xD;
import fUML.Semantics.Classes.Kernel.Link;&#xD;
import fUML.Semantics.Classes.Kernel.Value;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_wUyA5t2JEeGnO-TF_1T_iQ" general="Semantics-Classes-Kernel-Link" specific="_wUyA5N2JEeGnO-TF_1T_iQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_lq_tYBE_EeKT3tsL4v_Daw" name="hasValueForAfeature" specification="_Vv7X0BE_EeKT3tsL4v_Daw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_utAgcBE_EeKT3tsL4v_Daw" name="value" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_vfcC8BE_EeKT3tsL4v_Daw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Returns true if the given value object is used as a value for a FeatureValue of this link&#xD;
		FeatureValueList allFeatureValues = this.getFeatureValues() ;&#xD;
		Integer i = 1 ;&#xD;
		boolean isAValue = false ;&#xD;
		while (i &lt;= allFeatureValues.size() &amp;&amp; !isAValue) {&#xD;
			FeatureValue featureValue = allFeatureValues.getValue(i-1);&#xD;
			isAValue = !featureValue.values.isEmpty() &amp;&amp; featureValue.values.getValue(0).equals(value) ;&#xD;
			i = i + 1 ;&#xD;
		}&#xD;
		return isAValue ;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOGkcMFTEeKkJbQgitQ3JQ" name="getFeature" specification="_ztWYwMFSEeKkJbQgitQ3JQ">
              <language>Java</language>
              <body>FeatureValueList allFeatureValues = this.getFeatureValues() ;&#xD;
		Integer i = 1 ;&#xD;
		StructuralFeature feature = null ;&#xD;
		while (i &lt;= allFeatureValues.size() &amp;&amp; feature == null) {&#xD;
			FeatureValue featureValue = allFeatureValues.get(i-1);&#xD;
			if (!featureValue.values.isEmpty() &amp;&amp; featureValue.values.get(0).equals(value)) {&#xD;
				feature = featureValue.feature ;&#xD;
			}&#xD;
			i = i + 1 ;&#xD;
		}&#xD;
		return feature ;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Vv7X0BE_EeKT3tsL4v_Daw" name="hasValueForAFeature" method="_lq_tYBE_EeKT3tsL4v_Daw" class="_wUyA5N2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fp_0QBE_EeKT3tsL4v_Daw" name="value" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_imgosBE_EeKT3tsL4v_Daw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ztWYwMFSEeKkJbQgitQ3JQ" name="getFeature" method="_JOGkcMFTEeKkJbQgitQ3JQ" class="_wUyA5N2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_6wlK8MFSEeKkJbQgitQ3JQ" name="value" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_9-VgYMFSEeKkJbQgitQ3JQ" name="result" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_wUwzPd2JEeGnO-TF_1T_iQ" name="CS_Object">
            <ownedComment xmi:type="uml:Comment" xmi:id="_wUwzPt2JEeGnO-TF_1T_iQ">
              <body>CS_Object extends fUML Object with specific operations for managing propagations of requests through ports, from the environment to the internals of this object, or from the objet to its environment.&#xD;
NOTE, this class addresses the following requirements:&#xD;
- R4: If connectors are attached to both the port when used on a property within the internal structure of a classifier and the port on the container of an internal structure, the instance of the owning classifier will forward any requests arriving at this port along the link specified by those connectors.&#xD;
- R5: If there is a connector attached to only one side of a port, any requests arriving at this port will terminante at this port [Non-behavior port]&#xD;
- R6: For a behavior port, the instance of the owning classifier will handle requests arriving at this port (as specified in the behavior of the classifier), if this classifier has any behavior.&#xD;
- R7: If there is no behavior defined for this classifier, any communication arriving at a behavior port is lost.&#xD;
- R8: If several connectors are attached on one side of a port, then any request arriving at this port on a link derived from a connector on the other side of the port will be fowarded on links corresponding to these connectors. It is a semantic variation point whether these requests will be forwarded on all links, or on only one of those links.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_Osfp0OH2EeG4NZyomhkW-A">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CommonBehaviors.Communications.CS_DispatchOperationOfInterfaceStrategy;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CommonBehaviors.Communications.CS_StructuralFeatureOfInterfaceAccessStrategy;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.InvocationActions.CS_RequestPropagationStrategy;&#xD;
import CompositeStructuresSyntaxAndSemantics.Semantics.CompositeStructures.InvocationActions.CS_SignalInstance;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.Classes.Dependencies.NamedElement;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.Classes.Interfaces.Operation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CommonBehaviors.Communications.Interface;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CommonBehaviors.Communications.InterfaceList;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.Components.BasicComponents.ConnectorKind;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.InternalStructures.ClassifierList;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.Ports.Port;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.StructuredClasses.Class_;&#xD;
import fUML.Semantics.Actions.BasicActions.CallOperationActionActivation;&#xD;
import fUML.Semantics.Actions.BasicActions.SendSignalActionActivation;&#xD;
import fUML.Semantics.Classes.Kernel.ExtensionalValue;&#xD;
import fUML.Semantics.Classes.Kernel.ExtensionalValueList;&#xD;
import fUML.Semantics.Classes.Kernel.FeatureValue;&#xD;
import fUML.Semantics.Classes.Kernel.FeatureValueList;&#xD;
import fUML.Semantics.Classes.Kernel.Object_;&#xD;
import fUML.Semantics.Classes.Kernel.Reference;&#xD;
import fUML.Semantics.Classes.Kernel.ReferenceList;&#xD;
import fUML.Semantics.Classes.Kernel.Value;&#xD;
import fUML.Semantics.Classes.Kernel.ValueList;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.Execution;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.SignalInstance;&#xD;
import fUML.Semantics.Loci.LociL1.ChoiceStrategy;&#xD;
import fUML.Syntax.Classes.Kernel.NamedElementList;&#xD;
import fUML.Syntax.Classes.Kernel.StructuralFeature;&#xD;
import fUML.Syntax.Classes.Kernel.Type;&#xD;
import fUML.Syntax.Classes.Kernel.TypeList;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.Reception;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.Signal;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_wUwzUt2JEeGnO-TF_1T_iQ" general="Semantics-Classes-Kernel-Object" specific="_wUwzPd2JEeGnO-TF_1T_iQ"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwzV92JEeGnO-TF_1T_iQ" name="dispatchIn" specification="_wUxaFd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzWN2JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzWd2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzWt2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzW92JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ0N2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxZ0d2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxZ0t2JEeGnO-TF_1T_iQ" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ092JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxZ1N2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// If the interaction point refers to a behavior port, does nothing [for the moment... ?], &#xD;
		// since the only kind of event supported in fUML is SignalEvent&#xD;
		// If it does not refer to a behavior port, select appropriate delegation links &#xD;
		// from interactionPoint, and propagates the operation call through &#xD;
		// these links&#xD;
		Execution execution = null ;&#xD;
		if (interactionPoint.definingPort.isBehavior) {&#xD;
			// Do nothing&#xD;
		}&#xD;
		else {&#xD;
			boolean operationIsProvided = true ;&#xD;
			ReferenceList potentialTargets = new ReferenceList() ;&#xD;
			CS_LinkList cddLinks = this.getLinks(interactionPoint) ;&#xD;
			Integer linkIndex = 1 ;&#xD;
			while (linkIndex &lt;= cddLinks.size()) {&#xD;
				ReferenceList validTargets = this.selectTargetsForDispatching(cddLinks.getValue(linkIndex - 1), &#xD;
						interactionPoint, ConnectorKind.delegation, operation, operationIsProvided) ;&#xD;
				Integer targetIndex = 1 ;&#xD;
				while(targetIndex &lt;= validTargets.size()) {&#xD;
					potentialTargets.add(validTargets.getValue(targetIndex-1)) ;&#xD;
					targetIndex = targetIndex + 1 ;&#xD;
				}&#xD;
				linkIndex = linkIndex + 1 ;&#xD;
			}&#xD;
			// If potentialTargets is empty, no delegation target have been found, &#xD;
			// and the operation call will be lost&#xD;
			if (! (potentialTargets.size()==0)) {&#xD;
				CS_RequestPropagationStrategy strategy =&#xD;
						(CS_RequestPropagationStrategy)this.locus.factory.getStrategy(&quot;requestPropagation&quot;) ;&#xD;
				// Choose one target non-deterministically&#xD;
				ReferenceList targets = strategy.select(potentialTargets, new CallOperationActionActivation()) ;&#xD;
				Reference target = targets.getValue(0) ;&#xD;
				execution = target.dispatch(operation) ;&#xD;
			}&#xD;
		}&#xD;
		return execution ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUxZ1d2JEeGnO-TF_1T_iQ" name="sendIn" specification="_wUxaIN2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxZ1t2JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ192JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxZ2N2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxZ2d2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ2t2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxZ292JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// If the interaction is a behavior port, &#xD;
		// creates a CS_SignalInstance from the signal instance,&#xD;
		// sets its interaction point,&#xD;
		// and sends it to the target object using operation send&#xD;
		// If this is not a behavior port, &#xD;
		// select appropriate delegation targets from interactionPoint, &#xD;
		// and propagates the signal to these targets&#xD;
		if (interactionPoint.definingPort.isBehavior) {&#xD;
			CS_SignalInstance newSignalInstance = (CS_SignalInstance)signalInstance.copy() ;&#xD;
			newSignalInstance.interactionPoint = interactionPoint ;&#xD;
			this.send(newSignalInstance) ;&#xD;
		}&#xD;
		else {&#xD;
			boolean receptionIsProvided = true ;&#xD;
			ReferenceList potentialTargets = new ReferenceList() ;&#xD;
			CS_LinkList cddLinks = this.getLinks(interactionPoint) ;&#xD;
			Integer linkIndex = 1 ;&#xD;
			while (linkIndex &lt;= cddLinks.size()) {&#xD;
				ReferenceList validTargets = this.selectTargetsForSending(cddLinks.getValue(linkIndex - 1), &#xD;
						interactionPoint, ConnectorKind.delegation, signalInstance.type, receptionIsProvided) ;&#xD;
				Integer targetIndex = 1 ;&#xD;
				while(targetIndex &lt;= validTargets.size()) {&#xD;
					potentialTargets.add(validTargets.getValue(targetIndex-1)) ;&#xD;
					targetIndex = targetIndex + 1 ;&#xD;
				}&#xD;
				linkIndex = linkIndex + 1 ;&#xD;
			}&#xD;
			// If potential targets is empty, no delegation target has been found, &#xD;
			// and the signal is lost&#xD;
			// Otherwise, do the following concurrently&#xD;
			for (int i = 0 ; i &lt; potentialTargets.size() ; i++) {&#xD;
				Reference target = potentialTargets.getValue(i) ;&#xD;
				CS_SignalInstance newSignalInstance = (CS_SignalInstance)signalInstance.copy() ;&#xD;
				newSignalInstance.interactionPoint = interactionPoint ;&#xD;
				target.send(newSignalInstance) ;&#xD;
			}&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUxZ3N2JEeGnO-TF_1T_iQ" name="selectTargetsForSending" specification="_wUxaKN2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_iK0jgBFFEeKT3tsL4v_Daw" name="link" type="_wUyA5N2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxZ4N2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ4d2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxZ4t2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VENSkBFFEeKT3tsL4v_Daw" name="connectorKind"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxZ3d2JEeGnO-TF_1T_iQ" name="signal">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Signal"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ3t2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxZ392JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_MJrLsOdwEeGYZqnbU6eCYw" name="isProvided">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxZ492JEeGnO-TF_1T_iQ" name="result" type="Semantics-Classes-Kernel-Reference">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ5N2JEeGnO-TF_1T_iQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxZ5d2JEeGnO-TF_1T_iQ" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// From the given link, signal and interaction point, retrieves potential targets (i.e. end values of link) &#xD;
		// through which request can be propagated&#xD;
		// These targets are attached to interaction point through the given link, and respect the following rules:&#xD;
		// - if toInternal is true, connectorKind must be Delegation, the given link has to target the internals of this CS_Object&#xD;
		// - if toInternal is false, the given link has to target the environment of this CS_Object.&#xD;
		ReferenceList potentialTargets = new ReferenceList() ;&#xD;
		if (toInternal &amp;&amp; connectorKind == ConnectorKind.delegation) {&#xD;
			if (this.getLinkKind(link, interactionPoint) == CS_LinkKind.ToInternal) {&#xD;
				Integer i = 1 ;&#xD;
				while(i &lt;= link.getFeatureValues().size()) {&#xD;
					ValueList values = link.getFeatureValues().get(i-1).values ;&#xD;
					if (!values.isEmpty()) {&#xD;
						Integer j = 1 ;&#xD;
						while (j &lt;= values.size()) {&#xD;
							Reference cddTarget = (Reference)values.get(j-1) ;&#xD;
							if (!cddTarget.equals(interactionPoint)) {&#xD;
								potentialTargets.add(cddTarget) ;&#xD;
							}&#xD;
							j = j + 1 ;&#xD;
						}&#xD;
					}&#xD;
					i = i + 1 ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		else { // to Environment&#xD;
			if (this.getLinkKind(link, interactionPoint) == CS_LinkKind.ToEnvironment) {&#xD;
				Integer i = 1 ;&#xD;
				while(i &lt;= link.getFeatureValues().size()) {&#xD;
					ValueList values = link.getFeatureValues().get(i-1).values ;&#xD;
					if (!values.isEmpty() &amp;&amp; values.get(0) instanceof Reference) {&#xD;
						Reference cddTarget = (Reference)values.get(0) ;&#xD;
						if (connectorKind == ConnectorKind.assembly) {&#xD;
							if (! (cddTarget instanceof CS_InteractionPoint)) { // This is an assembly link&#xD;
								potentialTargets.add(cddTarget) ;&#xD;
							}&#xD;
							else {&#xD;
								// This is an assembly if the interaction point is not a feature value &#xD;
								// for a container of this CS_Object&#xD;
								CS_ObjectList directContainers = this.getDirectContainers() ;&#xD;
								boolean isAssembly = true ;&#xD;
								Integer j = 1 ;&#xD;
								if (! this.hasValueForAFeature(cddTarget)) {&#xD;
									while (isAssembly &amp;&amp; j &lt;= directContainers.size()) {&#xD;
										CS_Object container = directContainers.get(j - 1) ;&#xD;
										if (container.hasValueForAFeature(cddTarget)) {&#xD;
											isAssembly = false ;&#xD;
										}&#xD;
										j++ ;&#xD;
									}&#xD;
								}&#xD;
								else {&#xD;
									isAssembly = false ;&#xD;
								}&#xD;
								if (isAssembly) {&#xD;
									potentialTargets.add(cddTarget) ;&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
						else { // delegation&#xD;
							// This is a delegation if the target is an interaction point&#xD;
							// and if this interaction is a feature value for a container of this CS_Object&#xD;
							if (cddTarget instanceof CS_InteractionPoint) {&#xD;
								CS_ObjectList directContainers = this.getDirectContainers() ;&#xD;
								boolean isDelegation = false ;&#xD;
								Integer j = 1 ;&#xD;
								while (!isDelegation &amp;&amp; j &lt;= directContainers.size()) {&#xD;
									CS_Object container = directContainers.get(j - 1) ;&#xD;
									if (container.hasValueForAFeature(cddTarget)) {&#xD;
										isDelegation = true ;&#xD;
									}&#xD;
									j++ ;&#xD;
								}&#xD;
								if (isDelegation) {&#xD;
									potentialTargets.add(cddTarget) ;&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					i = i + 1 ;&#xD;
				}&#xD;
			}&#xD;
		} &#xD;
		return potentialTargets ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUxZ8N2JEeGnO-TF_1T_iQ" name="selectTargetsForDispatching" specification="_wUxaPt2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_hcqScBFEEeKT3tsL4v_Daw" name="link" type="_wUyA5N2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxZ9N2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ9d2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxZ9t2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_dMmLcBFEEeKT3tsL4v_Daw" name="connectorKind"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxZ8d2JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ8t2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxZ892JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_vLiWgOdxEeGYZqnbU6eCYw" name="isProvided">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxZ992JEeGnO-TF_1T_iQ" name="result" type="Semantics-Classes-Kernel-Reference">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ-N2JEeGnO-TF_1T_iQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxZ-d2JEeGnO-TF_1T_iQ" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// From the given link, operation and interaction point, retrieves potential targets (i.e. end values of link) &#xD;
		// through which request can be propagated&#xD;
		// These targets are attached to interaction point through the given link, and respect the following rules:&#xD;
		// - if toInternal is true, connectorKind must be Delegation, the given link has to target the internals of this CS_Object, &#xD;
		// and a valid target must provide the Operation &#xD;
		// - if toInternal is false, the given link has to target the environment of this CS_Object.&#xD;
		//		- if connectorKind is assembly, a valid target has to provide the operation&#xD;
		// 		- if connectorKind is delegation, a valid target has to require the operation&#xD;
		ReferenceList potentialTargets = new ReferenceList() ;&#xD;
		if (toInternal &amp;&amp; connectorKind == ConnectorKind.delegation) {&#xD;
			if (this.getLinkKind(link, interactionPoint) == CS_LinkKind.ToInternal) {&#xD;
				Integer i = 1 ;&#xD;
				while(i &lt;= link.getFeatureValues().size()) {&#xD;
					ValueList values = link.getFeatureValues().get(i-1).values ;&#xD;
					if (!values.isEmpty() &amp;&amp; values.get(0) instanceof Reference) {&#xD;
						Reference cddTarget = (Reference)values.get(0) ;&#xD;
						if (cddTarget != interactionPoint &amp;&amp; this.isOperationProvided(cddTarget, operation)) {&#xD;
							potentialTargets.add(cddTarget) ;&#xD;
						}&#xD;
					}&#xD;
					i = i + 1 ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		else { // to environment&#xD;
			if (this.getLinkKind(link, interactionPoint) == CS_LinkKind.ToEnvironment) {&#xD;
				Integer i = 1 ;&#xD;
				while(i &lt;= link.getFeatureValues().size()) {&#xD;
					ValueList values = link.getFeatureValues().get(i-1).values ;&#xD;
					if (!values.isEmpty() &amp;&amp; values.get(0) instanceof Reference) {&#xD;
						Reference cddTarget = (Reference)values.get(0) ;&#xD;
						if (connectorKind == ConnectorKind.assembly) {&#xD;
							if (! (cddTarget instanceof CS_InteractionPoint)) { // This is an assembly link&#xD;
								if (this.isOperationProvided(cddTarget, operation)) {&#xD;
									potentialTargets.add(cddTarget) ;&#xD;
								}&#xD;
							}&#xD;
							else {&#xD;
								// This is an assembly if the interaction point is not a feature value &#xD;
								// for a container of this CS_Object&#xD;
								CS_ObjectList directContainers = this.getDirectContainers() ;&#xD;
								boolean isAssembly = true ;&#xD;
								Integer j = 1 ;&#xD;
								if (! this.hasValueForAFeature(cddTarget)) {&#xD;
									while (isAssembly &amp;&amp; j &lt;= directContainers.size()) {&#xD;
										CS_Object container = directContainers.get(j - 1) ;&#xD;
										if (container.hasValueForAFeature(cddTarget)) {&#xD;
											isAssembly = false ;&#xD;
										}&#xD;
										j++ ;&#xD;
									}&#xD;
								}&#xD;
								else {&#xD;
									isAssembly = false ;&#xD;
								}&#xD;
								if (isAssembly) {&#xD;
									if (this.isOperationProvided(cddTarget, operation)) {&#xD;
										potentialTargets.add(cddTarget) ;&#xD;
									}&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
						else { // delegation&#xD;
							// This is a delegation if the target is an interaction point&#xD;
							// and if this interaction is a feature value for a container of this CS_Object&#xD;
							if (cddTarget instanceof CS_InteractionPoint) {&#xD;
								CS_ObjectList directContainers = this.getDirectContainers() ;&#xD;
								boolean isDelegation = false ;&#xD;
								Integer j = 1 ;&#xD;
								while (!isDelegation &amp;&amp; j &lt;= directContainers.size()) {&#xD;
									CS_Object container = directContainers.get(j - 1) ;&#xD;
									if (container.hasValueForAFeature(cddTarget)) {&#xD;
										isDelegation = true ;&#xD;
									}&#xD;
									j++ ;&#xD;
								}&#xD;
								if (isDelegation) {&#xD;
									if (this.isOperationRequired(cddTarget, operation)) {&#xD;
										potentialTargets.add(cddTarget) ;&#xD;
									}&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					i = i + 1 ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return potentialTargets ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUxZ-t2JEeGnO-TF_1T_iQ" name="sendOut" specification="_wUxaVN2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxZ-92JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ_N2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxZ_d2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxZ_t2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxZ_92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaAN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Select appropriate delegation links from interactionPoint, &#xD;
		// and propagates the signal instance through these links&#xD;
		// Appropriate links are links which target elements&#xD;
		// in the environment of this CS_Object.&#xD;
		// These can be delegation links (i.e, the targeted elements must&#xD;
		// require a reception for the signal) or assembly links (i.e., the target elements&#xD;
		// must provide a reception for the signal)&#xD;
&#xD;
		boolean receptionIsNotProvided = false ; // i.e. it is required&#xD;
		ReferenceList allPotentialTargets = new ReferenceList() ;&#xD;
		ReferenceList targetsForSendingIn = new ReferenceList() ;&#xD;
		ReferenceList targetsForSendingOut = new ReferenceList() ;&#xD;
&#xD;
		CS_LinkList cddLinks = this.getLinks(interactionPoint) ;&#xD;
		Integer linkIndex = 1 ;&#xD;
		while (linkIndex &lt;= cddLinks.size()) {&#xD;
			ReferenceList validAssemblyTargets = this.selectTargetsForSending(cddLinks.getValue(linkIndex - 1), &#xD;
					interactionPoint, ConnectorKind.assembly, signalInstance.type, receptionIsNotProvided) ;&#xD;
			Integer targetIndex = 1 ;&#xD;
			while(targetIndex &lt;= validAssemblyTargets.size()) {&#xD;
				allPotentialTargets.addValue(validAssemblyTargets.getValue(targetIndex-1)) ;&#xD;
				targetsForSendingIn.addValue(validAssemblyTargets.getValue(targetIndex-1)) ;&#xD;
				targetIndex = targetIndex + 1 ;&#xD;
			}&#xD;
			ReferenceList validDelegationTargets = this.selectTargetsForSending(cddLinks.getValue(linkIndex - 1), &#xD;
					interactionPoint, ConnectorKind.delegation, signalInstance.type, receptionIsNotProvided) ;&#xD;
			targetIndex = 1 ;&#xD;
			while(targetIndex &lt;= validDelegationTargets.size()) {&#xD;
				allPotentialTargets.addValue(validDelegationTargets.getValue(targetIndex-1)) ;&#xD;
				targetsForSendingOut.addValue(validDelegationTargets.getValue(targetIndex-1)) ;&#xD;
				targetIndex = targetIndex + 1 ;&#xD;
			}&#xD;
			linkIndex = linkIndex + 1 ;&#xD;
		}&#xD;
&#xD;
		CS_RequestPropagationStrategy strategy = (CS_RequestPropagationStrategy)this.locus.factory.getStrategy(&quot;requestPropagation&quot;) ;&#xD;
		ReferenceList selectedTargets = strategy.select(allPotentialTargets, new SendSignalActionActivation()) ;&#xD;
&#xD;
		for (int j = 0 ; j &lt; selectedTargets.size() ; j++) {&#xD;
			Reference target = selectedTargets.getValue(j) ;&#xD;
			for (int k = 0 ; k &lt; targetsForSendingIn.size() ; k++) {&#xD;
				Reference cddTarget = targetsForSendingIn.getValue(k) ;&#xD;
				if (cddTarget == target) {&#xD;
					target.send(signalInstance) ;&#xD;
				}&#xD;
			}&#xD;
			for (int k = 0 ; k &lt; targetsForSendingOut.size() ; k++) {&#xD;
				// The target must be an interaction point&#xD;
				// i.e. a delegation connector for a required reception can only target a port&#xD;
				CS_InteractionPoint cddTarget = (CS_InteractionPoint)targetsForSendingOut.getValue(k) ;&#xD;
				if (cddTarget == target) {&#xD;
					CS_Reference owner = cddTarget.owner ;&#xD;
					owner.sendOut(signalInstance, cddTarget) ;&#xD;
				}&#xD;
			}&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUxaAd2JEeGnO-TF_1T_iQ" name="dispatchOut" specification="_wUxaXN2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaAt2JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaA92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaBN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaBd2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaBt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaB92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaCN2JEeGnO-TF_1T_iQ" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaCd2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaCt2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Select appropriate delegation links from interactionPoint, &#xD;
		// and propagates the operation call through these links&#xD;
		// Appropriate links are either links which target elements&#xD;
		// in the environment of this CS_Object.&#xD;
		// These can be delegation links (i.e, the targeted elements must&#xD;
		// require the operation) or assembly links (i.e., the target elements&#xD;
		// must provide the operation)&#xD;
&#xD;
&#xD;
		Execution execution = null ;&#xD;
&#xD;
		boolean operationIsNotProvided = false ; // i.e. it is required&#xD;
		ReferenceList allPotentialTargets = new ReferenceList() ;&#xD;
		ReferenceList targetsForDispatchingIn = new ReferenceList() ;&#xD;
		ReferenceList targetsForDispatchingOut = new ReferenceList() ;&#xD;
&#xD;
		CS_LinkList cddLinks = this.getLinks(interactionPoint) ;&#xD;
		Integer linkIndex = 1 ;&#xD;
		while (linkIndex &lt;= cddLinks.size()) {&#xD;
			ReferenceList validAssemblyTargets = this.selectTargetsForDispatching(cddLinks.getValue(linkIndex - 1), &#xD;
					interactionPoint, ConnectorKind.assembly, operation, operationIsNotProvided) ;&#xD;
			Integer targetIndex = 1 ;&#xD;
			while(targetIndex &lt;= validAssemblyTargets.size()) {&#xD;
				allPotentialTargets.addValue(validAssemblyTargets.getValue(targetIndex-1)) ;&#xD;
				targetsForDispatchingIn.addValue(validAssemblyTargets.getValue(targetIndex-1)) ;&#xD;
				targetIndex = targetIndex + 1 ;&#xD;
			}&#xD;
			ReferenceList validDelegationTargets = this.selectTargetsForDispatching(cddLinks.getValue(linkIndex - 1), &#xD;
					interactionPoint, ConnectorKind.delegation, operation, operationIsNotProvided) ;&#xD;
			targetIndex = 1 ;&#xD;
			while(targetIndex &lt;= validDelegationTargets.size()) {&#xD;
				allPotentialTargets.addValue(validDelegationTargets.getValue(targetIndex-1)) ;&#xD;
				targetsForDispatchingOut.addValue(validDelegationTargets.getValue(targetIndex-1)) ;&#xD;
				targetIndex = targetIndex + 1 ;&#xD;
			}&#xD;
			linkIndex = linkIndex + 1 ;&#xD;
		}&#xD;
&#xD;
		CS_RequestPropagationStrategy strategy = (CS_RequestPropagationStrategy)this.locus.factory.getStrategy(&quot;requestPropagation&quot;) ;&#xD;
		ReferenceList selectedTargets = strategy.select(allPotentialTargets, new SendSignalActionActivation()) ;&#xD;
&#xD;
		for (int j = 0 ; j &lt; selectedTargets.size() ; j++) {&#xD;
			Reference target = selectedTargets.getValue(j) ;&#xD;
			for (int k = 0 ; k &lt; targetsForDispatchingIn.size() &amp;&amp; execution == null ; k++) {&#xD;
				Reference cddTarget = targetsForDispatchingIn.getValue(k) ;&#xD;
				if (cddTarget == target) {&#xD;
					execution = target.dispatch(operation) ;&#xD;
				}&#xD;
			}&#xD;
			for (int k = 0 ; k &lt; targetsForDispatchingOut.size() &amp;&amp; execution == null ; k++) {&#xD;
				// The target must be an interaction point&#xD;
				// i.e. a delegation connector for a required operation can only target a port&#xD;
				CS_InteractionPoint cddTarget = (CS_InteractionPoint)targetsForDispatchingOut.getValue(k) ;&#xD;
				if (cddTarget == target) {&#xD;
					CS_Reference owner = cddTarget.owner ;&#xD;
					execution = owner.dispatchOut(operation, cddTarget) ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return execution ;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mFIkUOVQEeGVLZOJyKihvQ" name="getFeatureValue" specification="_QimP8OVQEeGVLZOJyKihvQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_pH38kOVQEeGVLZOJyKihvQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_qdZlEOVQEeGVLZOJyKihvQ" name="result" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
              <language>Java</language>
              <body>		// In the case where the feature belongs to an Interface,&#xD;
		// fUML semantics is extended in the sense that reading is &#xD;
		// delegated to a CS_StructuralFeatureOfInterfaceAccessStrategy&#xD;
		if (feature.namespace instanceof Interface) {&#xD;
			CS_StructuralFeatureOfInterfaceAccessStrategy readStrategy = &#xD;
					(CS_StructuralFeatureOfInterfaceAccessStrategy)this.locus.factory.getStrategy(&quot;structuralFeature&quot;) ;&#xD;
			return readStrategy.read(this, feature) ;&#xD;
		}&#xD;
		else {&#xD;
			return super.getFeatureValue(feature);&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_9gg9wOVdEeGVLZOJyKihvQ" name="setFeatureValue" specification="_b4W7YOVdEeGVLZOJyKihvQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_PII7wOVeEeGVLZOJyKihvQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_QWpWQOVeEeGVLZOJyKihvQ" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_aeRtkOVeEeGVLZOJyKihvQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_aeV_AOVeEeGVLZOJyKihvQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Rtw6MOVeEeGVLZOJyKihvQ" name="position">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// In the case where the feature belongs to an Interface,&#xD;
		// fUML semantics is extended in the sense that writing is &#xD;
		// delegated to a CS_StructuralFeatureOfInterfaceAccessStrategy&#xD;
		if (feature.namespace instanceof Interface) {&#xD;
			CS_StructuralFeatureOfInterfaceAccessStrategy writeStrategy = &#xD;
					(CS_StructuralFeatureOfInterfaceAccessStrategy)this.locus.factory.getStrategy(&quot;structuralFeature&quot;) ;&#xD;
			writeStrategy.write(this, feature, values, position) ;&#xD;
		}&#xD;
		else {&#xD;
			super.setFeatureValue(feature, values, position);&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NNQoQOdzEeGYZqnbU6eCYw" name="contains" specification="_9z3cYOdyEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Qb-nAOdzEeGYZqnbU6eCYw" name="object" type="Semantics-Classes-Kernel-Object"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_SWS-oOdzEeGYZqnbU6eCYw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Determines if the object given as a parameter is directly&#xD;
		// or indirectly contained by this CS_Object&#xD;
		boolean objectIsContained = this.directlyContains(object) ;&#xD;
		// if object is not directly contained, restart the research&#xD;
		// recursively on the objects owned by this CS_Object&#xD;
		for (int i = 0 ; i &lt; this.featureValues.size() &amp;&amp; !objectIsContained ; i++) {&#xD;
			FeatureValue featureValue = this.featureValues.getValue(i) ;&#xD;
			ValueList values = featureValue.values ;&#xD;
			for (int j = 0 ; j &lt; values.size() &amp;&amp; !objectIsContained ; j++) {&#xD;
				Value value = values.getValue(j) ;&#xD;
				if (value instanceof CS_Object) {&#xD;
					objectIsContained = ((CS_Object)value).contains(object) ;&#xD;
				}&#xD;
				else if (value instanceof CS_Reference) {&#xD;
					CS_Object referent = ((CS_Reference)value).compositeReferent ;&#xD;
					objectIsContained = referent.contains(object) ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return objectIsContained;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EA5J4Od0EeGYZqnbU6eCYw" name="directlyContains" specification="_u98UgOdzEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_HzKhoOd0EeGYZqnbU6eCYw" name="object" type="Semantics-Classes-Kernel-Object"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_JY1e8Od0EeGYZqnbU6eCYw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Determines if the object given as a parameter is directly&#xD;
		// contained by this CS_Object&#xD;
		boolean objectIsContained = false ;&#xD;
		for (int i = 0 ; i &lt; this.featureValues.size() &amp;&amp; !objectIsContained ; i++) {&#xD;
			FeatureValue featureValue = this.featureValues.getValue(i) ;&#xD;
			ValueList values = featureValue.values ;&#xD;
			for (int j = 0 ; j &lt; values.size() &amp;&amp; !objectIsContained ; j++) {&#xD;
				Value value = values.getValue(j) ;&#xD;
				if (value == object) {&#xD;
					objectIsContained = true ;&#xD;
				}&#xD;
				else if (value instanceof CS_Reference) {&#xD;
					objectIsContained = (((CS_Reference)value).referent == object) ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return objectIsContained;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_-R5xUOd0EeGYZqnbU6eCYw" name="getDirectContainers" specification="_uyYIQOd0EeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_El4Q0Od1EeGYZqnbU6eCYw" name="result" type="_wUwzPd2JEeGnO-TF_1T_iQ" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GoNU8Od1EeGYZqnbU6eCYw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GoRmYOd1EeGYZqnbU6eCYw" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Retrieves all the extensional values at this locus which are direct&#xD;
		// containers for this CS_Object&#xD;
		// An extensional value is a direct container for an object if:&#xD;
		// - it is a CS_Object&#xD;
		// - it directly contains this object (i.e. CS_Object.directlyContains(Object)==true)&#xD;
		CS_ObjectList containers = new CS_ObjectList() ;&#xD;
		for (int i = 0 ; i &lt; this.locus.extensionalValues.size() ; i++) {&#xD;
			ExtensionalValue extensionalValue = this.locus.extensionalValues.getValue(i) ;&#xD;
			if (extensionalValue != this &amp;&amp; extensionalValue instanceof CS_Object) {&#xD;
				CS_Object cddContainer = (CS_Object)extensionalValue ;&#xD;
				if (cddContainer.directlyContains(this)) {&#xD;
					containers.add(cddContainer) ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return containers ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_HdeTkOd2EeGYZqnbU6eCYw" name="isOperationProvided" specification="_daYsQOd1EeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_UNg3kOd2EeGYZqnbU6eCYw" name="reference" type="Semantics-Classes-Kernel-Reference"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VxhoAOd2EeGYZqnbU6eCYw" name="operation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_XRXqIOd2EeGYZqnbU6eCYw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Determines if the given reference provides the operation&#xD;
		// If the reference is an interaction point, it provides the operation if this operation&#xD;
		// is a member of one of its provided interfaces&#xD;
		// If the reference is NOT an interactionPoint, it provides this operation if this operation is&#xD;
		// an operation of one of its type, or one of its type provides a realization for this operation (in the case&#xD;
		// where the namespace of this Operation is an interface)&#xD;
		boolean isProvided = false ;&#xD;
		if (reference instanceof CS_InteractionPoint) {&#xD;
			if (operation.owner instanceof Interface) {&#xD;
				// We have to look in provided interfaces of the port if &#xD;
				// they define directly or indirectly the Operation&#xD;
				Integer interfaceIndex = 1 ;&#xD;
				// Iterates on provided interfaces of the port&#xD;
				InterfaceList providedInterfaces = ((CS_InteractionPoint)reference).definingPort.provided() ;&#xD;
				while (interfaceIndex &lt;= providedInterfaces.size() &amp;&amp; !isProvided) {&#xD;
					Interface interface_ = providedInterfaces.getValue(interfaceIndex-1) ;&#xD;
					// Iterates on members of the current Interface&#xD;
					Integer memberIndex = 1 ;&#xD;
					while (memberIndex &lt;= interface_.member.size() &amp;&amp; !isProvided) {&#xD;
						NamedElement cddOperation = interface_.member.getValue(memberIndex-1) ;&#xD;
						if (cddOperation instanceof Operation) {&#xD;
							isProvided = operation == cddOperation ;&#xD;
						}&#xD;
						memberIndex = memberIndex + 1 ;&#xD;
					}&#xD;
					interfaceIndex = interfaceIndex + 1 ;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		else {&#xD;
			// We have to look if one of the Classifiers typing this reference &#xD;
			// directly or indirectly provides this operation&#xD;
			ClassifierList types = reference.getTypes() ;&#xD;
			Integer typeIndex = 1 ;&#xD;
			while (typeIndex &lt;= types.size() &amp;&amp; !isProvided) {&#xD;
				if (types.getValue(typeIndex - 1) instanceof Class_) {&#xD;
					Integer memberIndex = 1 ;&#xD;
					NamedElementList members = ((Class_)types.getValue(typeIndex - 1)).member ; &#xD;
					while (memberIndex &lt;= members.size() &amp;&amp; !isProvided) {&#xD;
						NamedElement cddOperation = members.getValue(memberIndex-1) ;&#xD;
						if (cddOperation instanceof Operation) {&#xD;
							CS_DispatchOperationOfInterfaceStrategy strategy = new CS_DispatchOperationOfInterfaceStrategy() ;&#xD;
							isProvided = strategy.operationsMatch((Operation)cddOperation, operation) ;&#xD;
						}&#xD;
						memberIndex = memberIndex + 1 ;&#xD;
					}&#xD;
				}&#xD;
				typeIndex = typeIndex + 1 ;&#xD;
			}&#xD;
		}&#xD;
		return isProvided ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FD5iMOd4EeGYZqnbU6eCYw" name="isOperationRequired" specification="_o8fyoOd3EeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_LekfkOd4EeGYZqnbU6eCYw" name="reference" type="Semantics-Classes-Kernel-Reference"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_NEIvMOd4EeGYZqnbU6eCYw" name="operation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Om6wkOd4EeGYZqnbU6eCYw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Determines if the given reference requires the operation&#xD;
		// If the reference is an interaction point, it requires the operation if this operation&#xD;
		// is a member of one of its required interfaces&#xD;
		// If the reference is not a interaction point, it cannot require an operation&#xD;
		boolean matches = false ;&#xD;
		if (reference instanceof CS_InteractionPoint) {&#xD;
			Integer interfaceIndex = 1 ;&#xD;
			// Iterates on provided interfaces of the port&#xD;
			InterfaceList requiredInterfaces = ((CS_InteractionPoint)reference).definingPort.required() ;&#xD;
			while (interfaceIndex &lt;= requiredInterfaces.size() &amp;&amp; !matches) {&#xD;
				Interface interface_ = requiredInterfaces.getValue(interfaceIndex-1) ;&#xD;
				// Iterates on members of the current Interface&#xD;
				Integer memberIndex = 1 ;&#xD;
				while (memberIndex &lt;= interface_.member.size() &amp;&amp; !matches) {&#xD;
					NamedElement cddOperation = interface_.member.getValue(memberIndex-1) ;&#xD;
					if (cddOperation instanceof Operation) {&#xD;
						matches = operation == cddOperation ;&#xD;
					}&#xD;
					memberIndex = memberIndex + 1 ;&#xD;
				}&#xD;
				interfaceIndex = interfaceIndex + 1 ;&#xD;
			}&#xD;
		}&#xD;
		return matches ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_tPbOgBFHEeKT3tsL4v_Daw" name="getLinkKind" specification="_ZTN-wBFHEeKT3tsL4v_Daw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_xJl-ABFHEeKT3tsL4v_Daw" name="link" type="_wUyA5N2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_x5nFsBFHEeKT3tsL4v_Daw" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ypK6YBFHEeKT3tsL4v_Daw" name="result" type="_RgFd0BFAEeKT3tsL4v_Daw" direction="return"/>
              <language>Java</language>
              <body>		// If the given interaction point belongs to the given object, and if the given interaction point is used as an end of the link, &#xD;
		// then the links targets the environment of the object (enumeration literal ToEnvironment) if all the feature values of the link &#xD;
		// (but one for the interaction point) refer to values which are not themselves values for features of the interaction point. &#xD;
		// If all the feature values of the link refer to values which are themselves values for features of the interaction point, &#xD;
		// the link targets the internals of the object (enumeration literal ToInternal). Otherwise, the link has no particular meaning &#xD;
		// in the context defined by the object and the interaction point (enumeration literal None).&#xD;
		if (! link.hasValueForAFeature(interactionPoint)) {&#xD;
			return CS_LinkKind.None ;&#xD;
		}&#xD;
		CS_LinkKind kind = CS_LinkKind.ToInternal ;&#xD;
		FeatureValueList featureValues = link.getFeatureValues() ;&#xD;
		Integer i = 1 ;&#xD;
		while (i &lt;= featureValues.size() &amp;&amp; kind != CS_LinkKind.None) {&#xD;
			FeatureValue value = featureValues.getValue(i-1) ;&#xD;
			if (value.values.isEmpty()) {&#xD;
				kind = CS_LinkKind.None ;&#xD;
			}&#xD;
			else {&#xD;
				Value v = value.values.getValue(0) ;&#xD;
				boolean vIsAValueForAFeatureOfContext = false ;&#xD;
				if (v.equals(interactionPoint)) {&#xD;
					vIsAValueForAFeatureOfContext = true ;&#xD;
				}&#xD;
				else if (v instanceof CS_InteractionPoint) {&#xD;
					v = ((CS_InteractionPoint)v).owner ;&#xD;
					vIsAValueForAFeatureOfContext = this.hasValueForAFeature(v) ;&#xD;
				}&#xD;
				else {&#xD;
					vIsAValueForAFeatureOfContext = this.hasValueForAFeature(v) ;&#xD;
				}&#xD;
				if (!vIsAValueForAFeatureOfContext) {&#xD;
					kind = CS_LinkKind.ToEnvironment ;&#xD;
				}&#xD;
			}&#xD;
			i = i + 1 ;&#xD;
		}&#xD;
		return kind ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ex90gBFJEeKT3tsL4v_Daw" name="getLinks" specification="_LTsd8BFJEeKT3tsL4v_Daw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_mk6zcBFJEeKT3tsL4v_Daw" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_n6AXEBFJEeKT3tsL4v_Daw" name="result" type="_wUyA5N2JEeGnO-TF_1T_iQ" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_re294BFJEeKT3tsL4v_Daw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rfAu4BFJEeKT3tsL4v_Daw" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Get all links (available at the locus of this object) where the given interaction point is used as a feature value&#xD;
		// (i.e. the interaction is an end such links)&#xD;
		ExtensionalValueList extensionalValues = this.locus.extensionalValues ;&#xD;
		Integer i = 1 ;&#xD;
		CS_LinkList connectorInstances = new CS_LinkList() ;&#xD;
		while (i &lt;= extensionalValues.size()) {&#xD;
			ExtensionalValue value = extensionalValues.getValue(i-1) ;&#xD;
			if (value instanceof CS_Link) {&#xD;
				CS_Link link = (CS_Link)value ;&#xD;
				if (this.getLinkKind(link, interactionPoint) != CS_LinkKind.None) {&#xD;
					connectorInstances.addValue(link) ;&#xD;
				}&#xD;
			}&#xD;
			i = i + 1 ;&#xD;
		}&#xD;
		return connectorInstances ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_KCL9UBFKEeKT3tsL4v_Daw" name="hasValueForAFeature" specification="_8Nv9EBFJEeKT3tsL4v_Daw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OXg-0BFKEeKT3tsL4v_Daw" name="value" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_PLgnkBFKEeKT3tsL4v_Daw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// Returns true if the given value object is used as a value for a feature value of this object&#xD;
		FeatureValueList allFeatureValues = this.getFeatureValues() ;&#xD;
		Integer i = 1 ;&#xD;
		boolean isAValue = false ;&#xD;
		while (i &lt;= allFeatureValues.size() &amp;&amp; !isAValue) {&#xD;
			FeatureValue featureValue = allFeatureValues.getValue(i-1);&#xD;
			if (!featureValue.values.isEmpty()) {&#xD;
				ValueList valuesForCurrentFeature = featureValue.values ;&#xD;
				Integer j = 1 ;&#xD;
				while (j &lt;= valuesForCurrentFeature.size() &amp;&amp; !isAValue) {&#xD;
					isAValue = featureValue.values.getValue(j-1).equals(value) ;&#xD;
					j = j + 1 ;&#xD;
				}&#xD;
			}&#xD;
			i = i + 1 ;&#xD;
		}&#xD;
		return isAValue ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wZcMEBFKEeKT3tsL4v_Daw" name="sendOut" specification="_dhRzQBFKEeKT3tsL4v_Daw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_zSA7sBFKEeKT3tsL4v_Daw" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m8uUBFKEeKT3tsL4v_Daw" name="onPort"/>
              <language>Java</language>
              <body>		// Select a CS_InteractionPoint value playing onPort,&#xD;
		// and send the signal instance to this interaction point&#xD;
		FeatureValue featureValue = this.getFeatureValue(onPort) ;&#xD;
		ValueList values = featureValue.values ;&#xD;
		ReferenceList potentialTargets = new ReferenceList() ;&#xD;
		for (int i = 0 ; i &lt; values.size() ; i++) {&#xD;
			potentialTargets.addValue((Reference)values.getValue(i)) ;&#xD;
		}&#xD;
		CS_RequestPropagationStrategy strategy = &#xD;
				(CS_RequestPropagationStrategy)this.locus.factory.getStrategy(&quot;requestPropagation&quot;) ;&#xD;
		ReferenceList targets = strategy.select(potentialTargets, new SendSignalActionActivation()) ;&#xD;
		for (int i = 0 ; i &lt; targets.size() ; i++) {&#xD;
			CS_InteractionPoint target = (CS_InteractionPoint)targets.getValue(i) ;&#xD;
			this.sendOut(signalInstance, target) ;&#xD;
		}</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TnAGABFLEeKT3tsL4v_Daw" name="dispatchOut" specification="_CjED4BFLEeKT3tsL4v_Daw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_YkjlIBFLEeKT3tsL4v_Daw" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ZaJJUBFLEeKT3tsL4v_Daw" name="onPort"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_aOSjEBFLEeKT3tsL4v_Daw" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
              <language>Java</language>
              <body>		// Select a CS_InteractionPoint value playing onPort,&#xD;
		// and dispatches the operation to this interaction point&#xD;
		Execution execution = null ;&#xD;
		FeatureValue featureValue = this.getFeatureValue(onPort) ;&#xD;
		ValueList values = featureValue.values ;&#xD;
		ReferenceList potentialTargets = new ReferenceList() ;&#xD;
		for (int i = 0 ; i &lt; values.size() ; i++) {&#xD;
			potentialTargets.addValue((Reference)values.getValue(i)) ;&#xD;
		}&#xD;
		CS_RequestPropagationStrategy strategy = &#xD;
				(CS_RequestPropagationStrategy)this.locus.factory.getStrategy(&quot;requestPropagation&quot;) ;&#xD;
		ReferenceList targets = strategy.select(potentialTargets, new CallOperationActionActivation()) ;&#xD;
		// if targets is empty, no dispatch target has been found,&#xD;
		// and the operation call is lost&#xD;
		if (targets.size() >= 1) {&#xD;
			CS_InteractionPoint target = (CS_InteractionPoint)targets.getValue(0) ;&#xD;
			execution = this.dispatchOut(operation, target) ;&#xD;
		}&#xD;
		return execution ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_53wrMBFLEeKT3tsL4v_Daw" name="dispatchIn" specification="_qLip8BFLEeKT3tsL4v_Daw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="__GtcUBFLEeKT3tsL4v_Daw" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="__-NFABFLEeKT3tsL4v_Daw" name="onPort"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_AxXnUBFMEeKT3tsL4v_Daw" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
              <language>Java</language>
              <body>		// delegates dispatching to composite referent&#xD;
		// Select a CS_InteractionPoint value playing onPort,&#xD;
		// and dispatches the operation call to this interaction point&#xD;
		FeatureValue featureValue = this.getFeatureValue(onPort) ;&#xD;
		ValueList values = featureValue.values ;&#xD;
		Integer choice = ((ChoiceStrategy) this.locus.factory&#xD;
				.getStrategy(&quot;choice&quot;))&#xD;
				.choose(featureValue.values.size()) - 1;&#xD;
		CS_InteractionPoint interactionPoint = (CS_InteractionPoint)values.getValue(choice) ;&#xD;
		return interactionPoint.dispatch(operation) ;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rKZCYBFMEeKT3tsL4v_Daw" name="sendIn" specification="_cXq08BFMEeKT3tsL4v_Daw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_yKqnMBFMEeKT3tsL4v_Daw" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_z4RYgBFMEeKT3tsL4v_Daw" name="onPort"/>
              <language>Java</language>
              <body>		// Select a Reference value playing onPort,&#xD;
		// and send the signal instance to this interaction point&#xD;
		FeatureValue featureValue = this.getFeatureValue(onPort) ;&#xD;
		ValueList values = featureValue.values ;&#xD;
		ReferenceList potentialTargets = new ReferenceList() ;&#xD;
		for (int i = 0 ; i &lt; values.size() ; i++) {&#xD;
			potentialTargets.addValue((Reference)values.getValue(i)) ;&#xD;
		}&#xD;
		CS_RequestPropagationStrategy strategy = &#xD;
				(CS_RequestPropagationStrategy)this.locus.factory.getStrategy(&quot;requestPropagation&quot;) ;&#xD;
		ReferenceList targets = strategy.select(potentialTargets, new SendSignalActionActivation()) ;&#xD;
		for (int i = 0 ; i &lt; targets.size() ; i++) {&#xD;
			Reference target = targets.getValue(i) ;&#xD;
			target.send(signalInstance) ;&#xD;
		}</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUxaFd2JEeGnO-TF_1T_iQ" name="dispatchIn" visibility="public" method="_wUwzV92JEeGnO-TF_1T_iQ" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUxaFt2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public dispatchIn (in operation : Operation, &#xD;
                                              in interactionPoint : InteractionPoint) : Execution {&#xD;
	// If the interaction is a behavior port, does nothing [for the moment... ?], &#xD;
	// since the only kind of event supported in fUML is SignalEvent&#xD;
	// If this is not a behavior port, select appropriate delegation links &#xD;
	// from interactionPoint, and propagates the operation call through &#xD;
	// these links&#xD;
	Execution execution = null ;&#xD;
	if (interactionPoint.definingPort.isBehavior) {&#xD;
		// Do nothing&#xD;
	}&#xD;
	else {&#xD;
		ReferenceList targets = &#xD;
			this.selectTargetsForDispatching(operation, interactionPoint) ;&#xD;
		// If targets is empty, no delegation target have been found, &#xD;
		// and the operation call will be lost&#xD;
		if (! (targets.size()==0)) {&#xD;
			// Choose one target non-deterministically&#xD;
			Integer index = &#xD;
						((ChoiceStrategy)this.locus.factory.getStrategy(&quot;choice&quot;))&#xD;
						.choose(targets.size()) ;&#xD;
			Reference target = targets.getValue(index - 1) ;&#xD;
			execution = target.dispatch(operation) ;&#xD;
		}&#xD;
	}&#xD;
	return execution ;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaF92JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaGN2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaGd2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaGt2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaG92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaHN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaHd2JEeGnO-TF_1T_iQ" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaHt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaH92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUxaIN2JEeGnO-TF_1T_iQ" name="sendIn" visibility="public" method="_wUxZ1d2JEeGnO-TF_1T_iQ" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUxaId2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public sendIn (in signalInstance : SignalInstance,&#xD;
                                       in interactionPoint : InteractionPoint) {&#xD;
	// If the interaction is a behavior port, &#xD;
	// creates a SignalInstanceWithPort from the signal instance, &#xD;
	// and sends it as usual using operation send&#xD;
	// If this is not a behavior port, &#xD;
	// select appropriate delegation targets from interactionPoint, &#xD;
	// and propagates the signal to these targets&#xD;
	if (interactionPoint.definingPort.isBehavior) {&#xD;
		SignalInstanceWithPort newSignalInstance = &#xD;
													new SignalInstanceWithPort() ;&#xD;
		SignalInstance copy = (SignalInstance)signalInstance.copy() ;&#xD;
		newSignalInstance.featureValues = copy.featureValues ;&#xD;
		newSignalInstance.type = copy.type ;&#xD;
		newSignalInstance.interactionPoint = interactionPoint ;&#xD;
		this.send(newSignalInstance) ;&#xD;
	}&#xD;
	else {&#xD;
		ReferenceList targets = &#xD;
					this.selectTargetsForSending(signalInstance, &#xD;
																		interactionPoint) ;&#xD;
		// If targets is empty, no delegation target have been found, &#xD;
		// and the signal is lost&#xD;
		Integer i = 1 ;&#xD;
		// Do the following concurrently&#xD;
		while (i &lt;= targets.size()) {&#xD;
			Reference target = targets.getValue(i-1) ;&#xD;
			target.send(signalInstance) ;&#xD;
			i = i + 1 ;&#xD;
		}&#xD;
	}&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaIt2JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaI92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaJN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaJd2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaJt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaJ92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUxaKN2JEeGnO-TF_1T_iQ" name="selectTargetsForSending" visibility="public" method="_wUxZ3N2JEeGnO-TF_1T_iQ" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUxaKd2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public selectTargetsForSending (in signalInstance : SignalInstance, &#xD;
                                                         in interactionPoint : InteractionPoint) &#xD;
                                                         : Reference[*] {&#xD;
	// From the given signalInstance and interactionPoint, &#xD;
	// retrieves potential connectors through which request can be delegated&#xD;
	// These connectors are delegation connectors attached to &#xD;
	// Port interactionPoint.definingPort, and whose target provide a &#xD;
	// reception for Signal signalInstance.type&#xD;
	ConnectorList connectors = &#xD;
				this.selectConnectorsForSending(signalInstance.type, &#xD;
																			interactionPoint.definingPort) ;&#xD;
&#xD;
	// Select links owned by the context object for which the &#xD;
	// definingConnector is included in the list of matching connectors.&#xD;
	Integer i = 1 ;&#xD;
	ConnectorInstanceList connectorInstances = &#xD;
																	new ConnectorInstanceList() ;&#xD;
	while (i &lt;= connectors.size()) {&#xD;
		Integer j = 1 ;&#xD;
		Connector connector = connectors.getValue(i-1) ;&#xD;
		while (j &lt;= this.ownedConnectorInstances.size()) {&#xD;
			ConnectorInstance connectorInstance = &#xD;
												this.ownedConnectorInstances.getValue(j-1) ;&#xD;
			if (connectorInstance.definingConnector == connector) {&#xD;
				connectorInstances.addValue(connectorInstance) ;&#xD;
			}&#xD;
			j=j+1 ;&#xD;
		}&#xD;
		i = i+1 ;&#xD;
	}&#xD;
&#xD;
	// For each matching link, retrieves the end value opposite &#xD;
	// to interactionPoint.&#xD;
	// If this value is a reference (which means that it is possible to send it &#xD;
	// a signal), it is added in the list of potential targets.&#xD;
	ReferenceList targets = new ReferenceList() ;&#xD;
	i = 1 ;&#xD;
	while (i &lt;= connectorInstances.size()) {&#xD;
		ConnectorInstance link = connectorInstances.getValue(i-1) ;&#xD;
		Association association = link.type ;&#xD;
		Property oppositeEnd = association.memberEnd.getValue(0);&#xD;
		if (oppositeEnd == interactionPoint.definingPort) {&#xD;
	   		oppositeEnd = association.memberEnd.getValue(1);&#xD;
		}&#xD;
		Value value = link.getFeatureValue(oppositeEnd).values.getValue(0) ;&#xD;
		if (value instanceof Reference) {&#xD;
			targets.addValue((Reference)value) ;&#xD;
		}&#xD;
		i = i + 1;&#xD;
	}&#xD;
	&#xD;
	// if targets is empty, no matching targets have been found, &#xD;
	// and the signal instance will be lost&#xD;
	return targets ;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_JM34MBFFEeKT3tsL4v_Daw" name="link" type="_wUyA5N2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaLd2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaLt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaL92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_8AdhQBFEEeKT3tsL4v_Daw" name="connectorKind"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaKt2JEeGnO-TF_1T_iQ" name="signal">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Signal"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaK92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaLN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_As5mYOdwEeGYZqnbU6eCYw" name="toInternal">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaMN2JEeGnO-TF_1T_iQ" name="result" type="Semantics-Classes-Kernel-Reference" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaMd2JEeGnO-TF_1T_iQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaMt2JEeGnO-TF_1T_iQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUxaPt2JEeGnO-TF_1T_iQ" name="selectTargetsForDispatching" visibility="public" method="_wUxZ8N2JEeGnO-TF_1T_iQ" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUxaP92JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public selectTargetsForDispatching (in operation : Operation, &#xD;
                                                                in interactionPoint : InteractionPoint) &#xD;
                                                                : Reference [*] { &#xD;
	// From the given operation and interactionPoint, retrieves potential &#xD;
	// connectors through which request can be delegated&#xD;
	// These connectors are delegation connectors attached to Port &#xD;
	// interactionPoint.definingPort,&#xD;
	// and whose target provides or realize operation&#xD;
	ConnectorList connectors = &#xD;
			this.selectConnectorsForDispatching(operation, &#xD;
																			interactionPoint.definingPort) ;&#xD;
&#xD;
	// Select links owned by the context object for which the &#xD;
	// definingConnector is included in the list of matching connectors.&#xD;
	Integer i = 1 ;&#xD;
	ConnectorInstanceList connectorInstances = &#xD;
											new ConnectorInstanceList() ;&#xD;
	while (i &lt;= connectors.size()) {&#xD;
		Integer j = 1 ;&#xD;
		Connector connector = connectors.getValue(i-1) ;&#xD;
		while (j &lt;= this.ownedConnectorInstances.size()) {&#xD;
			ConnectorInstance connectorInstance = &#xD;
							this.ownedConnectorInstances.getValue(j-1) ;&#xD;
			if (connectorInstance.definingConnector == connector) {&#xD;
				connectorInstances.addValue(connectorInstance) ;&#xD;
			}&#xD;
			j=j+1 ;&#xD;
		}&#xD;
		i = i+1 ;&#xD;
	}&#xD;
	&#xD;
	// For each matching link, retrieves the end value opposite &#xD;
	// to interactionPoint.&#xD;
	// If this value is a reference (which means that it is possible to dispatch &#xD;
	// operation to it), it is added in the list of potential targets.&#xD;
	ReferenceList targets = new ReferenceList() ;&#xD;
	i = 1 ;&#xD;
	while (i &lt;= connectorInstances.size()) {&#xD;
		ConnectorInstance link = connectorInstances.getValue(i-1) ;&#xD;
		Association association = link.type ;&#xD;
		Property oppositeEnd = association.memberEnd.getValue(0);&#xD;
		if (oppositeEnd == interactionPoint.definingPort) {&#xD;
	   		oppositeEnd = association.memberEnd.getValue(1);&#xD;
		}&#xD;
		Value value = link.getFeatureValue(oppositeEnd).values.getValue(0) ;&#xD;
		if (value instanceof Reference) {&#xD;
			targets.addValue((Reference)value) ;&#xD;
		}&#xD;
		i = i + 1;&#xD;
	}&#xD;
	&#xD;
	// if targets is empty, no matching targets have been found, &#xD;
	// and the operation call will be lost&#xD;
	return targets ;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VooqwBFEEeKT3tsL4v_Daw" name="link" type="_wUyA5N2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaQ92JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaRN2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaRd2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_KpomkBFEEeKT3tsL4v_Daw" name="connectorKind"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaQN2JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaQd2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaQt2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_mu46UOdxEeGYZqnbU6eCYw" name="toInternal">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaRt2JEeGnO-TF_1T_iQ" name="result" type="Semantics-Classes-Kernel-Reference" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaR92JEeGnO-TF_1T_iQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaSN2JEeGnO-TF_1T_iQ" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUxaVN2JEeGnO-TF_1T_iQ" name="sendOut" visibility="public" method="_wUxZ-t2JEeGnO-TF_1T_iQ" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUxaVd2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public sendOut(in signalInstance : SignalInstance, in onPort : Port) {&#xD;
	// TODO:&#xD;
	// Propagate the signal instance through interaction points &#xD;
	// corresponding to onPorts, following appropriate links.&#xD;
	// This will result in calling send(signalInstance) on &#xD;
	// oppositeEnd found from the links&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaVt2JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaV92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaWN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaWd2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaWt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaW92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUxaXN2JEeGnO-TF_1T_iQ" name="dispatchOut" visibility="public" method="_wUxaAd2JEeGnO-TF_1T_iQ" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUxaXd2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public dispatchOut (in operation : Operation, in onPort : Port) : Execution { &#xD;
	// TODO:&#xD;
	// Propagate the operation call through interaction points corresponding &#xD;
	// to onPorts, following appropriate links,&#xD;
	// This will result in calling dispatch(operation) on oppositeEnd found &#xD;
	// from the links&#xD;
&#xD;
	return null ;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaXt2JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaX92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaYN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaYd2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaYt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaY92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUxaZN2JEeGnO-TF_1T_iQ" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUxaZd2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUxaZt2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_QimP8OVQEeGVLZOJyKihvQ" name="getFeatureValue" method="_mFIkUOVQEeGVLZOJyKihvQ" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ZfxmUOVQEeGVLZOJyKihvQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fV7hYOVQEeGVLZOJyKihvQ" name="result" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_b4W7YOVdEeGVLZOJyKihvQ" name="setFeatureValue" method="_9gg9wOVdEeGVLZOJyKihvQ" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_l3jvcOVdEeGVLZOJyKihvQ" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_pvSO8OVdEeGVLZOJyKihvQ" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XiqmIOVgEeGVLZOJyKihvQ"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XiuQgOVgEeGVLZOJyKihvQ" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_uNffoOVdEeGVLZOJyKihvQ" name="position">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_9z3cYOdyEeGYZqnbU6eCYw" name="contains" method="_NNQoQOdzEeGYZqnbU6eCYw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Fl_78OdzEeGYZqnbU6eCYw" name="object" type="Semantics-Classes-Kernel-Object"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_I525YOdzEeGYZqnbU6eCYw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_u98UgOdzEeGYZqnbU6eCYw" name="directlyContains" method="_EA5J4Od0EeGYZqnbU6eCYw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_1TrHgOdzEeGYZqnbU6eCYw" name="object" type="Semantics-Classes-Kernel-Object"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_4cTFUOdzEeGYZqnbU6eCYw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_uyYIQOd0EeGYZqnbU6eCYw" name="getDirectContainers" method="_-R5xUOd0EeGYZqnbU6eCYw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_2SLhsOd0EeGYZqnbU6eCYw" name="result" type="_wUwzPd2JEeGnO-TF_1T_iQ" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ojcHsOeeEeGYZqnbU6eCYw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ojhAMOeeEeGYZqnbU6eCYw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_daYsQOd1EeGYZqnbU6eCYw" name="isOperationProvided" method="_HdeTkOd2EeGYZqnbU6eCYw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_uV5LIOd1EeGYZqnbU6eCYw" name="reference" type="Semantics-Classes-Kernel-Reference"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_63S2MOd1EeGYZqnbU6eCYw" name="operation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="__H694Od1EeGYZqnbU6eCYw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_o8fyoOd3EeGYZqnbU6eCYw" name="isOperationRequired" method="_FD5iMOd4EeGYZqnbU6eCYw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_zQrYMOd3EeGYZqnbU6eCYw" name="reference" type="Semantics-Classes-Kernel-Reference"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_2bFesOd3EeGYZqnbU6eCYw" name="operation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_6V35QOd3EeGYZqnbU6eCYw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ZTN-wBFHEeKT3tsL4v_Daw" name="getLinkKind" method="_tPbOgBFHEeKT3tsL4v_Daw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_e8R5ABFHEeKT3tsL4v_Daw" name="link" type="_wUyA5N2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_hSjM0BFHEeKT3tsL4v_Daw" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_kPzBEBFHEeKT3tsL4v_Daw" name="result" type="_RgFd0BFAEeKT3tsL4v_Daw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_LTsd8BFJEeKT3tsL4v_Daw" name="getLinks" method="_ex90gBFJEeKT3tsL4v_Daw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Pt5YYBFJEeKT3tsL4v_Daw" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_So2toBFJEeKT3tsL4v_Daw" name="result" type="_wUyA5N2JEeGnO-TF_1T_iQ" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_TpY9kBFJEeKT3tsL4v_Daw"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TpfEMBFJEeKT3tsL4v_Daw" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_8Nv9EBFJEeKT3tsL4v_Daw" name="hasValueForAFeature" method="_KCL9UBFKEeKT3tsL4v_Daw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_CLdRoBFKEeKT3tsL4v_Daw" name="value" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ELcMYBFKEeKT3tsL4v_Daw" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_dhRzQBFKEeKT3tsL4v_Daw" name="sendOut" method="_wZcMEBFKEeKT3tsL4v_Daw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_jjnJIBFKEeKT3tsL4v_Daw" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_pa_zQBFKEeKT3tsL4v_Daw" name="onPort"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_CjED4BFLEeKT3tsL4v_Daw" name="dispatchOut" method="_TnAGABFLEeKT3tsL4v_Daw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_ITFhwBFLEeKT3tsL4v_Daw" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_L179cBFLEeKT3tsL4v_Daw" name="onPort"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_PY01YBFLEeKT3tsL4v_Daw" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_qLip8BFLEeKT3tsL4v_Daw" name="dispatchIn" method="_53wrMBFLEeKT3tsL4v_Daw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_vQX1wBFLEeKT3tsL4v_Daw" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_xnuusBFLEeKT3tsL4v_Daw" name="onPort"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_0v1IEBFLEeKT3tsL4v_Daw" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_cXq08BFMEeKT3tsL4v_Daw" name="sendIn" method="_rKZCYBFMEeKT3tsL4v_Daw" class="_wUwzPd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_j2tZYBFMEeKT3tsL4v_Daw" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_nUOpIBFMEeKT3tsL4v_Daw" name="onPort"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_wUwMMt2JEeGnO-TF_1T_iQ" name="CS_Reference">
            <ownedComment xmi:type="uml:Comment" xmi:id="_wUwMM92JEeGnO-TF_1T_iQ">
              <body>This class extends fuml Reference with specific operations for managing request propagation through ports, from the environment to the internals of the referent object, or from the referent objet to its environment. (NOTE: Addresses requirement R1 &quot;The target value of an invocation action may also be a port. In this case, the invocation request is sent to the object owning this port as identified by the port identity, and is, upon arrival, handled as described in &quot;Port&quot; clause&quot;, and R2 &quot;Invocation actions may also be sent to a target via a given port, either on the sending object or on another object.&quot;)</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="_VWe1kOH2EeG4NZyomhkW-A">
              <body>// Imports&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.Classes.Interfaces.Operation;&#xD;
import CompositeStructuresSyntaxAndSemantics.Syntax.CompositeStructures.Ports.Port;&#xD;
import fUML.Semantics.Classes.Kernel.Reference;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.Execution;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.SignalInstance;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_wUwyw92JEeGnO-TF_1T_iQ" general="Semantics-Classes-Kernel-Reference" specific="_wUwMMt2JEeGnO-TF_1T_iQ"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_wUwyxN2JEeGnO-TF_1T_iQ" name="compositeReferent" type="_wUwzPd2JEeGnO-TF_1T_iQ" isUnique="false" subsettedProperty="Semantics-Classes-Kernel-Reference-referent" association="_wUyA4N2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwyxd2JEeGnO-TF_1T_iQ">
                <body>The composite object referenced by this ReferenceToCompositeStructure. This property subsets Reference::referent.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwyxt2JEeGnO-TF_1T_iQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwyx92JEeGnO-TF_1T_iQ" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwyyN2JEeGnO-TF_1T_iQ" name="dispatchIn" specification="_wUwy6t2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwyyd2JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwyyt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwyy92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwyzN2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwyzd2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwyzt2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwyz92JEeGnO-TF_1T_iQ" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy0N2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy0d2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		//Delegates dispatching to composite referent&#xD;
		return this.compositeReferent.dispatchIn(operation, interactionPoint) ;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwy0t2JEeGnO-TF_1T_iQ" name="sendIn" specification="_wUwy9d2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy092JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy1N2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy1d2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy1t2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy192JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy2N2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// delegates sending to composite referent&#xD;
		this.compositeReferent.sendIn(signalInstance, interactionPoint) ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwy2d2JEeGnO-TF_1T_iQ" name="sendOut" specification="_wUwy_d2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy2t2JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy292JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy3N2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy3d2JEeGnO-TF_1T_iQ" name="onPort">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy3t2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy392JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// delegates sending to composite referent&#xD;
		this.compositeReferent.sendOut(signalInstance, onPort) ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wUwy4N2JEeGnO-TF_1T_iQ" name="dispatchOut" specification="_wUwzBd2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy4d2JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy4t2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy492JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy5N2JEeGnO-TF_1T_iQ" name="onPort">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy5d2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy5t2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy592JEeGnO-TF_1T_iQ" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy6N2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy6d2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>		// delegates dispatching to composite referent&#xD;
		return this.compositeReferent.dispatchOut(operation, onPort) ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_YUUl0Od_EeGYZqnbU6eCYw" name="dispatchIn" specification="_-q5UkOd-EeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_g0TC0Od_EeGYZqnbU6eCYw" name="operation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_irJ2wOd_EeGYZqnbU6eCYw" name="onPort"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_kW9RQOd_EeGYZqnbU6eCYw" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
              <language>Java</language>
              <body>		// delegates dispatching to composite referent&#xD;
		return this.compositeReferent.dispatchIn(operation, onPort) ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_f8HBIOeAEeGYZqnbU6eCYw" name="sendIn" specification="_LuBXMOeAEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_mQBPMOeAEeGYZqnbU6eCYw" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_n5cEEOeAEeGYZqnbU6eCYw" name="onPort"/>
              <language>Java</language>
              <body>		// delegates sending to composite referent&#xD;
		this.compositeReferent.sendIn(signalInstance, onPort) ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_aNfcAOeBEeGYZqnbU6eCYw" name="dispatchOut" specification="_EvUDMOeBEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_hLz5AOeBEeGYZqnbU6eCYw" name="operation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_jDw5IOeBEeGYZqnbU6eCYw" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_k7fPwOeBEeGYZqnbU6eCYw" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
              <language>Java</language>
              <body>		// Delegates dispatching (through the interaction point, to the environment) &#xD;
		// to compositeReferent&#xD;
		return this.compositeReferent.dispatchOut(operation, interactionPoint) ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_W2oYcOeCEeGYZqnbU6eCYw" name="sendOut" specification="_HdRBwOeCEeGYZqnbU6eCYw">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_hHm5AOeCEeGYZqnbU6eCYw" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_i2fcsOeCEeGYZqnbU6eCYw" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ"/>
              <language>Java</language>
              <body>		// Delegates sending (through the interaction point, to the environment) &#xD;
		// to compositeReferent&#xD;
		this.compositeReferent.sendOut(signalInstance, interactionPoint) ;</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RkFU4La1EeSLjqGQRuQPyA" name="copy" specification="_9LFbcLa0EeSLjqGQRuQPyA">
              <language>JAVA</language>
              <body>// Create a new reference with the same referent and composite referent as this reference.&#xD;
CS_Reference newValue = new CS_Reference();&#xD;
newValue.referent = this.referent;&#xD;
newValue.compositeReferent = this.compositeReferent;&#xD;
return newValue;</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_9LFbcLa0EeSLjqGQRuQPyA" name="copy" method="_RkFU4La1EeSLjqGQRuQPyA" class="_wUwMMt2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_DnfeMLa1EeSLjqGQRuQPyA" name="result" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwy6t2JEeGnO-TF_1T_iQ" name="dispatchIn" visibility="public" method="_wUwyyN2JEeGnO-TF_1T_iQ" class="_wUwMMt2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwy692JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public dispatchIn (in operation : Operation, &#xD;
                                              in interactionPoint : InteractionPoint) : Execution {&#xD;
	//Delegates dispatching to composite referent&#xD;
	return this.compositeReferent.dispatchIn(operation, &#xD;
                                                                                            interactionPoint) ;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy7N2JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy7d2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy7t2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy792JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy8N2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy8d2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy8t2JEeGnO-TF_1T_iQ" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy892JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy9N2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwy9d2JEeGnO-TF_1T_iQ" name="sendIn" visibility="public" method="_wUwy0t2JEeGnO-TF_1T_iQ" class="_wUwMMt2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwy9t2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public sendIn (in signalInstance : SignalInstance, &#xD;
                                       in interactionPoint : InteractionPoint) {&#xD;
	// delegates sending to composite referent&#xD;
	this.compositeReferent.sendIn(signalInstance, interactionPoint) ;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy992JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy-N2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy-d2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy-t2JEeGnO-TF_1T_iQ" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwy-92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwy_N2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwy_d2JEeGnO-TF_1T_iQ" name="sendOut" visibility="public" method="_wUwy2d2JEeGnO-TF_1T_iQ" class="_wUwMMt2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwy_t2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public sendOut(in signalInstance : SignalInstance, in onPort : Port) {&#xD;
	// Delegates sending (through the port, to the environment) &#xD;
	// to compositeReferent&#xD;
	this.compositeReferent.sendOut(signalInstance, onPort) ;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwy_92JEeGnO-TF_1T_iQ" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzAN2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzAd2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzAt2JEeGnO-TF_1T_iQ" name="onPort">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzA92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzBN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wUwzBd2JEeGnO-TF_1T_iQ" name="dispatchOut" visibility="public" method="_wUwy4N2JEeGnO-TF_1T_iQ" class="_wUwMMt2JEeGnO-TF_1T_iQ">
              <ownedComment xmi:type="uml:Comment" xmi:id="_wUwzBt2JEeGnO-TF_1T_iQ">
                <body>&lt;&lt;TextualRepresentation>>public dispatchOut (in operation : Operation, in onPort : Port) : Execution { &#xD;
	// Delegates dispatching (through the port, to the environment) &#xD;
	// to compositeReferent&#xD;
	return this.compositeReferent.dispatchOut(operation, onPort) ;&#xD;
}</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzB92JEeGnO-TF_1T_iQ" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzCN2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzCd2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzCt2JEeGnO-TF_1T_iQ" name="onPort">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzC92JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzDN2JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wUwzDd2JEeGnO-TF_1T_iQ" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wUwzDt2JEeGnO-TF_1T_iQ" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wUwzD92JEeGnO-TF_1T_iQ" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_-q5UkOd-EeGYZqnbU6eCYw" name="dispatchIn" method="_YUUl0Od_EeGYZqnbU6eCYw" class="_wUwMMt2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EH_PYOd_EeGYZqnbU6eCYw" name="operation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_I_5ZgOd_EeGYZqnbU6eCYw" name="onPort"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_POozsOd_EeGYZqnbU6eCYw" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_LuBXMOeAEeGYZqnbU6eCYw" name="sendIn" method="_f8HBIOeAEeGYZqnbU6eCYw" class="_wUwMMt2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_RDSywOeAEeGYZqnbU6eCYw" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_U3EmYOeAEeGYZqnbU6eCYw" name="onPort"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EvUDMOeBEeGYZqnbU6eCYw" name="dispatchOut" method="_aNfcAOeBEeGYZqnbU6eCYw" class="_wUwMMt2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_KUcfsOeBEeGYZqnbU6eCYw" name="operation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_PAQukOeBEeGYZqnbU6eCYw" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_SygRIOeBEeGYZqnbU6eCYw" name="result" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_HdRBwOeCEeGYZqnbU6eCYw" name="sendOut" method="_W2oYcOeCEeGYZqnbU6eCYw" class="_wUwMMt2JEeGnO-TF_1T_iQ">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_OD4JYOeCEeGYZqnbU6eCYw" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_UCdAoOeCEeGYZqnbU6eCYw" name="interactionPoint" type="_wUvk8d2JEeGnO-TF_1T_iQ"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_RgFd0BFAEeKT3tsL4v_Daw" name="CS_LinkKind">
            <ownedComment xmi:type="uml:Comment" xmi:id="_n_m-4BFAEeKT3tsL4v_Daw">
              <body>This enumeration enables to characterize a CS_Link with respect to given CS_Object and CS_InteractionPoint. If the given interaction point belongs to the given object, and if the given interaction point is used as an end of the link, then the links targets the environment of the object (enumeration literal ToEnvironment) if all the feature values of the link (but one for the interaction point) refer to values which are not themselves values for features of the interaction point. If all the feature values of the link refer to values which are themselves values for features of the interaction point, the link targets the internals of the object (enumeration literal ToInternal). Otherwise, the link has no particular meaning in the context defined by the object and the interaction point (enumeration literal None).</body>
            </ownedComment>
            <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_UMcWYBFAEeKT3tsL4v_Daw" name="ToEnvironment" enumeration="_RgFd0BFAEeKT3tsL4v_Daw"/>
            <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_VYG4QBFAEeKT3tsL4v_Daw" name="ToInternal" enumeration="_RgFd0BFAEeKT3tsL4v_Daw"/>
            <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_XO-TQBFAEeKT3tsL4v_Daw" name="None" enumeration="_RgFd0BFAEeKT3tsL4v_Daw"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Model" xmi:id="_0" name="fUML_Semantics">
      <packageImport xmi:type="uml:PackageImport" xmi:id="_packageImport.0" importingNamespace="_0">
        <importedPackage xmi:type="uml:Model" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#_0"/>
      </packageImport>
      <packagedElement xmi:type="uml:Package" xmi:id="Semantics" name="Semantics">
        <packagedElement xmi:type="uml:Package" xmi:id="Semantics-Classes" name="Classification" URI="">
          <packageImport xmi:type="uml:PackageImport" xmi:id="_F-y2YM7AEeWF7I4YWspV6w" importedPackage="Semantics-CommonBehaviors" importingNamespace="Semantics-Classes"/>
          <packageImport xmi:type="uml:PackageImport" xmi:id="_IHhdcM7AEeWF7I4YWspV6w" importedPackage="Semantics-Loci" importingNamespace="Semantics-Classes"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-Value" name="Value" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Value-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Value">
              <body>A value is an instance of one or more classifiers, which are its types. A value is always representable using a value specification.&#xD;
&#xD;
[Note: Value specializes SemanticVisitor to allow the Execution subclass to be a semantic visitor, without requiring multiple generalization of Execution.]</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Value-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-Value-_generalization.0" general="Semantics-Loci-LociL1-SemanticVisitor" specific="Semantics-Classes-Kernel-Value"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Value-equals" name="equals" specification="Semantics-Classes-Kernel-Value-equals.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-equals-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-equals-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-equals-otherValue-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-equals-otherValue-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if this value is equal to otherValue. To be equal, this value
// must have the same type as otherValue.
// This operation must be overridden in Value subclasses to check for
// equality of properties defined in those subclasses.

ClassifierList myTypes = this.getTypes();
ClassifierList otherTypes = otherValue.getTypes();

boolean isEqual = true;

// Debug.println(&quot;[equals] Value...&quot;);
// Debug.println(&quot;[equals] this has &quot; + myTypes.size() +
// &quot;types, other has &quot; + otherTypes.size() + &quot;.&quot;);
if (myTypes.size() != otherTypes.size()) {
	isEqual = false;

} else {
	// Debug.println(&quot;[equals] &quot; + myTypes.size() + &quot; type(s).&quot;);

	int i = 1;
	while (isEqual &amp; i &lt;= myTypes.size()) {

		// Debug.println(&quot;[equals] this type = &quot; +
		// myTypes.getValue(i-1).name);

		boolean matched = false;
		int j = 1;
		while (!matched &amp; j &lt;= otherTypes.size()) {
			// Debug.println(&quot;[equals] other type = &quot; +
			// otherTypes.getValue(j-1).name);
			matched = (otherTypes.getValue(j - 1) == myTypes
					.getValue(i - 1));
			j = j + 1;
		}

		isEqual = matched;
		i = i + 1;
	}
}

return isEqual;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Value-copy" name="copy" specification="Semantics-Classes-Kernel-Value-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new value that is equal to this value.
// By default, this operation simply creates a new value with empty
// properties.
// It must be overridden in each Value subclass to do the superclass
// copy and then appropriately set properties defined in the subclass.

return this.new_();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Value-hasType" name="hasType" specification="Semantics-Classes-Kernel-Value-hasType.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-hasType-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-hasType-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-hasType-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-hasType-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-hasType-type-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-hasType-type-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Check if this object has the given classifier as a type.

ClassifierList types = this.getTypes();

boolean found = false;
int i = 1;
while (!found &amp; i &lt;= types.size()) {
	found = (types.getValue(i - 1) == type);
	i = i + 1;
}

return found;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Value-specify" name="specify" isAbstract="true" class="Semantics-Classes-Kernel-Value">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Value-specify-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Value-specify">
                <body>Return a value specification whose evaluation gives a value equal to this value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-specify-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Value-equals.1" name="equals" method="Semantics-Classes-Kernel-Value-equals" class="Semantics-Classes-Kernel-Value">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-equals.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Value-copy.1" name="copy" method="Semantics-Classes-Kernel-Value-copy" class="Semantics-Classes-Kernel-Value">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Value-new_" name="new_" visibility="protected" isAbstract="true" class="Semantics-Classes-Kernel-Value">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Value-new_-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Value-new_">
                <body>Create a new value of the same Value subclass as this value, with all properties empty (even if this violates multiplicity constraints). &#xD;
This operation must be defined in each concrete Value subclass to create an instance of that subclass.&#xD;
&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Value-getTypes" name="getTypes" isAbstract="true" class="Semantics-Classes-Kernel-Value">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Value-getTypes-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Value-getTypes">
                <body>Gets all the classifiers under which this value is currently classifier.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-getTypes-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-getTypes-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-getTypes-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Value-hasType.1" name="hasType" method="Semantics-Classes-Kernel-Value-hasType" class="Semantics-Classes-Kernel-Value">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-hasType.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-hasType.1-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Value-toString" name="toString" isAbstract="true" class="Semantics-Classes-Kernel-Value">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Value-toString-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Value-toString">
                <body>Return a string representation of this value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Value-toString-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Gm47sM7BEeWF7I4YWspV6w" name="Values">
          <packageImport xmi:type="uml:PackageImport" xmi:id="_wahxwM7BEeWF7I4YWspV6w" importedPackage="Semantics-Loci" importingNamespace="_Gm47sM7BEeWF7I4YWspV6w"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation" name="LiteralBooleanEvaluation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralBooleanEvaluation">
              <body>A boolean evaluation is an evaluation whose specification is a literal boolean.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation" specific="Semantics-Classes-Kernel-LiteralBooleanEvaluation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Evaluate a literal boolean, producing a boolean value.

LiteralBoolean literal = (LiteralBoolean) specification;
BooleanValue booleanValue = new BooleanValue();
booleanValue.type = this.getType(&quot;Boolean&quot;);
booleanValue.value = literal.value;

return booleanValue;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate" class="Semantics-Classes-Kernel-LiteralBooleanEvaluation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation" name="LiteralEvaluation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralEvaluation">
              <body>A literal evaluation is an evaluation whose specification is a Literal Specification.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-_generalization.0" general="Semantics-Classes-Kernel-Evaluation" specific="Semantics-Classes-Kernel-LiteralEvaluation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType" name="getType" specification="Semantics-Classes-Kernel-LiteralEvaluation-getType.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#PrimitiveType"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-builtInTypeName" name="builtInTypeName">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-builtInTypeName-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-builtInTypeName-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the type of the specification. If that is null, then use the
// built-in type of the given name.

PrimitiveType type = (PrimitiveType) (this.specification.type);

if (type == null) {
	type = this.locus.factory.getBuiltInType(builtInTypeName);
}

return type;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType.1" name="getType" method="Semantics-Classes-Kernel-LiteralEvaluation-getType" class="Semantics-Classes-Kernel-LiteralEvaluation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#PrimitiveType"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType.1-builtInTypeName" name="builtInTypeName">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation" name="LiteralIntegerEvaluation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralIntegerEvaluation">
              <body>A literal integer evaluation is an evaluation whose specification is a literal integer.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation" specific="Semantics-Classes-Kernel-LiteralIntegerEvaluation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Evaluate a literal integer, producing an integer value.

LiteralInteger literal = (LiteralInteger) specification;
IntegerValue integerValue = new IntegerValue();
integerValue.type = this.getType(&quot;Integer&quot;);
integerValue.value = literal.value;

return integerValue;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate" class="Semantics-Classes-Kernel-LiteralIntegerEvaluation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation" name="LiteralNullEvaluation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralNullEvaluation">
              <body>A literal null evaluation is an evaluation whose specification is a literal null.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation" specific="Semantics-Classes-Kernel-LiteralNullEvaluation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Evaluate a literal null, returning nothing (since a null represents
// an &quot;absence of any value&quot;).

return null;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate" class="Semantics-Classes-Kernel-LiteralNullEvaluation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation" name="LiteralStringEvaluation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralStringEvaluation">
              <body>A literal string evaluation is an evaluation whose specification is a literal string.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation" specific="Semantics-Classes-Kernel-LiteralStringEvaluation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Evaluate a literal string, producing a string value.

LiteralString literal = (LiteralString) specification;
StringValue stringValue = new StringValue();
stringValue.type = this.getType(&quot;String&quot;);
stringValue.value = literal.value;

return stringValue;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate" class="Semantics-Classes-Kernel-LiteralStringEvaluation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation" name="LiteralUnlimitedNaturalEvaluation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation">
              <body>A literal unlimited natural evaluation is an evaluation whose specification is a literal unlimited natural.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation" specific="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Evaluate a literal unlimited natural producing an unlimited natural
// value.

LiteralUnlimitedNatural literal = (LiteralUnlimitedNatural) specification;
UnlimitedNaturalValue unlimitedNaturalValue = new UnlimitedNaturalValue();
unlimitedNaturalValue.type = this.getType(&quot;UnlimitedNatural&quot;);
unlimitedNaturalValue.value = literal.value;

return unlimitedNaturalValue;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate" class="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation" name="InstanceValueEvaluation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-InstanceValueEvaluation">
              <body>An instance value evaluation is an evaluation whose specification is an instance value. </body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-_generalization.0" general="Semantics-Classes-Kernel-Evaluation" specific="Semantics-Classes-Kernel-InstanceValueEvaluation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If the instance specification is for an enumeration, then return the
// identified enumeration literal.
// If the instance specification is for a data type (but not a primitive
// value or an enumeration), then create a data value of the given data
// type.
// If the instance specification is for an object, then create an object
// at the current locus with the specified types.
// Set each feature of the created value to the result of evaluating the
// value specifications for the specified slot for the feature.

// Debug.println(&quot;[evaluate] InstanceValueEvaluation...&quot;);

InstanceSpecification instance = ((InstanceValue) this.specification).instance;
ClassifierList types = instance.classifier;
Classifier myType = types.getValue(0);

Debug.println(&quot;[evaluate] type = &quot; + myType.name);

Value value;
if (instance instanceof EnumerationLiteral) {
	// Debug.println(&quot;[evaluate] Type is an enumeration.&quot;);
	EnumerationValue enumerationValue = new EnumerationValue();
	enumerationValue.type = (Enumeration) myType;
	enumerationValue.literal = (EnumerationLiteral) instance;
	value = enumerationValue;
} else {
	StructuredValue structuredValue = null;

	if (myType instanceof DataType) {
		// Debug.println(&quot;[evaluate] Type is a data type.&quot;);
		DataValue dataValue = new DataValue();
		dataValue.type = (DataType) myType;
		structuredValue = dataValue;
	} else {
		Object_ object = null;
		if (myType instanceof Behavior) {
			// Debug.println(&quot;[evaluate] Type is a behavior.&quot;);
			object = this.locus.factory.createExecution(
					(Behavior) myType, null);
		} else {
			// Debug.println(&quot;[evaluate] Type is a class.&quot;);
			object = new Object_();
			for (int i = 0; i &lt; types.size(); i++) {
				Classifier type = types.getValue(i);
				object.types.addValue((Class_) type);
			}
		}

		this.locus.add(object);

		Reference reference = new Reference();
		reference.referent = object;
		structuredValue = reference;
	}

	structuredValue.createFeatureValues();

	// Debug.println(&quot;[evaluate] &quot; + instance.slot.size() +
	// &quot; slot(s).&quot;);

	SlotList instanceSlots = instance.slot;
	for (int i = 0; i &lt; instanceSlots.size(); i++) {
		Slot slot = instanceSlots.getValue(i);
		ValueList values = new ValueList();

		// Debug.println(&quot;[evaluate] feature = &quot; +
		// slot.definingFeature.name + &quot;, &quot; + slot.value.size() +
		// &quot; value(s).&quot;);
		ValueSpecificationList slotValues = slot.value;
		for (int j = 0; j &lt; slotValues.size(); j++) {
			ValueSpecification slotValue = slotValues.getValue(j);
			// Debug.println(&quot;[evaluate] Value = &quot; +
			// slotValue.getClass().getName());
			values.addValue(this.locus.executor.evaluate(slotValue));
		}
		structuredValue
				.setFeatureValue(slot.definingFeature, values, 0);
	}

	value = structuredValue;
}

return value;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate" class="Semantics-Classes-Kernel-InstanceValueEvaluation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-Evaluation" name="Evaluation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Evaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Evaluation">
              <body>An evaluation is used to evaluate a value specification to produce a value.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Evaluation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-Evaluation-_generalization.0" general="Semantics-Loci-LociL1-SemanticVisitor" specific="Semantics-Classes-Kernel-Evaluation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-Evaluation-specification" name="specification" association="Semantics-Classes-Kernel-A_specification_evaluation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Evaluation-specification-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Evaluation-specification">
                <body>The value specification to be evaluated.</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Evaluation-specification-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Evaluation-specification-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-Evaluation-locus" name="locus" type="Semantics-Loci-LociL1-Locus" association="Semantics-Classes-Kernel-A_locus_evaluation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Evaluation-locus-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Evaluation-locus">
                <body>The locus at which this evaluation is taking place.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Evaluation-locus-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Evaluation-locus-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Evaluation-evaluate" name="evaluate" isAbstract="true" class="Semantics-Classes-Kernel-Evaluation" isQuery="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Evaluation-evaluate-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Evaluation-evaluate">
                <body>Evaluate the specification, returning the resulting value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Evaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Evaluation-evaluate-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Evaluation-evaluate-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_specification_evaluation" name="A_specification_evaluation" visibility="private" memberEnd="Semantics-Classes-Kernel-Evaluation-specification Semantics-Classes-Kernel-A_specification_evaluation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_specification_evaluation-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-Evaluation" owningAssociation="Semantics-Classes-Kernel-A_specification_evaluation" association="Semantics-Classes-Kernel-A_specification_evaluation">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_specification_evaluation-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_specification_evaluation-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_locus_evaluation" name="A_locus_evaluation" visibility="private" memberEnd="Semantics-Classes-Kernel-Evaluation-locus Semantics-Classes-Kernel-A_locus_evaluation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_locus_evaluation-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-Evaluation" owningAssociation="Semantics-Classes-Kernel-A_locus_evaluation" association="Semantics-Classes-Kernel-A_locus_evaluation">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_locus_evaluation-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_locus_evaluation-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LzvbEM7BEeWF7I4YWspV6w" name="SimpleClassifiers">
          <packageImport xmi:type="uml:PackageImport" xmi:id="_m_ygMM7CEeWF7I4YWspV6w" importedPackage="Semantics-Classes" importingNamespace="_LzvbEM7BEeWF7I4YWspV6w"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-StructuredValue" name="StructuredValue" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-StructuredValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-StructuredValue">
              <body>A structured value is a Value whose type has structural features: a data type (but not a primitive type or enumeration), a class or an association.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-StructuredValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-StructuredValue-_generalization.0" general="Semantics-Classes-Kernel-Value" specific="Semantics-Classes-Kernel-StructuredValue"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-specify" name="specify" specification="Semantics-Classes-Kernel-StructuredValue-specify.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-specify-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-specify-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-specify-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return an instance value that specifies this structured value.

// Debug.println(&quot;[specify] StructuredValue...&quot;);

InstanceValue instanceValue = new InstanceValue();
InstanceSpecification instance = new InstanceSpecification();

instanceValue.type = null;
instanceValue.instance = instance;

instance.classifier = this.getTypes();

FeatureValueList featureValues = this.getFeatureValues();
// Debug.println(&quot;[specify] &quot; + featureValues.size() + &quot; feature(s).&quot;);

for (int i = 0; i &lt; featureValues.size(); i++) {
	FeatureValue featureValue = featureValues.getValue(i);

	Slot slot = new Slot();
	slot.definingFeature = featureValue.feature;

	// Debug.println(&quot;[specify] feature = &quot; + featureValue.feature.name
	// + &quot;, &quot; + featureValue.values.size() + &quot; value(s).&quot;);

	ValueList values = featureValue.values;
	for (int j = 0; j &lt; values.size(); j++) {
		Value value = values.getValue(j);
		// Debug.println(&quot;[specify] value = &quot; + value);
		slot.value.addValue(value.specify());
	}

	instance.slot.addValue(slot);
}

return instanceValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-createFeatureValues" name="createFeatureValues" specification="Semantics-Classes-Kernel-StructuredValue-createFeatureValues.1">
              <language>Java</language>
              <body>// Create empty feature values for all structural features of the types 
// of this structured value and all its supertypes (including private
// features that are not inherited).

this.addFeatureValues(new FeatureValueList());
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues" name="getMemberValues" specification="Semantics-Classes-Kernel-StructuredValue-getMemberValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues-result" name="result" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues-result-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues-result-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the feature values for this structured value that are for structural
// features that are members of one of the types of the structured value.
// (That is, they are owned are inherited, excluding private features of
// supertypes that are not inherited.)

FeatureValueList featureValues = this.getFeatureValues();
FeatureValueList memberValues = new FeatureValueList();

ClassifierList types = this.getTypes();
for (int i = 0; i &lt; featureValues.size(); i++) {
	FeatureValue featureValue = featureValues.getValue(i);
	Boolean isMember = false;
	int j = 1;
	while (j &lt;= types.size() &amp; !isMember) {
		Classifier type = types.getValue(j-1);
		NamedElementList members = type.member;
		int k = 1;
		while (k &lt;= members.size() &amp; !isMember) {
			NamedElement member = members.getValue(k-1);
			isMember = featureValue.feature == member;
			k = k + 1;
		}
		j = j + 1;
	}
	if (isMember) {
		memberValues.addValue(featureValue);
	}
}

return memberValues;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues" name="addFeatureValues" specification="Semantics-Classes-Kernel-StructuredValue-addFeatureValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues-oldFeatureValues" name="oldFeatureValues" type="Semantics-Classes-Kernel-FeatureValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues-oldFeatureValues-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues-oldFeatureValues-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add feature values for all structural features of the types 
// of this structured value and all its supertypes (including private
// features that are not inherited). If a feature has an old feature 
// value in the given list, then use that to initialize the values of 
// the corresponding new feature value. Otherwise leave the values of 
// the new feature value empty.

ClassifierList types = this.getTypes();

for (int i = 0; i &lt; types.size(); i++) {
	Classifier type = types.getValue(i);
	this.addFeatureValuesForType(type, oldFeatureValues);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType" name="addFeatureValuesForType" specification="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType-oldFeatureValues" name="oldFeatureValues" type="Semantics-Classes-Kernel-FeatureValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType-oldFeatureValues-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType-oldFeatureValues-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add feature values for all structural features of the given type and
// all of its supertypes (including private features that are not
// inherited). If a feature has an old feature value in the given list,
// then use that to initialize the values of the corresponding new
// feature value. Otherwise leave the values of the new feature value
// empty.

// Set feature values for the owned structural features of the given
// type. (Any common structural values that have already been added
// previously will simply have their values set again.)
NamedElementList ownedMembers = type.ownedMember;
for (int j = 0; j &lt; ownedMembers.size(); j++) {
	NamedElement ownedMember = ownedMembers.getValue(j);
	if (ownedMember instanceof StructuralFeature) {
		this.setFeatureValue((StructuralFeature) ownedMember, 
			this.getValues(ownedMember, oldFeatureValues), 0);
	}
}

// Add feature values for the structural features of the supertypes
// of the given type. (Note that the feature values for supertype
// features always come after the feature values for owned features.)
ClassifierList supertypes = type.general;		
for (int i = 0; i &lt; supertypes.size(); i++) {
	Classifier supertype = supertypes.getValue(i);
	this.addFeatureValuesForType(supertype, oldFeatureValues);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues" name="getValues" specification="Semantics-Classes-Kernel-StructuredValue-getValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#NamedElement"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-featureValues" name="featureValues" type="Semantics-Classes-Kernel-FeatureValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-featureValues-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-featureValues-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-result" name="result" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-result-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-result-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the values from the feature value in the given list for the 
// given feature. If there is no such feature value, return an empty
// list.

FeatureValue foundFeatureValue = null;

int i = 1;
while (foundFeatureValue == null &amp; i &lt;= featureValues.size()) {
	FeatureValue featureValue = featureValues.getValue(i-1);
	if (featureValue.feature == feature) {
		foundFeatureValue = featureValue;
	}
	i = i + 1;
}

ValueList values;
if (foundFeatureValue == null) {
	values = new ValueList();
} else {
	values = foundFeatureValue.values;
}

return values;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StructuredValue-specify.1" name="specify" method="Semantics-Classes-Kernel-StructuredValue-specify" class="Semantics-Classes-Kernel-StructuredValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValue" name="getFeatureValue" isAbstract="true" class="Semantics-Classes-Kernel-StructuredValue">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-StructuredValue-getFeatureValue">
                <body>Get the feature value associated with the given feature. &#xD;
The given feature must be a structural feature of the type of the structured value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValue-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue" name="setFeatureValue" isAbstract="true" class="Semantics-Classes-Kernel-StructuredValue">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-StructuredValue-setFeatureValue">
                <body>Set the value(s) and, optionally, the position index associated with the given feature. &#xD;
The given feature must be a structural feature of the type of the structured value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-values" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-values-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-values-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-position" name="position">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-position-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-position-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValues" name="getFeatureValues" isAbstract="true" class="Semantics-Classes-Kernel-StructuredValue">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValues-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-StructuredValue-getFeatureValues">
                <body>Return the feature values associated with this structural value.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValues-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValues-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StructuredValue-createFeatureValues.1" name="createFeatureValues" method="Semantics-Classes-Kernel-StructuredValue-createFeatureValues" class="Semantics-Classes-Kernel-StructuredValue"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues.1" name="getMemberValues" method="Semantics-Classes-Kernel-StructuredValue-getMemberValues" class="Semantics-Classes-Kernel-StructuredValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues.1-result" name="result" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues.1-result-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues.1-result-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues.1" name="addFeatureValues" method="Semantics-Classes-Kernel-StructuredValue-addFeatureValues" class="Semantics-Classes-Kernel-StructuredValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues.1-oldFeatureValues" name="oldFeatureValues" type="Semantics-Classes-Kernel-FeatureValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues.1-oldFeatureValues-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues.1-oldFeatureValues-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1" name="addFeatureValuesForType" method="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType" class="Semantics-Classes-Kernel-StructuredValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1-oldFeatureValues" name="oldFeatureValues" type="Semantics-Classes-Kernel-FeatureValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1-oldFeatureValues-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1-oldFeatureValues-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1" name="getValues" method="Semantics-Classes-Kernel-StructuredValue-getValues" class="Semantics-Classes-Kernel-StructuredValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#NamedElement"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-featureValues" name="featureValues" type="Semantics-Classes-Kernel-FeatureValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-featureValues-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-featureValues-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-result" name="result" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-result-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-result-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue" name="UnlimitedNaturalValue">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-UnlimitedNaturalValue">
              <body>An unlimited natural value is a primitive value whose type is UnlimitedNatural.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-_generalization.0" general="Semantics-Classes-Kernel-PrimitiveValue" specific="Semantics-Classes-Kernel-UnlimitedNaturalValue"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-value" name="value">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-value-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-UnlimitedNaturalValue-value">
                <body>The actual unlimited natural value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify" name="specify" specification="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return a literal unlimited natural with the value of this unlimited
// natural value.

LiteralUnlimitedNatural literal = new LiteralUnlimitedNatural();

literal.type = this.type;
literal.value = this.value;

return literal;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals" name="equals" specification="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-otherValue-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-otherValue-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if this unlimited natural value is equal to the otherValue.
// To be equal, the otherValue must have the same value as this
// unlimited natural value.

boolean isEqual = false;
if (otherValue instanceof UnlimitedNaturalValue) {
	isEqual = ((UnlimitedNaturalValue) otherValue).value.naturalValue == this.value.naturalValue;
}

return isEqual;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy" name="copy" specification="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new unlimited natural value with the same value as this
// value.

UnlimitedNaturalValue newValue = (UnlimitedNaturalValue) (super.copy());

newValue.value = this.value;
return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_" name="new_" specification="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new unlimited natural value with no value.

return new UnlimitedNaturalValue();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString" name="toString" specification="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>String stringValue = &quot;*&quot;;

if (this.value.naturalValue >= 0) {
	IntegerValue integerValue = new IntegerValue();
	integerValue.value = this.value.naturalValue;
	stringValue = integerValue.toString();
}

return stringValue;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify.1" name="specify" method="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify" class="Semantics-Classes-Kernel-UnlimitedNaturalValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals.1" name="equals" method="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals" class="Semantics-Classes-Kernel-UnlimitedNaturalValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy.1" name="copy" method="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy" class="Semantics-Classes-Kernel-UnlimitedNaturalValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_" class="Semantics-Classes-Kernel-UnlimitedNaturalValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString.1" name="toString" method="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString" class="Semantics-Classes-Kernel-UnlimitedNaturalValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-StringValue" name="StringValue">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-StringValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-StringValue">
              <body>A string value is a primitive value whose type is String.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-StringValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-StringValue-_generalization.0" general="Semantics-Classes-Kernel-PrimitiveValue" specific="Semantics-Classes-Kernel-StringValue"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-StringValue-value" name="value">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StringValue-specify" name="specify" specification="Semantics-Classes-Kernel-StringValue-specify.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-specify-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-specify-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-specify-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return a literal string with the value of this string value.

LiteralString literal = new LiteralString();

literal.type = this.type;
literal.value = this.value;

return literal;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StringValue-equals" name="equals" specification="Semantics-Classes-Kernel-StringValue-equals.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-equals-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-equals-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-equals-otherValue-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-equals-otherValue-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if this string value is equal to the otherValue.
// To be equal, the otherValue must have the same value as this string
// value.

boolean isEqual = false;
if (otherValue instanceof StringValue) {
	isEqual = ((StringValue) otherValue).value.equals(this.value);
}

return isEqual;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StringValue-copy" name="copy" specification="Semantics-Classes-Kernel-StringValue-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new string value with the same value as this string value.

StringValue newValue = (StringValue) (super.copy());

newValue.value = this.value;
return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StringValue-new_" name="new_" specification="Semantics-Classes-Kernel-StringValue-new_.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-new_-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-new_-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new string value with no value.

return new StringValue();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StringValue-toString" name="toString" specification="Semantics-Classes-Kernel-StringValue-toString.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-toString-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-toString-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-toString-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>return value;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StringValue-specify.1" name="specify" method="Semantics-Classes-Kernel-StringValue-specify" class="Semantics-Classes-Kernel-StringValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StringValue-equals.1" name="equals" method="Semantics-Classes-Kernel-StringValue-equals" class="Semantics-Classes-Kernel-StringValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StringValue-copy.1" name="copy" method="Semantics-Classes-Kernel-StringValue-copy" class="Semantics-Classes-Kernel-StringValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StringValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-StringValue-new_" class="Semantics-Classes-Kernel-StringValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-StringValue-toString.1" name="toString" method="Semantics-Classes-Kernel-StringValue-toString" class="Semantics-Classes-Kernel-StringValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-StringValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-PrimitiveValue" name="PrimitiveValue" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-PrimitiveValue">
              <body>A primitive value is a value whose (single) type is a primitive type.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-_generalization.0" general="Semantics-Classes-Kernel-Value" specific="Semantics-Classes-Kernel-PrimitiveValue"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-type" name="type" association="Semantics-Classes-Kernel-A_type_primitiveValue">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#PrimitiveType"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-type-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-type-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy" name="copy" specification="Semantics-Classes-Kernel-PrimitiveValue-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new value that is equal to this primitive value.

PrimitiveValue newValue = (PrimitiveValue) (super.copy());

newValue.type = this.type;
return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-PrimitiveValue-getTypes.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the single primitive type of this value.

ClassifierList types = new ClassifierList();
types.addValue(this.type);
return types;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy.1" name="copy" method="Semantics-Classes-Kernel-PrimitiveValue-copy" class="Semantics-Classes-Kernel-PrimitiveValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-PrimitiveValue-getTypes" class="Semantics-Classes-Kernel-PrimitiveValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-IntegerValue" name="IntegerValue">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-IntegerValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-IntegerValue">
              <body>An integer value is a primitive value whose type is Integer.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-IntegerValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-IntegerValue-_generalization.0" general="Semantics-Classes-Kernel-PrimitiveValue" specific="Semantics-Classes-Kernel-IntegerValue"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-IntegerValue-value" name="value">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-IntegerValue-value-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-IntegerValue-value">
                <body>The actual Integer value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-IntegerValue-specify" name="specify" specification="Semantics-Classes-Kernel-IntegerValue-specify.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-specify-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-specify-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-specify-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return a literal integer with the value of this integer value.

LiteralInteger literal = new LiteralInteger();

literal.type = this.type;
literal.value = this.value;

return literal;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals" name="equals" specification="Semantics-Classes-Kernel-IntegerValue-equals.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-otherValue-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-otherValue-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if this integer value is equal to the otherValue.
// To be equal, the otherValue must have the same value as this integer
// value.

boolean isEqual = false;
if (otherValue instanceof IntegerValue) {
	isEqual = ((IntegerValue) otherValue).value == this.value;
}

return isEqual;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-IntegerValue-copy" name="copy" specification="Semantics-Classes-Kernel-IntegerValue-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new integer value with the same value as this integer value.

IntegerValue newValue = (IntegerValue) (super.copy());

newValue.value = this.value;
return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-IntegerValue-new_" name="new_" specification="Semantics-Classes-Kernel-IntegerValue-new_.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-new_-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-new_-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new integer value with no value.

return new IntegerValue();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-IntegerValue-toString" name="toString" specification="Semantics-Classes-Kernel-IntegerValue-toString.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-toString-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-toString-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-toString-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>String stringValue = &quot;&quot;;

if (this.value == 0) {
	stringValue = &quot;0&quot;;
} else {
	int positiveValue = this.value;

	if (positiveValue &lt; 0) {
		positiveValue = -positiveValue;
	}

	do {
		int digit = positiveValue % 10;

		if (digit == 0) {
			stringValue = &quot;0&quot; + stringValue;
		} else if (digit == 1) {
			stringValue = &quot;1&quot; + stringValue;
		} else if (digit == 2) {
			stringValue = &quot;2&quot; + stringValue;
		} else if (digit == 3) {
			stringValue = &quot;3&quot; + stringValue;
		} else if (digit == 4) {
			stringValue = &quot;4&quot; + stringValue;
		} else if (digit == 5) {
			stringValue = &quot;5&quot; + stringValue;
		} else if (digit == 6) {
			stringValue = &quot;6&quot; + stringValue;
		} else if (digit == 7) {
			stringValue = &quot;7&quot; + stringValue;
		} else if (digit == 8) {
			stringValue = &quot;8&quot; + stringValue;
		} else if (digit == 9) {
			stringValue = &quot;9&quot; + stringValue;
		}

		positiveValue = positiveValue / 10;
	} while (positiveValue > 0);

	if (this.value &lt; 0) {
		stringValue = &quot;-&quot; + stringValue;
	}
}

return stringValue;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-IntegerValue-specify.1" name="specify" method="Semantics-Classes-Kernel-IntegerValue-specify" class="Semantics-Classes-Kernel-IntegerValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals.1" name="equals" method="Semantics-Classes-Kernel-IntegerValue-equals" class="Semantics-Classes-Kernel-IntegerValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-IntegerValue-copy.1" name="copy" method="Semantics-Classes-Kernel-IntegerValue-copy" class="Semantics-Classes-Kernel-IntegerValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-IntegerValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-IntegerValue-new_" class="Semantics-Classes-Kernel-IntegerValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-IntegerValue-toString.1" name="toString" method="Semantics-Classes-Kernel-IntegerValue-toString" class="Semantics-Classes-Kernel-IntegerValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-IntegerValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-FeatureValue" name="FeatureValue">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-FeatureValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-FeatureValue">
              <body>A feature value gives the value(s) that a single structural feature has in a specific structured value.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-FeatureValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-FeatureValue-feature" name="feature" association="Semantics-Classes-Kernel-A_feature_featureValue">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-FeatureValue-feature-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-FeatureValue-feature">
                <body>The structural feature being given value(s).</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-feature-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-feature-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-FeatureValue-values" name="values" type="Semantics-Classes-Kernel-Value" isOrdered="true" isUnique="false" aggregation="composite" association="Semantics-Classes-Kernel-A_values_featureValue">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-FeatureValue-values-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-FeatureValue-values">
                <body>The values of for the feature. Zero or more values are possible, as constrained by the multiplicity of the feature.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-values-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-values-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-FeatureValue-position" name="position">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-FeatureValue-position-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-FeatureValue-position">
                <body>The position of this feature value in a set of ordered values for a feature of an association.&#xD;
[This is only relevant if the feature value is for a link and the feature is ordered.]</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-position-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-position-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues" name="hasEqualValues" specification="Semantics-Classes-Kernel-FeatureValue-hasEqualValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-other" name="other" type="Semantics-Classes-Kernel-FeatureValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-other-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-other-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Determine if this feature value has an equal set of values as another
// feature value.
// If the feature is ordered, then the values also have to be in the
// same order.

boolean equal = true;

if (this.values.size() != other.values.size()) {
	equal = false;

} else {

	// Debug.println(&quot;[hasEqualValues] feature = &quot; + this.feature.name +
	// &quot;, &quot; + this.values.size() + &quot; value(s).&quot;);

	if (this.feature.multiplicityElement.isOrdered) {
		int i = 1;
		while (equal &amp; i &lt;= this.values.size()) {
			equal = this.values.getValue(i - 1).equals(
					other.values.getValue(i - 1));
			i = i + 1;
		}

	} else {
		// Note: otherFeatureValues is used here solely as a holder for
		// a copy of the list of other values,
		// since the Java to UML mapping conventions do not allow
		// &quot;remove&quot; on a local list variable.
		FeatureValue otherFeatureValues = new FeatureValue();
		ValueList values = other.values;
		for (int i = 0; i &lt; values.size(); i++) {
			Value value = values.getValue(i);
			otherFeatureValues.values.addValue(value);
		}

		int i = 1;
		while (equal &amp; i &lt;= this.values.size()) {
			// Debug.println(&quot;[hasEqualValues] This value [&quot; + (i-1) +
			// &quot;] = &quot; + this.values.getValue(i-1));

			boolean matched = false;
			int j = 1;
			while (!matched &amp; j &lt;= otherFeatureValues.values.size()) {
				if (this.values.getValue(i - 1).equals(
						otherFeatureValues.values.getValue(j - 1))) {
					// Debug.println(&quot;[hasEqualValues] Other value [&quot; +
					// (j-1) + &quot;] = &quot; +
					// otherFeatureValues.values.getValue(j-1));
					matched = true;
					otherFeatureValues.values.remove(j - 1);
				}
				j = j + 1;
			}

			equal = matched;
			i = i + 1;
		}
	}
}

return equal;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-FeatureValue-copy" name="copy" specification="Semantics-Classes-Kernel-FeatureValue-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-FeatureValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a copy of this feature value.

FeatureValue newValue = new FeatureValue();

newValue.feature = this.feature;
newValue.position = this.position;

ValueList values = this.values;
for (int i = 0; i &lt; values.size(); i++) {
	Value value = values.getValue(i);
	newValue.values.addValue(value.copy());
}

return newValue;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues.1" name="hasEqualValues" method="Semantics-Classes-Kernel-FeatureValue-hasEqualValues" class="Semantics-Classes-Kernel-FeatureValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues.1-other" name="other" type="Semantics-Classes-Kernel-FeatureValue"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-FeatureValue-copy.1" name="copy" method="Semantics-Classes-Kernel-FeatureValue-copy" class="Semantics-Classes-Kernel-FeatureValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-FeatureValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-EnumerationValue" name="EnumerationValue">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-EnumerationValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-EnumerationValue">
              <body>An enumeration value is a value whose (single) type is an enumeration. &#xD;
It's literal must be an owned literal of it's type.&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-EnumerationValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-EnumerationValue-_generalization.0" general="Semantics-Classes-Kernel-Value" specific="Semantics-Classes-Kernel-EnumerationValue"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-EnumerationValue-literal" name="literal" association="Semantics-Classes-Kernel-A_literal_enumerationValue">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-EnumerationValue-literal-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-EnumerationValue-literal">
                <body>The literal value of this enumeration value.</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#EnumerationLiteral"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-literal-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-literal-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-EnumerationValue-type" name="type" association="Semantics-Classes-Kernel-A_type_enumerationValue">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Enumeration"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-type-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-type-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify" name="specify" specification="Semantics-Classes-Kernel-EnumerationValue-specify.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return an instance value with literal as the instance.

InstanceValue instanceValue = new InstanceValue();
InstanceSpecification instance = new InstanceSpecification();

instanceValue.type = this.type;
instanceValue.instance = this.literal;

return instanceValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals" name="equals" specification="Semantics-Classes-Kernel-EnumerationValue-equals.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-otherValue-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-otherValue-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if this enumeration value is equal to the otherValue.
// To be equal, the otherValue must also be an enumeration value with
// the same literal as this enumeration value.

boolean isEqual = false;
if (otherValue instanceof EnumerationValue) {
	isEqual = ((EnumerationValue) otherValue).literal == this.literal;
}

return isEqual;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy" name="copy" specification="Semantics-Classes-Kernel-EnumerationValue-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new enumeration value with the same literal as this
// enumeration value.

EnumerationValue newValue = (EnumerationValue) (super.copy());

newValue.type = this.type;
newValue.literal = this.literal;

return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_" name="new_" specification="Semantics-Classes-Kernel-EnumerationValue-new_.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new enumeration value with no literal.

return new EnumerationValue();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-EnumerationValue-getTypes.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the single type of this enumeration value.

ClassifierList types = new ClassifierList();
types.addValue(this.type);

return types;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString" name="toString" specification="Semantics-Classes-Kernel-EnumerationValue-toString.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>return literal.name;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify.1" name="specify" method="Semantics-Classes-Kernel-EnumerationValue-specify" class="Semantics-Classes-Kernel-EnumerationValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals.1" name="equals" method="Semantics-Classes-Kernel-EnumerationValue-equals" class="Semantics-Classes-Kernel-EnumerationValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy.1" name="copy" method="Semantics-Classes-Kernel-EnumerationValue-copy" class="Semantics-Classes-Kernel-EnumerationValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-EnumerationValue-new_" class="Semantics-Classes-Kernel-EnumerationValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-EnumerationValue-getTypes" class="Semantics-Classes-Kernel-EnumerationValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString.1" name="toString" method="Semantics-Classes-Kernel-EnumerationValue-toString" class="Semantics-Classes-Kernel-EnumerationValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-DataValue" name="DataValue">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-DataValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-DataValue">
              <body>A data value is a compund value whose (single) type is a data type other than a primitive type or an enumeration.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-DataValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-DataValue-_generalization.0" general="Semantics-Classes-Kernel-CompoundValue" specific="Semantics-Classes-Kernel-DataValue"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-DataValue-type" name="type" association="Semantics-Classes-Kernel-A_type_dataValue">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-DataValue-type-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-DataValue-type">
                <body>The type of this data value. This must not be a primitive or an enumeration.</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#DataType"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DataValue-type-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DataValue-type-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-DataValue-getTypes.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the single type of this data value.

ClassifierList types = new ClassifierList();
types.addValue(this.type);

return types;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-DataValue-copy" name="copy" specification="Semantics-Classes-Kernel-DataValue-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DataValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DataValue-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DataValue-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new data value with the same type and feature values as this
// data value.

DataValue newValue = (DataValue) (super.copy());

newValue.type = this.type;

return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-DataValue-new_" name="new_" specification="Semantics-Classes-Kernel-DataValue-new_.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DataValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DataValue-new_-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DataValue-new_-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new data value with no type or feature values.

return new DataValue();
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-DataValue-getTypes" class="Semantics-Classes-Kernel-DataValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-DataValue-copy.1" name="copy" method="Semantics-Classes-Kernel-DataValue-copy" class="Semantics-Classes-Kernel-DataValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DataValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-DataValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-DataValue-new_" class="Semantics-Classes-Kernel-DataValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DataValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-CompoundValue" name="CompoundValue" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-CompoundValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-CompoundValue">
              <body>A compound value is a structured value with by-value semantics. Values are associated with each structural feature specified by the type(s) of the compound value.&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-CompoundValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-CompoundValue-_generalization.0" general="Semantics-Classes-Kernel-StructuredValue" specific="Semantics-Classes-Kernel-CompoundValue"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-CompoundValue-featureValues" name="featureValues" type="Semantics-Classes-Kernel-FeatureValue" aggregation="composite" association="Semantics-Classes-Kernel-A_featureValues_compoundValue">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-featureValues-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-featureValues-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals" name="equals" specification="Semantics-Classes-Kernel-CompoundValue-equals.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-otherValue-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-otherValue-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if this data value is equal to the otherValue.
// To be equal, the otherValue must also be a compund value with the
// same types and equal values for each feature.

// Debug.println(&quot;[equals] othervalue instanceof CompoundValue = &quot; + (otherValue instanceof CompoundValue));
// Debug.println(&quot;[equals] super.equals(otherValue) = &quot; + super.equals(otherValue));

boolean isEqual = otherValue instanceof CompoundValue;

if (isEqual) {

	CompoundValue otherCompoundValue = (CompoundValue) otherValue;
	// Debug.println(&quot;[equals] &quot; + this.featureValues.size() +
	// &quot; feature(s).&quot;);

	isEqual = super.equals(otherValue)
			&amp; otherCompoundValue.featureValues.size() == this.featureValues
					.size();

	int i = 1;
	while (isEqual &amp; i &lt;= this.featureValues.size()) {
		FeatureValue thisFeatureValue = this.featureValues
				.getValue(i - 1);

		boolean matched = false;
		int j = 1;
		while (!matched &amp; j &lt;= otherCompoundValue.featureValues.size()) {
			FeatureValue otherFeatureValue = otherCompoundValue.featureValues
					.getValue(j - 1);
			if (thisFeatureValue.feature == otherFeatureValue.feature) {
				matched = thisFeatureValue
						.hasEqualValues(otherFeatureValue);
			}
			j = j + 1;
		}

		isEqual = matched;
		i = i + 1;
	}
}

return isEqual;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-copy" name="copy" specification="Semantics-Classes-Kernel-CompoundValue-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new data value with the same featureValues as this data
// value.

CompoundValue newValue = (CompoundValue) (super.copy());

FeatureValueList featureValues = this.featureValues;
for (int i = 0; i &lt; featureValues.size(); i++) {
	FeatureValue featureValue = featureValues.getValue(i);
	newValue.featureValues.addValue(featureValue.copy());
}

return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue" name="getFeatureValue" specification="Semantics-Classes-Kernel-CompoundValue-getFeatureValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-feature-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-feature-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the value(s) of the member of featureValues for the given
// feature.

FeatureValue featureValue = null;
int i = 1;
while (featureValue == null &amp; i &lt;= this.featureValues.size()) {
	if (this.featureValues.getValue(i - 1).feature == feature) {
		featureValue = this.featureValues.getValue(i - 1);
	}
	i = i + 1;
}

return featureValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue" name="setFeatureValue" specification="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-feature-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-feature-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-values" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-values-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-values-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-position" name="position">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-position-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-position-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Set the value(s) of the member of featureValues for the given
// feature.

FeatureValue featureValue = this.getFeatureValue(feature);

if (featureValue == null) {
	featureValue = new FeatureValue();
	this.featureValues.addValue(featureValue);
}

featureValue.feature = feature;
featureValue.values = values;
featureValue.position = position;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues" name="getFeatureValues" specification="Semantics-Classes-Kernel-CompoundValue-getFeatureValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the feature values for this compound value.

return this.featureValues;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-toString" name="toString" specification="Semantics-Classes-Kernel-CompoundValue-toString.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-toString-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-toString-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-toString-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>String buffer = &quot;(&quot;;

ClassifierList types = this.getTypes();

int i = 1;
while (i &lt;= types.size()) {
	if (i != 1) {
		buffer = buffer + &quot; &quot;;
	}
	buffer = buffer + types.getValue(i - 1).name;
	i = i + 1;
}

int k = 1;
while (k &lt;= this.featureValues.size()) {
	FeatureValue featureValue = this.featureValues.getValue(k - 1);
	buffer = buffer + &quot;\n\t\t&quot; + featureValue.feature.name + &quot;[&quot;
			+ featureValue.position + &quot;]  =&quot;;

	int j = 1;
	while (j &lt;= featureValue.values.size()) {
		Value value = featureValue.values.getValue(j - 1);
		if (value instanceof Reference) {
			Object_ object = ((Reference)value).referent;
			buffer = buffer + &quot; Reference to &quot; + object.identifier + &quot;(&quot;;
			types = object.getTypes();
			int n = 1;
			while (n &lt;= types.size()) {
				if (n != 1) {
					buffer = buffer + &quot; &quot;;
				}
				buffer = buffer + types.getValue(n - 1).name;
				n = n + 1;
			}
			buffer = buffer + &quot;)&quot;;
		} else {
			buffer = buffer + &quot; &quot; + value.toString();
		}
		j = j + 1;
	}

	k = k + 1;
}

return buffer + &quot;)&quot;;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals.1" name="equals" method="Semantics-Classes-Kernel-CompoundValue-equals" class="Semantics-Classes-Kernel-CompoundValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-CompoundValue-copy.1" name="copy" method="Semantics-Classes-Kernel-CompoundValue-copy" class="Semantics-Classes-Kernel-CompoundValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue.1" name="getFeatureValue" method="Semantics-Classes-Kernel-CompoundValue-getFeatureValue" class="Semantics-Classes-Kernel-CompoundValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue.1-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1" name="setFeatureValue" method="Semantics-Classes-Kernel-CompoundValue-setFeatureValue" class="Semantics-Classes-Kernel-CompoundValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-values" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-values-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-values-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-position" name="position">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-position-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-position-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues.1" name="getFeatureValues" method="Semantics-Classes-Kernel-CompoundValue-getFeatureValues" class="Semantics-Classes-Kernel-CompoundValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-CompoundValue-toString.1" name="toString" method="Semantics-Classes-Kernel-CompoundValue-toString" class="Semantics-Classes-Kernel-CompoundValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-CompoundValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-BooleanValue" name="BooleanValue">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-BooleanValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-BooleanValue">
              <body>A boolean value is a primitive value whose type is Boolean.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-BooleanValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-BooleanValue-_generalization.0" general="Semantics-Classes-Kernel-PrimitiveValue" specific="Semantics-Classes-Kernel-BooleanValue"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-BooleanValue-value" name="value">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-BooleanValue-value-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-BooleanValue-value">
                <body>The actual Boolean value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-BooleanValue-specify" name="specify" specification="Semantics-Classes-Kernel-BooleanValue-specify.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-specify-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-specify-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-specify-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return a literal boolean with the value of this boolean value.

LiteralBoolean literal = new LiteralBoolean();

literal.type = this.type;
literal.value = this.value;

return literal;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals" name="equals" specification="Semantics-Classes-Kernel-BooleanValue-equals.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-otherValue-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-otherValue-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if this boolean value is equal to the otherValue.
// To be equal, the otherValue must have the same value as this boolean
// value.

boolean isEqual = false;
if (otherValue instanceof BooleanValue) {
	isEqual = ((BooleanValue) otherValue).value == this.value;
}

return isEqual;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-BooleanValue-copy" name="copy" specification="Semantics-Classes-Kernel-BooleanValue-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new boolean value with the same value as this boolean value.

BooleanValue newValue = (BooleanValue) (super.copy());

newValue.value = this.value;
return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-BooleanValue-new_" name="new_" specification="Semantics-Classes-Kernel-BooleanValue-new_.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-new_-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-new_-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return a new boolean value with no value.

return new BooleanValue();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-BooleanValue-toString" name="toString" specification="Semantics-Classes-Kernel-BooleanValue-toString.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-toString-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-toString-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-toString-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>String stringValue = &quot;false&quot;;

if (this.value) {
	stringValue = &quot;true&quot;;
}

return stringValue;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-BooleanValue-specify.1" name="specify" method="Semantics-Classes-Kernel-BooleanValue-specify" class="Semantics-Classes-Kernel-BooleanValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals.1" name="equals" method="Semantics-Classes-Kernel-BooleanValue-equals" class="Semantics-Classes-Kernel-BooleanValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-BooleanValue-copy.1" name="copy" method="Semantics-Classes-Kernel-BooleanValue-copy" class="Semantics-Classes-Kernel-BooleanValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-BooleanValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-BooleanValue-new_" class="Semantics-Classes-Kernel-BooleanValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-BooleanValue-toString.1" name="toString" method="Semantics-Classes-Kernel-BooleanValue-toString" class="Semantics-Classes-Kernel-BooleanValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-BooleanValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation" name="LiteralRealEvaluation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralRealEvaluation">
              <body>A literal real evaluation is an evaluation whose specification is a literal real.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation" specific="Semantics-Classes-Kernel-LiteralRealEvaluation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate.1">
              <language>Java</language>
              <body>// Evaluate a real integer, producing a real value.

LiteralReal literal = (LiteralReal) specification;
RealValue realValue = new RealValue();
realValue.type = this.getType(&quot;Real&quot;);
realValue.value = literal.value;
return realValue;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate" class="Semantics-Classes-Kernel-LiteralRealEvaluation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate.1-Parameter1" name="Parameter1" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate.1-Parameter1-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate.1-Parameter1-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-RealValue" name="RealValue">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-RealValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-RealValue">
              <body>A real value is a primitive value whose type is Real.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-RealValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-RealValue-_generalization.0" general="Semantics-Classes-Kernel-PrimitiveValue" specific="Semantics-Classes-Kernel-RealValue"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-RealValue-value" name="value" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-RealValue-value-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-RealValue-value">
                <body>The actual Real value.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#_Iunz8GqlEd-4nvrqhtGdIw?PrimitiveTypes/Real?"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RealValue-copy" name="copy" specification="Semantics-Classes-Kernel-RealValue-copy.1">
              <language>Java</language>
              <body>// Create a new real value with the same value as this real value.

RealValue newValue = (RealValue) (super.copy());

newValue.value = this.value;
return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RealValue-equals" name="equals" specification="Semantics-Classes-Kernel-RealValue-equals.1">
              <language>Java</language>
              <body>// Test if this real value is equal to the otherValue.
// To be equal, the otherValue must have the same value as this real
// value.

boolean isEqual = false;
if (otherValue instanceof RealValue) {
	isEqual = ((RealValue) otherValue).value == this.value;
}

return isEqual;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RealValue-new_" name="new_" specification="Semantics-Classes-Kernel-RealValue-new_.1">
              <language>Java</language>
              <body>return new RealValue();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RealValue-specify" name="specify" specification="Semantics-Classes-Kernel-RealValue-specify.1">
              <language>Java</language>
              <body>// Return a literal real with the value of this real value.

LiteralReal literal = new LiteralReal();

literal.type = this.type;
literal.value = this.value;

return literal;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RealValue-toString" name="toString" specification="Semantics-Classes-Kernel-RealValue-toString.1">
              <language>Java</language>
              <body>String stringValue = &quot;&quot;;

if (this.value == 0) {
	stringValue = &quot;0&quot;;
} else {
	float positiveValue = this.value;

	if (positiveValue &lt; 0) {
		positiveValue = -positiveValue;
	}

	int exponent = 0;

	if (positiveValue &lt; .1) {
		while (positiveValue &lt; .1) {
			positiveValue = positiveValue * 10;
			exponent = exponent - 1;
		}
	} else if (positiveValue > 1) {
		while (positiveValue > 1) {
			positiveValue = positiveValue / 10;
			exponent = exponent + 1;
		}
	}

	// This gives 9 significant digits in the mantissa.
	for (int i = 0; i &lt; 9; i++) {
		positiveValue = positiveValue * 10;
	}

	IntegerValue integerValue = new IntegerValue();
	integerValue.value = (int) positiveValue;
	stringValue = &quot;0.&quot; + integerValue.toString();
	integerValue.value = exponent;
	stringValue = stringValue + &quot;E&quot; + integerValue.toString();

	if (this.value &lt; 0) {
		stringValue = &quot;-&quot; + stringValue;
	}
}

return stringValue;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-RealValue-specify.1" name="specify" method="Semantics-Classes-Kernel-RealValue-specify" class="Semantics-Classes-Kernel-RealValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RealValue-specify.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-RealValue-equals.1" name="equals" method="Semantics-Classes-Kernel-RealValue-equals" class="Semantics-Classes-Kernel-RealValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RealValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RealValue-equals.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-RealValue-copy.1" name="copy" method="Semantics-Classes-Kernel-RealValue-copy" class="Semantics-Classes-Kernel-RealValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RealValue-copy.1-Parameter1" name="Parameter1" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-RealValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-RealValue-new_" class="Semantics-Classes-Kernel-RealValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RealValue-new_.1-Parameter1" name="Parameter1" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-RealValue-toString.1" name="toString" method="Semantics-Classes-Kernel-RealValue-toString" class="Semantics-Classes-Kernel-RealValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RealValue-toString.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_featureValues_compoundValue" name="A_featureValues_compoundValue" visibility="private" memberEnd="Semantics-Classes-Kernel-CompoundValue-featureValues Semantics-Classes-Kernel-A_featureValues_compoundValue-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_featureValues_compoundValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-CompoundValue" owningAssociation="Semantics-Classes-Kernel-A_featureValues_compoundValue" association="Semantics-Classes-Kernel-A_featureValues_compoundValue"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_type_dataValue" name="A_type_dataValue" visibility="private" memberEnd="Semantics-Classes-Kernel-DataValue-type Semantics-Classes-Kernel-A_type_dataValue-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_type_dataValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-DataValue" owningAssociation="Semantics-Classes-Kernel-A_type_dataValue" association="Semantics-Classes-Kernel-A_type_dataValue">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_type_dataValue-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_type_dataValue-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_type_enumerationValue" name="A_type_enumerationValue" visibility="private" memberEnd="Semantics-Classes-Kernel-EnumerationValue-type Semantics-Classes-Kernel-A_type_enumerationValue-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_type_enumerationValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-EnumerationValue" owningAssociation="Semantics-Classes-Kernel-A_type_enumerationValue" association="Semantics-Classes-Kernel-A_type_enumerationValue">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_type_enumerationValue-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_type_enumerationValue-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_literal_enumerationValue" name="A_literal_enumerationValue" visibility="private" memberEnd="Semantics-Classes-Kernel-EnumerationValue-literal Semantics-Classes-Kernel-A_literal_enumerationValue-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_literal_enumerationValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-EnumerationValue" owningAssociation="Semantics-Classes-Kernel-A_literal_enumerationValue" association="Semantics-Classes-Kernel-A_literal_enumerationValue">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_literal_enumerationValue-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_literal_enumerationValue-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_type_primitiveValue" name="A_type_primitiveValue" visibility="private" memberEnd="Semantics-Classes-Kernel-PrimitiveValue-type Semantics-Classes-Kernel-A_type_primitiveValue-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_type_primitiveValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-PrimitiveValue" owningAssociation="Semantics-Classes-Kernel-A_type_primitiveValue" association="Semantics-Classes-Kernel-A_type_primitiveValue">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_type_primitiveValue-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_type_primitiveValue-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_values_featureValue" name="A_values_featureValue" visibility="private" memberEnd="Semantics-Classes-Kernel-FeatureValue-values Semantics-Classes-Kernel-A_values_featureValue-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_values_featureValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-FeatureValue" owningAssociation="Semantics-Classes-Kernel-A_values_featureValue" association="Semantics-Classes-Kernel-A_values_featureValue">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_values_featureValue-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_values_featureValue-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_feature_featureValue" name="A_feature_featureValue" visibility="private" memberEnd="Semantics-Classes-Kernel-FeatureValue-feature Semantics-Classes-Kernel-A_feature_featureValue-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_feature_featureValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-FeatureValue" owningAssociation="Semantics-Classes-Kernel-A_feature_featureValue" association="Semantics-Classes-Kernel-A_feature_featureValue">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_feature_featureValue-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_feature_featureValue-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance" name="SignalInstance">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-_ownedComment.0">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-_generalization.0" general="Semantics-Classes-Kernel-CompoundValue" specific="Semantics-CommonBehaviors-Communications-SignalInstance"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-type" name="type" association="Semantics-CommonBehaviors-Communications-A_type_signalInstance">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Signal"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-type-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-type-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes" name="getTypes" specification="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the single type of this signal instance.

ClassifierList types = new ClassifierList();

types.addValue(this.type);

return types;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_" name="new_" specification="Semantics-CommonBehaviors-Communications-SignalInstance-new_.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new signal instance with no type or feature values.

return new SignalInstance();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy" name="copy" specification="Semantics-CommonBehaviors-Communications-SignalInstance-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new signal instance with the same type and feature values as
// this signal instance.

SignalInstance newValue = (SignalInstance) (super.copy());

newValue.type = this.type;

return newValue;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes.1" name="getTypes" method="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes" class="Semantics-CommonBehaviors-Communications-SignalInstance">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_.1" name="new_" method="Semantics-CommonBehaviors-Communications-SignalInstance-new_" class="Semantics-CommonBehaviors-Communications-SignalInstance">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy.1" name="copy" method="Semantics-CommonBehaviors-Communications-SignalInstance-copy" class="Semantics-CommonBehaviors-Communications-SignalInstance">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_type_signalInstance" name="A_type_signalInstance" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-SignalInstance-type Semantics-CommonBehaviors-Communications-A_type_signalInstance-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-A_type_signalInstance-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-Communications-SignalInstance" owningAssociation="Semantics-CommonBehaviors-Communications-A_type_signalInstance" association="Semantics-CommonBehaviors-Communications-A_type_signalInstance">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_type_signalInstance-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_type_signalInstance-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_VBjOcM7BEeWF7I4YWspV6w" name="StructuredClassifiers">
          <packageImport xmi:type="uml:PackageImport" xmi:id="_szhZYM7CEeWF7I4YWspV6w" importedPackage="_LzvbEM7BEeWF7I4YWspV6w" importingNamespace="_VBjOcM7BEeWF7I4YWspV6w"/>
          <packageImport xmi:type="uml:PackageImport" xmi:id="_udVP0M7CEeWF7I4YWspV6w" importedPackage="Semantics-Loci" importingNamespace="_VBjOcM7BEeWF7I4YWspV6w"/>
          <packageImport xmi:type="uml:PackageImport" xmi:id="_xlRRIM7CEeWF7I4YWspV6w" importedPackage="Semantics-CommonBehaviors" importingNamespace="_VBjOcM7BEeWF7I4YWspV6w"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-Reference" name="Reference">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Reference-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Reference">
              <body>A reference is an access path to a specific object. There may be multiple references to the same object.&#xD;
As a structured value, the reference acts just the same as its referent in terms of type, features, operations, etc.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Reference-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-Reference-_generalization.0" general="Semantics-Classes-Kernel-StructuredValue" specific="Semantics-Classes-Kernel-Reference"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-Reference-referent" name="referent" type="Semantics-Classes-Kernel-Object" association="Semantics-Classes-Kernel-A_reference_reference">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-referent-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-referent-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior" name="startBehavior" specification="Semantics-Classes-Kernel-Reference-startBehavior.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-classifier-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-classifier-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-inputs-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Asynchronously start the behavior of the given classifier for the
// referent object.

this.referent.startBehavior(classifier, inputs);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-dispatch" name="dispatch" specification="Semantics-Classes-Kernel-Reference-dispatch.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-dispatch-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-dispatch-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-dispatch-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-dispatch-operation" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-dispatch-operation-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-dispatch-operation-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Dispatch the given operation to the referent object.

return this.referent.dispatch(operation);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-send" name="send" specification="Semantics-Classes-Kernel-Reference-send.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-send-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-send-signalInstance-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-send-signalInstance-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Send the given signal instance to the referent object.

this.referent.send(signalInstance);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-destroy" name="destroy" specification="Semantics-Classes-Kernel-Reference-destroy.1">
              <language>Java</language>
              <body>// Destroy the referent.

this.referent.destroy();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-equals" name="equals" specification="Semantics-Classes-Kernel-Reference-equals.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-equals-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-equals-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-equals-otherValue-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-equals-otherValue-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if this reference is equal to the otherValue.
// To be equal, the otherValue must also be a reference, with the same
// referent as this reference.

boolean isEqual = false;
if (otherValue instanceof Reference) {
	isEqual = (((Reference) otherValue).referent == this.referent);
}

return isEqual;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-copy" name="copy" specification="Semantics-Classes-Kernel-Reference-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new reference with the same referent as this reference.

Reference newValue = (Reference) (super.copy());

newValue.referent = this.referent;

return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-new_" name="new_" specification="Semantics-Classes-Kernel-Reference-new_.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-new_-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-new_-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new reference with no referent.

return new Reference();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-Reference-getTypes.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-getTypes-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getTypes-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getTypes-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the types of the referent object.

return this.referent.getTypes();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue" name="getFeatureValue" specification="Semantics-Classes-Kernel-Reference-getFeatureValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-feature-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-feature-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the feature value associated with the given feature in the
// referent object.

return this.referent.getFeatureValue(feature);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue" name="setFeatureValue" specification="Semantics-Classes-Kernel-Reference-setFeatureValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-feature-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-feature-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-values" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-values-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-values-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-position" name="position">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-position-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-position-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Set the values associated with the given feature in the referent
// object.

this.referent.setFeatureValue(feature, values, position);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues" name="getFeatureValues" specification="Semantics-Classes-Kernel-Reference-getFeatureValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the feature values of the referent.

return this.referent.getFeatureValues();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-toString" name="toString" specification="Semantics-Classes-Kernel-Reference-toString.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-toString-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-toString-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-toString-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>return &quot;Reference to &quot; + this.referent.toString();
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1" name="startBehavior" method="Semantics-Classes-Kernel-Reference-startBehavior" class="Semantics-Classes-Kernel-Reference">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-classifier-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-classifier-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-inputs-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-dispatch.1" name="dispatch" method="Semantics-Classes-Kernel-Reference-dispatch" class="Semantics-Classes-Kernel-Reference">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-dispatch.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-dispatch.1-operation" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-send.1" name="send" method="Semantics-Classes-Kernel-Reference-send" class="Semantics-Classes-Kernel-Reference">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-send.1-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-destroy.1" name="destroy" method="Semantics-Classes-Kernel-Reference-destroy" class="Semantics-Classes-Kernel-Reference"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-equals.1" name="equals" method="Semantics-Classes-Kernel-Reference-equals" class="Semantics-Classes-Kernel-Reference">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-equals.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-copy.1" name="copy" method="Semantics-Classes-Kernel-Reference-copy" class="Semantics-Classes-Kernel-Reference">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-Reference-new_" class="Semantics-Classes-Kernel-Reference">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-Reference-getTypes" class="Semantics-Classes-Kernel-Reference">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getTypes.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getTypes.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue.1" name="getFeatureValue" method="Semantics-Classes-Kernel-Reference-getFeatureValue" class="Semantics-Classes-Kernel-Reference">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue.1-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1" name="setFeatureValue" method="Semantics-Classes-Kernel-Reference-setFeatureValue" class="Semantics-Classes-Kernel-Reference">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-values" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-values-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-values-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-position" name="position">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-position-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-position-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues.1" name="getFeatureValues" method="Semantics-Classes-Kernel-Reference-getFeatureValues" class="Semantics-Classes-Kernel-Reference">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Reference-toString.1" name="toString" method="Semantics-Classes-Kernel-Reference-toString" class="Semantics-Classes-Kernel-Reference">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Reference-toString.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-Object" name="Object">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Object-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Object">
              <body>An object is an extensional value that may have multiple types, all of which must be classes. (Note that a destroyed object has no types.)&#xD;
An object has a unique identity. Usually, references to objects are manipulated, rather than the objects themselves, and there may be multiple references to the same object.&#xD;
If an object is active, it has an object activation that handle the execution of its classifier behavior(s).</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Object-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-Object-_generalization.0" general="Semantics-Classes-Kernel-ExtensionalValue" specific="Semantics-Classes-Kernel-Object"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-Object-types" name="types" association="Semantics-Classes-Kernel-A_types_object">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Object-types-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Object-types">
                <body>The classes under which this object is currently classified. (A destroyed object has no types.)</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-types-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-types-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-Object-objectActivation" name="objectActivation" type="Semantics-CommonBehaviors-Communications-ObjectActivation" aggregation="composite" association="Semantics-Classes-Kernel-A_objectActivation_object">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Object-objectActivation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Object-objectActivation">
                <body>The object activation handling the active behavior of this object.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-objectActivation-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-objectActivation-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-startBehavior" name="startBehavior" specification="Semantics-Classes-Kernel-Object-startBehavior.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-startBehavior-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-startBehavior-classifier-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-startBehavior-classifier-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-startBehavior-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-startBehavior-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-startBehavior-inputs-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create an object activation for this object (if one does not already
// exist) and start its behavior(s).

// Debug.println(&quot;[startBehavior] On object...&quot;);

if (this.objectActivation == null) {
	this.objectActivation = new ObjectActivation();
	this.objectActivation.object = this;
}

// Debug.println(&quot;[startBehavior] objectActivation = &quot; +
// objectActivation);

this.objectActivation.startBehavior(classifier, inputs);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-dispatch" name="dispatch" specification="Semantics-Classes-Kernel-Object-dispatch.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-dispatch-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-dispatch-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-dispatch-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-dispatch-operation" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-dispatch-operation-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-dispatch-operation-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Dispatch the given operation to a method execution, using a dispatch
// strategy.

return ((DispatchStrategy) this.locus.factory.getStrategy(&quot;dispatch&quot;))
		.dispatch(this, operation);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-send" name="send" specification="Semantics-Classes-Kernel-Object-send.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-send-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-send-signalInstance-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-send-signalInstance-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If the object is active, add the given signal instance to the event
// pool and signal that a new signal instance has arrived.

if (this.objectActivation != null) {
	this.objectActivation.send(signalInstance);
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-destroy" name="destroy" specification="Semantics-Classes-Kernel-Object-destroy.1">
              <language>Java</language>
              <body>// Stop the object activation (if any), clear all types and destroy the
// object as an extensional value.

Debug.println(&quot;[destroy] object = &quot; + this.identifier);

if (this.objectActivation != null) {
	this.objectActivation.stop();
	this.objectActivation = null;
}

this.types.clear();
super.destroy();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-register" name="register" specification="Semantics-Classes-Kernel-Object-register.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-register-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-register-accepter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-register-accepter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Register the given accept event accepter to wait for a dispatched
// signal event.

if (this.objectActivation != null) {
	this.objectActivation.register(accepter);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-unregister" name="unregister" specification="Semantics-Classes-Kernel-Object-unregister.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-unregister-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-unregister-accepter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-unregister-accepter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Remove the given event accepter for the list of waiting event
// accepters.

if (this.objectActivation != null) {
	this.objectActivation.unregister(accepter);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-copy" name="copy" specification="Semantics-Classes-Kernel-Object-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new object that is a copy of this object at the same locus
// as this object.
// However, the new object will NOT have any object activation (i.e, its
// classifier behaviors will not be started).

Object_ newObject = (Object_) (super.copy());

Class_List types = this.types;
for (int i = 0; i &lt; types.size(); i++) {
	Class_ type = types.getValue(i);
	newObject.types.addValue(type);
}

return newObject;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-new_" name="new_" specification="Semantics-Classes-Kernel-Object-new_.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-new_-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-new_-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new object with no type, feature values or locus.

return new Object_();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-Object-getTypes.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-getTypes-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-getTypes-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-getTypes-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the types of this object.

ClassifierList types = new ClassifierList();
Class_List myTypes = this.types;
for (int i = 0; i &lt; myTypes.size(); i++) {
	Class_ type = myTypes.getValue(i);
	types.addValue(type);
}

return types;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1" name="startBehavior" method="Semantics-Classes-Kernel-Object-startBehavior" class="Semantics-Classes-Kernel-Object">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-classifier-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-classifier-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-inputs-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Object-dispatch.1" name="dispatch" method="Semantics-Classes-Kernel-Object-dispatch" class="Semantics-Classes-Kernel-Object">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-dispatch.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-dispatch.1-operation" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Object-send.1" name="send" method="Semantics-Classes-Kernel-Object-send" class="Semantics-Classes-Kernel-Object">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-send.1-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Object-destroy.1" name="destroy" method="Semantics-Classes-Kernel-Object-destroy" class="Semantics-Classes-Kernel-Object"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Object-register.1" name="register" method="Semantics-Classes-Kernel-Object-register" class="Semantics-Classes-Kernel-Object">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-register.1-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Object-unregister.1" name="unregister" method="Semantics-Classes-Kernel-Object-unregister" class="Semantics-Classes-Kernel-Object">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-unregister.1-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Object-copy.1" name="copy" method="Semantics-Classes-Kernel-Object-copy" class="Semantics-Classes-Kernel-Object">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Object-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-Object-new_" class="Semantics-Classes-Kernel-Object">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Object-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-Object-getTypes" class="Semantics-Classes-Kernel-Object">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Object-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-getTypes.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-getTypes.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-Link" name="Link">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Link-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Link">
              <body>A link is an extensional value whose (single) type is an association. (However, if the link has been destroyed, then it has no type.)&#xD;
A link must at have most one feature value for each structural feature owned by its type.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Link-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-Link-_generalization.0" general="Semantics-Classes-Kernel-ExtensionalValue" specific="Semantics-Classes-Kernel-Link"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-Link-type" name="type" association="Semantics-Classes-Kernel-A_type_Link">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-Link-type-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Link-type">
                <body>The type of this link.</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-type-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-type-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-destroy" name="destroy" specification="Semantics-Classes-Kernel-Link-destroy.1">
              <language>Java</language>
              <body>// Remove the type of this link and destroy it.
// Shift the positions of the feature values of any remaining links in
// the extent of the same association, for ends that are ordered.

Debug.println(&quot;[destroy] link = &quot; + this.identifier);

PropertyList ends = this.type.memberEnd;
ExtensionalValueList extent = this.locus.getExtent(this.type);

for (int i = 0; i &lt; extent.size(); i++) {
	ExtensionalValue otherLink = extent.getValue(i);
	for (int j = 0; j &lt; ends.size(); j++) {
		Property end = ends.getValue(j);
		if (end.multiplicityElement.isOrdered) {
			FeatureValue featureValue = otherLink.getFeatureValue(end);
			if (this.getFeatureValue(end).position &lt; featureValue.position) {
				featureValue.position = featureValue.position - 1;
			}
		}
	}
}

this.type = null;
super.destroy();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-copy" name="copy" specification="Semantics-Classes-Kernel-Link-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new link with the same type, locus and feature values as
// this link.

Link newValue = (Link) (super.copy());

newValue.type = this.type;

return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-new_" name="new_" specification="Semantics-Classes-Kernel-Link-new_.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-new_-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-new_-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new link with no type or properies.

return new Link();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-Link-getTypes.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-getTypes-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getTypes-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getTypes-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the single type of this link (if any).

ClassifierList types = null;

if (this.type == null) {
	types = new ClassifierList();
} else {
	types = new ClassifierList();
	types.addValue(this.type);
}

return types;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink" name="isMatchingLink" specification="Semantics-Classes-Kernel-Link-isMatchingLink.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink-link" name="link" type="Semantics-Classes-Kernel-ExtensionalValue"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink-end" name="end">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Property"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink-ReturnResult" name="ReturnResult">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test whether the given link matches the values of this link on all
// ends other than the given end.

PropertyList ends = this.type.memberEnd;

boolean matches = true;
int i = 1;
while (matches &amp; i &lt;= ends.size()) {
	Property otherEnd = ends.getValue(i - 1);
	if (otherEnd != end
			&amp; !this.getFeatureValue(otherEnd).values.getValue(0)
					.equals(
							link.getFeatureValue(otherEnd).values
									.getValue(0))) {
		matches = false;
	}
	i = i + 1;
}

return matches;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues" name="getOtherFeatureValues" specification="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-extent" name="extent" type="Semantics-Classes-Kernel-ExtensionalValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-extent-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-extent-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-end" name="end">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Property"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return all feature values for the given end of links in the given
// extent whose other ends match this link.

FeatureValueList featureValues = new FeatureValueList();
for (int i = 0; i &lt; extent.size(); i++) {
	ExtensionalValue link = extent.getValue(i);
	if (link != this) {
		if (isMatchingLink(link, end)) {
			featureValues.addValue(link.getFeatureValue(end));
		}
	}
}
return featureValues;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-addTo" name="addTo" specification="Semantics-Classes-Kernel-Link-addTo.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-addTo-locus" name="locus" type="Semantics-Loci-LociL1-Locus"/>
              <language>Java</language>
              <body>// Add this link to the extent of its association at the given locus.
// Shift the positions of ends of other links, as appropriate, for ends
// that are ordered.

Debug.println(&quot;[addTo] link = &quot; + this.identifier);

PropertyList ends = this.type.memberEnd;
ExtensionalValueList extent = locus.getExtent(this.type);

for (int i = 0; i &lt; ends.size(); i++) {
	Property end = ends.getValue(i);
	if (end.multiplicityElement.isOrdered) {
		FeatureValue featureValue = this.getFeatureValue(end);
		FeatureValueList otherFeatureValues = this
				.getOtherFeatureValues(extent, end);
		int n = otherFeatureValues.size();
		if (featureValue.position &lt; 0 | featureValue.position > n) {
			featureValue.position = n + 1;
		} else {
			if (featureValue.position == 0) {
				featureValue.position = 1;
			}
			for (int j = 0; j &lt; otherFeatureValues.size(); j++) {
				FeatureValue otherFeatureValue = otherFeatureValues
						.getValue(j);
				if (featureValue.position &lt;= otherFeatureValue.position) {
					otherFeatureValue.position = otherFeatureValue.position + 1;
				}
			}
		}
	}
}

locus.add(this);
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Link-destroy.1" name="destroy" method="Semantics-Classes-Kernel-Link-destroy" class="Semantics-Classes-Kernel-Link"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Link-copy.1" name="copy" method="Semantics-Classes-Kernel-Link-copy" class="Semantics-Classes-Kernel-Link">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Link-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-Link-new_" class="Semantics-Classes-Kernel-Link">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Link-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-Link-getTypes" class="Semantics-Classes-Kernel-Link">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getTypes.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getTypes.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink.1" name="isMatchingLink" method="Semantics-Classes-Kernel-Link-isMatchingLink" class="Semantics-Classes-Kernel-Link">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink.1-link" name="link" type="Semantics-Classes-Kernel-ExtensionalValue"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink.1-end" name="end">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Property"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1" name="getOtherFeatureValues" method="Semantics-Classes-Kernel-Link-getOtherFeatureValues" class="Semantics-Classes-Kernel-Link">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-extent" name="extent" type="Semantics-Classes-Kernel-ExtensionalValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-extent-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-extent-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-end" name="end">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Property"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-Link-addTo.1" name="addTo" method="Semantics-Classes-Kernel-Link-addTo" class="Semantics-Classes-Kernel-Link">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-Link-addTo.1-locus" name="locus" type="Semantics-Loci-LociL1-Locus"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-ExtensionalValue" name="ExtensionalValue" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-ExtensionalValue">
              <body>An extensional value is a data value that is part of the extent of some classifier at a specific locus.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-_generalization.0" general="Semantics-Classes-Kernel-CompoundValue" specific="Semantics-Classes-Kernel-ExtensionalValue"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-locus" name="locus" type="Semantics-Loci-LociL1-Locus" association="Semantics-Classes-Kernel-A_locus_extensionalValues">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-locus-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-ExtensionalValue-locus">
                <body>The locus of the extent of which this value is a member. (If the value has been destroyed, it has no locus.)</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-locus-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-locus-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-identifier" name="identifier">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-identifier-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-ExtensionalValue-identifier">
                <body>The identifier for this extensional value, unique among the extensional values created at the same locus as this value.

</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-destroy" name="destroy" specification="Semantics-Classes-Kernel-ExtensionalValue-destroy.1">
              <language>Java</language>
              <body>// Remove this value from its locus (if it has not already been
// destroyed).

if (this.locus != null) {
	this.locus.remove(this);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy" name="copy" specification="Semantics-Classes-Kernel-ExtensionalValue-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new extensional value with the same feature values at the
// same locus as this one.

ExtensionalValue newValue = (ExtensionalValue) (super.copy());

if (this.locus != null) {
	this.locus.add(newValue);
} else {
	this.identifier = &quot;&quot;;
}

return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-toString" name="toString">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-toString-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
              <language>Java</language>
              <body>return this.identifier + super.toString();
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-destroy.1" name="destroy" method="Semantics-Classes-Kernel-ExtensionalValue-destroy" class="Semantics-Classes-Kernel-ExtensionalValue"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy.1" name="copy" method="Semantics-Classes-Kernel-ExtensionalValue-copy" class="Semantics-Classes-Kernel-ExtensionalValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-toString.1" name="toString" class="Semantics-Classes-Kernel-ExtensionalValue" redefinedOperation="Semantics-Classes-Kernel-CompoundValue-toString.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-toString.1-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-DispatchStrategy" name="DispatchStrategy" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-DispatchStrategy">
              <body>A dispatch strategy is a semantic strategy for the polymorphic dispatching of an operation to an execution of a method for that operation.</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-_generalization.0" general="Semantics-Loci-LociL1-SemanticStrategy" specific="Semantics-Classes-Kernel-DispatchStrategy"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName" name="getName" specification="Semantics-Classes-Kernel-DispatchStrategy-getName.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Dispatch strategies are always named &quot;dispatch&quot;.

return &quot;dispatch&quot;;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch" name="dispatch" specification="Semantics-Classes-Kernel-DispatchStrategy-dispatch.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-object" name="object" type="Semantics-Classes-Kernel-Object">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-object-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-object-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-operation" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-operation-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-operation-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the behavior for the given operation as determined by the type(s)
// of the given object, compile the behavior at the locus of the object,
// and return the resulting execution object.

return object.locus.factory.createExecution(this.getMethod(object,
		operation), object);
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName.1" name="getName" method="Semantics-Classes-Kernel-DispatchStrategy-getName" class="Semantics-Classes-Kernel-DispatchStrategy">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName.1-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch.1" name="dispatch" method="Semantics-Classes-Kernel-DispatchStrategy-dispatch" class="Semantics-Classes-Kernel-DispatchStrategy">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch.1-object" name="object" type="Semantics-Classes-Kernel-Object"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch.1-operation" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch.1-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getMethod" name="getMethod" isAbstract="true" class="Semantics-Classes-Kernel-DispatchStrategy">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getMethod-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-DispatchStrategy-getMethod">
                <body>// Get the method that corresponds to the given operation for the given object.</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getMethod-object" name="object" type="Semantics-Classes-Kernel-Object"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getMethod-operation" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getMethod-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Behavior"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy" name="RedefinitionBasedDispatchStrategy">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy">
              <body>A redefinition-based dispatch strategy is one that requires:&#xD;
- each non-abstract operation to have exactly one method &#xD;
- an overriding subclass operation to explicitly redefine the overridden superclass operation.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-_generalization.0" general="Semantics-Classes-Kernel-DispatchStrategy" specific="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod" name="getMethod" specification="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Behavior"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-object" name="object" type="Semantics-Classes-Kernel-Object">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-object-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-object-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-operation" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-operation-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-operation-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the method that corresponds to the given operation for the given
// object.
// [If there is more than one type with a method for the operation, then
// the first one is arbitrarily chosen.]

Behavior method = null;
int i = 1;
while (method == null &amp; i &lt;= object.types.size()) {
	Class_ type = object.types.getValue(i - 1);
	NamedElementList members = type.member;
	int j = 1;
	while (method == null &amp; j &lt;= members.size()) {
		NamedElement member = members.getValue(j - 1);
		if (member instanceof Operation) {
			Operation memberOperation = (Operation) member;
			if (this.operationsMatch(memberOperation, operation)) {
				method = memberOperation.method.getValue(0);
			}
		}
		j = j + 1;
	}
	i = i + 1;
}

return method;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch" name="operationsMatch" specification="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ownedOperation" name="ownedOperation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ownedOperation-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ownedOperation-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-baseOperation" name="baseOperation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-baseOperation-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-baseOperation-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Check if the owned operation is equal to or a redefinition (directly
// or indirectly) of the base operation.

boolean matches = false;
if (ownedOperation == baseOperation) {
	matches = true;
} else {
	int i = 1;
	while (!matches &amp; i &lt;= ownedOperation.redefinedOperation.size()) {
		matches = this.operationsMatch(
				ownedOperation.redefinedOperation.getValue(i - 1),
				baseOperation);
		i = i + 1;
	}
}

return matches;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod.1" name="getMethod" method="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod" class="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Behavior"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod.1-object" name="object" type="Semantics-Classes-Kernel-Object"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod.1-operation" name="operation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch.1" name="operationsMatch" method="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch" class="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch.1-ownedOperation" name="ownedOperation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch.1-baseOperation" name="baseOperation">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Operation"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_locus_extensionalValues" name="A_locus_extensionalValues" visibility="private" memberEnd="Semantics-Classes-Kernel-ExtensionalValue-locus Semantics-Loci-LociL1-Locus-extensionalValues"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_objectActivation_object" name="A_objectActivation_object" visibility="private" memberEnd="Semantics-Classes-Kernel-Object-objectActivation Semantics-CommonBehaviors-Communications-ObjectActivation-object"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_types_object" name="A_types_object" visibility="private" memberEnd="Semantics-Classes-Kernel-Object-types Semantics-Classes-Kernel-A_types_object-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_types_object-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-Object" owningAssociation="Semantics-Classes-Kernel-A_types_object" association="Semantics-Classes-Kernel-A_types_object">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_types_object-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_types_object-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_reference_reference" name="A_reference_reference" visibility="private" memberEnd="Semantics-Classes-Kernel-Reference-referent Semantics-Classes-Kernel-A_reference_reference-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_reference_reference-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-Reference" owningAssociation="Semantics-Classes-Kernel-A_reference_reference" association="Semantics-Classes-Kernel-A_reference_reference">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_reference_reference-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_reference_reference-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_type_Link" name="A_type_Link" visibility="private" memberEnd="Semantics-Classes-Kernel-Link-type Semantics-Classes-Kernel-A_type_Link-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Classes-Kernel-A_type_Link-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-Link" owningAssociation="Semantics-Classes-Kernel-A_type_Link" association="Semantics-Classes-Kernel-A_type_Link">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_type_Link-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_type_Link-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="Semantics-CommonBehaviors" name="CommonBehavior">
          <packageImport xmi:type="uml:PackageImport" xmi:id="_Qkap4M7DEeWF7I4YWspV6w" importedPackage="_VBjOcM7BEeWF7I4YWspV6w" importingNamespace="Semantics-CommonBehaviors"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" name="ParameterValue">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
              <body>A parameter value gives the value(s) for a specific parameter.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-parameter" name="parameter" association="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Parameter"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-parameter-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-parameter-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values" name="values" type="Semantics-Classes-Kernel-Value" aggregation="composite" association="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values">
                <body>The values of for the parameter. Zero or more values are possible, as constrained by the multiplicity of the parameter.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy" name="copy" specification="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new parameter value for the same parameter as this parameter
// value, but with copies of the values of this parameter value.

ParameterValue newValue = new ParameterValue();

newValue.parameter = this.parameter;

ValueList values = this.values;
for (int i = 0; i &lt; values.size(); i++) {
	Value value = values.getValue(i);
	newValue.values.addValue(value.copy());
}

return newValue;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy.1" name="copy" method="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy" class="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution" name="OpaqueBehaviorExecution" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution">
              <body>An opaque execution is an execution for an opaque behavior. &#xD;
Opaque behaviors are used to define primitive behaviors.&#xD;
The actual definition of the primitive behavior should be given in a concrete subclass of OpaqueBehaviorExecution.&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-_generalization.0" general="Semantics-CommonBehaviors-BasicBehaviors-Execution" specific="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-execute" name="execute" specification="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-execute.1">
              <language>Java</language>
              <body>// Execute the body of the opaque behavior.

Debug.println(&quot;[execute] Opaque behavior &quot; + this.getBehavior().name
		+ &quot;...&quot;);

ParameterList parameters = this.getBehavior().ownedParameter;

ParameterValueList inputs = new ParameterValueList();
ParameterValueList outputs = new ParameterValueList();

for (int i = 0; i &lt; parameters.size(); i++) {
	Parameter parameter = parameters.getValue(i);

	if ((parameter.direction == ParameterDirectionKind.in)
			| (parameter.direction == ParameterDirectionKind.inout)) {
		inputs.addValue(this.getParameterValue(parameter));
	}

	if ((parameter.direction == ParameterDirectionKind.inout)
			| (parameter.direction == ParameterDirectionKind.out)
			| (parameter.direction == ParameterDirectionKind.return_)) {
		ParameterValue parameterValue = new ParameterValue();
		parameterValue.parameter = parameter;
		this.setParameterValue(parameterValue);
		outputs.addValue(parameterValue);
	}
}

this.doBody(inputs, outputs);
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-execute.1" name="execute" method="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-execute" class="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody" name="doBody" isAbstract="true" class="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody">
                <body>The actual definition of the behavior of an Opaque Behavior should be given in a concrete subclass that defines this operation.&#xD;
The values of the inputParameters are set when the operation is called.&#xD;
The values of the outputParmeters should be set during the execution of the operation.</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-inputParameters" name="inputParameters" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-inputParameters-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-inputParameters-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-outputParameters" name="outputParameters" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-outputParameters-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-outputParameters-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution" name="Execution" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-Execution">
              <body>An execution is used to execute a specific behavior. Since a behavior is a kind of class, an execution is an object with the behavior as its type.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-_generalization.0" general="Semantics-Classes-Kernel-Object" specific="Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-context" name="context" type="Semantics-Classes-Kernel-Object" association="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-context-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-Execution-context">
                <body>The object that provides the context for this execution. &#xD;
The type of the context of the execution must be the context of the type (behavior) of the execution.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-context-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-context-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues" name="parameterValues" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" aggregation="composite" association="Semantics-CommonBehaviors-BasicBehaviors-A_parameterValues_execution">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues">
                <body>The parameterValues for this execution. All parameterValues must have a parameter that is a parameter of the type of this execution.&#xD;
The values of all input (in and in-out) parameters must be set before the execution is executed.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-terminate" name="terminate" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-terminate.1">
              <language>Java</language>
              <body>// Terminate an ongoing execution. By default, do nothing.

return;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy" name="copy" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new execution that has the same behavior and parameterValues
// as this execution.

// Debug.println(&quot;[Copy] execution = &quot; + this);

Execution newValue = (Execution) (super.copy());

newValue.context = this.context;

ParameterValueList parameterValues = this.parameterValues;
for (int i = 0; i &lt; parameterValues.size(); i++) {
	ParameterValue parameterValue = parameterValues.getValue(i);
	newValue.parameterValues.addValue(parameterValue.copy());
}

// Debug.println(&quot;[Copy] Done.&quot;);

return newValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue" name="setParameterValue" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue-parameterValue" name="parameterValue" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue-parameterValue-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue-parameterValue-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Set the given parameter value for this execution.
// If a parameter value already existed for the parameter of the given
// parameter value, then replace its value.

// Debug.println(&quot;[setParameterValue] parameter = &quot; +
// parameterValue.parameter.name + &quot; with &quot; +
// parameterValue.values.size() + &quot; values&quot;);

ParameterValue existingParameterValue = this
		.getParameterValue(parameterValue.parameter);

if (existingParameterValue == null) {
	this.parameterValues.addValue(parameterValue);
} else {
	existingParameterValue.values = parameterValue.values;
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue" name="getParameterValue" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-parameter" name="parameter">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Parameter"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-parameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-parameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the parameter value of this execution corresponding to the given
// parameter (if any).

ParameterValue parameterValue = null;
int i = 1;
while (parameterValue == null &amp; i &lt;= this.parameterValues.size()) {
	if (this.parameterValues.getValue(i - 1).parameter == parameter) {
		parameterValue = this.parameterValues.getValue(i - 1);
	}
	i = i + 1;
}

return parameterValue;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues" name="getOutputParameterValues" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the parameter values for output (in-out, out and return)
// parameters.

ParameterValueList outputs = new ParameterValueList();
ParameterValueList parameterValues = this.parameterValues;
for (int i = 0; i &lt; parameterValues.size(); i++) {
	ParameterValue parameterValue = parameterValues.getValue(i);
	Parameter parameter = parameterValue.parameter;
	if ((parameter.direction == ParameterDirectionKind.inout)
			| (parameter.direction == ParameterDirectionKind.out)
			| (parameter.direction == ParameterDirectionKind.return_)) {
		outputs.addValue(parameterValue);
	}
}

return outputs;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior" name="getBehavior" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Behavior"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the behavior that is the type of this execution.

return (Behavior) (this.getTypes().getValue(0));
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-execute" name="execute" isAbstract="true" class="Semantics-CommonBehaviors-BasicBehaviors-Execution">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-execute-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-Execution-execute">
                <body>Execute the behavior given by the type of this execution. &#xD;
The parameterValues for any input (in or in-out) parameters of the behavior should be set before the execution.&#xD;
The parameteValues for any output (in-out, out or return) parameters of the behavior will be set by the execution.&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-terminate.1" name="terminate" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-terminate" class="Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy.1" name="copy" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy" class="Semantics-CommonBehaviors-BasicBehaviors-Execution">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-new_" name="new_" isAbstract="true" class="Semantics-CommonBehaviors-BasicBehaviors-Execution">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-new_-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-Execution-new_">
                <body>Create a new execution with no behavior or parameterValues.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue.1" name="setParameterValue" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue" class="Semantics-CommonBehaviors-BasicBehaviors-Execution">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue.1-parameterValue" name="parameterValue" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue.1" name="getParameterValue" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue" class="Semantics-CommonBehaviors-BasicBehaviors-Execution">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue.1-parameter" name="parameter">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Parameter"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues.1" name="getOutputParameterValues" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues" class="Semantics-CommonBehaviors-BasicBehaviors-Execution">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior.1" name="getBehavior" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior" class="Semantics-CommonBehaviors-BasicBehaviors-Execution">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Behavior"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution" name="A_context_execution" visibility="private" memberEnd="Semantics-CommonBehaviors-BasicBehaviors-Execution-context Semantics-CommonBehaviors-BasicBehaviors-A_context_execution-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" owningAssociation="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution" association="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameterValues_execution" name="A_parameterValues_execution" visibility="private" memberEnd="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues Semantics-CommonBehaviors-BasicBehaviors-A_parameterValues_execution-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameterValues_execution-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" owningAssociation="Semantics-CommonBehaviors-BasicBehaviors-A_parameterValues_execution" association="Semantics-CommonBehaviors-BasicBehaviors-A_parameterValues_execution"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue" name="A_parameter_parameterValue" visibility="private" memberEnd="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-parameter Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" owningAssociation="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue" association="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue" name="A_values_parameterValue" visibility="private" memberEnd="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" owningAssociation="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue" association="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter" name="EventAccepter" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-EventAccepter">
              <body>An event accepter handles signal reception events.&#xD;
This is an abstract class intended to provide a common interface for different kinds of event accepters.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-accept" name="accept" isAbstract="true" class="Semantics-CommonBehaviors-Communications-EventAccepter">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-accept-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-EventAccepter-accept">
                <body>Accept a signal occurance for the given signal instance.</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-accept-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-match" name="match" isAbstract="true" class="Semantics-CommonBehaviors-Communications-EventAccepter">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-match-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-EventAccepter-match">
                <body>Determine if the given signal instance matches a trigger of this event accepter.</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-match-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-match-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter" name="ClassifierBehaviorInvocationEventAccepter">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter">
              <body>A classifier behavior execution executes the classifier behavior from a specific active class. </body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-_generalization.0" general="Semantics-CommonBehaviors-Communications-EventAccepter" specific="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" association="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution">
                <body>The execution of the associated classifier behavior for a certain object.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier" name="classifier" association="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier">
                <body>The classifier whose behavior is being executed. (This must be an active class.)</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation" name="objectActivation" type="Semantics-CommonBehaviors-Communications-ObjectActivation" association="Semantics-CommonBehaviors-Communications-A_classifierBehaviorInvocations_objectActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation">
                <body>The object activation that owns this classifier behavior execution.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior" name="invokeBehavior" specification="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-classifier-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-classifier-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-inputs-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Set the classifier for this classifier behavior invocation event accepter 
// to the given class.
// If the given class is a behavior, set the execution to be the object
// of the object activation of the classifier behavior execution.
// Otherwise the class must be an active class, so get an execution
// object for the classifier behavior for the class.
// Set the input parameters for the execution to the given values.
// Then register this event accepter with the object activation.

// Debug.println(&quot;[invokeBehavior] Invoking behavior for &quot; + classifier.name +
// &quot;...&quot;);

this.classifier = classifier;
Object_ object = this.objectActivation.object;

if (classifier instanceof Behavior) {
	this.execution = (Execution) object;
} else {
	this.execution = object.locus.factory.createExecution(
			classifier.classifierBehavior, object);
}

if (inputs != null) {
	for (int i = 0; i &lt; inputs.size(); i++) {
		ParameterValue input = inputs.getValue(i);
		this.execution.setParameterValue(input);
	}
}

this.objectActivation.register(this);

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-terminate" name="terminate" specification="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-terminate.1">
              <language>Java</language>
              <body>// Terminate the associated execution.
// If the execution is not itself the object of the object activation,
// then destroy it.

// Debug.println(&quot;[terminate] Terminating behavior for &quot; +
// classifier.name + &quot;...&quot;);

this.execution.terminate();

if (this.execution != this.objectActivation.object) {
	this.execution.destroy();
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept" name="accept" specification="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <language>Java</language>
              <body>// Accept an invocation event occurrence. Execute the execution of this
// classifier behavior invocation event accepter.

if (eventOccurrence instanceof InvocationEventOccurrence) {
	this.execution.execute();
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match" name="match" specification="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return true if the given event occurrence is an invocation event
// occurrence for the execution of this classifier behavior invocation
// event accepter.

boolean matches = false;
if (eventOccurrence instanceof InvocationEventOccurrence) {
	matches = ((InvocationEventOccurrence)eventOccurrence).execution == this.execution;
}
return matches;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1" name="invokeBehavior" method="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior" class="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1-inputs-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-terminate.1" name="terminate" method="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-terminate" class="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept.1" name="accept" method="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept" class="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter" redefinedOperation="Semantics-CommonBehaviors-Communications-EventAccepter-accept">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept.1-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match.1" name="match" method="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match" class="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter" redefinedOperation="Semantics-CommonBehaviors-Communications-EventAccepter-match">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match.1-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match.1-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Signal" xmi:id="Semantics-CommonBehaviors-Communications-ArrivalSignal" name="ArrivalSignal" visibility="private"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation" name="ObjectActivation" classifierBehavior="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop" isActive="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation">
              <body>An object activation handles the active behavior of an active object.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-_ownedComment.1">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations" name="classifierBehaviorInvocations" type="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter" aggregation="composite" association="Semantics-CommonBehaviors-Communications-A_classifierBehaviorInvocations_objectActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations">
                <body>The invocations of the executing classifier behaviors for this object activation.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters" name="waitingEventAccepters" visibility="public" type="Semantics-CommonBehaviors-Communications-EventAccepter" association="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters">
                <body>The set of event accepters waiting for event occurrences to be dispatched from the event pool.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-object" name="object" type="Semantics-Classes-Kernel-Object" association="Semantics-Classes-Kernel-A_objectActivation_object">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-object-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation-object">
                <body>The object whose active behavior is being handled by this active object.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool" name="eventPool" type="Semantics-CommonBehaviors-Communications-EventOccurrence" isOrdered="true" aggregation="composite" association="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool">
                <body>The pool of event occurrences received by the object of this object activation.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:Activity" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop" name="EventDispatchLoop" node="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.0 Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-ReadSelf Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Accept20ArrivalSignal Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.4">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent">
                <body>The response to each event is completed before dispatching the next event (run to completion semantics).</body>
              </ownedComment>
              <edge xmi:type="uml:ControlFlow" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.0" activity="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop" target="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.4" source="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent">
                <guard xmi:type="uml:OpaqueExpression" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.0-_guard"/>
                <weight xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.0-_weight" value="1"/>
              </edge>
              <edge xmi:type="uml:ObjectFlow" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.1" activity="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop" target="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent-_target" source="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-ReadSelf-_result">
                <guard xmi:type="uml:OpaqueExpression" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.1-_guard">
                  <body></body>
                </guard>
                <weight xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.1-_weight" value="1"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.2" activity="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop" target="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-ReadSelf" source="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Accept20ArrivalSignal">
                <guard xmi:type="uml:OpaqueExpression" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.2-_guard">
                  <body></body>
                </guard>
                <weight xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.2-_weight" value="1"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.3" activity="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop" target="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.4" source="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.0">
                <guard xmi:type="uml:OpaqueExpression" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.3-_guard">
                  <body></body>
                </guard>
                <weight xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.3-_weight" value="1"/>
              </edge>
              <edge xmi:type="uml:ControlFlow" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.4" activity="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop" target="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Accept20ArrivalSignal" source="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.4">
                <guard xmi:type="uml:OpaqueExpression" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.4-_guard">
                  <body></body>
                </guard>
                <weight xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.4-_weight" value="1"/>
              </edge>
              <node xmi:type="uml:InitialNode" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.0" outgoing="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.3"/>
              <node xmi:type="uml:CallOperationAction" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent" name="Call dispatchNextEvent" outgoing="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.0" operation="Semantics-CommonBehaviors-Communications-ObjectActivation-dispatchNextEvent.1">
                <target xmi:type="uml:InputPin" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent-_target" incoming="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.1" type="Semantics-CommonBehaviors-Communications-ObjectActivation">
                  <upperBound xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent-_target-_upperBound" value="1024"/>
                </target>
              </node>
              <node xmi:type="uml:ReadSelfAction" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-ReadSelf" name="ReadSelf" incoming="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.2">
                <result xmi:type="uml:OutputPin" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-ReadSelf-_result" outgoing="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.1" type="Semantics-CommonBehaviors-Communications-ObjectActivation"/>
              </node>
              <node xmi:type="uml:AcceptEventAction" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Accept20ArrivalSignal" name="Accept ArrivalSignal" incoming="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.4" outgoing="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.2">
                <trigger xmi:type="uml:Trigger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Accept20ArrivalSignal-_trigger.0" name="" event="Semantics-CommonBehaviors-Communications-ArrivalSignalEvent"/>
              </node>
              <node xmi:type="uml:MergeNode" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.4" incoming="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.3 Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.0" outgoing="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.4"/>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-stop" name="stop" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-stop.1">
              <language>Java</language>
              <body>// Stop this object activation by terminating all classifier behavior
// executions.

ClassifierBehaviorInvocationEventAccepterList classifierBehaviorInvocations = this.classifierBehaviorInvocations;
for (int i = 0; i &lt; classifierBehaviorInvocations.size(); i++) {
	ClassifierBehaviorInvocationEventAccepter classifierBehaviorInvocation = classifierBehaviorInvocations
			.getValue(i);
	classifierBehaviorInvocation.terminate();
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register" name="register" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-register.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register-accepter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register-accepter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Register the given event accepter to wait for a dispatched signal
// event.

Debug.println(&quot;[register] object = &quot; + this.object);
Debug.println(&quot;[register] accepter = &quot; + accepter);

this.waitingEventAccepters.addValue(accepter);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister" name="unregister" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister-accepter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister-accepter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Remove the given event accepter for the list of waiting event
// accepters.

Debug.println(&quot;[unregister] object = &quot; + this.object);
Debug.println(&quot;[unregister] accepter = &quot; + accepter);

boolean notFound = true;
int i = 1;
while (notFound &amp; i &lt;= this.waitingEventAccepters.size()) {
	if (this.waitingEventAccepters.getValue(i - 1) == accepter) {
		this.waitingEventAccepters.remove(i - 1);
		notFound = false;
	}
	i = i + 1;
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-dispatchNextEvent" name="dispatchNextEvent" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-dispatchNextEvent.1">
              <language>Java</language>
              <body>// Get the next event occurrence out of the event pool.
// If there are one or more waiting event accepters with triggers that
// match the event occurrence, then dispatch it to exactly one of those
// waiting accepters.

if (this.eventPool.size() > 0) {
	EventOccurrence eventOccurrence = this.getNextEvent();

	Debug.println(&quot;[dispatchNextEvent] eventOccurrence = &quot;
			+ eventOccurrence);

	intList matchingEventAccepterIndexes = new intList();
	EventAccepterList waitingEventAccepters = this.waitingEventAccepters;
	for (int i = 0; i &lt; waitingEventAccepters.size(); i++) {
		EventAccepter eventAccepter = waitingEventAccepters.getValue(i);
		if (eventAccepter.match(eventOccurrence)) {
			matchingEventAccepterIndexes.addValue(i);
		}
	}

	if (matchingEventAccepterIndexes.size() > 0) {
		// *** Choose one matching event accepter non-deterministically.
		// ***
		int j = ((ChoiceStrategy) this.object.locus.factory
				.getStrategy(&quot;choice&quot;))
				.choose(matchingEventAccepterIndexes.size());
		EventAccepter selectedEventAccepter = this.waitingEventAccepters
				.getValue(matchingEventAccepterIndexes.getValue(j - 1));
		this.waitingEventAccepters.removeValue(j - 1);
		selectedEventAccepter.accept(eventOccurrence);
	}
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent" name="getNextEvent" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-Communications-SignalInstance" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the next event from the event pool, using a get next event
// strategy.

return ((GetNextEventStrategy) this.object.locus.factory
		.getStrategy(&quot;getNextEvent&quot;)).getNextEvent(this);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-send" name="send" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-send.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-send-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
              <language>Java</language>
              <body>// Add a signal event occurrence for the given signal instance to the event pool 
// and signal that a new event occurrence has arrived.

SignalEventOccurrence eventOccurrence = new SignalEventOccurrence();
eventOccurrence.signalInstance = (SignalInstance) signalInstance.copy();
this.eventPool.addValue(eventOccurrence);
_send(new ArrivalSignal());
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior" name="startBehavior" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior-inputs-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Start the event dispatch loop for this object activation (if it has
// not already been started).
// If a classifier is given that is a type of the object of this object
// activation and there is not already a classifier behavior invocation
// for it,
// then create a classifier behavior invocation for it and add an invocation
// event occurrence to the event pool.
// Otherwise, create a classifier behavior invocation for each of the
// types of the object of this object activation which has a classifier
// behavior or which is a behavior itself
// and for which there is not currently a classifier behavior invocation.

// Start EventDispatchLoop
_startObjectBehavior();

if (classifier == null) {
	Debug.println(&quot;[startBehavior] Starting behavior for all classifiers...&quot;);
	// *** Start all classifier behaviors concurrently. ***
	Class_List types = this.object.types;
	for (Iterator i = types.iterator(); i.hasNext();) {
		Class_ type = (Class_) i.next();
		if (type instanceof Behavior | type.classifierBehavior != null) {
			this.startBehavior(type, new ParameterValueList());
		}
	}
} else {
	Debug.println(&quot;[startBehavior] Starting behavior for &quot;
			+ classifier.name + &quot;...&quot;);

	_beginIsolation();
	boolean notYetStarted = true;
	int i = 1;
	while (notYetStarted
			&amp; i &lt;= this.classifierBehaviorInvocations.size()) {
		notYetStarted = (this.classifierBehaviorInvocations
				.getValue(i - 1).classifier != classifier);
		i = i + 1;
	}

	if (notYetStarted) {
		ClassifierBehaviorInvocationEventAccepter newInvocation = new ClassifierBehaviorInvocationEventAccepter();
		newInvocation.objectActivation = this;
		this.classifierBehaviorInvocations.addValue(newInvocation);
		newInvocation.invokeBehavior(classifier, inputs);
		InvocationEventOccurrence eventOccurrence = new InvocationEventOccurrence();
		eventOccurrence.execution = newInvocation.execution;
		this.eventPool.addValue(eventOccurrence);
		_send(new ArrivalSignal());
	}
	_endIsolation();
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-stop.1" name="stop" method="Semantics-CommonBehaviors-Communications-ObjectActivation-stop" class="Semantics-CommonBehaviors-Communications-ObjectActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register.1" name="register" method="Semantics-CommonBehaviors-Communications-ObjectActivation-register" class="Semantics-CommonBehaviors-Communications-ObjectActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register.1-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister.1" name="unregister" method="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister" class="Semantics-CommonBehaviors-Communications-ObjectActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister.1-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-dispatchNextEvent.1" name="dispatchNextEvent" method="Semantics-CommonBehaviors-Communications-ObjectActivation-dispatchNextEvent" class="Semantics-CommonBehaviors-Communications-ObjectActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent.1" name="getNextEvent" method="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent" class="Semantics-CommonBehaviors-Communications-ObjectActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent.1-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-Communications-SignalInstance" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-send.1" name="send" method="Semantics-CommonBehaviors-Communications-ObjectActivation-send" class="Semantics-CommonBehaviors-Communications-ObjectActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-send.1-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1" name="startBehavior" method="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior" class="Semantics-CommonBehaviors-Communications-ObjectActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-classifier-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-classifier-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-inputs-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedReception xmi:type="uml:Reception" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-ArrivalSignal" name="ArrivalSignal" signal="Semantics-CommonBehaviors-Communications-ArrivalSignal"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_classifierBehaviorInvocations_objectActivation" name="A_classifierBehaviorInvocations_objectActivation" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation" name="A_waitingEventAcceptors_objectActivation" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-Communications-ObjectActivation" owningAssociation="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation" association="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation" name="A_eventPool_objectActivation" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-Communications-ObjectActivation" owningAssociation="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation" association="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution" name="A_classifier_classifierBehaviorExecution" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter" owningAssociation="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution" association="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter" name="A_execution_classifierBehaviorInvocationEventAccepter" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter" owningAssociation="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter" association="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:SignalEvent" xmi:id="Semantics-CommonBehaviors-Communications-ArrivalSignalEvent" name="ArrivalSignalEvent" signal="Semantics-CommonBehaviors-Communications-ArrivalSignal"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy" name="GetNextEventStrategy" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-GetNextEventStrategy">
              <body>A get next event strategy is a semantic strategy that determines the order in which signal instances are retrieved from the event pool of an object activation.</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-_generalization.0" general="Semantics-Loci-LociL1-SemanticStrategy" specific="Semantics-CommonBehaviors-Communications-GetNextEventStrategy"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName" name="getName" specification="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get next event strategies are always named &quot;getNextEvent&quot;.

return &quot;getNextEvent&quot;;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName.1" name="getName" method="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName" class="Semantics-CommonBehaviors-Communications-GetNextEventStrategy">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName.1-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getNextEvent" name="getNextEvent" isAbstract="true" class="Semantics-CommonBehaviors-Communications-GetNextEventStrategy">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getNextEvent-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getNextEvent">
                <body>Get the next event from the event pool of the given object activation. The event is removed from the pool.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getNextEvent-objectActivation" name="objectActivation" type="Semantics-CommonBehaviors-Communications-ObjectActivation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getNextEvent-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-Communications-SignalInstance" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy" name="FIFOGetNextEventStrategy">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy">
              <body>A FIFO get next event strategy gets events in first-in first-out order.</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-_generalization.0" general="Semantics-CommonBehaviors-Communications-GetNextEventStrategy" specific="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent" name="getNextEvent" specification="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-objectActivation" name="objectActivation" type="Semantics-CommonBehaviors-Communications-ObjectActivation">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-objectActivation-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-objectActivation-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-Communications-SignalInstance" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the first event from the given event pool. The event is removed
// from the pool.

EventOccurrence eventOccurrence = objectActivation.eventPool.getValue(0);
objectActivation.eventPool.removeValue(0);
return eventOccurrence;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent.1" name="getNextEvent" method="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent" class="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent.1-objectActivation" name="objectActivation" type="Semantics-CommonBehaviors-Communications-ObjectActivation"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent.1-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-Communications-SignalInstance" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-EventOccurrence" name="EventOccurrence"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-SignalEventOccurrence" name="SignalEventOccurrence">
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-CommonBehaviors-Communications-SignalEventOccurrence-_generalization.0" general="Semantics-CommonBehaviors-Communications-EventOccurrence" specific="Semantics-CommonBehaviors-Communications-SignalEventOccurrence"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-SignalEventOccurrence-signalinstance" name="signalinstance" type="Semantics-CommonBehaviors-Communications-SignalInstance" association="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-SignalEventOccurrence-signalinstance-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-SignalEventOccurrence-signalinstance">
                <body>The signal instance whose receipt caused this signal event occurrence.</body>
              </ownedComment>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence" name="A_signalInstance_signalEventOccurrence" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-SignalEventOccurrence-signalinstance Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence-_ownedEnd.0" type="Semantics-CommonBehaviors-Communications-SignalEventOccurrence" owningAssociation="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence" association="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence" name="InvocationEventOccurrence">
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence-_generalization.0" general="Semantics-CommonBehaviors-Communications-EventOccurrence" specific="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" association="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence-execution-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence-execution">
                <body>The execution being asynchronously invoked.</body>
              </ownedComment>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence" name="A_execution_invocationEventOccurrence" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence-execution Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence-_ownedEnd.0" type="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence" owningAssociation="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence" association="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="Semantics-Actions" name="Actions">
          <packageImport xmi:type="uml:PackageImport" xmi:id="_v92HsM6_EeWF7I4YWspV6w" importedPackage="Semantics-Activities" importingNamespace="Semantics-Actions"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation" name="SendSignalActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-SendSignalActionActivation">
              <body>A send signal action activation is an invocation action activation for a send signal action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-InvocationActionActivation" specific="Semantics-Actions-BasicActions-SendSignalActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation-doAction" name="doAction" specification="Semantics-Actions-BasicActions-SendSignalActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the value from the target pin. If the value is not a reference,
// then do nothing.
// Otherwise, construct a signal using the values from the argument pins
// and send it to the referent object.

SendSignalAction action = (SendSignalAction) (this.node);
Value target = this.takeTokens(action.target).getValue(0);

if (target instanceof Reference) {
	Signal signal = action.signal;

	SignalInstance signalInstance = new SignalInstance();
	signalInstance.type = signal;

	PropertyList attributes = signal.ownedAttribute;
	InputPinList argumentPins = action.argument;
	for (int i = 0; i &lt; attributes.size(); i++) {
		Property attribute = attributes.getValue(i);
		InputPin argumentPin = argumentPins.getValue(i);
		ValueList values = this.takeTokens(argumentPin);
		signalInstance.setFeatureValue(attribute, values, 0);
	}

	((Reference) target).send(signalInstance);
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation-doAction.1" name="doAction" method="Semantics-Actions-BasicActions-SendSignalActionActivation-doAction" class="Semantics-Actions-BasicActions-SendSignalActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-PinActivation" name="PinActivation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-PinActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-PinActivation">
              <body>A pin activation is an object node activation for a node that is a pin.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-PinActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-BasicActions-PinActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ObjectNodeActivation" specific="Semantics-Actions-BasicActions-PinActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Actions-BasicActions-PinActivation-actionActivation" name="actionActivation" type="Semantics-Actions-BasicActions-ActionActivation" association="Semantics-Actions-BasicActions-A_pinActivations_actionActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-PinActivation-actionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-PinActivation-actionActivation">
                <body>The activation of the action that owns the pin for this pin activation.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-PinActivation-actionActivation-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-PinActivation-actionActivation-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire" name="fire" specification="Semantics-Actions-BasicActions-PinActivation-fire.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add all incoming tokens to the pin.

Debug.println(&quot;[fire] Pin &quot;
		+ (this.node == null ? &quot;&quot; : this.node.name + &quot;...&quot;));

this.addTokens(incomingTokens);

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens-Parameter1-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens-Parameter1-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Take only a number of tokens only up to the limit allowed by
// the multiplicity upper bound of the pin for this activation.

int count = this.countUnofferedTokens();
int upper = -1;

// Note: A pin activation used in an expansion activation group
// will have this.node == null.
if (this.node != null) {
	upper = ((Pin) (this.node)).multiplicityElement.upper.naturalValue;
}

TokenList tokens = new TokenList();

// Note: upper &lt; 0 indicates an unbounded upper multiplicity.
if (upper &lt; 0 | count &lt; upper) {
	ActivityEdgeInstanceList incomingEdges = this.incomingEdges;
	for (int i = 0; i &lt; incomingEdges.size(); i++) {
		ActivityEdgeInstance edge = incomingEdges.getValue(i);
		int incomingCount = edge.countOfferedValues();
		TokenList incomingTokens = new TokenList();
		if (upper &lt; 0 | incomingCount &lt; upper - count) {
			incomingTokens = edge.takeOfferedTokens();
			count = count + incomingCount;
		} else if (count &lt; upper) {
			incomingTokens = edge.takeOfferedTokens(upper - count);
			count = upper;
		}
		for (int j = 0; j &lt; incomingTokens.size(); j++) {
			Token token = incomingTokens.getValue(j);
			tokens.addValue(token);
		}
	}
}

return tokens;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire.1" name="fire" method="Semantics-Actions-BasicActions-PinActivation-fire" class="Semantics-Actions-BasicActions-PinActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens" class="Semantics-Actions-BasicActions-PinActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens.1-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens.1-Parameter1-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens.1-Parameter1-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-OutputPinActivation" name="OutputPinActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-OutputPinActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-OutputPinActivation">
              <body>An output pin activation is a pin activation for an output pin.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-OutputPinActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-BasicActions-OutputPinActivation-_generalization.0" general="Semantics-Actions-BasicActions-PinActivation" specific="Semantics-Actions-BasicActions-OutputPinActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-InvocationActionActivation" name="InvocationActionActivation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-InvocationActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-InvocationActionActivation">
              <body>An invocation action activation is an action activation of an invocation action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-InvocationActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-BasicActions-InvocationActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-BasicActions-InvocationActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-InputPinActivation" name="InputPinActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-InputPinActivation">
              <body>An input pin activation is a pin activation for an input pin.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-_generalization.0" general="Semantics-Actions-BasicActions-PinActivation" specific="Semantics-Actions-BasicActions-InputPinActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-receiveOffer" name="receiveOffer" specification="Semantics-Actions-BasicActions-InputPinActivation-receiveOffer.1">
              <language>Java</language>
              <body>// Forward the offer to the action activation. [When all input pins are
// ready, the action will fire them.]

this.actionActivation.receiveOffer();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady" name="isReady" specification="Semantics-Actions-BasicActions-InputPinActivation-isReady.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return true if the total number of values already being offered by
// this pin plus those being offered
// by the sources of incoming edges is at least equal to the minimum
// multiplicity of the pin.

boolean ready = super.isReady();
if (ready) {
	int totalValueCount = this.countUnofferedTokens()
			+ this.countOfferedValues();
	int minimum = ((Pin) this.node).multiplicityElement.lower;
	ready = totalValueCount >= minimum;
}

return ready;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-receiveOffer.1" name="receiveOffer" method="Semantics-Actions-BasicActions-InputPinActivation-receiveOffer" class="Semantics-Actions-BasicActions-InputPinActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady.1" name="isReady" method="Semantics-Actions-BasicActions-InputPinActivation-isReady" class="Semantics-Actions-BasicActions-InputPinActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-CallActionActivation" name="CallActionActivation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-CallActionActivation">
              <body>A call action activation is an invocation action activation for a call action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-InvocationActionActivation" specific="Semantics-Actions-BasicActions-CallActionActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-callExecutions" name="callExecutions" visibility="public" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" aggregation="composite" association="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-callExecutions-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-CallActionActivation-callExecutions">
                <body>The set of execution object for currently ongoing calls made through this call action activation.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-callExecutions-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-callExecutions-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-doAction" name="doAction" specification="Semantics-Actions-BasicActions-CallActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the call execution object, set its input parameters from the
// argument pins and execute it.
// Once execution completes, copy the values of the output parameters of
// the call execution to the result pins of the call action execution,
// then destroy the execution.

Execution callExecution = this.getCallExecution();

if (callExecution != null) {
	this.callExecutions.addValue(callExecution);

	CallAction callAction = (CallAction) (this.node);
	InputPinList argumentPins = callAction.argument;
	OutputPinList resultPins = callAction.result;

	ParameterList parameters = callExecution.getBehavior().ownedParameter;

	int pinNumber = 1;
	int i = 1;
	while (i &lt;= parameters.size()) {
		Parameter parameter = parameters.getValue(i - 1);
		if (parameter.direction == ParameterDirectionKind.in
				| parameter.direction == ParameterDirectionKind.inout) {
			ParameterValue parameterValue = new ParameterValue();
			parameterValue.parameter = parameter;
			parameterValue.values = this.takeTokens(argumentPins
					.getValue(pinNumber - 1));
			callExecution.setParameterValue(parameterValue);
			pinNumber = pinNumber + 1;
		}
		i = i + 1;
	}

	callExecution.execute();

	ParameterValueList outputParameterValues = callExecution
			.getOutputParameterValues();

	pinNumber = 1;
	i = 1;
	while (i &lt;= parameters.size()) {
		Parameter parameter = parameters.getValue(i - 1);
		if ((parameter.direction == ParameterDirectionKind.inout)
				| (parameter.direction == ParameterDirectionKind.out)
				| (parameter.direction == ParameterDirectionKind.return_)) {
			for (int j = 0; j &lt; outputParameterValues.size(); j++) {
				ParameterValue outputParameterValue = outputParameterValues
						.getValue(j);
				if (outputParameterValue.parameter == parameter) {
					OutputPin resultPin = resultPins
							.getValue(pinNumber - 1);
					this.putTokens(resultPin,
							outputParameterValue.values);
				}
			}
			pinNumber = pinNumber + 1;
		}
		i = i + 1;
	}

	callExecution.destroy();
	this.removeCallExecution(callExecution);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-terminate" name="terminate" specification="Semantics-Actions-BasicActions-CallActionActivation-terminate.1">
              <language>Java</language>
              <body>// Terminate all call executions (if any), then terminate the call
// action activation (self).

for (int i = 0; i &lt; this.callExecutions.size(); i++) {
	Execution execution = this.callExecutions.getValue(i);
	execution.terminate();
}

super.terminate();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution" name="removeCallExecution" specification="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution-execution-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution-execution-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Remove the given execution from the current list of call executions.

boolean notFound = true;
int i = 1;
while (notFound &amp; i &lt;= this.callExecutions.size()) {
	if (this.callExecutions.getValue(i - 1) == execution) {
		this.callExecutions.removeValue(i - 1);
		notFound = false;
	}
	i = i + 1;
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-doAction.1" name="doAction" method="Semantics-Actions-BasicActions-CallActionActivation-doAction" class="Semantics-Actions-BasicActions-CallActionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-getCallExecution" name="getCallExecution" isAbstract="true" class="Semantics-Actions-BasicActions-CallActionActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-getCallExecution-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-CallActionActivation-getCallExecution">
                <body>Get the execution object for the called behavior.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-getCallExecution-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-terminate.1" name="terminate" method="Semantics-Actions-BasicActions-CallActionActivation-terminate" class="Semantics-Actions-BasicActions-CallActionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution.1" name="removeCallExecution" method="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution" class="Semantics-Actions-BasicActions-CallActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution.1-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation" name="CallBehaviorActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-CallBehaviorActionActivation">
              <body>A call behavior action activation is a call action activation for a call behavior action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-CallActionActivation" specific="Semantics-Actions-BasicActions-CallBehaviorActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution" name="getCallExecution" specification="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create and execution for the given behavior at the current locus and
// return the resulting execution object.
// If the given behavior is in the context of a classifier, then pass
// the current context object as the context for the call.
// Otherwise, use a null context.
// [Note that this requires the behavior context to be compatible with
// the type of the current contect object.]

Behavior behavior = ((CallBehaviorAction) (this.node)).behavior;

Object_ context;
if (behavior.context == null) {
	context = null;
} else {
	// Debug.println(&quot;[getCallExecution] behavior context = &quot; +
	// behavior.context.name);
	context = this.getExecutionContext();
}

// Debug.println(&quot;[getCallExecution] context = &quot; + context);

return this.getExecutionLocus().factory.createExecution(behavior,
		context);

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution.1" name="getCallExecution" method="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution" class="Semantics-Actions-BasicActions-CallBehaviorActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation" name="CallOperationActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-CallOperationActionActivation">
              <body>A call operation action activation is a call action activation for a call operation action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-CallActionActivation" specific="Semantics-Actions-BasicActions-CallOperationActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution" name="getCallExecution" specification="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If the value on the target input pin is a reference, dispatch the
// operation to it and return the resulting execution object.

CallOperationAction action = (CallOperationAction) (this.node);
Value target = this.takeTokens(action.target).getValue(0);

Execution execution;
if (target instanceof Reference) {
	execution = ((Reference) target).dispatch(action.operation);
} else {
	execution = null;
}

return execution;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution.1" name="getCallExecution" method="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution" class="Semantics-Actions-BasicActions-CallOperationActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-ActionActivation" name="ActionActivation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-ActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-ActionActivation">
              <body>An action activation is an activity node activation for a node that is an action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-ActionActivation-_ownedComment.1">
              <body>import java.util.*;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-BasicActions-ActionActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" specific="Semantics-Actions-BasicActions-ActionActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Actions-BasicActions-ActionActivation-pinActivations" name="pinActivations" type="Semantics-Actions-BasicActions-PinActivation" association="Semantics-Actions-BasicActions-A_pinActivations_actionActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-ActionActivation-pinActivations-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-ActionActivation-pinActivations">
                <body>The activations of the pins owned by the action of this action activation.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-pinActivations-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-pinActivations-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Actions-BasicActions-ActionActivation-firing" name="firing" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-ActionActivation-firing-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-ActionActivation-firing">
                <body>Whether this action activation is already firing. This attribute is only used if the action for this action activation has isLocallyReentrant = false (the default). If isLocallyReentrant=true, then firing always just remains false.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize" name="initialize" specification="Semantics-Actions-BasicActions-ActionActivation-initialize.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
              <language>Java</language>
              <body>// Initialize this action activation to be not firing.

super.initialize(node, group);
this.firing = false;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-run" name="run" specification="Semantics-Actions-BasicActions-ActionActivation-run.1">
              <language>Java</language>
              <body>// Run this action activation and any outoging fork node attached to it.

super.run();

if (this.outgoingEdges.size() > 0) {
	this.outgoingEdges.getValue(0).target.run();
}

this.firing = false;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If the action is not locally reentrant, then mark this activation as
// firing.
// Take any incoming offers of control tokens, then concurrently fire
// all input pin activations.

// Note: This is included here to happen in the same isolation scope as
// the isReady test.
this.firing = !((Action) this.node).isLocallyReentrant;

TokenList offeredTokens = new TokenList();

ActivityEdgeInstanceList incomingEdges = this.incomingEdges;
for (int i = 0; i &lt; incomingEdges.size(); i++) {
	ActivityEdgeInstance incomingEdge = incomingEdges.getValue(i);
	TokenList tokens = incomingEdge.takeOfferedTokens();
	for (int j = 0; j &lt; tokens.size(); j++) {
		Token token = tokens.getValue(j);
		token.withdraw();
		offeredTokens.addValue(token);
	}
}

Action action = (Action) (this.node);

// *** Fire all input pins concurrently. ***
InputPinList inputPins = action.input;
for (Iterator i = inputPins.iterator(); i.hasNext();) {
	InputPin pin = (InputPin) (i.next());
	PinActivation pinActivation = this.getPinActivation(pin);
	TokenList tokens = pinActivation.takeOfferedTokens();
	pinActivation.fire(tokens);
	for (int j = 0; j &lt; tokens.size(); j++) {
		Token token = tokens.getValue(j);
		offeredTokens.addValue(token);
	}
}

return offeredTokens;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire" name="fire" specification="Semantics-Actions-BasicActions-ActionActivation-fire.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Do the main action behavior then concurrently fire all output pin
// activations
// and offer a single control token. Then activate the action again,
// if it is still ready to fire and has at least one token actually
// being
// offered to it.

do {

	Debug.println(&quot;[fire] Action &quot; + this.node.name + &quot;...&quot;);
	Debug.println(&quot;[event] Fire activity=&quot;
			+ this.getActivityExecution().getBehavior().name
			+ &quot; action=&quot; + this.node.name);

	this.doAction();
	incomingTokens = this.completeAction();

} while (incomingTokens.size() > 0);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-terminate" name="terminate" specification="Semantics-Actions-BasicActions-ActionActivation-terminate.1">
              <language>Java</language>
              <body>// Terminate this action activation and any outgoing fork node attached
// to it.

super.terminate();

if (this.outgoingEdges.size() > 0) {
	this.outgoingEdges.getValue(0).target.terminate();
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady" name="isReady" specification="Semantics-Actions-BasicActions-ActionActivation-isReady.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// In addition to the default condition, check that, if the action has
// isLocallyReentrant=false, then the activation is not currently
// firing,
// and that the sources of all incoming edges (control flows) have
// offers and all input pin activations are ready.
// [This assumes that all edges directly incoming to the action are
// control flows.]

boolean ready = super.isReady()
		&amp; (((Action) this.node).isLocallyReentrant | !this.isFiring());

int i = 1;
while (ready &amp; i &lt;= this.incomingEdges.size()) {
	ready = this.incomingEdges.getValue(i - 1).hasOffer();
	i = i + 1;
}

InputPinList inputPins = ((Action) (this.node)).input;
int j = 1;
while (ready &amp; j &lt;= inputPins.size()) {
	ready = this.getPinActivation(inputPins.getValue(j - 1)).isReady();
	j = j + 1;
}

return ready;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring" name="isFiring" specification="Semantics-Actions-BasicActions-ActionActivation-isFiring.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring-Parameter1-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring-Parameter1-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Indicate whether this action activation is currently firing or not.

return firing;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-sendOffers" name="sendOffers" specification="Semantics-Actions-BasicActions-ActionActivation-sendOffers.1">
              <language>Java</language>
              <body>// Fire all output pins and send offers on all outgoing control flows.

Action action = (Action) (this.node);

// *** Send offers from all output pins concurrently. ***
OutputPinList outputPins = action.output;
for (Iterator i = outputPins.iterator(); i.hasNext();) {
	OutputPin outputPin = (OutputPin) i.next();
	PinActivation pinActivation = this.getPinActivation(outputPin);
	pinActivation.sendUnofferedTokens();
}

// Send offers on all outgoing control flows.
if (this.outgoingEdges.size() > 0) {
	TokenList tokens = new TokenList();
	tokens.addValue(new ControlToken());
	this.addTokens(tokens);
	this.outgoingEdges.getValue(0).sendOffer(tokens);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-createNodeActivations" name="createNodeActivations" specification="Semantics-Actions-BasicActions-ActionActivation-createNodeActivations.1">
              <language>Java</language>
              <body>// Create node activations for the input and output pins of the action
// for this activation.
// [Note: Pins are owned by their actions, not by the enclosing activity
// (or group), so they must be activated through the action activation.]

Action action = (Action) (this.node);

ActivityNodeList inputPinNodes = new ActivityNodeList();
InputPinList inputPins = action.input;
for (int i = 0; i &lt; inputPins.size(); i++) {
	InputPin inputPin = inputPins.getValue(i);
	inputPinNodes.addValue(inputPin);
}

this.group.createNodeActivations(inputPinNodes);

for (int i = 0; i &lt; inputPinNodes.size(); i++) {
	ActivityNode node = inputPinNodes.getValue(i);
	this.addPinActivation((PinActivation) (this.group
			.getNodeActivation(node)));
}

ActivityNodeList outputPinNodes = new ActivityNodeList();
OutputPinList outputPins = action.output;
for (int i = 0; i &lt; outputPins.size(); i++) {
	OutputPin outputPin = outputPins.getValue(i);
	outputPinNodes.addValue(outputPin);
}

this.group.createNodeActivations(outputPinNodes);

for (int i = 0; i &lt; outputPinNodes.size(); i++) {
	ActivityNode node = outputPinNodes.getValue(i);
	this.addPinActivation((PinActivation) (this.group
			.getNodeActivation(node)));
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge" name="addOutgoingEdge" specification="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge-edge-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge-edge-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If there are no outgoing activity edge instances, create a single
// activity edge instance with a fork node execution at the other end.
// Add the give edge to the fork node execution that is the target of
// the activity edge instance out of this action execution.
// [This assumes that all edges directly outgoing from the action are
// control flows, with an implicit fork for offers out of the action.]

ActivityNodeActivation forkNodeActivation;

if (this.outgoingEdges.size() == 0) {
	forkNodeActivation = new ForkNodeActivation();
	forkNodeActivation.running = false;
	ActivityEdgeInstance newEdge = new ActivityEdgeInstance();
	super.addOutgoingEdge(newEdge);
	forkNodeActivation.addIncomingEdge(newEdge);
} else {
	forkNodeActivation = this.outgoingEdges.getValue(0).target;
}

forkNodeActivation.addOutgoingEdge(edge);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation" name="addPinActivation" specification="Semantics-Actions-BasicActions-ActionActivation-addPinActivation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation-pinActivation" name="pinActivation" type="Semantics-Actions-BasicActions-PinActivation">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation-pinActivation-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation-pinActivation-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add a pin activation to this action activation.

this.pinActivations.addValue(pinActivation);
pinActivation.actionActivation = this;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation" name="getPinActivation" specification="Semantics-Actions-BasicActions-ActionActivation-getPinActivation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-ReturnResult" name="ReturnResult" type="Semantics-Actions-BasicActions-PinActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Pin"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-pin-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-pin-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Precondition: The given pin is owned by the action of the action
// activation.
// Return the pin activation corresponding to the given pin.

PinActivation pinActivation = null;
int i = 1;
while (pinActivation == null &amp; i &lt;= this.pinActivations.size()) {
	PinActivation thisPinActivation = this.pinActivations
			.getValue(i - 1);
	if (thisPinActivation.node == pin) {
		pinActivation = thisPinActivation;
	}
	i = i + 1;
}

return pinActivation;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken" name="putToken" specification="Semantics-Actions-BasicActions-ActionActivation-putToken.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#OutputPin"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-pin-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-pin-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-value" name="value" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-value-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-value-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Precondition: The action execution has fired and the given pin is
// owned by the action of the action execution.
// Place a token for the given value on the pin activation corresponding
// to the given output pin.

Debug.println(&quot;[putToken] node = &quot; + this.node.name);

ObjectToken token = new ObjectToken();
token.value = value;

PinActivation pinActivation = this.getPinActivation(pin);
pinActivation.addToken(token);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens" name="putTokens" specification="Semantics-Actions-BasicActions-ActionActivation-putTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#OutputPin"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-pin-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-pin-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-values" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-values-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-values-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Precondition: The action execution has fired and the given pin is
// owned by the action of the action execution.
// Place tokens for the given values on the pin activation corresponding
// to the given output pin.

// Debug.println(&quot;[putTokens] node = &quot; + this.node.name);

for (int i = 0; i &lt; values.size(); i++) {
	Value value = values.getValue(i);
	this.putToken(pin, value);
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens" name="getTokens" specification="Semantics-Actions-BasicActions-ActionActivation-getTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#InputPin"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-pin-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-pin-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Precondition: The action execution has fired and the given pin is
// owned by the action of the action execution.
// Get any tokens held by the pin activation corresponding to the given
// input pin and return them
// (but leave the tokens on the pin).

Debug.println(&quot;[getTokens] node = &quot; + this.node.name + &quot;, pin = &quot;
		+ pin.name);

PinActivation pinActivation = this.getPinActivation(pin);
TokenList tokens = pinActivation.getUnofferedTokens();

ValueList values = new ValueList();
for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	Value value = ((ObjectToken) token).value;
	if (value != null) {
		values.addValue(value);
	}
}

return values;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens" name="takeTokens" specification="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#InputPin"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-pin-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-pin-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Precondition: The action execution has fired and the given pin is
// owned by the action of the action execution.
// Take any tokens held by the pin activation corresponding to the given
// input pin and return them.

Debug.println(&quot;[takeTokens] node = &quot; + this.node.name + &quot;, pin = &quot;
		+ pin.name);

PinActivation pinActivation = this.getPinActivation(pin);
TokenList tokens = pinActivation.takeUnofferedTokens();

ValueList values = new ValueList();
for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	Value value = ((ObjectToken) token).value;
	if (value != null) {
		values.addValue(value);
	}
}

return values;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor" name="isSourceFor" specification="Semantics-Actions-BasicActions-ActionActivation-isSourceFor.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-edgeInstance-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-edgeInstance-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If this action has an outgoing fork node, check that the fork node is
// the source of the given edge instance.

boolean isSource = false;
if (this.outgoingEdges.size() > 0) {
	isSource = this.outgoingEdges.getValue(0).target
			.isSourceFor(edgeInstance);
}

return isSource;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink" name="valueParticipatesInLink" specification="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-value" name="value" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-value-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-value-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-link" name="link" type="Semantics-Classes-Kernel-Link">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-link-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-link-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if the given value participates in the given link.

FeatureValueList linkFeatureValues = link.getFeatureValues();

boolean participates = false;
int i = 1;
while (!participates &amp; i &lt;= linkFeatureValues.size()) {
	participates = linkFeatureValues.getValue(i - 1).values.getValue(0)
			.equals(value);
	i = i + 1;
}

return participates;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue" name="makeBooleanValue" specification="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-BooleanValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-value" name="value">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-value-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-value-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Make a Boolean value using the built-in Boolean primitive type.
// [This ensures that Boolean values created internally are the same as
// the default used for evaluating Boolean literals.]

LiteralBoolean booleanLiteral = new LiteralBoolean();
booleanLiteral.value = value;
return (BooleanValue) (this.getExecutionLocus().executor
		.evaluate(booleanLiteral));
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-completeAction" name="completeAction" specification="Semantics-Actions-BasicActions-ActionActivation-completeAction.1">
              <language>Java</language>
              <body>// Concurrently fire all output pin activations and offer a single
// control token. Then check if the action should fire again
// and, if so, return additional incoming tokens for this.

this.sendOffers();

Debug.println(&quot;[fire] Checking if &quot; + this.node.name
		+ &quot; should fire again...&quot;);

_beginIsolation();
TokenList incomingTokens = new TokenList();
this.firing = false;
if (this.isReady()) {
	incomingTokens = this.takeOfferedTokens();
	this.firing = this.isFiring() &amp; incomingTokens.size() > 0;
}
_endIsolation();

return incomingTokens;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents" name="checkAllParents" specification="Semantics-Actions-BasicActions-ActionActivation-checkAllParents.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Check if the given classifier matches any of the direct or indirect
// ancestors of a given type.

ClassifierList directParents = type.general;
boolean matched = false;
int i = 1;
while (!matched &amp; i &lt;= directParents.size()) {
	Classifier directParent = directParents.getValue(i - 1);
	if (directParent == classifier) {
		matched = true;
	} else {
		matched = this.checkAllParents(directParent, classifier);
	}
	i = i + 1;
}

return matched;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize.1" name="initialize" method="Semantics-Actions-BasicActions-ActionActivation-initialize" class="Semantics-Actions-BasicActions-ActionActivation" redefinedOperation="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize.1-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize.1-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-run.1" name="run" method="Semantics-Actions-BasicActions-ActionActivation-run" class="Semantics-Actions-BasicActions-ActionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens.1-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens.1-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire.1" name="fire" method="Semantics-Actions-BasicActions-ActionActivation-fire" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-terminate.1" name="terminate" method="Semantics-Actions-BasicActions-ActionActivation-terminate" class="Semantics-Actions-BasicActions-ActionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-completeAction.1" name="completeAction" method="Semantics-Actions-BasicActions-ActionActivation-completeAction" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-completeAction.1-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-completeAction.1-Parameter1-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-completeAction.1-Parameter1-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady.1" name="isReady" method="Semantics-Actions-BasicActions-ActionActivation-isReady" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring.1" name="isFiring" method="Semantics-Actions-BasicActions-ActionActivation-isFiring" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-doAction" name="doAction" isAbstract="true" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-BasicActions-ActionActivation-doAction-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-ActionActivation-doAction">
                <body>Do the required action behavior.&#xD;
</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-sendOffers.1" name="sendOffers" method="Semantics-Actions-BasicActions-ActionActivation-sendOffers" class="Semantics-Actions-BasicActions-ActionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-createNodeActivations.1" name="createNodeActivations" method="Semantics-Actions-BasicActions-ActionActivation-createNodeActivations" class="Semantics-Actions-BasicActions-ActionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge.1" name="addOutgoingEdge" method="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge.1-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation.1" name="addPinActivation" method="Semantics-Actions-BasicActions-ActionActivation-addPinActivation" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation.1-pinActivation" name="pinActivation" type="Semantics-Actions-BasicActions-PinActivation"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation.1" name="getPinActivation" method="Semantics-Actions-BasicActions-ActionActivation-getPinActivation" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Actions-BasicActions-PinActivation" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation.1-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Pin"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken.1" name="putToken" method="Semantics-Actions-BasicActions-ActionActivation-putToken" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken.1-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#OutputPin"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken.1-value" name="value" type="Semantics-Classes-Kernel-Value"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens.1" name="putTokens" method="Semantics-Actions-BasicActions-ActionActivation-putTokens" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens.1-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#OutputPin"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens.1-values" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens.1-values-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens.1-values-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens.1" name="getTokens" method="Semantics-Actions-BasicActions-ActionActivation-getTokens" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens.1-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#InputPin"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens.1-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens.1-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1" name="takeTokens" method="Semantics-Actions-BasicActions-ActionActivation-takeTokens" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#InputPin"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor.1" name="isSourceFor" method="Semantics-Actions-BasicActions-ActionActivation-isSourceFor" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor.1-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink.1" name="valueParticipatesInLink" method="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink.1-value" name="value" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink.1-link" name="link" type="Semantics-Classes-Kernel-Link"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue.1" name="makeBooleanValue" method="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-BooleanValue" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue.1-value" name="value">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents.1" name="checkAllParents" method="Semantics-Actions-BasicActions-ActionActivation-checkAllParents" class="Semantics-Actions-BasicActions-ActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents.1-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents.1-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents.1-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Actions-BasicActions-A_pinActivations_actionActivation" name="A_pinActivations_actionActivation" visibility="private" memberEnd="Semantics-Actions-BasicActions-ActionActivation-pinActivations Semantics-Actions-BasicActions-PinActivation-actionActivation"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation" name="A_callExecutions_callActionActivation" visibility="private" memberEnd="Semantics-Actions-BasicActions-CallActionActivation-callExecutions Semantics-Actions-BasicActions-A_callExecutions_callActionActivation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation-_ownedEnd.0" visibility="private" type="Semantics-Actions-BasicActions-CallActionActivation" owningAssociation="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation" association="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-WriteLinkActionActivation" name="WriteLinkActionActivation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-WriteLinkActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-WriteLinkActionActivation">
              <body>A write link action activation is a link action activation for a write link action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-WriteLinkActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-WriteLinkActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-LinkActionActivation" specific="Semantics-Actions-IntermediateActions-WriteLinkActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation" name="WriteStructuralFeatureActionActivation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation">
              <body>A write structural feature action activation is a structural feature action activation for a write structural feature action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation" specific="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position" name="position" specification="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-value" name="value" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-value-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-value-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-list" name="list" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-list-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-list-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-startAt" name="startAt">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-startAt-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-startAt-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the position (counting from 1) of the first occurance of the
// given value in the given list at or after the starting index, or 0 if
// it is not found.

boolean found = false;
int i = startAt;
while (!found &amp; i &lt;= list.size()) {
	found = list.getValue(i - 1).equals(value);
	i = i + 1;
}

if (!found) {
	i = 1;
}

return i - 1;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1" name="position" method="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position" class="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-value" name="value" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-list" name="list" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-list-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-list-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-startAt" name="startAt">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation" name="ValueSpecificationActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation">
              <body>A value specification action activation is an action activation for a value specification action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-doAction.1">
              <language>Java</language>
              <body>// Evaluate the value specification for the action and place the result
// on the result pin of the action.

ValueSpecificationAction action = (ValueSpecificationAction) (this.node);

Value value = this.getExecutionLocus().executor.evaluate(action.value);
this.putToken(action.result, value);

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-doAction" class="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation" name="TestIdentityActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-TestIdentityActionActivation">
              <body>A test identity action activation is an action activation for a test identity action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-IntermediateActions-TestIdentityActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the values from the first and second input pins and test if they
// are equal. (Note the equality of references is defined to be that
// they have identical referents.)
// If they are equal, place true on the pin execution for the result
// output pin, otherwise place false.

TestIdentityAction action = (TestIdentityAction) (this.node);

Value firstValue = this.takeTokens(action.first).getValue(0);
Value secondValue = this.takeTokens(action.second).getValue(0);

Value testResult = this
		.makeBooleanValue(firstValue.equals(secondValue));
this.putToken(action.result, testResult);

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-doAction" class="Semantics-Actions-IntermediateActions-TestIdentityActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation" name="StructuralFeatureActionActivation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation">
              <body>A structural feature action activation is an action activation for a structural feature action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation" name="getAssociation" specification="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-feature-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-feature-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-Parameter1-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-Parameter1-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If the structural feature for the action of this activation is an
// association end,
// then get the associated association.

Association association = null;
if (feature instanceof Property) {
	association = ((Property) feature).association;
}

return association;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks" name="getMatchingLinks" specification="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-association" name="association">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-association-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-association-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-end" name="end">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-end-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-end-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-oppositeValue" name="oppositeValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-oppositeValue-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-oppositeValue-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-Parameter1" name="Parameter1" type="Semantics-Classes-Kernel-Link" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-Parameter1-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-Parameter1-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the links of the given binary association whose end opposite
// to the given end has the given value

return this.getMatchingLinksForEndValue(association, end, oppositeValue, null);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue" name="getMatchingLinksForEndValue" specification="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-association" name="association">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-end" name="end">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-oppositeValue" name="oppositeValue" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-endValue" name="endValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-endValue-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-endValue-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-result" name="result" type="Semantics-Classes-Kernel-Link" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-result-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-result-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the links of the given binary association whose end opposite
// to the given end has the given opposite value and, optionally, that
// has a given end value for the given end.

Property oppositeEnd = this.getOppositeEnd(association, end);

ExtensionalValueList extent = this.getExecutionLocus().getExtent(
		association);

LinkList links = new LinkList();
for (int i = 0; i &lt; extent.size(); i++) {
	ExtensionalValue link = extent.getValue(i);
	if (link.getFeatureValue(oppositeEnd).values.getValue(0).equals(oppositeValue)) {
		boolean matches = true;
		if (endValue != null) {
			matches = link.getFeatureValue(end).values.getValue(0).equals(endValue);
		}
		if (matches) {
			if (!end.multiplicityElement.isOrdered | links.size() == 0) {
				links.addValue((Link) link);
			} else {
				int n = link.getFeatureValue(end).position;
				boolean continueSearching = true;
				int j = 0;
				while (continueSearching &amp; j &lt; links.size()) {
					j = j + 1;
					continueSearching = links.getValue(j - 1).getFeatureValue(end).position &lt; n;
				}
				if (continueSearching) {
					links.addValue((Link) link);
				} else {
					links.addValue(j - 1, (Link) link);
				}
			}
		}
	}
}

return links;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd" name="getOppositeEnd" specification="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-association" name="association">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-association-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-association-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-end" name="end">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-end-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-end-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Property"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-Parameter1-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-Parameter1-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the end of a binary association opposite to the given end.

Property oppositeEnd = association.memberEnd.getValue(0);
if (oppositeEnd == end) {
	oppositeEnd = association.memberEnd.getValue(1);
}

return oppositeEnd;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1" name="getAssociation" method="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation" class="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1-feature" name="feature">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1-Parameter1-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1-Parameter1-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1" name="getMatchingLinks" method="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks" class="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-association" name="association">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-end" name="end">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-oppositeValue" name="oppositeValue" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-Parameter1" name="Parameter1" type="Semantics-Classes-Kernel-Link" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-Parameter1-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-Parameter1-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1" name="getMatchingLinksForEndValue" method="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue" class="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-association" name="association">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-end" name="end">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-oppositeValue" name="oppositeValue" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-endValue" name="endValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-endValue-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-endValue-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-result" name="result" type="Semantics-Classes-Kernel-Link" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-result-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-result-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd.1" name="getOppositeEnd" method="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd" class="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd.1-association" name="association">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd.1-end" name="end">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#StructuralFeature"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Property"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation" name="RemoveStructuralFeatureValueActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation">
              <body>A remove structural feature action activation is a write structural feature action activation for a remove structural feature value action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation" specific="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the values of the object and value input pins.
// If the given feature is an association end, then destroy any matching
// links.
// Otherwise, if the object input is a structural value, remove values
// from the given feature.
// If isRemoveDuplicates is true, then destroy all current matching
// links or remove all values equal to the input value.
// If isRemoveDuplicates is false and there is no removeAt input pin,
// remove any one feature value equal to the input value (if there are
// any that are equal).
// If isRemoveDuplicates is false, and there is a removeAt input pin
// remove the feature value at that position.

RemoveStructuralFeatureValueAction action = (RemoveStructuralFeatureValueAction) (this.node);
StructuralFeature feature = action.structuralFeature;
Association association = this.getAssociation(feature);

Value value = this.takeTokens(action.object).getValue(0);

Value inputValue = null;
if (action.value != null) {
	// NOTE: Multiplicity of the value input pin is required to be 1..1.
	inputValue = this.takeTokens(action.value).getValue(0);
}

int removeAt = 0;
if (action.removeAt != null) {
	removeAt = ((UnlimitedNaturalValue) this
			.takeTokens(action.removeAt).getValue(0)).value.naturalValue;
}

if (association != null) {
	LinkList links = this.getMatchingLinksForEndValue(association, feature, value, inputValue);
	
	if (action.isRemoveDuplicates) {
		for (int i = 0; i &lt; links.size(); i++) {
			Link link = links.getValue(i);
			link.destroy();
		}

	} else if (action.removeAt == null) {
		// *** If there is more than one matching link,
		// non-deterministically choose one. ***
		if (links.size() > 0) {
			int i = ((ChoiceStrategy) this.getExecutionLocus().factory
					.getStrategy(&quot;choice&quot;)).choose(links.size());
			links.getValue(i - 1).destroy();
		}

	} else {
		boolean notFound = true;
		int i = 1;
		while (notFound &amp; i &lt;= links.size()) {
			Link link = links.getValue(i - 1);
			if (link.getFeatureValue(feature).position == removeAt) {
				notFound = false;
				link.destroy();
			}
			i = i + 1;
		}
	}

} else if (value instanceof StructuredValue) {
	// If the value is a data value, then it must be copied before
	// any change is made.
	if (!(value instanceof Reference)) {
		value = value.copy();
	}

	FeatureValue featureValue = ((StructuredValue) value)
			.getFeatureValue(action.structuralFeature);

	if (action.isRemoveDuplicates) {
		int j = this.position(inputValue, featureValue.values, 1);
		while (j > 0) {
			featureValue.values.remove(j - 1);
			j = this.position(inputValue, featureValue.values, j);
		}

	} else if (action.removeAt == null) {
		intList positions = new intList();
		int j = this.position(inputValue, featureValue.values, 1);
		while (j > 0) {
			positions.addValue(j);
			j = this.position(inputValue, featureValue.values, j + 1);
		}

		if (positions.size() > 0) {
			// *** Nondeterministically choose which value to remove.
			// ***
			int k = ((ChoiceStrategy) this.getExecutionLocus().factory
					.getStrategy(&quot;choice&quot;)).choose(positions.size());
			featureValue.values.remove(positions.getValue(k - 1) - 1);
		}

	} else {
		if (featureValue.values.size() >= removeAt) {
			featureValue.values.remove(removeAt - 1);
		}
	}
}

if (action.result != null) {
	this.putToken(action.result, value);
}

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-doAction" class="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation" name="ReadLinkActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ReadLinkActionActivation">
              <body>A read link action activation is a link action activation for a read link action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-LinkActionActivation" specific="Semantics-Actions-IntermediateActions-ReadLinkActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the extent, at the current execution locus, of the association to
// which the action applies.
// For all links that match the link end data, place the value of the
// remaining &quot;open&quot; end on the result pin.

ReadLinkAction action = (ReadLinkAction) (this.node);
LinkEndDataList endDataList = action.endData;
LinkEndData openEnd = null;

int i = 1;
while ((openEnd == null) &amp; i &lt;= endDataList.size()) {
	if (endDataList.getValue(i - 1).value == null) {
		openEnd = endDataList.getValue(i - 1);
	}
	i = i + 1;
}

ExtensionalValueList extent = this.getExecutionLocus().getExtent(
		this.getAssociation());

FeatureValueList featureValues = new FeatureValueList();
for (int j = 0; j &lt; extent.size(); j++) {
	ExtensionalValue value = extent.getValue(j);
	Link link = (Link) value;
	if (this.linkMatchesEndData(link, endDataList)) {
		FeatureValue featureValue = link.getFeatureValue(openEnd.end);
		if (!openEnd.end.multiplicityElement.isOrdered
				| featureValues.size() == 0) {
			featureValues.addValue(featureValue);
		} else {
			int n = featureValue.position;
			boolean continueSearching = true;
			int k = 0;
			while (continueSearching &amp; k &lt; featureValues.size()) {
				k = k + 1;
				continueSearching = featureValues.getValue(k - 1).position &lt; n;
			}
			if (continueSearching) {
				featureValues.addValue(featureValue);
			} else {
				featureValues.addValue(k - 1, featureValue);
			}
		}
	}
}

for (int j = 0; j &lt; featureValues.size(); j++) {
	FeatureValue featureValue = featureValues.getValue(j);
	this.putToken(action.result, featureValue.values.getValue(0));
}

// Now that matching is done, ensure that all tokens on end data input
// pins
// are consumed.
for (int k = 0; k &lt; endDataList.size(); k++) {
	LinkEndData endData = endDataList.getValue(k);
	if (endData.value != null) {
		this.takeTokens(endData.value);
	}
}

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-doAction" class="Semantics-Actions-IntermediateActions-ReadLinkActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation" name="ReadSelfActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ReadSelfActionActivation">
              <body>A read self action activation is an action activation for a read self action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-IntermediateActions-ReadSelfActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the context object of the activity execution containing this
// action activation and place a reference to it on the result output
// pin.

// Debug.println(&quot;[ReadSelfActionActivation] Start...&quot;);

Reference context = new Reference();
context.referent = this.getExecutionContext();

// Debug.println(&quot;[ReadSelfActionActivation] context object = &quot; +
// context.referent);

OutputPin resultPin = ((ReadSelfAction) (this.node)).result;
this.putToken(resultPin, context);
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-doAction" class="Semantics-Actions-IntermediateActions-ReadSelfActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation" name="ReadStructuralFeatureActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation">
              <body>A read structural feature action activation is an action activation for a read structural feature action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation" specific="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the value of the object input pin.
// If the given feature is an association end, then get all values of
// the that end.
// for which the opposite end has the object input value and place them
// on the result pin.
// Otherwise, if the object input value is a structural value, then get
// the values
// of the appropriate feature of the input value and place them on the
// result output pin.

ReadStructuralFeatureAction action = (ReadStructuralFeatureAction) (this.node);
StructuralFeature feature = action.structuralFeature;
Association association = this.getAssociation(feature);

Value value = this.takeTokens(action.object).getValue(0);
ValueList resultValues = new ValueList();

if (association != null) {
	LinkList links = this.getMatchingLinks(association, feature, value);
	for (int i = 0; i &lt; links.size(); i++) {
		Link link = links.getValue(i);
		resultValues.addValue(link.getFeatureValue(feature).values
				.getValue(0));
	}
} else if (value instanceof StructuredValue) {
	// Debug.println(&quot;[ReadStructuralFeatureActionActivation] value = &quot;
	// + value +&quot;, structural feature = &quot; + feature.name);
	resultValues = ((StructuredValue) value).getFeatureValue(feature).values;
}

this.putTokens(action.result, resultValues);
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-doAction" class="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation" name="LinkActionActivation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-LinkActionActivation">
              <body>A link action activation is an action activation for a link action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-IntermediateActions-LinkActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData" name="linkMatchesEndData" specification="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-link" name="link" type="Semantics-Classes-Kernel-Link">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-link-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-link-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-endDataList" name="endDataList">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#LinkEndData"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-endDataList-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-endDataList-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test whether the given link matches the given end data.

boolean matches = true;
int i = 1;
while (matches &amp; i &lt;= endDataList.size()) {
	matches = this.endMatchesEndData(link, endDataList.getValue(i - 1));
	i = i + 1;
}

return matches;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData" name="endMatchesEndData" specification="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-link" name="link" type="Semantics-Classes-Kernel-Link">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-link-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-link-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-endData" name="endData">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#LinkEndData"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-endData-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-endData-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test whether the appropriate end of the given link matches the given
// end data.

boolean matches = false;
if (endData.value == null) {
	matches = true;
} else {
	Property end = endData.end;
	FeatureValue linkFeatureValue = link.getFeatureValue(end);
	Value endValue = this.getTokens(endData.value).getValue(0);
	if (endData instanceof LinkEndDestructionData) {
		if (!((LinkEndDestructionData) endData).isDestroyDuplicates
				&amp; !end.multiplicityElement.isUnique
				&amp; end.multiplicityElement.isOrdered) {
			int destroyAt = ((UnlimitedNaturalValue) (this
					.getTokens(((LinkEndDestructionData) endData).destroyAt)
					.getValue(0))).value.naturalValue;
			matches = linkFeatureValue.values.getValue(0).equals(
					endValue)
					&amp;&amp; linkFeatureValue.position == destroyAt;
		} else {
			matches = linkFeatureValue.values.getValue(0).equals(
					endValue);
		}
	} else {
		matches = linkFeatureValue.values.getValue(0).equals(endValue);
	}
}

return matches;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation" name="getAssociation" specification="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the association for the link action of this activation.

return (Association) (((LinkAction) (this.node)).endData.getValue(0).end.association);
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1" name="linkMatchesEndData" method="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData" class="Semantics-Actions-IntermediateActions-LinkActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1-link" name="link" type="Semantics-Classes-Kernel-Link"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1-endDataList" name="endDataList">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#LinkEndData"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1-endDataList-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1-endDataList-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData.1" name="endMatchesEndData" method="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData" class="Semantics-Actions-IntermediateActions-LinkActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData.1-link" name="link" type="Semantics-Classes-Kernel-Link"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData.1-endData" name="endData">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#LinkEndData"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation.1" name="getAssociation" method="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation" class="Semantics-Actions-IntermediateActions-LinkActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Association"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation" name="DestroyLinkActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation">
              <body>A destroy link action activation is a write link action activation for a destroy link action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-WriteLinkActionActivation" specific="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the extent, at the current execution locus, of the association
// for which links are being destroyed.
// Destroy all links that match the given link end destruction data.
// For unique ends, or non-unique ends for which isDestroyDuplicates is
// true, match links with a matching value for that end.
// For non-unique, ordered ends for which isDestroyDuplicates is false,
// match links with an end value at the given destroyAt position. [Must
// a value be given, too, in this case?]
// For non-unique, non-ordered ends for which isDestroyDuplicates is
// false, pick one matching link (if any) non-deterministically. [The
// semantics of this case is not clear from the current spec.]

Debug.println(&quot;[doAction] DestroyLinkAction...&quot;);

DestroyLinkAction action = (DestroyLinkAction) (this.node);
LinkEndDestructionDataList destructionDataList = action.endData;

Debug.println(&quot;[doAction] end data size = &quot;
		+ destructionDataList.size());

boolean destroyOnlyOne = false;
int j = 1;
while (!destroyOnlyOne &amp; j &lt;= destructionDataList.size()) {
	LinkEndDestructionData endData = destructionDataList
			.getValue(j - 1);
	destroyOnlyOne = !endData.end.multiplicityElement.isUnique
			&amp; !endData.end.multiplicityElement.isOrdered
			&amp; !endData.isDestroyDuplicates;
	j = j + 1;
}

LinkEndDataList endDataList = new LinkEndDataList();
for (int i = 0; i &lt; destructionDataList.size(); i++) {
	LinkEndDestructionData endData = destructionDataList.getValue(i);
	Debug.println(&quot;[doAction] Matching end = &quot; + endData.end.name);
	endDataList.addValue(endData);
}

ExtensionalValueList extent = this.getExecutionLocus().getExtent(
		this.getAssociation());
ExtensionalValueList matchingLinks = new ExtensionalValueList();

for (int i = 0; i &lt; extent.size(); i++) {
	ExtensionalValue value = extent.getValue(i);
	Link link = (Link) value;
	if (this.linkMatchesEndData(link, endDataList)) {
		matchingLinks.addValue(link);
	}
}

// Now that matching is done, ensure that all tokens on end data input
// pins
// are consumed.
for (int i = 0; i &lt; destructionDataList.size(); i++) {
	LinkEndDestructionData endData = destructionDataList.getValue(i);
	Property end = endData.end;
	if (!endData.isDestroyDuplicates
			&amp; !end.multiplicityElement.isUnique
			&amp; end.multiplicityElement.isOrdered) {
		this.takeTokens(endData.destroyAt);
	}
	Debug.println(&quot;[doAction] Consuming tokens for end &quot; + end.name);
	this.takeTokens(endData.value);
}

if (destroyOnlyOne) {
	// *** If there is more than one matching link,
	// non-deterministically choose one. ***
	if (matchingLinks.size() > 0) {
		int i = ((ChoiceStrategy) this.getExecutionLocus().factory
				.getStrategy(&quot;choice&quot;)).choose(matchingLinks.size());
		matchingLinks.getValue(i - 1).destroy();
	}
} else {
	for (int i = 0; i &lt; matchingLinks.size(); i++) {
		ExtensionalValue matchingLink = matchingLinks.getValue(i);
		matchingLink.destroy();
	}
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-doAction" class="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation" name="DestroyObjectActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation">
              <body>A destroy object action activation is an action activation for a destroy object action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the value on the target input pin.
// If the value is not a reference, then the action has no effect.
// Otherwise, do the following.
// If isDestroyLinks is true, destroy all links in which the referent
// participates.
// If isDestroyOwnedObjects is true, destroy all objects owned by the
// referent via composition links.
// Destroy the referent object.

DestroyObjectAction action = (DestroyObjectAction) (this.node);
Value value = this.takeTokens(action.target).getValue(0);

this.destroyObject(value, action.isDestroyLinks,
		action.isDestroyOwnedObjects);

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject" name="destroyObject" specification="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-value" name="value" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-value-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-value-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyLinks" name="isDestroyLinks">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyLinks-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyLinks-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyOwnedObjects" name="isDestroyOwnedObjects">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyOwnedObjects-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyOwnedObjects-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If the given value is a reference, then destroy the referenced
// object, per the given destroy action attribute values.

// Debug.println(&quot;[destroyObject] object = &quot; + value.objectId());

if (value instanceof Reference) {
	Reference reference = (Reference) value;

	if (isDestroyLinks | isDestroyOwnedObjects) {
		Debug.println(&quot;[destroyObject] Destroying links...&quot;);
		ExtensionalValueList extensionalValues = this
				.getExecutionLocus().extensionalValues;
		for (int i = 0; i &lt; extensionalValues.size(); i++) {
			ExtensionalValue extensionalValue = extensionalValues
					.getValue(i);
			if (extensionalValue instanceof Link) {
				Link link = (Link) extensionalValue;
				if (this.valueParticipatesInLink(reference, link)) {
					if (isDestroyLinks
							| this.objectIsComposite(reference, link)) {
						// Debug.println(&quot;[destroyObject] Destroying link &quot;
						// + link.objectId());
						link.destroy();
					}
				}
			}
		}
	}

	if (isDestroyOwnedObjects) {
		Debug.println(&quot;[destroyObject] Destroying owned objects...&quot;);
		FeatureValueList objectFeatureValues = reference
				.getFeatureValues();
		for (int i = 0; i &lt; objectFeatureValues.size(); i++) {
			FeatureValue featureValue = objectFeatureValues.getValue(i);
			if (((Property) featureValue.feature).aggregation == AggregationKind.composite) {
				ValueList values = featureValue.values;
				for (int j = 0; j &lt; values.size(); j++) {
					Value ownedValue = values.getValue(j);
					this.destroyObject(ownedValue, isDestroyLinks,
							isDestroyOwnedObjects);
				}
			}
		}
	}

	reference.destroy();
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite" name="objectIsComposite" specification="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-reference" name="reference" type="Semantics-Classes-Kernel-Reference">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-reference-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-reference-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-link" name="link" type="Semantics-Classes-Kernel-Link">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-link-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-link-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test whether the given reference participates in the given link as a
// composite.

FeatureValueList linkFeatureValues = link.getFeatureValues();

boolean isComposite = false;
int i = 1;
while (!isComposite &amp; i &lt;= linkFeatureValues.size()) {
	FeatureValue featureValue = linkFeatureValues.getValue(i - 1);
	if (!featureValue.values.getValue(0).equals(reference)
			&amp; ((Property) featureValue.feature).aggregation == AggregationKind.composite) {
		isComposite = true;
	}
	i = i + 1;
}

return isComposite;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-doAction" class="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject.1" name="destroyObject" method="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject" class="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject.1-value" name="value" type="Semantics-Classes-Kernel-Value"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject.1-isDestroyLinks" name="isDestroyLinks">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject.1-isDestroyOwnedObjects" name="isDestroyOwnedObjects">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite.1" name="objectIsComposite" method="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite" class="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite.1-reference" name="reference" type="Semantics-Classes-Kernel-Reference"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite.1-link" name="link" type="Semantics-Classes-Kernel-Link"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation" name="CreateLinkActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-CreateLinkActionActivation">
              <body>A create link action activation is a write link action activation for a create link action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-WriteLinkActionActivation" specific="Semantics-Actions-IntermediateActions-CreateLinkActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-doAction.1">
              <language>Java</language>
              <body>// If the association has any unique ends, then destroy an existing link
// that matches all ends of the link being created.
// Get the extent at the current execution locus of the association for
// which a link is being created.
// Destroy all links that have a value for any end for which
// isReplaceAll is true.
// Create a new link for the association, at the current locus, with the
// given end data values,
// inserted at the given insertAt position (for ordered ends).

CreateLinkAction action = (CreateLinkAction) (this.node);
LinkEndCreationDataList endDataList = action.endData;

Association linkAssociation = this.getAssociation();
ExtensionalValueList extent = this.getExecutionLocus().getExtent(
		linkAssociation);

boolean unique = false;
for (int i = 0; i &lt; endDataList.size(); i++) {
	if (endDataList.getValue(i).end.multiplicityElement.isUnique) {
		unique = true;
	}
}

for (int i = 0; i &lt; extent.size(); i++) {
	ExtensionalValue value = extent.getValue(i);
	Link link = (Link) value;

	boolean match = true;
	boolean destroy = false;
	int j = 1;
	while (j &lt;= endDataList.size()) {
		LinkEndCreationData endData = endDataList.getValue(j - 1);
		if (this.endMatchesEndData(link, endData)) {
			if (endData.isReplaceAll) {
				destroy = true;
			}
		} else {
			match = false;
		}
		j = j + 1;
	}
	if (destroy | unique &amp; match) {
		link.destroy();
	}
}

Link newLink = new Link();
newLink.type = linkAssociation;

for (int i = 0; i &lt; endDataList.size(); i++) {
	LinkEndCreationData endData = endDataList.getValue(i);

	int insertAt = 0;
	if (endData.insertAt != null) {
		insertAt = ((UnlimitedNaturalValue) (this
				.takeTokens(endData.insertAt).getValue(0))).value.naturalValue;
	}

	newLink.setFeatureValue(endData.end,
			this.takeTokens(endData.value), insertAt);
}

newLink.addTo(this.getExecutionLocus());
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-doAction" class="Semantics-Actions-IntermediateActions-CreateLinkActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation" name="CreateObjectActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-CreateObjectActionActivation">
              <body>A create object action activation is an action activation for a create object action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-IntermediateActions-CreateObjectActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-doAction.1">
              <language>Java</language>
              <body>// Create an object with the given classifier (which must be a class) as
// its type, at the same locus as the action activation.
// Place a reference to the object on the result pin of the action.

CreateObjectAction action = (CreateObjectAction) (this.node);

Reference reference = new Reference();
reference.referent = this.getExecutionLocus().instantiate(
		(Class_) (action.classifier));

this.putToken(action.result, reference);

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-doAction" class="Semantics-Actions-IntermediateActions-CreateObjectActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation" name="ClearAssociationActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation">
              <body>A clear association action activation is an action activation for a clear association action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the extent, at the current execution locus, of the given
// association.
// Read the object input pin. Destroy all links in which the object
// participates.

ClearAssociationAction action = (ClearAssociationAction) (this.node);

ExtensionalValueList extent = this.getExecutionLocus().getExtent(
		action.association);
Value objectValue = this.takeTokens(action.object).getValue(0);

for (int i = 0; i &lt; extent.size(); i++) {
	Link link = (Link) (extent.getValue(i));
	if (this.valueParticipatesInLink(objectValue, link)) {
		link.destroy();
	}
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-doAction" class="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation" name="ClearStructuralFeatureActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation">
              <body>A clear structural feature action activation is a structural feature action activation for a clear structural feature action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation" specific="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the value of the object input pin.
// If the given feature is an association end, then
// destroy all links that have the object input on the opposite end.
// Otherwise, if the object input is a structured value, then
// set the appropriate feature of the input value to be empty.

ClearStructuralFeatureAction action = (ClearStructuralFeatureAction) (this.node);
StructuralFeature feature = action.structuralFeature;
Association association = this.getAssociation(feature);

Value value = this.takeTokens(action.object).getValue(0);

if (association != null) {
	LinkList links = this.getMatchingLinks(association, feature, value);
	for (int i = 0; i &lt; links.size(); i++) {
		Link link = links.getValue(i);
		link.destroy();
	}
} else if (value instanceof StructuredValue) {
	// If the value is a data value, then it must be copied before
	// any change is made.
	if (!(value instanceof Reference)) {
		value = value.copy();
	}

	((StructuredValue) value).setFeatureValue(action.structuralFeature,
			new ValueList(), 0);
}

if (action.result != null) {
	this.putToken(action.result, value);
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-doAction" class="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation" name="AddStructuralFeatureValueActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-_ownedComment.0">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-_ownedComment.1" annotatedElement="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation">
              <body>An add structural feature action value activation is a write structural feature action activation for an add structural feature value action.</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation" specific="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the values of the object and value input pins.
// If the given feature is an association end, then create a link
// between the object and value inputs.
// Otherwise, if the object input is a structural value, then add a
// value to the values for the feature.
// If isReplaceAll is true, first remove all current matching links or
// feature values.
// If isReplaceAll is false and there is an insertAt pin, insert the
// value at the appropriate position.

AddStructuralFeatureValueAction action = (AddStructuralFeatureValueAction) (this.node);
StructuralFeature feature = action.structuralFeature;
Association association = this.getAssociation(feature);

Value value = this.takeTokens(action.object).getValue(0);
ValueList inputValues = this.takeTokens(action.value);

// NOTE: Multiplicity of the value input pin is required to be 1..1.
Value inputValue = inputValues.getValue(0);

int insertAt = 0;
if (action.insertAt != null) {
	insertAt = ((UnlimitedNaturalValue) this
			.takeTokens(action.insertAt).getValue(0)).value.naturalValue;
}

if (association != null) {
	LinkList links = this.getMatchingLinks(association, feature, value);

	Property oppositeEnd = this.getOppositeEnd(association, feature);
	int position = 0;
	if (oppositeEnd.multiplicityElement.isOrdered) {
		position = this.getMatchingLinks(association, oppositeEnd,
				inputValue).size() + 1;
	}

	if (action.isReplaceAll) {
		for (int i = 0; i &lt; links.size(); i++) {
			Link link = links.getValue(i);
			link.destroy();
		}
	} else if (feature.multiplicityElement.isUnique) {
		int i = 1;
		boolean destroyed = false;
		while (!destroyed &amp; i &lt;= links.size()) {
			Link link = links.getValue(i - 1);
			FeatureValue featureValue = link.getFeatureValue(feature);
			if (featureValue.values.getValue(0).equals(inputValue)) {
				position = link.getFeatureValue(oppositeEnd).position;
				link.destroy();
				destroyed = true;
			}
			i = i + 1;
		}
	}

	Link newLink = new Link();
	newLink.type = association;

	newLink.setFeatureValue(feature, inputValues, insertAt);

	ValueList oppositeValues = new ValueList();
	oppositeValues.addValue(value);
	newLink.setFeatureValue(oppositeEnd, oppositeValues, position);

	newLink.addTo(this.getExecutionLocus());

} else if (value instanceof StructuredValue) {
	// If the value is a data value, then it must be copied before
	// any change is made.
	if (!(value instanceof Reference)) {
		value = value.copy();
	}

	StructuredValue structuredValue = (StructuredValue) value;

	if (action.isReplaceAll) {
		structuredValue.setFeatureValue(feature, inputValues, 0);
	} else {
		FeatureValue featureValue = structuredValue
				.getFeatureValue(feature);

		if (featureValue.values.size() > 0 &amp; insertAt == 0) {
			// *** If there is no insertAt pin, then the structural
			// feature must be unordered, and the insertion position is
			// immaterial. ***
			insertAt = ((ChoiceStrategy) this.getExecutionLocus().factory
					.getStrategy(&quot;choice&quot;)).choose(featureValue.values
					.size());
		}

		if (feature.multiplicityElement.isUnique) {
			// Remove any existing value that duplicates the input value
			int j = position(inputValue, featureValue.values, 1);
			if (j > 0) {
				featureValue.values.remove(j - 1);
			}
		}

		if (insertAt &lt;= 0) { // Note: insertAt = -1 indicates an
								// unlimited value of &quot;*&quot;
			featureValue.values.addValue(inputValue);
		} else {
			featureValue.values.addValue(insertAt - 1, inputValue);
		}
	}
}

if (action.result != null) {
	this.putToken(action.result, value);
}

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-doAction" class="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation" name="StartClassifierBehaviorActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation">
              <body>A start classifier behavior action activation is an action activation for a start classifier behavior action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the value on the object input pin. If it is not a reference, then
// do nothing.
// Start the classifier behavior of the referent object for the
// classifier given as the type of the object input pin.
// If the object input pin has no type, then start the classifier
// behaviors of all types of the referent object. [The required behavior
// in this case is not clear from the spec.]

StartClassifierBehaviorAction action = (StartClassifierBehaviorAction) (this.node);

Value object = this.takeTokens(action.object).getValue(0);

if (object instanceof Reference) {
	((Reference) object).startBehavior(
			(Class_) (action.object.typedElement.type),
			new ParameterValueList());
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-doAction" class="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation" name="StartObjectBehaviorActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation">
              <body>A start behavior action activation is an action activation for a start behavior action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-InvocationActionActivation" specific="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the value on the object input pin. If it is not a reference, then
// do nothing.
// Start the behavior of the referent object for the classifier given as
// the type of the object input pin, with parameter values taken from
// the argument input pins.
// If the object input pin has no type, then start the classifier
// behaviors of all types of the referent object.

StartObjectBehaviorAction action = (StartObjectBehaviorAction) (this.node);

Value object = this.takeTokens(action.object).getValue(0);

if (object instanceof Reference) {
	Class_ type = (Class_) (action.object.typedElement.type);
	InputPinList argumentPins = action.argument;

	ParameterValueList inputs = new ParameterValueList();

	if (type != null) {
		Behavior behavior;

		if (type instanceof Behavior) {
			behavior = (Behavior) type;
		} else {
			behavior = type.classifierBehavior;
		}

		if (behavior != null) {
			ParameterList parameters = behavior.ownedParameter;

			int pinNumber = 1;
			int i = 1;
			while (i &lt;= parameters.size()) {
				Parameter parameter = parameters.getValue(i - 1);
				int j = pinNumber;
				if (parameter.direction == ParameterDirectionKind.in
						| parameter.direction == ParameterDirectionKind.inout) {
					ParameterValue parameterValue = new ParameterValue();
					parameterValue.parameter = parameter;
					parameterValue.values = this
							.takeTokens(argumentPins.getValue(j - 1));
					inputs.addValue(parameterValue);
					j = j + 1;
				}
				pinNumber = j;
				i = i + 1;
			}
		}
	}

	((Reference) object).startBehavior(type, inputs);
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-doAction" class="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation" name="ReduceActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-ReduceActionActivation">
              <body>A reduce action activation is an action activation for a reduce action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-CompleteActions-ReduceActionActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution" name="currentExecution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" association="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution">
                <body>The current execution of the reducer behavior.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-ReduceActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the values of the collection input pin.
// If the input pin has no values, then do nothing. Otherwise, do the
// following.
// Repeatedly invoke the reducer behavior on successive pairs to reduce
// the collection to a single value, and place that value on the result
// pin.
// To invoke the reducer behavior, compile it to create an execution,
// make the execution the current execution, place the appropriate
// values on its input parameters, and execute it.

ReduceAction action = (ReduceAction) (this.node);

ValueList values = this.takeTokens(action.collection);

if (values.size() > 0) {
	ParameterList parameters = action.reducer.ownedParameter;
	Parameter input1 = null;
	Parameter input2 = null;
	Parameter output = null;

	int i = 1;
	while (i &lt;= parameters.size()) {
		Parameter parameter = parameters.getValue(i - 1);
		if (parameter.direction == ParameterDirectionKind.in) {
			if (input1 == null) {
				input1 = parameter;
			} else {
				input2 = parameter;
			}
		} else if (parameter.direction == ParameterDirectionKind.out
				| parameter.direction == ParameterDirectionKind.return_) {
			output = parameter;
		}
		i = i + 1;
	}

	ParameterValue parameterValue1 = new ParameterValue();
	parameterValue1.parameter = input1;
	parameterValue1.values = new ValueList();
	parameterValue1.values.addValue(values.getValue(0));

	int j = 2;
	while (j &lt;= values.size()) {
		this.currentExecution = this.getExecutionLocus().factory
				.createExecution(action.reducer, this
						.getExecutionContext());

		this.currentExecution.setParameterValue(parameterValue1);

		ParameterValue parameterValue2 = new ParameterValue();
		parameterValue2.parameter = input2;
		parameterValue2.values = new ValueList();
		parameterValue2.values.addValue(values.getValue(j - 1));
		this.currentExecution.setParameterValue(parameterValue2);

		this.currentExecution.execute();

		parameterValue1.values = this.currentExecution
				.getParameterValue(output).values;

		j = j + 1;

		if (parameterValue1.values.isEmpty() &amp; j &lt;= values.size()) {
			parameterValue1.values.add(values.getValue(j - 1));
			j = j + 1;
		}

	}

	this.putTokens(action.result, parameterValue1.values);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-terminate" name="terminate" specification="Semantics-Actions-CompleteActions-ReduceActionActivation-terminate.1">
              <language>Java</language>
              <body>// If there is a current execution, terminate it. Then terminate self.

if (this.currentExecution != null) {
	this.currentExecution.terminate();
}

super.terminate();
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-ReduceActionActivation-doAction" class="Semantics-Actions-CompleteActions-ReduceActionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-terminate.1" name="terminate" method="Semantics-Actions-CompleteActions-ReduceActionActivation-terminate" class="Semantics-Actions-CompleteActions-ReduceActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation" name="ReadIsClassifiedObjectActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation">
              <body>A read-is-classified object activation is an action activation for a read-is-classified object action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the value on the object input pin and determine if it is
// classified by the classifier specified in the action.
// If the isDirect attribute of the action is false, then place true on
// the result output pin if the input object has the specified
// classifier or of one its (direct or indirect) descendants as a type.
// If the isDirect attribute of the action is true, then place true on
// the result output pin if the input object has the specified
// classifier as a type.
// Otherwise place false on the result output pin.

ReadIsClassifiedObjectAction action = (ReadIsClassifiedObjectAction) (this.node);

Value input = this.takeTokens(action.object).getValue(0);
ClassifierList types = input.getTypes();

boolean result = false;
int i = 1;
while (!result &amp; i &lt;= types.size()) {
	Classifier type = types.getValue(i - 1);

	if (type == action.classifier) {
		result = true;
	} else if (!action.isDirect) {
		result = this.checkAllParents(type, action.classifier);
	}

	i = i + 1;
}

ValueList values = new ValueList();
values.addValue(this.makeBooleanValue(result));

this.putTokens(action.result, values);
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-doAction" class="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation" name="ReclassifyObjectActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation">
              <body>A reclassify object activation is an action activation for a reclassify object action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the value of the object input pin. If it is not a reference, then
// do nothing. Otherwise, do the following.
// Remove all types from the referent object that are in the set of old
// classifiers but not the set of new classifiers (or just all types
// that are not new classifiers, if isReplaceAll is true).
// Remove the feature values from the referent object for all
// classifiers that are removed.
// Add all new classifiers as types of the referent object that are not
// already types.
// Add feature values to the referent object for the structural
// features of all added classifiers.
// Any features that previously had values maintain those values,
// while new features are initialized as being empty.

ReclassifyObjectAction action = (ReclassifyObjectAction) (this.node);
ClassifierList newClassifiers = action.newClassifier;
ClassifierList oldClassifiers = action.oldClassifier;

Value input = this.takeTokens(action.object).getValue(0);

if (input instanceof Reference) {
	Object_ object = ((Reference) input).referent;

	int i = 1;
	while (i &lt;= object.types.size()) {
		Class_ type = object.types.getValue(i - 1);

		boolean toBeRemoved = true;
		int j = 1;
		while (toBeRemoved &amp; j &lt;= newClassifiers.size()) {
			toBeRemoved = (type != newClassifiers.getValue(j - 1));
			j = j + 1;
		}

		if (toBeRemoved &amp; !action.isReplaceAll) {
			boolean notInOld = true;
			int k = 1;
			while (notInOld &amp; k &lt;= oldClassifiers.size()) {
				notInOld = (type != oldClassifiers.getValue(k - 1));
				k = k + 1;
			}
			toBeRemoved = !notInOld;
		}

		if (toBeRemoved) {
			object.types.removeValue(i - 1);
		} else {
			i = i + 1;
		}
	}

	for (int n = 0; n &lt; newClassifiers.size(); n++) {
		Classifier classifier = newClassifiers.getValue(n);

		boolean toBeAdded = true;
		int j = 1;
		while (toBeAdded &amp; j &lt;= object.types.size()) {
			toBeAdded = (classifier != object.types.getValue(j - 1));
			j = j + 1;
		}

		if (toBeAdded) {
			object.types.addValue((Class_) classifier);
		}
	}
	
	FeatureValueList oldFeatureValues = object.getFeatureValues();
	object.featureValues = new FeatureValueList();
	object.addFeatureValues(oldFeatureValues);
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-doAction" class="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation" name="ReadExtentActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-ReadExtentActionActivation">
              <body>A read extent action activation is an action activation for a read extent action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-CompleteActions-ReadExtentActionActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-ReadExtentActionActivation-doAction.1">
              <language>Java</language>
              <body>// Get the extent, at the current execution locus, of the classifier
// (which must be a class) identified in the action.
// Place references to the resulting set of objects on the result pin.

ReadExtentAction action = (ReadExtentAction) (this.node);
ExtensionalValueList objects = this.getExecutionLocus().getExtent(
		action.classifier);

// Debug.println(&quot;[doAction] &quot; + action.classifier.name + &quot; has &quot; +
// objects.size() + &quot; instance(s).&quot;);

ValueList references = new ValueList();
for (int i = 0; i &lt; objects.size(); i++) {
	Value object = objects.getValue(i);
	Reference reference = new Reference();
	reference.referent = (Object_) object;
	references.addValue(reference);
}

this.putTokens(action.result, references);
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-ReadExtentActionActivation-doAction" class="Semantics-Actions-CompleteActions-ReadExtentActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation" name="AcceptEventActionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionActivation">
              <body>An accept event action activation is an action activation for an accept event action.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-_ownedComment.1">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Actions-CompleteActions-AcceptEventActionActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter" name="eventAccepter" visibility="public" type="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter" association="Semantics-Actions-CompleteActions-A_actionActivation_eventAccepter">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter">
                <body>If the accept event action activation is waiting for an event, then this is the accepter it has registered for the event.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-waiting" name="waiting" visibility="public">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize" name="initialize" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
              <language>Java</language>
              <body>// Initialize this accept event action activation to be not waiting for an event.

super.initialize(node, group);
this.waiting = false;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-run" name="run" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-run.1">
              <language>Java</language>
              <body>// Create an event accepter and initialize waiting to false.

super.run();

this.eventAccepter = new AcceptEventActionEventAccepter();
this.eventAccepter.actionActivation = this;

this.waiting = false;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire" name="fire" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Register the event accepter for this accept event action activation
// with the context object of the enclosing activity execution
// and wait for an event to be accepted.

Debug.println(&quot;[fire] Action &quot; + this.node.name + &quot;...&quot;);

this.getExecutionContext().register(this.eventAccepter);
this.waiting = true;
this.firing = false;

this.suspend();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady" name="isReady" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// An accept event action activation is ready to fire only if it is not
// already waiting for an event.

boolean ready;
if (this.waiting) {
	ready = false;
} else {
	ready = super.isReady();
}

return ready;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-doAction.1">
              <language>Java</language>
              <body>// Do nothing. [This will never be called.]

return;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept" name="accept" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept-signalInstance-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept-signalInstance-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Accept a signal occurance for the given signal instance.
// If the action does not unmarshall, then place the signal instance on
// the result pin, if any.
// If the action does unmarshall, then get the feature values of the
// signal instance, and place the values for each feature on the
// corresponding output pin.
// Concurrently fire all output pins while offering a single control
// token.
// If there are no incoming edges, then re-register this accept event
// action execution with the context object.

AcceptEventAction action = (AcceptEventAction) (this.node);
OutputPinList resultPins = action.result;

Debug.println(&quot;[accept] action = &quot; + action.name
		+ &quot;, signalinstance = &quot; + signalInstance);

if (this.running) {
	if (!action.isUnmarshall) {
		ValueList result = new ValueList();
		result.addValue(signalInstance);
		if (resultPins.size() > 0) {
			this.putTokens(resultPins.getValue(0), result);
		}
	} else {
		FeatureValueList featureValues = signalInstance.getMemberValues();
		for (int i = 0; i &lt; featureValues.size(); i++) {
			FeatureValue featureValue = featureValues.getValue(i);
			OutputPin resultPin = resultPins.getValue(i);
			this.putTokens(resultPin, featureValue.values);
		}
	}

	this.sendOffers();

	this.waiting = false;

	Debug.println(&quot;[fire] Checking if &quot; + this.node.name
			+ &quot; should fire again...&quot;);
	this.receiveOffer();

	this.resume();
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match" name="match" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-signalInstance-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-signalInstance-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return true if the given signal instance matches a trigger of the
// accept action of this activation.

AcceptEventAction action = (AcceptEventAction) (this.node);
TriggerList triggers = action.trigger;
Signal signal = signalInstance.type;

boolean matches = false;
int i = 1;
while (!matches &amp; i &lt;= triggers.size()) {
	Signal triggerSignal = ((SignalEvent) (triggers.getValue(i - 1).event)).signal;
	if (triggerSignal == signal) {
		matches = true;
	} else {
		matches = this.checkAllParents(signal, triggerSignal);
	}
	i = i + 1;
}

return matches;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-terminate" name="terminate" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-terminate.1">
              <language>Java</language>
              <body>// Terminate this action and unregister its event accepter.

super.terminate();

if (this.waiting) {
	this.getExecutionContext().unregister(this.eventAccepter);
	this.waiting = false;
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize.1" name="initialize" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize" class="Semantics-Actions-CompleteActions-AcceptEventActionActivation" redefinedOperation="Semantics-Actions-BasicActions-ActionActivation-initialize.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize.1-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize.1-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-run.1" name="run" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-run" class="Semantics-Actions-CompleteActions-AcceptEventActionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire.1" name="fire" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire" class="Semantics-Actions-CompleteActions-AcceptEventActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady.1" name="isReady" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady" class="Semantics-Actions-CompleteActions-AcceptEventActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady.1-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-doAction" class="Semantics-Actions-CompleteActions-AcceptEventActionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept.1" name="accept" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept" class="Semantics-Actions-CompleteActions-AcceptEventActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept.1-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match.1" name="match" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match" class="Semantics-Actions-CompleteActions-AcceptEventActionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match.1-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-terminate.1" name="terminate" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-terminate" class="Semantics-Actions-CompleteActions-AcceptEventActionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter" name="AcceptEventActionEventAccepter">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter">
              <body>An accept event action event accepter handles signal reception events on the behalf of a specific accept event action activation.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-_generalization.0" general="Semantics-CommonBehaviors-Communications-EventAccepter" specific="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation" name="actionActivation" visibility="public" type="Semantics-Actions-CompleteActions-AcceptEventActionActivation" association="Semantics-Actions-CompleteActions-A_actionActivation_eventAccepter">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation">
                <body>The accept event action activation on behalf of which this event accepter is waiting.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept" name="accept" specification="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept-signalInstance-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept-signalInstance-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Accept a signal event occurrence. Forward the signal instance to the action activation.

if (eventOccurrence instanceof SignalEventOccurrence) {
	this.actionActivation.accept(((SignalEventOccurrence)eventOccurrence).signalInstance);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match" name="match" specification="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-signalInstance-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-signalInstance-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return true if the given event occurrence is a signal event occurrence and the
// signal instance matches a trigger of the accept action of the action activation.

boolean matches = false;
if (eventOccurrence instanceof SignalEventOccurrence) {
	matches = this.actionActivation.
			match(((SignalEventOccurrence)eventOccurrence).signalInstance);
}
return matches;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept.1" name="accept" method="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept" class="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept.1-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept.1">
                <body>Accept a signal occurance for the given signal instance.</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept.1-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1" name="match" method="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match" class="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1">
                <body>Determine if the given signal instance matches a trigger of the accept action of the action activation.</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Actions-CompleteActions-A_actionActivation_eventAccepter" name="A_actionActivation_eventAccepter" visibility="private" memberEnd="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation" name="A_currentExecution_reduceActionActivation" visibility="private" memberEnd="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation-_ownedEnd.0" visibility="private" type="Semantics-Actions-CompleteActions-ReduceActionActivation" owningAssociation="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation" association="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation" name="StructuredActivityNodeActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation">
              <body>A structured activity node activation is an action activation for an action that is a structured activity node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-_ownedComment.1">
              <body>import java.util.*;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-activationGroup" name="activationGroup" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" aggregation="composite" association="Semantics-Activities-CompleteStructuredActivities-A_activationGroup_containingNodeActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-activationGroup-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-activationGroup">
                <body>The group of activations of the activity nodes contained in the structured activity node.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doAction" name="doAction" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doAction.1">
              <language>Java</language>
              <body>// If the structured activity node has mustIsolate=true, then carry out
// its behavior with isolation.
// Otherwise just activate it normally.

if (((StructuredActivityNode) (this.node)).mustIsolate) {
	_beginIsolation();
	this.doStructuredActivity();
	_endIsolation();
} else {
	this.doStructuredActivity();
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doStructuredActivity" name="doStructuredActivity" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doStructuredActivity.1">
              <language>Java</language>
              <body>// Run all activations of contained nodes. When this is complete,
// return.
// (This is the default behavior for a structured activity node used
// simply as a group. It is overridden for the execution of conditional
// and loop nodes.)

Action action = (Action) (this.node);

// *** Concurrently send offers from all input pins. ***
InputPinList inputPins = action.input;
for (Iterator i = inputPins.iterator(); i.hasNext();) {
	InputPin inputPin = (InputPin) i.next();
	PinActivation pinActivation = this.getPinActivation(inputPin);
	pinActivation.sendUnofferedTokens();
}

this.activationGroup.run(this.activationGroup.nodeActivations);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminate" name="terminate" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminate.1">
              <language>Java</language>
              <body>// Terminate the execution of all contained node activations (which
// completes the performance of the structured activity node
// activation), and then terminate this node itself.

this.terminateAll();
super.terminate();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation" name="getNodeActivation" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-node-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-node-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If this structured activity node activation is not for the given
// node, then check if there is an activation for the node in the
// activation group.

ActivityNodeActivation thisActivation = super.getNodeActivation(node);

ActivityNodeActivation activation = null;
if (thisActivation != null) {
	activation = thisActivation;
} else if (this.activationGroup != null) {
	activation = this.activationGroup.getNodeActivation(node);
}

return activation;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList" name="makeActivityNodeList" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-nodes" name="nodes">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ExecutableNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-nodes-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-nodes-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return an activity node list containing the given list of executable
// nodes
// and any pins that they own.

ActivityNodeList activityNodes = new ActivityNodeList();

for (int i = 0; i &lt; nodes.size(); i++) {
	ActivityNode node = nodes.getValue(i);
	activityNodes.addValue(node);

	if (node instanceof Action) {
		Action action = (Action) node;

		InputPinList inputPins = action.input;
		for (int j = 0; j &lt; inputPins.size(); j++) {
			InputPin inputPin = inputPins.getValue(j);
			activityNodes.addValue(inputPin);
		}

		OutputPinList outputPins = action.output;
		for (int j = 0; j &lt; outputPins.size(); j++) {
			OutputPin outputPin = outputPins.getValue(j);
			activityNodes.addValue(outputPin);
		}
	}
}

return activityNodes;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues" name="getPinValues" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#OutputPin"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-pin-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-pin-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the values of the tokens on the pin activation corresponding
// to the given pin in the internal activation group for this node
// activation.

PinActivation pinActivation = (PinActivation) (this.activationGroup
		.getNodeActivation(pin));
TokenList tokens = pinActivation.getTokens();

ValueList values = new ValueList();
for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	Value value = ((ObjectToken) token).value;
	if (value != null) {
		values.addValue(value);
	}
}

return values;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues" name="putPinValues" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#OutputPin"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-pin-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-pin-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-values" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-values-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-values-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Place tokens for the given values on the pin activation corresponding
// to the given output pin on the internal activation group for this
// node activation.

PinActivation pinActivation = (PinActivation) (this.activationGroup
		.getNodeActivation(pin));

for (int i = 0; i &lt; values.size(); i++) {
	Value value = values.getValue(i);
	ObjectToken token = new ObjectToken();
	token.value = value;
	pinActivation.addToken(token);
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createNodeActivations" name="createNodeActivations" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createNodeActivations.1">
              <language>Java</language>
              <body>// Create an activation group and create node activations for all the
// nodes within the structured activity node.

super.createNodeActivations();

this.activationGroup = new ActivityNodeActivationGroup();
this.activationGroup.containingNodeActivation = this;
this.activationGroup
		.createNodeActivations(((StructuredActivityNode) (this.node)).node);

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createEdgeInstances" name="createEdgeInstances" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createEdgeInstances.1">
              <language>Java</language>
              <body>// Create instances for all edges owned by this node.

this.activationGroup
		.createEdgeInstances(((StructuredActivityNode) (this.node)).edge);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor" name="isSourceFor" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor.1">
              <language>Java</language>
              <body>// Returns true if this node is either the source for the given
// edgeInstance itself or if it contains the source in its
// activation group.

boolean isSource = super.isSourceFor(edgeInstance);
if (!isSource) {
	isSource = this.activationGroup.hasSourceFor(edgeInstance);
}
return isSource;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminateAll" name="terminateAll" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminateAll.1">
              <language>Java</language>
              <body>// Terminate the execution of all contained node activations (which
// completes the performance of the structured activity node
// activation).

this.activationGroup.terminateAll();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSuspended" name="isSuspended" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSuspended.1">
              <language>Java</language>
              <body>// Check if the activation group for this node is suspended.

return this.activationGroup.isSuspended();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction" name="completeAction" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction.1">
              <language>Java</language>
              <body>// Only actually complete this structured activity node if it is not
// suspended.

TokenList incomingTokens = new TokenList();
if (!this.isSuspended()) {
	incomingTokens = super.completeAction();
}
return incomingTokens;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-resume" name="resume" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-resume.1">
              <language>Java</language>
              <body>// When this structured activity node is resumed after being suspended,
// then complete its prior firing and, if there are more incoming
// tokens, fire it again. If, after that, the node is not suspended,
// then finish its resumption.

TokenList incomingTokens = super.completeAction();
if (incomingTokens.size() > 0) {
	this.fire(incomingTokens);
}
if (!this.isSuspended()) {
	super.resume();
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doAction.1" name="doAction" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doAction" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doStructuredActivity.1" name="doStructuredActivity" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doStructuredActivity" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminate.1" name="terminate" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminate" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1" name="getNodeActivation" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1" name="makeActivityNodeList" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-nodes" name="nodes">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ExecutableNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-nodes-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-nodes-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1" name="getPinValues" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#OutputPin"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1" name="putPinValues" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1-pin" name="pin">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#OutputPin"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1-values" name="values" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1-values-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1-values-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createNodeActivations.1" name="createNodeActivations" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createNodeActivations" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createEdgeInstances.1" name="createEdgeInstances" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createEdgeInstances" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor.1" name="isSourceFor" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor.1-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminateAll.1" name="terminateAll" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminateAll" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSuspended.1" name="isSuspended" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSuspended" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSuspended.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction.1" name="completeAction" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction.1-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction.1-Parameter1-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction.1-Parameter1-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-resume.1" name="resume" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-resume" class="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation" name="LoopNodeActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation">
              <body>A loop node activation is a structured activity node activation for a node that is a loop node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-_generalization.0" general="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation" specific="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-bodyOutputLists" name="bodyOutputLists" visibility="public" type="Semantics-Activities-CompleteStructuredActivities-Values" aggregation="composite" association="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-bodyOutputLists-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-bodyOutputLists-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-isTerminateAll" name="isTerminateAll" visibility="public">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doStructuredActivity" name="doStructuredActivity" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doStructuredActivity.1">
              <language>Java</language>
              <body>// Set the initial values for the body outputs to the values of the loop
// variable input pins.
// If isTestedFirst is true, then repeatedly run the test part and the
// body part of the loop, copying values from the body outputs to the
// loop variables.
// If isTestedFirst is false, then repeatedly run the body part and the
// test part of the loop, copying values from the body outputs to the
// loop variables.
// When the test fails, copy the values of the body outputs to the loop
// outputs.
// [Note: The body outputs are used for the loop outputs, rather than
// the loop variables, since values on the loop variables may be
// consumed when running the test for the last time.]

LoopNode loopNode = (LoopNode) (this.node);
InputPinList loopVariableInputs = loopNode.loopVariableInput;

this.bodyOutputLists.clear();
for (int i = 0; i &lt; loopVariableInputs.size(); i++) {
	InputPin loopVariableInput = loopVariableInputs.getValue(i);
	Values bodyOutputList = new Values();
	bodyOutputList.values = this.takeTokens(loopVariableInput);
	this.bodyOutputLists.addValue(bodyOutputList);
}

this.isTerminateAll = false;
this.doLoop(true);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest" name="runTest" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Run the test part of the loop node for this node activation.
// Return the value on the decider pin.

Debug.println(&quot;[runTest] Running test...&quot;);

LoopNode loopNode = (LoopNode) (this.node);

this.activationGroup.runNodes(this.makeActivityNodeList(loopNode.test));

ValueList values = this.getPinValues(loopNode.decider);

// If there is no decider value, treat it as false.
boolean decision = false;
if (values.size() > 0) {
	decision = ((BooleanValue) (values.getValue(0))).value;
}

Debug.println(&quot;[runTest] &quot;
		+ (decision ? &quot;Test succeeded.&quot; : &quot;Test failed.&quot;));

return decision;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runBody" name="runBody" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runBody.1">
              <language>Java</language>
              <body>// Run the body part of the loop node for this node activation and save
// the body outputs.

Debug.println(&quot;[runBody] Running body...&quot;);

LoopNode loopNode = (LoopNode) this.node;

this.activationGroup.runNodes(this
		.makeActivityNodeList(loopNode.bodyPart));

if (!this.isTerminateAll &amp; !this.isSuspended()) {
	this.saveBodyOutputs();
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runLoopVariables" name="runLoopVariables" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runLoopVariables.1">
              <language>Java</language>
              <body>// Run the loop variable pins of the loop node for this node activation.

this.activationGroup.runNodes(this.makeLoopVariableList());
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-createNodeActivations" name="createNodeActivations" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-createNodeActivations.1">
              <language>Java</language>
              <body>// In addition to creating activations for contained nodes, create
// activations for any loop variables.

super.createNodeActivations();
this.activationGroup.createNodeActivations(this.makeLoopVariableList());
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList" name="makeLoopVariableList" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return an activity node list containing the loop variable pins for
// the loop node of this activation.

LoopNode loopNode = (LoopNode) (this.node);
ActivityNodeList nodes = new ActivityNodeList();

OutputPinList loopVariables = loopNode.loopVariable;
for (int i = 0; i &lt; loopVariables.size(); i++) {
	OutputPin loopVariable = loopVariables.getValue(i);
	nodes.addValue(loopVariable);
}

return nodes;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-terminateAll" name="terminateAll" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-terminateAll.1">
              <language>Java</language>
              <body>// Copy the values of the body outputs to the loop outputs, and then
// terminate all activations in the loop.

this.isTerminateAll = true;

LoopNode loopNode = (LoopNode) this.node;
OutputPinList bodyOutputs = loopNode.bodyOutput;
OutputPinList resultPins = loopNode.result;
for (int i = 0; i &lt; bodyOutputs.size(); i++) {
	OutputPin bodyOutput = bodyOutputs.getValue(i);
	OutputPin resultPin = resultPins.getValue(i);
	this.putTokens(resultPin, this.getPinValues(bodyOutput));
}

super.terminateAll();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doLoop" name="doLoop" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doLoop.1">
              <language>Java</language>
              <body>// If isTestedFirst is true, then repeatedly run the test part and the
// body part of the loop, copying values from the body outputs to the
// loop variables.
// If isTestedFirst is false, then repeatedly run the body part and the
// test part of the loop, copying values from the body outputs to the
// loop variables.

LoopNode loopNode = (LoopNode) (this.node);
OutputPinList loopVariables = loopNode.loopVariable;
OutputPinList resultPins = loopNode.result;

while (continuing) {

	// Set loop variable values
	this.runLoopVariables();
	for (int i = 0; i &lt; loopVariables.size(); i++) {
		OutputPin loopVariable = loopVariables.getValue(i);
		Values bodyOutputList = bodyOutputLists.getValue(i);
		ValueList values = bodyOutputList.values;
		this.putPinValues(loopVariable, values);
		((OutputPinActivation) this.activationGroup
				.getNodeActivation(loopVariable)).sendUnofferedTokens();
	}

	// Run all the non-executable, non-pin nodes in the conditional
	// node.
	ActivityNodeActivationList nodeActivations = this.activationGroup.nodeActivations;
	ActivityNodeActivationList nonExecutableNodeActivations = new ActivityNodeActivationList();
	for (int i = 0; i &lt; nodeActivations.size(); i++) {
		ActivityNodeActivation nodeActivation = nodeActivations
				.getValue(i);
		if (!(nodeActivation.node instanceof ExecutableNode | nodeActivation.node instanceof Pin)) {
			nonExecutableNodeActivations.addValue(nodeActivation);
		}
	}
	this.activationGroup.run(nonExecutableNodeActivations);

	// Run the loop
	if (loopNode.isTestedFirst) {
		continuing = this.runTest();
		if (continuing) {
			this.runBody();
		}
	} else {
		this.runBody();
		if (this.isRunning() &amp; !this.isSuspended()) {
			continuing = this.runTest();
		}
	}

	if (!this.isTerminateAll &amp; this.isRunning() &amp; !this.isSuspended()) {
		this.activationGroup.terminateAll();
	} else {
		continuing = false;
	}

	Debug.println(&quot;[doStructuredActivity] &quot;
			+ (continuing ? &quot;Continuing.&quot;
					: this.isSuspended() ? &quot;Suspended&quot; : &quot;Done.&quot;));

}

if (!this.isTerminateAll &amp; this.isRunning() &amp; !this.isSuspended()) {
	for (int i = 0; i &lt; bodyOutputLists.size(); i++) {
		Values bodyOutputList = bodyOutputLists.getValue(i);
		OutputPin resultPin = resultPins.getValue(i);
		this.putTokens(resultPin, bodyOutputList.values);
	}
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-saveBodyOutputs" name="saveBodyOutputs" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-saveBodyOutputs.1">
              <language>Java</language>
              <body>// Save the body outputs for use in the next iteration.

LoopNode loopNode = (LoopNode) this.node;
OutputPinList bodyOutputs = loopNode.bodyOutput;
ValuesList bodyOutputLists = this.bodyOutputLists;
for (int i = 0; i &lt; bodyOutputs.size(); i++) {
	OutputPin bodyOutput = bodyOutputs.getValue(i);
	Values bodyOutputList = bodyOutputLists.getValue(i);
	bodyOutputList.values = this.getPinValues(bodyOutput);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-resume" name="resume" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-resume.1">
              <language>Java</language>
              <body>// When this loop node is resumed after being suspended, continue with
// its next iteration (if any). Once the loop has completed execution
// without being suspended again, complete the action.

LoopNode loopNode = (LoopNode) (this.node);

this.saveBodyOutputs();

if (!this.isTerminateAll) {
	if (loopNode.mustIsolate) {
		_beginIsolation();
		this.continueLoop();
		_endIsolation();
	} else {
		this.continueLoop();
	}
}

if (this.isSuspended()) {
	// NOTE: If the subsequent iteration of the loop suspends it again,
	// then it is necessary to remove the previous suspension from the
	// containing activity node activation group.
	this.group.resume(this);
} else {
	super.resume();
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-continueLoop" name="continueLoop" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-continueLoop.1">
              <language>Java</language>
              <body>// Continue the loop node when it is resumed after being suspended. If
// isTestedFirst is true, then continue executing the loop. If
// isTestedFirst is false, then run the test to determine whether
// the loop should be continued or completed.
// [Note that this presumes that an accept event action is not allowed
// in the test part of a loop node.]

LoopNode loopNode = (LoopNode) (this.node);

boolean continuing = true;
if (!loopNode.isTestedFirst) {
	continuing = this.runTest();
}

if (this.isRunning()) {
	this.activationGroup.terminateAll();
	this.doLoop(continuing);
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doStructuredActivity.1" name="doStructuredActivity" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doStructuredActivity" class="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doLoop.1" name="doLoop" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doLoop" class="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doLoop.1-continuing" name="continuing">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest.1" name="runTest" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest" class="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runBody.1" name="runBody" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runBody" class="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-saveBodyOutputs.1" name="saveBodyOutputs" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-saveBodyOutputs" class="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runLoopVariables.1" name="runLoopVariables" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runLoopVariables" class="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-createNodeActivations.1" name="createNodeActivations" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-createNodeActivations" class="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList.1" name="makeLoopVariableList" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList" class="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-terminateAll.1" name="terminateAll" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-terminateAll" class="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-resume.1" name="resume" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-resume" class="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-continueLoop.1" name="continueLoop" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-continueLoop" class="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation" name="ConditionalNodeActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation">
              <body>A conditional node activation is a structured activity node activation for a node that is a conditional node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-_ownedComment.1">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-_generalization.0" general="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation" specific="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations" name="clauseActivations" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" aggregation="composite" association="Semantics-Activities-CompleteStructuredActivities-A_clauseActivations_conditionalNodeActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations">
                <body>The activations for each clause in the conditional node for this node activation.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses" name="selectedClauses" visibility="public" association="Semantics-Activities-CompleteStructuredActivities-A_selectedClauses_clauseActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses">
                <body>The set of clauses which meet the conditions to have their bodies activated.</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Clause"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause" name="selectedClause" visibility="public" association="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause">
                <body>The clause chosen from the set of selectedClauses to actually be executed.&#xD;
</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Clause"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-doStructuredActivity" name="doStructuredActivity" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-doStructuredActivity.1">
              <language>Java</language>
              <body>// Run all the non-executable, non-pin nodes in the conditional node.
// Activate all clauses in the conditional node and pass control to
// those that are ready (i.e., have no predecessors).
// If one or more clauses have succeeded in being selected, choose one
// non-deterministically and run its body, then copy the outputs of that
// clause to the output pins of the node.

ConditionalNode node = (ConditionalNode) (this.node);

ActivityNodeActivationList nodeActivations = this.activationGroup.nodeActivations;
ActivityNodeActivationList nonExecutableNodeActivations = new ActivityNodeActivationList();
for (int i = 0; i &lt; nodeActivations.size(); i++) {
	ActivityNodeActivation nodeActivation = nodeActivations.getValue(i);
	if (!(nodeActivation.node instanceof ExecutableNode | nodeActivation.node instanceof Pin)) {
		nonExecutableNodeActivations.addValue(nodeActivation);
	}
}

this.activationGroup.run(nonExecutableNodeActivations);

this.clauseActivations.clear();
ClauseList clauses = node.clause;
for (int i = 0; i &lt; clauses.size(); i++) {
	Clause clause = clauses.getValue(i);
	ClauseActivation clauseActivation = new ClauseActivation();
	clauseActivation.clause = clause;
	clauseActivation.conditionalNodeActivation = this;
	this.clauseActivations.addValue(clauseActivation);
}

this.selectedClauses.clear();

ClauseActivationList readyClauseActivations = new ClauseActivationList();
for (int i = 0; i &lt; this.clauseActivations.size(); i++) {
	ClauseActivation clauseActivation = this.clauseActivations
			.getValue(i);
	Debug.println(&quot;[doStructuredActivity] clauseActivations[&quot; + i
			+ &quot;] = &quot; + clauseActivation);
	if (clauseActivation.isReady()) {
		Debug
				.println(&quot;[doStructuredActivity] Clause activation is ready.&quot;);
		readyClauseActivations.addValue(clauseActivation);
	}
}

// *** Give control to all ready clauses concurrently. ***
for (Iterator i = readyClauseActivations.iterator(); i.hasNext();) {
	ClauseActivation clauseActivation = (ClauseActivation) i.next();
	Debug.println(&quot;[doStructuredActivity] Giving control to &quot;
			+ clauseActivation + &quot;...&quot;);
	clauseActivation.receiveControl();
}

this.selectedClause = null;
if (this.selectedClauses.size() > 0 &amp; this.isRunning()) {
	Debug.println(&quot;[doStructuredActivity] &quot;
			+ this.selectedClauses.size() + &quot; clause(s) selected.&quot;);

	// *** If multiple clauses are selected, choose one
	// non-deterministically. ***
	int i = ((ChoiceStrategy) this.getExecutionLocus().factory
			.getStrategy(&quot;choice&quot;)).choose(this.selectedClauses.size());
	this.selectedClause = this.selectedClauses.getValue(i - 1);

	Debug.println(&quot;[doStructuredActivity] Running selectedClauses[&quot; + i
			+ &quot;] = &quot; + this.selectedClause);

	for (int j = 0; j &lt; clauses.size(); j++) {
		Clause clause = clauses.getValue(j);
		if (clause != selectedClause) {
			ExecutableNodeList testNodes = clause.test;
			for (int k = 0; k &lt; testNodes.size(); k++) {
				ExecutableNode testNode = testNodes.getValue(k);
				this.activationGroup.getNodeActivation(testNode)
						.terminate();
			}
		}
	}

	this.activationGroup.runNodes(this
			.makeActivityNodeList(this.selectedClause.body));
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation" name="getClauseActivation" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-clause" name="clause">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Clause"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-clause-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-clause-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the clause activation corresponding to the given clause.

// Debug.println(&quot;[getClauseActivation] clause = &quot; + clause);

ClauseActivation selectedClauseActivation = null;
int i = 1;
while ((selectedClauseActivation == null)
		&amp; i &lt;= this.clauseActivations.size()) {
	ClauseActivation clauseActivation = this.clauseActivations
			.getValue(i - 1);
	// Debug.println(&quot;[getClauseActivations] clauseActivations[&quot; + i +
	// &quot;].clause = &quot; + clauseActivation.clause);
	if (clauseActivation.clause == clause) {
		selectedClauseActivation = clauseActivation;
	}
	i = i + 1;
}

return selectedClauseActivation;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest" name="runTest" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest-clause" name="clause">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Clause"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest-clause-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest-clause-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Run the test for the given clause.

if (this.isRunning()) {
	this.activationGroup.runNodes(this
			.makeActivityNodeList(clause.test));
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody" name="selectBody" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody-clause" name="clause">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Clause"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody-clause-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody-clause-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add the clause to the list of selected clauses.

this.selectedClauses.addValue(clause);

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeBody" name="completeBody" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeBody.1">
              <language>Java</language>
              <body>// Complete the activation of the body of a conditional note by
// copying the outputs of the selected clause (if any) to the output
// pins of the node and terminating the activation of all nested nodes.

if (this.selectedClause != null) {
	ConditionalNode node = (ConditionalNode) (this.node);
	OutputPinList resultPins = node.result;
	OutputPinList bodyOutputPins = this.selectedClause.bodyOutput;
	for (int k = 0; k &lt; resultPins.size(); k++) {
		OutputPin resultPin = resultPins.getValue(k);
		OutputPin bodyOutputPin = bodyOutputPins.getValue(k);
		this.putTokens(resultPin, this.getPinValues(bodyOutputPin));
	}
}
this.activationGroup.terminateAll();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction" name="completeAction" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction.1">
              <language>Java</language>
              <body>// Only complete the conditional node if it is not suspended.

if (!this.isSuspended()) {
	completeBody();
}
return super.completeAction();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-resume" name="resume" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-resume.1">
              <language>Java</language>
              <body>// When this conditional node is resumed after being suspended, complete
// its body and then resume it as a structured activity node.
// [Note that this presumes that accept event actions are not allowed
// in the test part of a clause of a conditional node.]

completeBody();
super.resume();
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-doStructuredActivity.1" name="doStructuredActivity" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-doStructuredActivity" class="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeBody.1" name="completeBody" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeBody" class="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction.1" name="completeAction" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction" class="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction.1-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction.1-Parameter1-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction.1-Parameter1-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation.1" name="getClauseActivation" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation" class="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation.1-clause" name="clause">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Clause"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest.1" name="runTest" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest" class="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest.1-clause" name="clause">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Clause"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody.1" name="selectBody" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody" class="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody.1-clause" name="clause">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Clause"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-resume.1" name="resume" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-resume" class="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" name="ClauseActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ClauseActivation">
              <body>A clause activation defines the behavior of a clause within the context of a specific activation of the conditional node containing the clause.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-_ownedComment.1">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-conditionalNodeActivation" name="conditionalNodeActivation" type="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation" association="Semantics-Activities-CompleteStructuredActivities-A_clauseActivations_conditionalNodeActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-conditionalNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-conditionalNodeActivation">
                <body>The activation of the conditional node that contains the clause for this clause activation.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-clause" name="clause" association="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation">
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Clause"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-clause-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-clause-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-receiveControl" name="receiveControl" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-receiveControl.1">
              <language>Java</language>
              <body>// If all predecessors to the clause for this activation have run their
// tests and failed, then run the test for this clause.
// If the test succeeds, then terminate any other clauses that may be
// running and run the body of this clause.
// If the test fails, then pass control to successor clauses.

Debug.println(&quot;[receiveControl] clauseActivation = &quot; + this);

if (this.isReady()) {
	Debug.println(&quot;[receiveControl] Running test...&quot;);
	this.runTest();

	BooleanValue decision = this.getDecision();

	// Note that the decision may be null if the test was terminated
	// before completion.
	if (decision != null) {
		if (decision.value == true) {
			Debug.println(&quot;[receiveControl] Test succeeded.&quot;);
			this.selectBody();
		} else {
			Debug.println(&quot;[receiveControl] Test failed.&quot;);

			ClauseActivationList successors = this.getSuccessors();

			// *** Give control to all successors concurrently. ***
			for (Iterator i = successors.iterator(); i.hasNext();) {
				ClauseActivation successor = (ClauseActivation) i
						.next();
				successor.receiveControl();
			}
		}
	}
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady" name="isReady" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if all predecessors to this clause activation have failed.

ClauseActivationList predecessors = this.getPredecessors();

boolean ready = true;
int i = 1;
while (ready &amp; i &lt;= predecessors.size()) {
	ClauseActivation predecessor = predecessors.getValue(i - 1);
	BooleanValue decisionValue = predecessor.getDecision();

	// Note that the decision will be null if the predecessor clause has
	// not run yet.
	if (decisionValue == null) {
		ready = false;
	} else {
		ready = !decisionValue.value;
	}

	i = i + 1;
}

return ready;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-runTest" name="runTest" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-runTest.1">
              <language>Java</language>
              <body>// Run the test of the clause for this clause activation.

this.conditionalNodeActivation.runTest(this.clause);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-selectBody" name="selectBody" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-selectBody.1">
              <language>Java</language>
              <body>// Select the body of the clause for this clause activation.

this.conditionalNodeActivation.selectBody(this.clause);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision" name="getDecision" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-BooleanValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the value (if any) on the decider pin of the clause for this
// clause activation.

ValueList deciderValues = this.conditionalNodeActivation
		.getPinValues(this.clause.decider);

BooleanValue deciderValue = null;
if (deciderValues.size() > 0) {
	deciderValue = (BooleanValue) (deciderValues.getValue(0));
}

return deciderValue;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors" name="getPredecessors" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the clause activations for the predecessors of the clause for
// this clause activation.

ClauseActivationList predecessors = new ClauseActivationList();

ClauseList predecessorClauses = this.clause.predecessorClause;
for (int i = 0; i &lt; predecessorClauses.size(); i++) {
	Clause predecessorClause = predecessorClauses.getValue(i);
	predecessors.addValue(this.conditionalNodeActivation
			.getClauseActivation(predecessorClause));
}

return predecessors;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors" name="getSuccessors" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the clause activations for the successors of the clause for
// this clause activation.

ClauseActivationList successors = new ClauseActivationList();

ClauseList successorClauses = this.clause.successorClause;
for (int i = 0; i &lt; successorClauses.size(); i++) {
	Clause successorClause = successorClauses.getValue(i);
	successors.addValue(this.conditionalNodeActivation
			.getClauseActivation(successorClause));
}

return successors;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-receiveControl.1" name="receiveControl" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-receiveControl" class="Semantics-Activities-CompleteStructuredActivities-ClauseActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady.1" name="isReady" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady" class="Semantics-Activities-CompleteStructuredActivities-ClauseActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-runTest.1" name="runTest" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-runTest" class="Semantics-Activities-CompleteStructuredActivities-ClauseActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-selectBody.1" name="selectBody" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-selectBody" class="Semantics-Activities-CompleteStructuredActivities-ClauseActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision.1" name="getDecision" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision" class="Semantics-Activities-CompleteStructuredActivities-ClauseActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-BooleanValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors.1" name="getPredecessors" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors" class="Semantics-Activities-CompleteStructuredActivities-ClauseActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors.1" name="getSuccessors" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors" class="Semantics-Activities-CompleteStructuredActivities-ClauseActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation" name="A_clause_clauseActivation" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-clause Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation-_ownedEnd.0" visibility="private" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" owningAssociation="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation" association="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_clauseActivations_conditionalNodeActivation" name="A_clauseActivations_conditionalNodeActivation" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations Semantics-Activities-CompleteStructuredActivities-ClauseActivation-conditionalNodeActivation"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_selectedClauses_clauseActivation" name="A_selectedClauses_clauseActivation" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses Semantics-Activities-CompleteStructuredActivities-A_selectedClauses_clauseActivation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_selectedClauses_clauseActivation-_ownedEnd.0" visibility="private" type="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation" owningAssociation="Semantics-Activities-CompleteStructuredActivities-A_selectedClauses_clauseActivation" association="Semantics-Activities-CompleteStructuredActivities-A_selectedClauses_clauseActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_activationGroup_containingNodeActivation" name="A_activationGroup_containingNodeActivation" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-activationGroup Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-CompleteStructuredActivities-Values" name="Values">
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-Values-values" name="values" visibility="public" type="Semantics-Classes-Kernel-Value" association="Semantics-Activities-CompleteStructuredActivities-A_values_values">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-Values-values-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-Values-values-_upperValue" value="*"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation" name="A_bodyOutputLists_loopNodeActivation" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-bodyOutputLists Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation" owningAssociation="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation" association="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_values_values" name="A_values_values" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-Values-values Semantics-Activities-CompleteStructuredActivities-A_values_values-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_values_values-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-CompleteStructuredActivities-Values" owningAssociation="Semantics-Activities-CompleteStructuredActivities-A_values_values" association="Semantics-Activities-CompleteStructuredActivities-A_values_values">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_values_values-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_values_values-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause Semantics-Activities-CompleteStructuredActivities-_packagedElement.11-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation" owningAssociation="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11" association="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup" name="ExpansionActivationGroup">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup">
              <body>An expansion activation group is an activity node activation group used for activating nodes inside an expansion region.&#xD;
It functions just like a normal activation group, except it has output pin activations corresponding to the input pins and the expansion nodes of the expansion region.&#xD;
Instances of edges from nodes inside the expansion region that connect to region input pins, input expansion nodes or output expansion nodes are redirected to connect to the corresponding &quot;region input&quot;, &quot;group input&quot; or &quot;group output&quot; pin, respectively.&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-_generalization.0" general="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" specific="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs" name="regionInputs" type="Semantics-Actions-BasicActions-OutputPinActivation" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs">
                <body>Output pin activations corresponding, in order, to the input pins of the expansion region of this activation group.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs" name="groupInputs" type="Semantics-Actions-BasicActions-OutputPinActivation" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs">
                <body>Output pin activations corresponding, in order, to the input expansion nodes of the expansion region of this activation group.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionActivation" name="regionActivation" type="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" association="Semantics-Activities-ExtraStructuredActivities-A_activationGroups_regionActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionActivation-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionActivation">
                <body>The expansion region activation this activation group is for.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs" name="groupOutputs" type="Semantics-Actions-BasicActions-OutputPinActivation" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs">
                <body>Output pin activations corresponding, in order, to the output expansion nodes of the expansion region of this activation group.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-index" name="index" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-index-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-index">
                <body>The index (starting at 1) of this activation group in the list held by the expansion region activation.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation" name="getNodeActivation" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-node-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-node-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If the given node is an input pin of the expansion region, then
// return the corresponding region-input output-pin activation.
// If the given node is an input expansion node of the expansion region,
// then return the corresponding group-input output-pin activation.
// If the given node is an output expansion node of the expansion
// region, then return the corresponding group-output output-pin
// activation.
// Otherwise return the node activation from the activation group, as
// usual.

ExpansionRegion region = (ExpansionRegion) (this.regionActivation.node);

InputPinList inputs = region.input;
ActivityNodeActivation activation = null;

int i = 1;
while (activation == null &amp; i &lt;= region.input.size()) {
	if (node == region.input.getValue(i - 1)) {
		activation = this.regionInputs.getValue(i - 1);
	}
	i = i + 1;
}

int j = 1;
while (activation == null &amp; j &lt;= region.inputElement.size()) {
	if (node == region.inputElement.getValue(j - 1)) {
		activation = this.groupInputs.getValue(j - 1);
	}
	j = j + 1;
}

int k = 1;
while (activation == null &amp; k &lt;= region.outputElement.size()) {
	if (node == region.outputElement.getValue(k - 1)) {
		activation = this.groupOutputs.getValue(k - 1);
	}
	k = k + 1;
}

if (activation == null) {
	activation = super.getNodeActivation(node);
}

return activation;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution" name="getActivityExecution" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution-Parameter1-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution-Parameter1-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the activity execution that contains the expansion region
// activation for this activation group.

return this.regionActivation.getActivityExecution();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-suspend" name="suspend" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-suspend.1">
              <language>Java</language>
              <body>// Suspend the given activation in this activation group. If this is
// the only suspended activation, then suspend the associated region
// activation.

if (!this.isSuspended()) {
	this.regionActivation.suspend();
}
super.suspend(activation);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-resume" name="resume" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-resume.1">
              <language>Java</language>
              <body>// Resume the given activation in this activation group. If this is the
// last suspended activation, then resume the associated region
// activation.

super.resume(activation);
if (!this.isSuspended()) {
	this.regionActivation.resume(this);
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation.1" name="getNodeActivation" method="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation" class="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation.1-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution.1" name="getActivityExecution" method="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution" class="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution.1-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-suspend.1" name="suspend" method="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-suspend" class="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-suspend.1-activation" name="activation" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-resume.1" name="resume" method="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-resume" class="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-resume.1-activation" name="activation" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation" name="ExpansionNodeActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-_ownedComment.0">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ObjectNodeActivation" specific="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire" name="fire" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Take tokens from all incoming edges.

Debug.println(&quot;[fire] Expansion node &quot; + this.node.name + &quot;...&quot;);

this.addTokens(incomingTokens);

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-receiveOffer" name="receiveOffer" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-receiveOffer.1">
              <language>Java</language>
              <body>// Forward the offer on to the expansion region.

this.getExpansionRegionActivation().receiveOffer();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady" name="isReady" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// An expansion node is always fired by its expansion region.

return false;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation" name="getExpansionRegionActivation" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the expansion region activation corresponding to this
// expansion node, in the context of the activity node activation group
// this expansion node activation is in.

ExpansionNode node = (ExpansionNode) (this.node);

ExpansionRegion region = node.regionAsInput;
if (region == null) {
	region = node.regionAsOutput;
}

return (ExpansionRegionActivation) (this.group
		.getNodeActivation(region));

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire.1" name="fire" method="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire" class="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-receiveOffer.1" name="receiveOffer" method="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-receiveOffer" class="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady.1" name="isReady" method="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady" class="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation.1" name="getExpansionRegionActivation" method="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation" class="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" name="ExpansionRegionActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation">
              <body>An expansion region activation is an action activation for a node that is an expansion region.&#xD;
[Note that even though an expansion region is a structured activity node, an expansion region activation is not a structured activity activation because of the special nature of expansion region behavior.]</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-_ownedComment.1">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation" specific="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups" name="activationGroups" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_activationGroups_regionActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups">
                <body>The set of expansion activation groups for this expansion region activation. One activation group is created corresponding to each token held by the first input expansion node activation for the expansion region.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens" name="inputTokens" visibility="public" type="Semantics-Activities-ExtraStructuredActivities-TokenSet" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_inputTokens_expansionRegionActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens">
                <body>The tokens taken from each of the input pin activations for this expansion region activation. These are preserved for initializing the region inputs of each of the activation groups.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens" name="inputExpansionTokens" visibility="public" type="Semantics-Activities-ExtraStructuredActivities-TokenSet" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_inputExpansionTokens_expansionRegionActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens">
                <body>The tokens taken from each of the input expansion node activations for this expansion region activation. These are preserved for initializing the group input of each of the activation groups.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-next" name="next" visibility="public">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-next-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-next-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Take the tokens from the input pin and input expansion node
// activations and save them.

super.takeOfferedTokens();

ExpansionRegion region = (ExpansionRegion) (this.node);
InputPinList inputPins = region.input;
ExpansionNodeList inputElements = region.inputElement;

this.inputTokens.clear();
this.inputExpansionTokens.clear();

for (int i = 0; i &lt; inputPins.size(); i++) {
	InputPin inputPin = inputPins.getValue(i);
	TokenSet tokenSet = new TokenSet();
	tokenSet.tokens = this.getPinActivation(inputPin).takeTokens();
	this.inputTokens.addValue(tokenSet);
}

int n = this.numberOfValues();

for (int i = 0; i &lt; inputElements.size(); i++) {
	ExpansionNode inputElement = inputElements.getValue(i);
	ExpansionNodeActivation expansionNodeActivation = this
			.getExpansionNodeActivation(inputElement);
	expansionNodeActivation.fire(expansionNodeActivation
			.takeOfferedTokens());
	TokenList tokens = expansionNodeActivation.takeTokens();
	TokenSet tokenSet = new TokenSet();
	int j = 1;
	while (j &lt;= n) {
		tokenSet.tokens.add(tokens.getValue(j - 1));
		j = j + 1;
	}
	this.inputExpansionTokens.addValue(tokenSet);
}

return new TokenList();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doAction" name="doAction" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doAction.1">
              <language>Java</language>
              <body>// If the expansion region has mustIsolate=true, then carry out its
// behavior with isolation.
// Otherwise just activate it normally.

if (((StructuredActivityNode) (this.node)).mustIsolate) {
	_beginIsolation();
	this.doStructuredActivity();
	_endIsolation();
} else {
	this.doStructuredActivity();
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doStructuredActivity" name="doStructuredActivity" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doStructuredActivity.1">
              <language>Java</language>
              <body>// Create a number of expansion region activation groups equal to the
// number of values expanded in the region,
// setting the region inputs and group inputs for each group.
// Run the body of the region in each group, either iteratively or in
// parallel.
// Add the outputs of each activation group to the corresonding output
// expansion node activations.

ExpansionRegion region = (ExpansionRegion) this.node;
InputPinList inputPins = region.input;
ExpansionNodeList inputElements = region.inputElement;
ExpansionNodeList outputElements = region.outputElement;

this.activationGroups.clear();
int n = this.inputExpansionTokens.getValue(0).tokens.size();
int k = 1;
while (k &lt;= n) {
	ExpansionActivationGroup activationGroup = new ExpansionActivationGroup();
	activationGroup.regionActivation = this;
	activationGroup.index = k;

	int j = 1;
	while (j &lt;= inputPins.size()) {
		OutputPinActivation regionInput = new OutputPinActivation();
		regionInput.run();
		activationGroup.regionInputs.addValue(regionInput);
		j = j + 1;
	}

	j = 1;
	while (j &lt;= inputElements.size()) {
		OutputPinActivation groupInput = new OutputPinActivation();
		groupInput.run();
		activationGroup.groupInputs.addValue(groupInput);
		j = j + 1;
	}

	j = 1;
	while (j &lt;= outputElements.size()) {
		OutputPinActivation groupOutput = new OutputPinActivation();
		groupOutput.run();
		activationGroup.groupOutputs.addValue(groupOutput);
		j = j + 1;
	}

	activationGroup.createNodeActivations(region.node);
	activationGroup.createEdgeInstances(region.edge);
	this.activationGroups.addValue(activationGroup);

	k = k + 1;
}

// ExpansionActivationGroupList activationGroups = this.activationGroups;

if (region.mode == ExpansionKind.iterative) {
	Debug.println(&quot;[doStructuredActivity] Expansion mode = iterative&quot;);
	this.next = 1;
	this.runIterative();
} else if (region.mode == ExpansionKind.parallel) {
	Debug.println(&quot;[doStructuredActivity] Expansion mode = parallel&quot;);
	this.runParallel();
}

this.doOutput();

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminate" name="terminate" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminate.1">
              <language>Java</language>
              <body>// Terminate the execution of all contained node activations (which
// completes the performance of the expansion region activation).

ExpansionActivationGroupList activationGroups = this.activationGroups;
for (int i = 0; i &lt; activationGroups.size(); i++) {
	ExpansionActivationGroup activationGroup = this.activationGroups
			.getValue(i);

	OutputPinActivationList groupOutputs = activationGroup.groupOutputs;

	_beginIsolation();
	for (int j = 0; j &lt; groupOutputs.size(); j++) {
		OutputPinActivation groupOutput = groupOutputs.getValue(j);
		groupOutput.fire(groupOutput.takeOfferedTokens());
	}
	activationGroup.terminateAll();
	_endIsolation();
}

super.terminate();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-sendOffers" name="sendOffers" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-sendOffers.1">
              <language>Java</language>
              <body>// Fire all output expansion nodes and send offers on all outgoing
// control flows.

ExpansionRegion region = (ExpansionRegion) (this.node);

// *** Send offers from all output expansion nodes concurrently. ***
ExpansionNodeList outputElements = region.outputElement;
for (Iterator i = outputElements.iterator(); i.hasNext();) {
	ExpansionNode outputElement = (ExpansionNode) i.next();
	this.getExpansionNodeActivation(outputElement)
			.sendUnofferedTokens();
}

// Send offers on all outgoing control flows.
super.sendOffers();

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup" name="runGroup" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup-activationGroup" name="activationGroup" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup-activationGroup-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup-activationGroup-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Set up the inputs for the group with the given index, run the group
// and then fire the group outputs.

if (this.isRunning()) {
	Debug.println(&quot;[runGroup] groupInput[0] = &quot;
			+ this.inputExpansionTokens.getValue(0).tokens.getValue(
					activationGroup.index - 1).getValue());

	TokenSetList inputTokens = this.inputTokens;
	for (int j = 0; j &lt; inputTokens.size(); j++) {
		TokenSet tokenSet = inputTokens.getValue(j);
		OutputPinActivation regionInput = activationGroup.regionInputs
				.getValue(j);
		regionInput.clearTokens();
		regionInput.addTokens(tokenSet.tokens);
		regionInput.sendUnofferedTokens();
	}

	TokenSetList inputExpansionTokens = this.inputExpansionTokens;
	for (int j = 0; j &lt; inputExpansionTokens.size(); j++) {
		TokenSet tokenSet = inputExpansionTokens.getValue(j);
		OutputPinActivation groupInput = activationGroup.groupInputs
				.getValue(j);
		groupInput.clearTokens();
		if (tokenSet.tokens.size() >= activationGroup.index) {
			groupInput.addToken(tokenSet.tokens
					.getValue(activationGroup.index - 1));
		}
		groupInput.sendUnofferedTokens();
	}

	activationGroup.run(activationGroup.nodeActivations);

	this.terminateGroup(activationGroup);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation" name="getExpansionNodeActivation" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ExpansionNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-node-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-node-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the expansion node activation corresponding to the given
// expansion node, in the context of the activity node activation group
// this expansion region activation is in.
// [Note: Expansion regions do not own their expansion nodes. Instead,
// they are own as object nodes by the enclosing activity or group.
// Therefore, they will already be activated along with their expansion
// region.]

return (ExpansionNodeActivation) (this.group.getNodeActivation(node));

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues" name="numberOfValues" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the number of values to be acted on by the expansion region of
// this activation, which is the minimum of the number of values offered
// to each of the input expansion nodes of the activation.

ExpansionRegion region = (ExpansionRegion) (this.node);
ExpansionNodeList inputElements = region.inputElement;

int n = this.getExpansionNodeActivation(inputElements.getValue(0))
		.countOfferedValues();
int i = 2;
while (i &lt;= inputElements.size()) {
	int count = this.getExpansionNodeActivation(
			inputElements.getValue(i - 1)).countOfferedValues();
	if (count &lt; n) {
		n = count;
	}
	i = i + 1;
}

return n;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runIterative" name="runIterative" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runIterative.1">
              <language>Java</language>
              <body>// Run the body of the region iteratively, either until all activation
// groups have run or until the region is suspended.

ExpansionActivationGroupList activationGroups = this.activationGroups;

while (this.next &lt;= activationGroups.size() &amp; !this.isSuspended()) {
	ExpansionActivationGroup activationGroup = activationGroups
			.getValue(this.next - 1);
	this.runGroup(activationGroup);
	this.next = this.next + 1;
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runParallel" name="runParallel" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runParallel.1">
              <language>Java</language>
              <body>// Run the body of the region concurrently.

ExpansionActivationGroupList activationGroups = this.activationGroups;

// *** Activate all groups concurrently. ***
for (Iterator i = activationGroups.iterator(); i.hasNext();) {
	ExpansionActivationGroup activationGroup = (ExpansionActivationGroup) i
			.next();
	this.runGroup(activationGroup);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doOutput" name="doOutput" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doOutput.1">
              <language>Java</language>
              <body>// Place tokens on the output expansion nodes.

ExpansionRegion region = (ExpansionRegion) this.node;
ExpansionNodeList outputElements = region.outputElement;

Debug.println(&quot;[doOutput] Expansion region &quot; + region.name + &quot; is &quot;
		+ (this.isSuspended() ? &quot;suspended.&quot; : &quot;completed.&quot;));

if (!this.isSuspended()) {
	for (int i = 0; i &lt; activationGroups.size(); i++) {
		ExpansionActivationGroup activationGroup = activationGroups
				.getValue(i);
		OutputPinActivationList groupOutputs = activationGroup.groupOutputs;
		for (int j = 0; j &lt; groupOutputs.size(); j++) {
			OutputPinActivation groupOutput = groupOutputs.getValue(j);
			ExpansionNode outputElement = outputElements.getValue(j);
			this.getExpansionNodeActivation(outputElement).addTokens(
					groupOutput.takeTokens());
		}
	}
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminateGroup" name="terminateGroup" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminateGroup.1">
              <language>Java</language>
              <body>// Terminate the given activation group, after preserving any group
// outputs.
if (this.isRunning() &amp; !this.isSuspended()) {
	OutputPinActivationList groupOutputs = activationGroup.groupOutputs;
	for (int i = 0; i &lt; groupOutputs.size(); i++) {
		OutputPinActivation groupOutput = groupOutputs.getValue(i);
		groupOutput.fire(groupOutput.takeOfferedTokens());
	}

	activationGroup.terminateAll();
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-isSuspended" name="isSuspended" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-isSuspended.1">
              <language>Java</language>
              <body>// Check if the activation group for this node is suspended.

boolean suspended = false;
int i = 1;
while (i &lt;= this.activationGroups.size() &amp; !suspended) {
	ActivityNodeActivationGroup group = this.activationGroups
			.get(i - 1);
	suspended = group.isSuspended();
	i = i + 1;
}

return suspended;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-resume" name="resume" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-resume.1">
              <language>Java</language>
              <body>// Resume an expansion region after the suspension of the given
// activation group. If the region is iterative, then continue with the
// iteration. If the region is parallel, and there are no more suspended
// activation groups, then generate the expansion node output.

ExpansionRegion region = (ExpansionRegion) this.node;

this.resume();
this.terminateGroup(activationGroup);
if (region.mode == ExpansionKind.iterative) {
	this.runIterative();
}

this.doOutput();
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens.1-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens.1-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doAction.1" name="doAction" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doAction" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doStructuredActivity.1" name="doStructuredActivity" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doStructuredActivity" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runIterative.1" name="runIterative" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runIterative" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runParallel.1" name="runParallel" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runParallel" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doOutput.1" name="doOutput" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doOutput" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminate.1" name="terminate" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminate" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-sendOffers.1" name="sendOffers" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-sendOffers" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup.1" name="runGroup" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup.1-activationGroup" name="activationGroup" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminateGroup.1" name="terminateGroup" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminateGroup" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminateGroup.1-activationGroup" name="activationGroup" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation.1" name="getExpansionNodeActivation" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation.1-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ExpansionNode"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues.1" name="numberOfValues" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-isSuspended.1" name="isSuspended" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-isSuspended" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-isSuspended.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-resume.1" name="resume" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-resume" class="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-resume.1-activationGroup" name="activationGroup" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_activationGroups_regionActivation" name="A_activationGroups_regionActivation" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionActivation"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup" name="A_regionInputs_expansionActivationGroup" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup-_ownedEnd.0" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup" owningAssociation="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup" association="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup" name="A_groupInputs_expansionActivationGroup" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup-_ownedEnd.0" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup" owningAssociation="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup" association="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup" name="A_groupOutputs_expansionActivationGroup" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup-_ownedEnd.0" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup" owningAssociation="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup" association="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet" name="TokenSet">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-TokenSet">
              <body>A set of tokens taken from an input pin activation or input expansion node activation for an expansion region.</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens" name="tokens" visibility="public" type="Semantics-Activities-IntermediateActivities-Token" association="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens">
                <body>The set of tokens in this input set.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens-_upperValue" value="*"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_inputTokens_expansionRegionActivation" name="A_inputTokens_expansionRegionActivation" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens Semantics-Activities-ExtraStructuredActivities-A_inputTokens_expansionRegionActivation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_inputTokens_expansionRegionActivation-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" owningAssociation="Semantics-Activities-ExtraStructuredActivities-A_inputTokens_expansionRegionActivation" association="Semantics-Activities-ExtraStructuredActivities-A_inputTokens_expansionRegionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_inputExpansionTokens_expansionRegionActivation" name="A_inputExpansionTokens_expansionRegionActivation" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens Semantics-Activities-ExtraStructuredActivities-A_inputExpansionTokens_expansionRegionActivation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_inputExpansionTokens_expansionRegionActivation-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" owningAssociation="Semantics-Activities-ExtraStructuredActivities-A_inputExpansionTokens_expansionRegionActivation" association="Semantics-Activities-ExtraStructuredActivities-A_inputExpansionTokens_expansionRegionActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet" name="A_tokens_tokenSet" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-TokenSet" owningAssociation="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet" association="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="Semantics-Activities" name="Activities">
          <packageImport xmi:type="uml:PackageImport" xmi:id="_8JdI8M6_EeWF7I4YWspV6w" importedPackage="Semantics-CommonBehaviors" importingNamespace="Semantics-Activities"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-Token" name="Token" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-Token-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-Token">
              <body>A token is an individual element of data or control that may flow across an activity edge.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-Token-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-Token-holder" name="holder" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" association="Semantics-Activities-IntermediateActivities-A_heldTokens_holder">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Token-holder-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Token-holder-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer" name="transfer" specification="Semantics-Activities-IntermediateActivities-Token-transfer.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-holder" name="holder" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-holder-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-holder-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// if this token does not have any holder, make the given holder its
// holder.
// Otherwise, remove this token from its holder and return a copy of it
// transfered to a new holder.

Token token = this;
if (this.holder != null) {
	this.withdraw();
	token = this.copy();
}

token.holder = holder;
return token;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Token-withdraw" name="withdraw" specification="Semantics-Activities-IntermediateActivities-Token-withdraw.1">
              <language>Java</language>
              <body>// Remove this token from its holder, withdrawing any offers for it.

if (!this.isWithdrawn()) {
	// Debug.println(&quot;[withdraw] Taking token with value = &quot; +
	// this.getValue());
	this.holder.removeToken(this);
	this.holder = null;
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn" name="isWithdrawn" specification="Semantics-Activities-IntermediateActivities-Token-isWithdrawn.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if this token has been withdrawn.

return this.holder == null;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer.1" name="transfer" method="Semantics-Activities-IntermediateActivities-Token-transfer" class="Semantics-Activities-IntermediateActivities-Token">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer.1-holder" name="holder" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Token-withdraw.1" name="withdraw" method="Semantics-Activities-IntermediateActivities-Token-withdraw" class="Semantics-Activities-IntermediateActivities-Token"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Token-equals" name="equals" isAbstract="true" class="Semantics-Activities-IntermediateActivities-Token">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-Token-equals-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-Token-equals">
                <body>Test if this token is equal to another token.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Token-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Token-equals-other" name="other" type="Semantics-Activities-IntermediateActivities-Token"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Token-copy" name="copy" isAbstract="true" class="Semantics-Activities-IntermediateActivities-Token">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-Token-copy-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-Token-copy">
                <body>// Make a copy of this token.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Token-copy-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn.1" name="isWithdrawn" method="Semantics-Activities-IntermediateActivities-Token-isWithdrawn" class="Semantics-Activities-IntermediateActivities-Token">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Token-isControl" name="isControl" isAbstract="true" class="Semantics-Activities-IntermediateActivities-Token">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-Token-isControl-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-Token-isControl">
                <body>Test whether this is a control token.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Token-isControl-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Token-getValue" name="getValue" isAbstract="true" class="Semantics-Activities-IntermediateActivities-Token">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-Token-getValue-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-Token-getValue">
                <body>Get the value associated with this token (if any).</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Token-getValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Token-getValue-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Token-getValue-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-Offer" name="Offer">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-Offer-_ownedComment.0">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-Offer-_ownedComment.1" annotatedElement="Semantics-Activities-IntermediateActivities-Offer">
              <body>An offer is a group of tokens offered together. The grouping of offered tokens into offers usually does not matter for how the tokens may be accepted. However, control and object tokens may become grouped together in the same offer due to a join node that has both incoming control and object flows. In this case, the control tokens are implicitly accepted once all the object tokens in the same offer have been accepted.</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-Offer-offeredTokens" name="offeredTokens" type="Semantics-Activities-IntermediateActivities-Token" association="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-offeredTokens-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-offeredTokens-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues" name="countOfferedValues" specification="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the number of values being offered on object tokens.
// Remove any tokens that have already been withdrawn and don't include
// them in the count.

this.removeWithdrawnTokens();

int count = 0;
for (int i = 0; i &lt; this.offeredTokens.size(); i++) {
	if (this.offeredTokens.getValue(i).getValue() != null) {
		count = count + 1;
	}
}

return count;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens" name="getOfferedTokens" specification="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the offered tokens, removing any that have been withdrawn.

this.removeWithdrawnTokens();

TokenList tokens = new TokenList();
TokenList offeredTokens = this.offeredTokens;
for (int i = 0; i &lt; this.offeredTokens.size(); i++) {
	Token offeredToken = offeredTokens.getValue(i);
	// Debug.println(&quot;[getOfferedTokens] token value = &quot; +
	// offeredToken.getValue());
	tokens.addValue(offeredToken);
}

return tokens;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues" name="removeOfferedValues" specification="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues-count" name="count">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues-count-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues-count-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Remove the given number of non-null object tokens from those in this
// offer.

int n = count;
int i = 1;
while (n > 0) {
	if (this.offeredTokens.getValue(i - 1).getValue() != null) {
		this.offeredTokens.removeValue(i - 1);
	} else {
		i = i + 1;
	}
	n = n - 1;
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeWithdrawnTokens" name="removeWithdrawnTokens" specification="Semantics-Activities-IntermediateActivities-Offer-removeWithdrawnTokens.1">
              <language>Java</language>
              <body>// Remove any tokens that have already been consumed.

TokenList offeredTokens = this.offeredTokens;
int i = 1;
while (i &lt;= this.offeredTokens.size()) {
	if (this.offeredTokens.getValue(i - 1).isWithdrawn()) {
		this.offeredTokens.remove(i - 1);
		i = i - 1;
	}
	i = i + 1;
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens" name="hasTokens" specification="Semantics-Activities-IntermediateActivities-Offer-hasTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens-Parameter1-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens-Parameter1-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Check whether this offer has any tokens that have not been withdrawn.

this.removeWithdrawnTokens();
return this.offeredTokens.size() > 0;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues.1" name="countOfferedValues" method="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues" class="Semantics-Activities-IntermediateActivities-Offer">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues.1-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens.1" name="getOfferedTokens" method="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens" class="Semantics-Activities-IntermediateActivities-Offer">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens.1-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens.1-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues.1" name="removeOfferedValues" method="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues" class="Semantics-Activities-IntermediateActivities-Offer">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues.1-count" name="count">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeWithdrawnTokens.1" name="removeWithdrawnTokens" method="Semantics-Activities-IntermediateActivities-Offer-removeWithdrawnTokens" class="Semantics-Activities-IntermediateActivities-Offer"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens.1" name="hasTokens" method="Semantics-Activities-IntermediateActivities-Offer-hasTokens" class="Semantics-Activities-IntermediateActivities-Offer">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken" name="ObjectToken">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ObjectToken">
              <body>An object token represents the passing of data along an object flow edge.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-_generalization.0" general="Semantics-Activities-IntermediateActivities-Token" specific="Semantics-Activities-IntermediateActivities-ObjectToken"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-value" name="value" type="Semantics-Classes-Kernel-Value" aggregation="composite" association="Semantics-Activities-IntermediateActivities-A_value_objectToken">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-value-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ObjectToken-value">
                <body>The value carried by this token. A token may have no value, in which case it is a &quot;null token&quot;.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-value-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-value-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals" name="equals" specification="Semantics-Activities-IntermediateActivities-ObjectToken-equals.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-other" name="other" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-other-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-other-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if this object token is the same as the other token.

return this == other;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy" name="copy" specification="Semantics-Activities-IntermediateActivities-ObjectToken-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return a new object token with the same value as this token.
// [Note: the holder of the copy is not set.]

ObjectToken copy = new ObjectToken();
copy.value = this.value;

return copy;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl" name="isControl" specification="Semantics-Activities-IntermediateActivities-ObjectToken-isControl.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return false for an object token.

return false;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue" name="getValue" specification="Semantics-Activities-IntermediateActivities-ObjectToken-getValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the value of this object token.

return this.value;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals.1" name="equals" method="Semantics-Activities-IntermediateActivities-ObjectToken-equals" class="Semantics-Activities-IntermediateActivities-ObjectToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals.1-other" name="other" type="Semantics-Activities-IntermediateActivities-Token"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy.1" name="copy" method="Semantics-Activities-IntermediateActivities-ObjectToken-copy" class="Semantics-Activities-IntermediateActivities-ObjectToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl.1" name="isControl" method="Semantics-Activities-IntermediateActivities-ObjectToken-isControl" class="Semantics-Activities-IntermediateActivities-ObjectToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue.1" name="getValue" method="Semantics-Activities-IntermediateActivities-ObjectToken-getValue" class="Semantics-Activities-IntermediateActivities-ObjectToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation" name="ObjectNodeActivation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ObjectNodeActivation">
              <body>An object node activation is an activity node activation for a node that is an object node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" specific="Semantics-Activities-IntermediateActivities-ObjectNodeActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-offeredTokenCount" name="offeredTokenCount">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-offeredTokenCount-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-offeredTokenCount">
                <body>The number of held tokens that have already been offered.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-run" name="run" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-run.1">
              <language>Java</language>
              <body>// Initialize the offered token count to zero.

super.run();
this.offeredTokenCount = 0;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers" name="sendOffers" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers-tokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers-tokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If the set of tokens to be sent is empty, then offer a null token
// instead.
// Otherwise, offer the given tokens as usual.

if (tokens.size() == 0) {
	ObjectToken token = new ObjectToken();
	token.holder = this;
	tokens.addValue(token);
}

super.sendOffers(tokens);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-terminate" name="terminate" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-terminate.1">
              <language>Java</language>
              <body>// Remove any offered tokens and terminate.

this.clearTokens();
super.terminate();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken" name="addToken" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken-token" name="token" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken-token-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken-token-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Transfer the given token to be held by this node only if it is a
// non-null object token.
// If it is a control token or a null token, consume it without holding
// it.

if (token.getValue() == null) {
	token.withdraw();
} else {
	super.addToken(token);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken" name="removeToken" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-token" name="token" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-token-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-token-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Remove the given token, if it is held by this node activation.

int i = super.removeToken(token);
if (i > 0 &amp; i &lt;= this.offeredTokenCount) {
	this.offeredTokenCount = this.offeredTokenCount - 1;
}

return i;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-clearTokens" name="clearTokens" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-clearTokens.1">
              <language>Java</language>
              <body>// Remove all held tokens.

super.clearTokens();
this.offeredTokenCount = 0;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues" name="countOfferedValues" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues-Parameter1-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues-Parameter1-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Count the total number of non-null object tokens being offered to
// this node activation.

int totalValueCount = 0;
int i = 1;
while (i &lt;= this.incomingEdges.size()) {
	totalValueCount = totalValueCount
			+ this.incomingEdges.getValue(i - 1).countOfferedValues();
	i = i + 1;
}

return totalValueCount;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendUnofferedTokens" name="sendUnofferedTokens" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendUnofferedTokens.1">
              <language>Java</language>
              <body>// Send offers over all outgoing edges, if there are any tokens to be
// offered.

TokenList tokens = this.getUnofferedTokens();
this.offeredTokenCount = this.offeredTokenCount + tokens.size();

this.sendOffers(tokens);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens" name="countUnofferedTokens" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the number of unoffered tokens that are to be offered next.
// (By default, this is all unoffered tokens.)

if (this.heldTokens.size() == 0) {
	this.offeredTokenCount = 0;
}

return this.heldTokens.size() - this.offeredTokenCount;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens" name="getUnofferedTokens" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the next set of unoffered tokens to be offered and return it.
// [Note: This effectively treats all object flows as if they have
// weight=*, rather than the weight=1 default in the current
// superstructure semantics.]

TokenList tokens = new TokenList();

int i = 1;
while (i &lt;= this.countUnofferedTokens()) {
	tokens.addValue(this.heldTokens.getValue(this.offeredTokenCount + i
			- 1));
	i = i + 1;
}

return tokens;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens" name="takeUnofferedTokens" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Take the next set of unoffered tokens to be offered from this node
// activation and return them.

TokenList tokens = this.getUnofferedTokens();
for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	token.withdraw();
}
return tokens;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-run.1" name="run" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-run" class="Semantics-Activities-IntermediateActivities-ObjectNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers.1" name="sendOffers" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers" class="Semantics-Activities-IntermediateActivities-ObjectNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers.1-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers.1-tokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers.1-tokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-terminate.1" name="terminate" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-terminate" class="Semantics-Activities-IntermediateActivities-ObjectNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken.1" name="addToken" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken" class="Semantics-Activities-IntermediateActivities-ObjectNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken.1-token" name="token" type="Semantics-Activities-IntermediateActivities-Token"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken.1" name="removeToken" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken" class="Semantics-Activities-IntermediateActivities-ObjectNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken.1-token" name="token" type="Semantics-Activities-IntermediateActivities-Token"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-clearTokens.1" name="clearTokens" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-clearTokens" class="Semantics-Activities-IntermediateActivities-ObjectNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues.1" name="countOfferedValues" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues" class="Semantics-Activities-IntermediateActivities-ObjectNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendUnofferedTokens.1" name="sendUnofferedTokens" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendUnofferedTokens" class="Semantics-Activities-IntermediateActivities-ObjectNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens.1" name="countUnofferedTokens" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens" class="Semantics-Activities-IntermediateActivities-ObjectNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens.1" name="getUnofferedTokens" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens" class="Semantics-Activities-IntermediateActivities-ObjectNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens.1" name="takeUnofferedTokens" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens" class="Semantics-Activities-IntermediateActivities-ObjectNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens.1-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens.1-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-MergeNodeActivation" name="MergeNodeActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-MergeNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-MergeNodeActivation">
              <body>A merge node activation is a control node activation for a node that is a merge node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-MergeNodeActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-MergeNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation" specific="Semantics-Activities-IntermediateActivities-MergeNodeActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation" name="JoinNodeActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-JoinNodeActivation">
              <body>A join node activation is a control node activation for a node that is a join node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation" specific="Semantics-Activities-IntermediateActivities-JoinNodeActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady" name="isReady" specification="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Check that all incoming edges have sources that are offering tokens.

boolean ready = true;
int i = 1;
while (ready &amp; i &lt;= this.incomingEdges.size()) {
	ready = this.incomingEdges.getValue(i - 1).hasOffer();
	i = i + 1;
}

return ready;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady.1" name="isReady" method="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady" class="Semantics-Activities-IntermediateActivities-JoinNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken" name="ForkedToken">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ForkedToken">
              <body>A forked token is a proxy for a token that has been offered through a fork node. If the token is accepted through the fork node, then the original token is withdrawn from its holder, but the forked token remains held by the fork node activation until all outstanding offers on all outgoing edges are accepted.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-_generalization.0" general="Semantics-Activities-IntermediateActivities-Token" specific="Semantics-Activities-IntermediateActivities-ForkedToken"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-baseToken" name="baseToken" type="Semantics-Activities-IntermediateActivities-Token" association="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-baseToken-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-baseToken-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-remainingOffersCount" name="remainingOffersCount">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-remainingOffersCount-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ForkedToken-remainingOffersCount">
                <body>The remaining number of outstanding offers for this token on outgoing edges of the fork node.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-baseTokenIsWithdrawn" name="baseTokenIsWithdrawn" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-baseTokenIsWithdrawn-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ForkedToken-baseTokenIsWithdrawn">
                <body>Indicates whether withdraw() has been called on the base token.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl" name="isControl" specification="Semantics-Activities-IntermediateActivities-ForkedToken-isControl.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if the base token is a control token.

return this.baseToken.isControl();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-withdraw" name="withdraw" specification="Semantics-Activities-IntermediateActivities-ForkedToken-withdraw.1">
              <language>Java</language>
              <body>// If the base token is not withdrawn, then withdraw it.
// Decrement the remaining offers count.
// When the remaining number of offers is zero, then remove this token
// from its holder.

if (!this.baseTokenIsWithdrawn &amp; !this.baseToken.isWithdrawn()) {
	this.baseToken.withdraw();

	// NOTE: This keeps a base token that is a forked token from being
	// withdrawn more than once, since withdrawing a forked token may
	// not actually remove it from its fork node holder.
	this.baseTokenIsWithdrawn = true;
}

if (this.remainingOffersCount > 0) {
	this.remainingOffersCount = this.remainingOffersCount - 1;
}

if (this.remainingOffersCount == 0) {
	super.withdraw();
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy" name="copy" specification="Semantics-Activities-IntermediateActivities-ForkedToken-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return a copy of the base token.

return this.baseToken.copy();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals" name="equals" specification="Semantics-Activities-IntermediateActivities-ForkedToken-equals.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-otherToken" name="otherToken" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-otherToken-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-otherToken-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if this token is equal to another token.

return this == otherToken;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue" name="getValue" specification="Semantics-Activities-IntermediateActivities-ForkedToken-getValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the value of the base token.

return this.baseToken.getValue();
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl.1" name="isControl" method="Semantics-Activities-IntermediateActivities-ForkedToken-isControl" class="Semantics-Activities-IntermediateActivities-ForkedToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-withdraw.1" name="withdraw" method="Semantics-Activities-IntermediateActivities-ForkedToken-withdraw" class="Semantics-Activities-IntermediateActivities-ForkedToken"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy.1" name="copy" method="Semantics-Activities-IntermediateActivities-ForkedToken-copy" class="Semantics-Activities-IntermediateActivities-ForkedToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals.1" name="equals" method="Semantics-Activities-IntermediateActivities-ForkedToken-equals" class="Semantics-Activities-IntermediateActivities-ForkedToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals.1-otherToken" name="otherToken" type="Semantics-Activities-IntermediateActivities-Token"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue.1" name="getValue" method="Semantics-Activities-IntermediateActivities-ForkedToken-getValue" class="Semantics-Activities-IntermediateActivities-ForkedToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation" name="ForkNodeActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ForkNodeActivation">
              <body>A fork node activation is a control node activation for a node that is a fork node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation" specific="Semantics-Activities-IntermediateActivities-ForkNodeActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create forked tokens for all incoming tokens and offer them on all
// outgoing edges.

if (this.node == null) {
	Debug.println(&quot;[fire] Anonymous fork node.&quot;);
} else {
	Debug.println(&quot;[fire] Fork node &quot; + this.node.name + &quot;...&quot;);
}

ActivityEdgeInstanceList outgoingEdges = this.outgoingEdges;
int outgoingEdgeCount = outgoingEdges.size();

TokenList forkedTokens = new TokenList();
for (int i = 0; i &lt; incomingTokens.size(); i++) {
	Token token = incomingTokens.getValue(i);
	ForkedToken forkedToken = new ForkedToken();
	forkedToken.baseToken = token;
	forkedToken.remainingOffersCount = outgoingEdgeCount;
	forkedToken.baseTokenIsWithdrawn = false;
	forkedTokens.addValue(forkedToken);
}

this.addTokens(forkedTokens);

this.sendOffers(forkedTokens);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-terminate" name="terminate" specification="Semantics-Activities-IntermediateActivities-ForkNodeActivation-terminate.1">
              <language>Java</language>
              <body>// Remove any offered tokens and terminate.

this.clearTokens();
super.terminate();
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire" class="Semantics-Activities-IntermediateActivities-ForkNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-terminate.1" name="terminate" method="Semantics-Activities-IntermediateActivities-ForkNodeActivation-terminate" class="Semantics-Activities-IntermediateActivities-ForkNodeActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation" name="InitialNodeActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-InitialNodeActivation">
              <body>An initial node activation is a control node activation for a node that is an initial node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation" specific="Semantics-Activities-IntermediateActivities-InitialNodeActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a single token and send offers for it.

TokenList tokens = new TokenList();
tokens.addValue(new ControlToken());
this.addTokens(tokens);

this.sendOffers(tokens);
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire" class="Semantics-Activities-IntermediateActivities-InitialNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation" name="DecisionNodeActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-_ownedComment.0">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation" specific="Semantics-Activities-IntermediateActivities-DecisionNodeActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution" name="decisionInputExecution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" aggregation="composite" association="Semantics-Activities-IntermediateActivities-A_decisionInputExecution_decisionNodeActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution">
                <body>The current execution of the decision input behavior (if any).</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the decision values and test them on each guard.
// Forward the offer over the edges for which the test succeeds.

Debug.println(&quot;[fire] Decision node &quot; + this.node.name + &quot;...&quot;);

// TokenList incomingTokens = this.takeOfferedTokens();
TokenList removedControlTokens = this
		.removeJoinedControlTokens(incomingTokens);
ValueList decisionValues = this.getDecisionValues(incomingTokens);

ActivityEdgeInstanceList outgoingEdges = this.outgoingEdges;
for (int i = 0; i &lt; outgoingEdges.size(); i++) {
	ActivityEdgeInstance edgeInstance = outgoingEdges.getValue(i);
	ValueSpecification guard = edgeInstance.edge.guard;

	TokenList offeredTokens = new TokenList();
	for (int j = 0; j &lt; incomingTokens.size(); j++) {
		Token incomingToken = incomingTokens.getValue(j);
		Value decisionValue = decisionValues.getValue(j);
		if (this.test(guard, decisionValue)) {
			offeredTokens.addValue(incomingToken);
		}
	}

	if (offeredTokens.size() > 0) {
		for (int j = 0; j &lt; removedControlTokens.size(); j++) {
			Token removedControlToken = removedControlTokens
					.getValue(j);
			offeredTokens.addValue(removedControlToken);
		}
		edgeInstance.sendOffer(offeredTokens);
	}
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues" name="getDecisionValues" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If there is neither a decision input flow nor a decision input
// behavior, then return the set of values from the incoming tokens.
// [In this case, the single incoming edge must be an object flow.]
// If there is a decision input flow, but no decision input behavior,
// then return a list of the decision input values equal in size to the
// number of incoming tokens.
// If there is both a decision input flow and a decision input behavior,
// then execute the decision input behavior once for each incoming token
// and return the set of resulting values.
// If the primary incoming edge is an object flow, then the value on
// each object token is passed to the decision input behavior, along
// with the decision input flow value, if any.
// If the primary incoming edge is a control flow, then the decision
// input behavior only receives the decision input flow, if any.

Value decisionInputValue = this.getDecisionInputFlowValue();

ValueList decisionValues = new ValueList();
for (int i = 0; i &lt; incomingTokens.size(); i++) {
	Token incomingToken = incomingTokens.getValue(i);
	Value value = this.executeDecisionInputBehavior(incomingToken
			.getValue(), decisionInputValue);
	decisionValues.addValue(value);
}

// Debug.println(&quot;[getDecisionValues] &quot; + decisionValues.size() +
// &quot; decision value(s):&quot;);
for (int i = 0; i &lt; decisionValues.size(); i++) {
	Value decisionValue = decisionValues.getValue(i);
	Debug.println(&quot;[getDecisionValues] decisionValues[&quot; + i + &quot;] = &quot;
			+ decisionValue);
}

return decisionValues;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior" name="executeDecisionInputBehavior" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-inputValue" name="inputValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-inputValue-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-inputValue-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-decisionInputValue" name="decisionInputValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-decisionInputValue-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-decisionInputValue-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create the decision input execution from the decision input behavior.
// If the behavior has input parameter(s), set the input parameter(s) of
// the execution to the given value(s).
// Execute the decision input execution and then remove it.
// Return the value of the output parameter of the execution.
// If there is no decision input behavior, the decision input value is
// returned, if one is given, otherwise the input value is used as the
// decision value.

Debug.println(&quot;[executeDecisionBehavior] inputValue = &quot; + inputValue);

Behavior decisionInputBehavior = ((DecisionNode) (this.node)).decisionInput;

Value decisionInputResult = null;

if (decisionInputBehavior == null) {

	if (decisionInputValue != null) {
		decisionInputResult = decisionInputValue;
	} else {
		decisionInputResult = inputValue;
	}

} else {

	this.decisionInputExecution = this.getExecutionLocus().factory
			.createExecution(decisionInputBehavior, this
					.getExecutionContext());

	int i = 1;
	int j = 0;
	while ((j == 0 | (j == 1 &amp; decisionInputValue != null))
			&amp; i &lt;= decisionInputBehavior.ownedParameter.size()) {
		Parameter parameter = decisionInputBehavior.ownedParameter
				.getValue(i - 1);
		if (parameter.direction.equals(ParameterDirectionKind.in)
				| parameter.direction
						.equals(ParameterDirectionKind.inout)) {
			ParameterValue inputParameterValue = new ParameterValue();
			inputParameterValue.parameter = parameter;

			j = j + 1;
			if (j == 1 &amp;&amp; inputValue != null) {
				inputParameterValue.values.addValue(inputValue);
			} else {
				inputParameterValue.values.addValue(decisionInputValue);
			}

			this.decisionInputExecution
					.setParameterValue(inputParameterValue);

		}
		i = i + 1;
	}

	this.decisionInputExecution.execute();

	ParameterValueList outputParameterValues = this.decisionInputExecution
			.getOutputParameterValues();
	decisionInputExecution.destroy();

	decisionInputResult = outputParameterValues.getValue(0).values
			.getValue(0);

}

return decisionInputResult;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-terminate" name="terminate" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-terminate.1">
              <language>Java</language>
              <body>// Terminate the decision input execution, if any, and then terminate
// this activation.

if (this.decisionInputExecution != null) {
	this.decisionInputExecution.terminate();
}

super.terminate();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady" name="isReady" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Check that all incoming edges have sources that are offering tokens.
// [This should be at most two incoming edges, if there is a decision
// input flow.]

int i = 1;
boolean ready = true;
while (ready &amp; i &lt;= this.incomingEdges.size()) {
	ready = this.incomingEdges.getValue(i - 1).hasOffer();
	i = i + 1;
}

return ready;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get tokens from the incoming edge that is not the decision input
// flow.

ObjectFlow decisionInputFlow = ((DecisionNode) (this.node)).decisionInputFlow;

TokenList allTokens = new TokenList();
ActivityEdgeInstanceList incomingEdges = this.incomingEdges;
for (int i = 0; i &lt; incomingEdges.size(); i++) {
	ActivityEdgeInstance edgeInstance = incomingEdges.getValue(i);
	if (edgeInstance.edge != decisionInputFlow) {
		TokenList tokens = edgeInstance.takeOfferedTokens();
		for (int j = 0; j &lt; tokens.size(); j++) {
			allTokens.addValue(tokens.getValue(j));
		}
	}
}

return allTokens;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue" name="getDecisionInputFlowValue" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Take the next token available on the decision input flow, if any, and
// return its value.

ActivityEdgeInstance decisionInputFlowInstance = this
		.getDecisionInputFlowInstance();

Value value = null;
if (decisionInputFlowInstance != null) {
	TokenList tokens = decisionInputFlowInstance.takeOfferedTokens();
	if (tokens.size() > 0) {
		value = tokens.getValue(0).getValue();
	}
}

return value;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance" name="getDecisionInputFlowInstance" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the activity edge instance for the decision input flow, if any.

ActivityEdge decisionInputFlow = ((DecisionNode) (this.node)).decisionInputFlow;

ActivityEdgeInstance edgeInstance = null;
if (decisionInputFlow != null) {
	int i = 1;
	while (edgeInstance == null &amp; i &lt;= this.incomingEdges.size()) {
		ActivityEdgeInstance incomingEdge = this.incomingEdges
				.getValue(i - 1);
		if (incomingEdge.edge == decisionInputFlow) {
			edgeInstance = incomingEdge;
		}
		i = i + 1;
	}
}

return edgeInstance;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test" name="test" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-guard" name="guard">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-guard-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-guard-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-value" name="value" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-value-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-value-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if the given value matches the guard. If there is no guard,
// return true.

boolean guardResult = true;
if (guard != null) {
	Value guardValue = this.getExecutionLocus().executor
			.evaluate(guard);
	guardResult = guardValue.equals(value);
}

return guardResult;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens" name="removeJoinedControlTokens" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If the primary incoming edge is an object flow, then remove any
// control tokens from the incoming tokens and return them.
// [Control tokens may effectively be offered on an object flow outgoing
// from a join node that has both control and object flows incoming.]

TokenList removedControlTokens = new TokenList();

if (this.hasObjectFlowInput()) {
	int i = 1;
	while (i &lt;= incomingTokens.size()) {
		Token token = incomingTokens.getValue(i - 1);
		if (token.isControl()) {
			removedControlTokens.addValue(token);
			incomingTokens.removeValue(i - 1);
			i = i - 1;
		}
		i = i + 1;
	}
}

return removedControlTokens;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput" name="hasObjectFlowInput" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Check that the primary incoming edge is an object flow.

ActivityEdge decisionInputFlow = ((DecisionNode) (this.node)).decisionInputFlow;

boolean isObjectFlow = false;
int i = 1;
while (!isObjectFlow &amp; i &lt;= this.incomingEdges.size()) {
	ActivityEdge edge = this.incomingEdges.getValue(i - 1).edge;
	isObjectFlow = edge != decisionInputFlow
			&amp; edge instanceof ObjectFlow;
	i = i + 1;
}

return isObjectFlow;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire" class="Semantics-Activities-IntermediateActivities-DecisionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1" name="getDecisionValues" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues" class="Semantics-Activities-IntermediateActivities-DecisionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1" name="executeDecisionInputBehavior" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior" class="Semantics-Activities-IntermediateActivities-DecisionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-inputValue" name="inputValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-inputValue-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-inputValue-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-decisionInputValue" name="decisionInputValue" type="Semantics-Classes-Kernel-Value">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-decisionInputValue-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-decisionInputValue-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-terminate.1" name="terminate" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-terminate" class="Semantics-Activities-IntermediateActivities-DecisionNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady.1" name="isReady" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady" class="Semantics-Activities-IntermediateActivities-DecisionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens" class="Semantics-Activities-IntermediateActivities-DecisionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue.1" name="getDecisionInputFlowValue" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue" class="Semantics-Activities-IntermediateActivities-DecisionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance.1" name="getDecisionInputFlowInstance" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance" class="Semantics-Activities-IntermediateActivities-DecisionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test.1" name="test" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test" class="Semantics-Activities-IntermediateActivities-DecisionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test.1-guard" name="guard">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test.1-value" name="value" type="Semantics-Classes-Kernel-Value"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1" name="removeJoinedControlTokens" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens" class="Semantics-Activities-IntermediateActivities-DecisionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-OwnedParameter-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput.1" name="hasObjectFlowInput" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput" class="Semantics-Activities-IntermediateActivities-DecisionNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput.1-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken" name="ControlToken">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ControlToken">
              <body>A control token represents the passing of control along a control flow edge.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-_generalization.0" general="Semantics-Activities-IntermediateActivities-Token" specific="Semantics-Activities-IntermediateActivities-ControlToken"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals" name="equals" specification="Semantics-Activities-IntermediateActivities-ControlToken-equals.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-other" name="other" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-other-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-other-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return true if the other token is a control token, because control
// tokens are interchangable.

return other instanceof ControlToken;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy" name="copy" specification="Semantics-Activities-IntermediateActivities-ControlToken-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return a new control token.

return new ControlToken();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl" name="isControl" specification="Semantics-Activities-IntermediateActivities-ControlToken-isControl.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return true for a control token.

return true;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue" name="getValue" specification="Semantics-Activities-IntermediateActivities-ControlToken-getValue.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Control tokens do not have values.

return null;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals.1" name="equals" method="Semantics-Activities-IntermediateActivities-ControlToken-equals" class="Semantics-Activities-IntermediateActivities-ControlToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals.1-other" name="other" type="Semantics-Activities-IntermediateActivities-Token"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy.1" name="copy" method="Semantics-Activities-IntermediateActivities-ControlToken-copy" class="Semantics-Activities-IntermediateActivities-ControlToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl.1" name="isControl" method="Semantics-Activities-IntermediateActivities-ControlToken-isControl" class="Semantics-Activities-IntermediateActivities-ControlToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue.1" name="getValue" method="Semantics-Activities-IntermediateActivities-ControlToken-getValue" class="Semantics-Activities-IntermediateActivities-ControlToken">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation" name="ControlNodeActivation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ControlNodeActivation">
              <body>A control node activation is an activity node activation for a node that is a control node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" specific="Semantics-Activities-IntermediateActivities-ControlNodeActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// By default, offer all tokens on all outgoing edges.

if (this.node != null) {
	Debug.println(&quot;[fire] Control node &quot; + this.node.name + &quot;...&quot;);
}

this.sendOffers(incomingTokens);
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire" class="Semantics-Activities-IntermediateActivities-ControlNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" name="ActivityEdgeInstance">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
              <body>An activity edge instance is a connection between activity node activations corresponding to an edge between the corresponding nodes of those activations</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge" name="edge" association="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge">
                <body>The activity edge of which this is an instance.&#xD;
[This is optional to allow for an implicit fork node execution to be connected to its action execution by an edge instance which does not have a corresponding node in the model.]</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityEdge"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" association="Semantics-Activities-IntermediateActivities-a">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group">
                <body>The activity group that contains this activity edge instance. </body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-source" name="source" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" association="Semantics-Activities-IntermediateActivities-A_source_outgoingEdges">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-source-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-source">
                <body>The source of this activity edge instance.&#xD;
The node of the source must be the same as the source of the edge of this edge instance.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-target" name="target" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" association="Semantics-Activities-IntermediateActivities-A_incomingEdges_target">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-target-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-target">
                <body>The target of this activity edge instance.&#xD;
The node of the target must be the same as the target of the edge of this edge instance.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-offers" name="offers" visibility="public" type="Semantics-Activities-IntermediateActivities-Offer" association="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-offers-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-offers-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer" name="sendOffer" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer-tokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer-tokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Send an offer from the source to the target.
// Keep the offered tokens until taken by the target.
// (Note that any one edge should only be handling either all object
// tokens or all control tokens.)

Offer offer = new Offer();

for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	// Debug.println(&quot;[sendOffer] token value = &quot; + token.getValue());
	offer.offeredTokens.addValue(token);
}

this.offers.addValue(offer);

this.target.receiveOffer();

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues" name="countOfferedValues" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the number of values being offered in object tokens.

int count = 0;
OfferList offers = this.offers;
for (int i = 0; i &lt; offers.size(); i++) {
	count = count + offers.getValue(i).countOfferedValues();
}

return count;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Take all the offered tokens, up to the given maximum count of
// non-null object tokens, and return them.

TokenList tokens = new TokenList();
int remainingCount = maxCount;

while (this.offers.size() > 0 &amp; remainingCount > 0) {
	Offer offer = this.offers.getValue(0);
	TokenList offeredTokens = offer.getOfferedTokens();
	int count = offer.countOfferedValues();
	if (count &lt;= remainingCount) {
		for (int i = 0; i &lt; offeredTokens.size(); i++) {
			tokens.addValue(offeredTokens.getValue(i));
		}
		remainingCount = remainingCount - count;
		this.offers.removeValue(0);
	} else {
		for (int i = 0; i &lt; remainingCount; i++) {
			Token token = offeredTokens.getValue(i);
			if (token.getValue() != null) {
				tokens.addValue(token);
			}
		}
		offer.removeOfferedValues(remainingCount);
		remainingCount = 0;
	}
}

return tokens;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1" name="takeOfferedTokens1" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-maxCount" name="maxCount">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-maxCount-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-maxCount-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Take all the offered tokens, up to the given maximum count of non-null object tokens, and return them.&#xD;
&#xD;
TokenList tokens = new TokenList();&#xD;
int remainingCount = maxCount;&#xD;
&#xD;
while (this.offers.size() > 0 &amp; remainingCount > 0) {&#xD;
    Offer offer = this.offers.getValue(0);&#xD;
    TokenList offeredTokens = offer.getOfferedTokens();&#xD;
    int count = offer.countOfferedValues();&#xD;
    if (count &lt;= remainingCount) {&#xD;
        for (int i = 0; i &lt; offeredTokens.size(); i++) {&#xD;
            tokens.addValue(offeredTokens.getValue(i));&#xD;
        }&#xD;
        remainingCount = remainingCount - count;&#xD;
        this.offers.removeValue(0);&#xD;
    } else {&#xD;
        for (int i = 0; i &lt; remainingCount; i++) {&#xD;
            Token token = offeredTokens.getValue(i);&#xD;
            if (token.getValue() != null) {&#xD;
                tokens.addValue(token);&#xD;
            }&#xD;
        }&#xD;
        offer.removeOfferedValues(remainingCount);&#xD;
        remainingCount = 0;&#xD;
    }&#xD;
}&#xD;
&#xD;
return tokens;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens" name="getOfferedTokens" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the offered tokens (after which the tokens will still be
// offered).

TokenList tokens = new TokenList();
OfferList offers = this.offers;

for (int i = 0; i &lt; offers.size(); i++) {
	TokenList offeredTokens = offers.getValue(i).getOfferedTokens();
	for (int j = 0; j &lt; offeredTokens.size(); j++) {
		tokens.addValue(offeredTokens.getValue(j));
	}
}

return tokens;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer" name="hasOffer" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return true if there are any pending offers.

boolean hasTokens = false;
int i = 1;
while (!hasTokens &amp; i &lt;= this.offers.size()) {
	hasTokens = this.offers.getValue(i - 1).hasTokens();
	i = i + 1;
}

return hasTokens;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer.1" name="sendOffer" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer" class="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer.1-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer.1-tokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer.1-tokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues.1" name="countOfferedValues" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues" class="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens" class="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2" name="takeOfferedTokens" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1" class="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2-maxCount" name="maxCount">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2-Parameter1-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2-Parameter1-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens.1" name="getOfferedTokens" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens" class="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer.1" name="hasOffer" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer" class="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution" name="ActivityExecution">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityExecution">
              <body>An activity execution is used to execute a specific activity. The type of the activity execution must be an activity.&#xD;
When executed, the activity execution creates activity edge instances for all activity edges, activity node activations for all activity nodes and makes offers to all nodes with no incoming edges.&#xD;
Execution terminates when either all node activations are complete, or an activity final node is executed.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-_generalization.0" general="Semantics-CommonBehaviors-BasicBehaviors-Execution" specific="Semantics-Activities-IntermediateActivities-ActivityExecution"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-activationGroup" name="activationGroup" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" aggregation="composite" association="Semantics-Activities-IntermediateActivities-A_activationGroup_activityExecution">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-activationGroup-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityExecution-activationGroup">
                <body>The group of activations of the activity nodes of the activity.</body>
              </ownedComment>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-execute" name="execute" specification="Semantics-Activities-IntermediateActivities-ActivityExecution-execute.1">
              <language>Java</language>
              <body>// Execute the activity for this execution by creating an activity node
// activation group and activating all the activity nodes in the
// activity.
// When this is complete, copy the values on the tokens offered by
// output parameter nodes to the corresponding output parameters.

Activity activity = (Activity) (this.getTypes().getValue(0));

Debug.println(&quot;[execute] Activity &quot; + activity.name + &quot;...&quot;);
// Debug.println(&quot;[execute] context = &quot; + this.context.objectId());
Debug.println(&quot;[event] Execute activity=&quot; + activity.name);

this.activationGroup = new ActivityNodeActivationGroup();
this.activationGroup.activityExecution = this;
this.activationGroup.activate(activity.node, activity.edge);

// Debug.println(&quot;[execute] Getting output parameter node activations...&quot;);

ActivityParameterNodeActivationList outputActivations = this.activationGroup
		.getOutputParameterNodeActivations();

// Debug.println(&quot;[execute] There are &quot; + outputActivations.size() +
// &quot; output parameter node activations.&quot;);

for (int i = 0; i &lt; outputActivations.size(); i++) {
	ActivityParameterNodeActivation outputActivation = outputActivations
			.getValue(i);

	ParameterValue parameterValue = new ParameterValue();
	parameterValue.parameter = ((ActivityParameterNode) (outputActivation.node)).parameter;

	TokenList tokens = outputActivation.getTokens();
	for (int j = 0; j &lt; tokens.size(); j++) {
		Token token = tokens.getValue(j);
		Value value = ((ObjectToken) token).value;
		if (value != null) {
			parameterValue.values.addValue(value);
			Debug.println(&quot;[event] Output activity=&quot; + activity.name
					+ &quot; parameter=&quot; + parameterValue.parameter.name
					+ &quot; value=&quot; + value);
		}
	}

	this.setParameterValue(parameterValue);
}

Debug.println(&quot;[execute] Activity &quot; + activity.name + &quot; completed.&quot;);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy" name="copy" specification="Semantics-Activities-IntermediateActivities-ActivityExecution-copy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new activity execution that is a copy of this execution.
// [Note: This currently just returns a non-executing execution for the
// same activity as this execution.]

return super.copy();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_" name="new_" specification="Semantics-Activities-IntermediateActivities-ActivityExecution-new_.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create a new activity execution with empty properties.

return new ActivityExecution();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-terminate" name="terminate" specification="Semantics-Activities-IntermediateActivities-ActivityExecution-terminate.1">
              <language>Java</language>
              <body>// Terminate all node activations (which will ultimately result in the
// activity execution completing).

this.activationGroup.terminateAll();
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-execute.1" name="execute" method="Semantics-Activities-IntermediateActivities-ActivityExecution-execute" class="Semantics-Activities-IntermediateActivities-ActivityExecution"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy.1" name="copy" method="Semantics-Activities-IntermediateActivities-ActivityExecution-copy" class="Semantics-Activities-IntermediateActivities-ActivityExecution">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_.1" name="new_" method="Semantics-Activities-IntermediateActivities-ActivityExecution-new_" class="Semantics-Activities-IntermediateActivities-ActivityExecution">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-terminate.1" name="terminate" method="Semantics-Activities-IntermediateActivities-ActivityExecution-terminate" class="Semantics-Activities-IntermediateActivities-ActivityExecution"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation" name="ActivityFinalNodeActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation">
              <body>An activity final node activation is a control node activation for a node that is an activity final node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation" specific="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Terminate the activity execution or structured node activation
// containing this activation.

Debug.println(&quot;[fire] Activity final node &quot; + this.node.name + &quot;...&quot;);

if (incomingTokens.size() > 0 | this.incomingEdges.size() == 0) {
	if (this.group.activityExecution != null) {
		this.group.activityExecution.terminate();
	} else if (this.group.containingNodeActivation != null) {
		this.group.containingNodeActivation.terminateAll();
	} else if (this.group instanceof ExpansionActivationGroup) {
		((ExpansionActivationGroup) this.group).regionActivation
				.terminate();
	}
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire" class="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" name="ActivityNodeActivation" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <body>An activity node activation is used to define the behavior of an activity node in the context of a containing activity or structured activity node.&#xD;
</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-_ownedComment.1">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-_generalization.0" general="Semantics-Loci-LociL1-SemanticVisitor" specific="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" association="Semantics-Activities-IntermediateActivities-A_nodeActivations_group">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group">
                <body>The group that contains this activity node activation.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group-_lowerValue" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node" name="node" association="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node">
                <body>The activity node being activated by this activity node activation. The node must be owned by the activity (type) of the activity execution of this node activation.&#xD;
[This is optional, to allow for fork node edge queues and implicit fork and join node activations for actions to not have nodes in the model.]</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges" name="incomingEdges" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" association="Semantics-Activities-IntermediateActivities-A_incomingEdges_target">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges">
                <body>The set of activity edge instances for the incoming edges of the node.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges" name="outgoingEdges" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" association="Semantics-Activities-IntermediateActivities-A_source_outgoingEdges">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges">
                <body>The set of activity edge instances for the outgoing edges of the node.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-running" name="running">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-running-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-running">
                <body>If true, this node activation is enabled for execution once all its other prerequesites are satisfied.</body>
              </ownedComment>
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-heldTokens" name="heldTokens" type="Semantics-Activities-IntermediateActivities-Token" aggregation="composite" association="Semantics-Activities-IntermediateActivities-A_heldTokens_holder">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-heldTokens-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-heldTokens-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize" name="initialize" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
              <language>Java</language>
              <body>// Initialize this node activation.

this.node = node;
this.group = group;
this.running = false;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-run" name="run" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-run.1">
              <language>Java</language>
              <body>// Run the activation of this node.

if (this.node != null) {
	Debug.println(&quot;[run] node = &quot; + this.node.name);
} else {
	Debug.println(&quot;[run] Anonymous activation of type &quot;
			+ this.getClass().getName());
}

this.running = true;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-receiveOffer" name="receiveOffer" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-receiveOffer.1">
              <language>Java</language>
              <body>// Receive an offer from an incoming edge.
// Check if all prerequisites have been satisfied. If so, fire.

Debug.println(&quot;[receiveOffer] &quot;
		+ (this.node == null ? &quot;...&quot; : &quot;node = &quot; + this.node.name));

_beginIsolation();

boolean ready = this.isReady();

TokenList tokens = new TokenList();
if (ready) {
	Debug.println(&quot;[receiveOffer] Firing.&quot;);
	tokens = this.takeOfferedTokens();
}

_endIsolation();

if (ready) {
	this.fire(tokens);
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get tokens from all incoming edges.

TokenList allTokens = new TokenList();
ActivityEdgeInstanceList incomingEdges = this.incomingEdges;
for (int i = 0; i &lt; incomingEdges.size(); i++) {
	ActivityEdgeInstance incomingEdge = incomingEdges.getValue(i);
	TokenList tokens = incomingEdge.takeOfferedTokens();
	for (int j = 0; j &lt; tokens.size(); j++) {
		Token token = tokens.getValue(j);
		allTokens.addValue(token);
	}
}

return allTokens;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers" name="sendOffers" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers-tokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers-tokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Send offers for the given set of tokens over all outgoing edges (if
// there are any tokens actually being offered).

if (tokens.size() > 0) {

	// *** Send all outgoing offers concurrently. ***
	ActivityEdgeInstanceList outgoingEdges = this.outgoingEdges;
	for (Iterator i = outgoingEdges.iterator(); i.hasNext();) {
		ActivityEdgeInstance outgoingEdge = (ActivityEdgeInstance) i
				.next();
		// Debug.println(&quot;[sendOffers] Sending offer to &quot; +
		// outgoingEdge.target.node.name + &quot;.&quot;);
		outgoingEdge.sendOffer(tokens);
	}

}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-terminate" name="terminate" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-terminate.1">
              <language>Java</language>
              <body>// Terminate the activation of this node.

if (this.running) {
	if (this.node != null) {
		Debug.println(&quot;[terminate] node = &quot; + this.node.name);
	} else {
		Debug.println(&quot;[terminate] Anonymous activation of type &quot;
				+ this.getClass().getName());
	}
}

this.running = false;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady" name="isReady" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Check if all the prerequisites for this node have been satisfied.
// By default, check that this node is running.

return this.isRunning();

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning" name="isRunning" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test whether this node activation is running.

return this.running;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge" name="addOutgoingEdge" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge-edge-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge-edge-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add an activity edge instance as an outgoing edge of this activity
// node activation.

edge.source = this;
this.outgoingEdges.addValue(edge);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge" name="addIncomingEdge" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge-edge-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge-edge-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add an activity edge instance as an incoming edge of this activity
// node activation.

edge.target = this;
this.incomingEdges.addValue(edge);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createNodeActivations" name="createNodeActivations" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createNodeActivations.1">
              <language>Java</language>
              <body>// Create node activations for any subnodes of the node for this
// activation.
// For most kinds of nodes, this does nothing.

return;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createEdgeInstances" name="createEdgeInstances" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createEdgeInstances.1">
              <language>Java</language>
              <body>// Create edge instances for any edge instances owned by the node for
// this activation.
// For most kinds of nodes, this does nothing.

return;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor" name="isSourceFor" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-edgeInstance-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-edgeInstance-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Check if this node activation is the effective source for the given
// edge instance.

return edgeInstance.source == this;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution" name="getActivityExecution" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the activity execution that contains this activity node
// activation, directly or indirectly.

return this.group.getActivityExecution();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext" name="getExecutionContext" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Object" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the context object for the containing activity execution.

return this.getActivityExecution().context;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus" name="getExecutionLocus" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-Locus" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the locus of the containing activity execution.

return this.getActivityExecution().locus;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation" name="getNodeActivation" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-node-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-node-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the activity node activation corresponding to the given activity
// node, in the context of this activity node activation.
// By default, return this activity node activation, if it is for the
// given node, otherwise return nothing.

ActivityNodeActivation activation = null;
if (node == this.node) {
	activation = this;
}

return activation;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken" name="addToken" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken-token" name="token" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken-token-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken-token-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Transfer the given token to be held by this node.

if (this.node == null) {
	Debug.println(&quot;[addToken] ...&quot;);
} else {
	Debug.println(&quot;[addToken] node = &quot; + this.node.name);
}

Token transferredToken = token.transfer(this);
// Debug.println(&quot;[addToken] Adding token with value = &quot; +
// transferredToken.getValue());
this.heldTokens.addValue(transferredToken);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken" name="removeToken" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-token" name="token" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-token-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-token-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Remove the given token, if it is held by this node activation.
// Return the position (counting from 1) of the removed token (0 if
// there is none removed).

boolean notFound = true;
int i = 1;
while (notFound &amp; i &lt;= this.heldTokens.size()) {
	if (this.heldTokens.getValue(i - 1) == token) {
		if (this.node == null) {
			Debug.println(&quot;[removeToken] ...&quot;);
		} else {
			Debug.println(&quot;[removeToken] node = &quot; + this.node.name);
		}
		this.heldTokens.remove(i - 1);
		notFound = false;
	}
	i = i + 1;
}

if (notFound) {
	i = 0;
} else {
	i = i - 1;
}

return i;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens" name="addTokens" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens-tokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens-tokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Transfer the given tokens to be the held tokens for this node.

// if (this.node == null) {
// Debug.println(&quot;[addTokens] ...&quot;);
// } else {
// Debug.println(&quot;[addTokens] node = &quot; + this.node.name);
// }

for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	this.addToken(token);
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens" name="takeTokens" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Take the tokens held by this node activation.

TokenList tokens = this.getTokens();
this.clearTokens();

return tokens;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-clearTokens" name="clearTokens" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-clearTokens.1">
              <language>Java</language>
              <body>// Remove all held tokens.

while (this.heldTokens.size() > 0) {
	this.heldTokens.getValue(0).withdraw();
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens" name="getTokens" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the tokens held by this node activation.

// Debug.println(&quot;[getTokens] node = &quot; + this.node.name);

TokenList tokens = new TokenList();
TokenList heldTokens = this.heldTokens;
for (int i = 0; i &lt; heldTokens.size(); i++) {
	Token heldToken = heldTokens.getValue(i);
	// Debug.println(&quot;[getTokens] token value = &quot; +
	// heldTokens.getValue());
	tokens.addValue(heldToken);
}

return tokens;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-suspend" name="suspend" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-suspend.1">
              <language>Java</language>
              <body>// Suspend this activation within the activation group that contains it.

this.group.suspend(this);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-resume" name="resume" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-resume.1">
              <language>Java</language>
              <body>// Resume this activation within the activation group that contains it.

this.group.resume(this);
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize.1" name="initialize" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize.1-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize.1-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-run.1" name="run" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-run" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-receiveOffer.1" name="receiveOffer" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-receiveOffer" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire" name="fire" isAbstract="true" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire">
                <body>Carry out the main behavior of this activity node.&#xD;
</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers.1" name="sendOffers" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers.1-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers.1-tokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers.1-tokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-terminate.1" name="terminate" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-terminate" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady.1" name="isReady" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning.1" name="isRunning" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge.1" name="addOutgoingEdge" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge.1-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge.1" name="addIncomingEdge" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge.1-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createNodeActivations.1" name="createNodeActivations" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createNodeActivations" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createEdgeInstances.1" name="createEdgeInstances" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createEdgeInstances" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor.1" name="isSourceFor" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor.1-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution.1" name="getActivityExecution" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext.1" name="getExecutionContext" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Object" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus.1" name="getExecutionLocus" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus.1-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-Locus" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1" name="getNodeActivation" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken.1" name="addToken" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken.1-token" name="token" type="Semantics-Activities-IntermediateActivities-Token"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken.1" name="removeToken" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken.1-token" name="token" type="Semantics-Activities-IntermediateActivities-Token"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens.1" name="addTokens" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens.1-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens.1-tokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens.1-tokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens.1" name="takeTokens" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-clearTokens.1" name="clearTokens" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-clearTokens" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens.1" name="getTokens" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-suspend.1" name="suspend" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-suspend" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-resume.1" name="resume" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-resume" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" name="ActivityNodeActivationGroup">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <body>An activity node group is a group of nodes that are activated together, either directly in the context of an activity execution, or in the context of </body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-_ownedComment.1">
              <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances" name="edgeInstances" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" aggregation="composite" association="Semantics-Activities-IntermediateActivities-a">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances">
                <body>The set of activity edge instances for this group. &#xD;
</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations" name="nodeActivations" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" aggregation="composite" association="Semantics-Activities-IntermediateActivities-A_nodeActivations_group">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations">
                <body>The set of activity node executions for this group. &#xD;
</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution" name="activityExecution" type="Semantics-Activities-IntermediateActivities-ActivityExecution" association="Semantics-Activities-IntermediateActivities-A_activationGroup_activityExecution">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution">
                <body>The activity execution to which this group belongs.&#xD;
(This will be empty if the group is for a structured activity node activation.)</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation" name="containingNodeActivation" type="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation" association="Semantics-Activities-CompleteStructuredActivities-A_activationGroup_containingNodeActivation">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation">
                <body>The structured activity node activation to which this group belongs.&#xD;
(This will be empty if the group is for an activity execution.)</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations" name="suspendedActivations" visibility="public" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" association="Semantics-Activities-IntermediateActivities-_packagedElement.32">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations">
                <body>Activity node activations in this activation group that are suspended waiting for an event occurrence. If an activation group has a containing node activation and any suspended activations, then the containing node activation will also be suspended.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run" name="run" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run-activations" name="activations" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run-activations-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run-activations-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Run the given node activations and then (concurrently) send an offer
// to all activations for nodes with no incoming edges within the given
// set.

for (int i = 0; i &lt; activations.size(); i++) {
	ActivityNodeActivation activation = activations.getValue(i);
	activation.run();
}

Debug.println(&quot;[run] Checking for enabled nodes...&quot;);

ActivityNodeActivationList enabledActivations = new ActivityNodeActivationList();

for (int i = 0; i &lt; activations.size(); i++) {
	ActivityNodeActivation activation = activations.getValue(i);

	Debug
			.println(&quot;[run] Checking node &quot; + activation.node.name
					+ &quot;...&quot;);

	if (activation instanceof ActionActivation
			| activation instanceof ControlNodeActivation
			| activation instanceof ActivityParameterNodeActivation) {

		boolean isEnabled = this.checkIncomingEdges(
				activation.incomingEdges, activations);

		// For an action activation, also consider incoming edges to
		// input pins
		if (isEnabled &amp; activation instanceof ActionActivation) {
			InputPinList inputPins = ((Action) activation.node).input;
			int j = 1;
			while (j &lt;= inputPins.size() &amp; isEnabled) {
				InputPin inputPin = inputPins.getValue(j - 1);
				ActivityEdgeInstanceList inputEdges = ((ActionActivation) activation)
						.getPinActivation(inputPin).incomingEdges;
				isEnabled = this.checkIncomingEdges(inputEdges,
						activations);
				j = j + 1;
			}
		}

		if (isEnabled) {
			Debug.println(&quot;[run] Node &quot; + activation.node.name
					+ &quot; is enabled.&quot;);
			enabledActivations.addValue(activation);
		}
	}
}

// Debug.println(&quot;[run] &quot; + enabledActivations.size() +
// &quot; node(s) are enabled.&quot;);

// *** Send offers to all enabled nodes concurrently. ***
for (Iterator i = enabledActivations.iterator(); i.hasNext();) {
	ActivityNodeActivation activation = (ActivityNodeActivation) i
			.next();
	Debug.println(&quot;[run] Sending offer to node &quot; + activation.node.name
			+ &quot;.&quot;);
	activation.receiveOffer();
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges" name="checkIncomingEdges" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-incomingEdges" name="incomingEdges" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-incomingEdges-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-incomingEdges-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-activations" name="activations" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-activations-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-activations-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-Parameter1-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-Parameter1-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Check if any incoming edges have a source in a given set of
// activations.

int j = 1;
boolean notFound = true;

while (j &lt;= incomingEdges.size() &amp; notFound) {
	int k = 1;
	while (k &lt;= activations.size() &amp; notFound) {
		if (activations.getValue(k - 1).isSourceFor(
				incomingEdges.getValue(j - 1))) {
			notFound = false;
		}
		k = k + 1;
	}
	j = j + 1;
}

return notFound;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes" name="runNodes" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes-nodes" name="nodes">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes-nodes-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes-nodes-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Run the node activations associated with the given nodes in this
// activation group.

ActivityNodeActivationList nodeActivations = new ActivityNodeActivationList();

for (int i = 0; i &lt; nodes.size(); i++) {
	ActivityNode node = nodes.getValue(i);
	ActivityNodeActivation nodeActivation = this
			.getNodeActivation(node);
	if (nodeActivation != null) {
		nodeActivations.addValue(nodeActivation);
	}
}

this.run(nodeActivations);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate" name="activate" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-nodes" name="nodes">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-nodes-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-nodes-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-edges" name="edges">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityEdge"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-edges-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-edges-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Activate and run the given set of nodes with the given set of edges,
// within this activation group.

this.createNodeActivations(nodes);
this.createEdgeInstances(edges);
this.run(this.nodeActivations);

// Debug.println(&quot;[activate] Exiting.&quot;);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-terminateAll" name="terminateAll" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-terminateAll.1">
              <language>Java</language>
              <body>// Terminate all node activations in the group.

Debug.println(&quot;[terminateAll] Terminating activation group for &quot;
		+ (this.activityExecution != null ? &quot;activity &quot;
				+ this.activityExecution.getTypes().getValue(0).name
				: this.containingNodeActivation != null ? &quot;node &quot;
						+ this.containingNodeActivation.node.name
						: &quot;expansion region&quot;) + &quot;.&quot;);

ActivityNodeActivationList nodeActivations = this.nodeActivations;
for (int i = 0; i &lt; nodeActivations.size(); i++) {
	ActivityNodeActivation nodeActivation = nodeActivations.getValue(i);
	nodeActivation.terminate();
}

this.suspendedActivations.clear();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations" name="createNodeActivations" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations-nodes" name="nodes">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations-nodes-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations-nodes-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add activity node activations for the given set of nodes to this
// group and create edge instances between them.

for (int i = 0; i &lt; nodes.size(); i++) {
	ActivityNode node = nodes.getValue(i);

	Debug
			.println(&quot;[createNodeActivations] Creating a node activation for &quot;
					+ node.name + &quot;...&quot;);
	this.createNodeActivation(node);

}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation" name="createNodeActivation" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-node-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-node-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create an activity node activation for a given activity node in this
// activity node activation group.

ActivityNodeActivation activation = (ActivityNodeActivation) (this
		.getActivityExecution().locus.factory.instantiateVisitor(node));
activation.initialize(node, this);

this.nodeActivations.addValue(activation);

activation.createNodeActivations();

return activation;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addNodeActivation" name="addNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addNodeActivation-activation" name="activation" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addNodeActivation-activation-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addNodeActivation-activation-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add the given node activation to this group.&#xD;
&#xD;
activation.group = this;&#xD;
this.nodeActivations.addValue(activation);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation" name="getNodeActivation" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-node-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-node-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the node activation (if any) in this group,
// or any nested group, corresponding to the given activity node.
// If this is a group for a structured activity node activation,
// also include the pin activations for that node activation.

ActivityNodeActivation activation = null;

if (this.containingNodeActivation != null &amp;&amp; node instanceof Pin) {
	activation = this.containingNodeActivation
			.getPinActivation((Pin) node);
}

if (activation == null) {
	int i = 1;
	while (activation == null &amp; i &lt;= this.nodeActivations.size()) {
		activation = this.nodeActivations.getValue(i - 1)
				.getNodeActivation(node);
		i = i + 1;
	}
}

return activation;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances" name="createEdgeInstances" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances-edges" name="edges">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityEdge"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances-edges-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances-edges-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create instance edges for the given activity edges, as well as for
// edge instances within any nodes activated in this group.

for (int i = 0; i &lt; edges.size(); i++) {
	ActivityEdge edge = edges.getValue(i);

	Debug
			.println(&quot;[createEdgeInstances] Creating an edge instance from &quot;
					+ edge.source.name
					+ &quot; to &quot;
					+ edge.target.name
					+ &quot;.&quot;);

	ActivityEdgeInstance edgeInstance = new ActivityEdgeInstance();
	edgeInstance.edge = edge;
	edgeInstance.group = this;

	this.edgeInstances.addValue(edgeInstance);
	this.getNodeActivation(edge.source).addOutgoingEdge(edgeInstance);
	this.getNodeActivation(edge.target).addIncomingEdge(edgeInstance);

	// Debug.println(&quot;[createEdgeInstances] Edge instance created...&quot;);
}

ActivityNodeActivationList nodeActivations = this.nodeActivations;
for (int i = 0; i &lt; nodeActivations.size(); i++) {
	ActivityNodeActivation nodeActivation = nodeActivations.getValue(i);
	nodeActivation.createEdgeInstances();
}

// Debug.println(&quot;[createEdgeInstances] Done creating edge instances.&quot;);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addEdgeInstance" name="addEdgeInstance">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addEdgeInstance-instance" name="instance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addEdgeInstance-instance-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addEdgeInstance-instance-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add the given edge instance to this group.&#xD;
&#xD;
instance.group = this;&#xD;
this.edgeInstances.addValue(instance);&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution" name="getActivityExecution" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the activity execution to which this group belongs, directly
// or indirectly.

ActivityExecution activityExecution = this.activityExecution;
if (activityExecution == null) {
	activityExecution = this.containingNodeActivation.group
			.getActivityExecution();
}

// Debug.println(&quot;[getActivityExecution] activityExecution = &quot; +
// activityExecution);

return activityExecution;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations" name="getOutputParameterNodeActivations" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the set of all activations in this group of activity parameter
// nodes for output (inout, out and return) parameters.

ActivityParameterNodeActivationList parameterNodeActivations = new ActivityParameterNodeActivationList();
ActivityNodeActivationList nodeActivations = this.nodeActivations;
for (int i = 0; i &lt; nodeActivations.size(); i++) {
	ActivityNodeActivation activation = nodeActivations.getValue(i);
	if (activation instanceof ActivityParameterNodeActivation) {
		if (activation.incomingEdges.size() > 0) {
			parameterNodeActivations
					.addValue((ActivityParameterNodeActivation) activation);
		}
	}
}

return parameterNodeActivations;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor" name="hasSourceFor" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor.1">
              <language>Java</language>
              <body>// Returns true if this activation group has a node activation
// corresponding to the source of the given edge instance.

boolean hasSource = false;
ActivityNodeActivationList activations = this.nodeActivations;
int i = 1;
while (!hasSource &amp; i &lt;= activations.size()) {
	hasSource = activations.getValue(i - 1).isSourceFor(edgeInstance);
	i = i + 1;
}
return hasSource;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-isSuspended" name="isSuspended" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-isSuspended.1">
              <language>Java</language>
              <body>// Check if this activitation group has any suspended activations and
// is,
// therefore, itself suspended.

return this.suspendedActivations.size() > 0;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspend" name="suspend" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspend.1">
              <language>Java</language>
              <body>// Suspend the given activation in this activation group. If this is
// the only suspended activation, and the activation group has a
// containing node activation, then suspend that containing activation.

Debug.println(&quot;[suspend] node=&quot;
		+ (activation.node == null ? &quot;null&quot; : activation.node.name));

if (!this.isSuspended()) {
	StructuredActivityNodeActivation containingNodeActivation = this.containingNodeActivation;
	if (containingNodeActivation != null) {
		containingNodeActivation.suspend();
	}
}
this.suspendedActivations.addValue(activation);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-resume" name="resume" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-resume.1">
              <language>Java</language>
              <body>// Resume the given activation by removing it from the suspended
// activation list for this activation group. If this is the last
// suspended activation, and the activation group has a containing
// node activation, then resume that containing activation.

Debug.println(&quot;[resume] node=&quot;
		+ (activation.node == null ? &quot;null&quot; : activation.node.name));

boolean found = false;
int i = 1;
while (!found &amp; i &lt;= this.suspendedActivations.size()) {
	if (this.suspendedActivations.get(i - 1) == activation) {
		this.suspendedActivations.removeValue(i - 1);
		found = true;
	}
	i = i + 1;
}
if (!this.isSuspended()) {
	StructuredActivityNodeActivation containingNodeActivation = this.containingNodeActivation;
	if (containingNodeActivation != null) {
		containingNodeActivation.resume();
	}
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run.1" name="run" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run.1-activations" name="activations" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run.1-activations-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run.1-activations-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1" name="checkIncomingEdges" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-incomingEdges" name="incomingEdges" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-incomingEdges-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-incomingEdges-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-activations" name="activations" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-activations-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-activations-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes.1" name="runNodes" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes.1-nodes" name="nodes">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes.1-nodes-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes.1-nodes-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1" name="activate" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-nodes" name="nodes">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-nodes-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-nodes-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-edges" name="edges">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityEdge"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-edges-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-edges-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-terminateAll.1" name="terminateAll" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-terminateAll" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations.1" name="createNodeActivations" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations.1-nodes" name="nodes">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations.1-nodes-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations.1-nodes-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation.1" name="createNodeActivation" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation.1-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1" name="getNodeActivation" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1-node" name="node">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityNode"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances.1" name="createEdgeInstances" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances.1-edges" name="edges">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ActivityEdge"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances.1-edges-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances.1-edges-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution.1" name="getActivityExecution" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations.1" name="getOutputParameterNodeActivations" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor.1" name="hasSourceFor" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor.1-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-isSuspended.1" name="isSuspended" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-isSuspended" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-isSuspended.1-Parameter1" name="Parameter1" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspend.1" name="suspend" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspend" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspend.1-activation" name="activation" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-resume.1" name="resume" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-resume" class="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-resume.1-activation" name="activation" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation" name="ActivityParameterNodeActivation">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation">
              <body>An activity parameter node activation is an object node activation for a node that is an activity parameter node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ObjectNodeActivation" specific="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// If there are no incoming edges, this is an activation of an input
// activity parameter node.
// Get the values from the input parameter indicated by the activity
// parameter node and offer those values as object tokens.

if (this.node.incoming.size() == 0) {
	Debug.println(&quot;[fire] Input activity parameter node &quot;
			+ this.node.name + &quot;...&quot;);
	Parameter parameter = ((ActivityParameterNode) (this.node)).parameter;
	ParameterValue parameterValue = this.getActivityExecution()
			.getParameterValue(parameter);
	// Debug.println(&quot;[fire] parameter = &quot; + parameter.name);
	if (parameterValue != null) {
		Debug.println(&quot;[fire] Parameter has &quot;
				+ parameterValue.values.size() + &quot; value(s).&quot;);
		TokenList tokens = new TokenList();
		ValueList values = parameterValue.values;
		for (int i = 0; i &lt; values.size(); i++) {
			Value value = values.getValue(i);
			ObjectToken token = new ObjectToken();
			token.value = value;
			this.addToken(token);
		}
		this.sendUnofferedTokens();
	}
}

// If there are one or more incoming edges, this is an activation of an
// output activity parameter node.
// Take the tokens offered on incoming edges and add them to the set of
// tokens being offered.
// [Note that an output activity parameter node may fire multiple times,
// accumulating tokens offered to it.]

else {
	Debug.println(&quot;[fire] Output activity parameter node &quot;
			+ this.node.name + &quot;...&quot;);
	this.addTokens(incomingTokens);
}

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-clearTokens" name="clearTokens" specification="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-clearTokens.1">
              <language>Java</language>
              <body>// Clear all held tokens only if this is an input parameter node.

if (this.node.incoming.size() == 0) {
	super.clearTokens();
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire" class="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-clearTokens.1" name="clearTokens" method="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-clearTokens" class="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_nodeActivations_group" name="A_nodeActivations_group" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-a" name="a" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_heldTokens_holder" name="A_heldTokens_holder" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-heldTokens Semantics-Activities-IntermediateActivities-Token-holder"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation" name="A_node_activityNodeActivation" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" owningAssociation="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation" association="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_incomingEdges_target" name="A_incomingEdges_target" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-target"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_activationGroup_activityExecution" name="A_activationGroup_activityExecution" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityExecution-activationGroup Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance" name="A_edge_activityEdgeInstance" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" owningAssociation="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance" association="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_source_outgoingEdges" name="A_source_outgoingEdges" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-source Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance" name="A_offers_activityEdgeInstance" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-offers Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" owningAssociation="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance" association="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_decisionInputExecution_decisionNodeActivation" name="A_decisionInputExecution_decisionNodeActivation" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution Semantics-Activities-IntermediateActivities-A_decisionInputExecution_decisionNodeActivation-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-A_decisionInputExecution_decisionNodeActivation-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-DecisionNodeActivation" owningAssociation="Semantics-Activities-IntermediateActivities-A_decisionInputExecution_decisionNodeActivation" association="Semantics-Activities-IntermediateActivities-A_decisionInputExecution_decisionNodeActivation"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken" name="A_baseToken_forkedToken" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ForkedToken-baseToken Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-ForkedToken" owningAssociation="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken" association="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_value_objectToken" name="A_value_objectToken" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ObjectToken-value Semantics-Activities-IntermediateActivities-A_value_objectToken-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-A_value_objectToken-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-ObjectToken" owningAssociation="Semantics-Activities-IntermediateActivities-A_value_objectToken" association="Semantics-Activities-IntermediateActivities-A_value_objectToken"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer" name="A_offeredTokens_offer" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-Offer-offeredTokens Semantics-Activities-IntermediateActivities-A_offeredTokens_offer-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-Offer" owningAssociation="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer" association="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation" name="FlowFinalNodeActivation">
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation" specific="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire.1">
              <language>Java</language>
              <body>// Consume all incoming tokens.

Debug.println(&quot;[fire] Flow final node &quot; + this.node.name + &quot;...&quot;);

for (int i = 0; i &lt; incomingTokens.size(); i++) {
	Token token = incomingTokens.getValue(i);
	token.withdraw();
}
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire" class="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire.1-incomingTokens-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-_packagedElement.32" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations Semantics-Activities-IntermediateActivities-_packagedElement.32-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Activities-IntermediateActivities-_packagedElement.32-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" owningAssociation="Semantics-Activities-IntermediateActivities-_packagedElement.32" association="Semantics-Activities-IntermediateActivities-_packagedElement.32">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-_packagedElement.32-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-_packagedElement.32-_ownedEnd.0-_upperValue" value="1"/>
            </ownedEnd>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="Semantics-Loci" name="Loci">
          <packageImport xmi:type="uml:PackageImport" xmi:id="_qkm8sM7AEeWF7I4YWspV6w" importedPackage="Semantics-Classes" importingNamespace="Semantics-Loci"/>
          <packageImport xmi:type="uml:PackageImport" xmi:id="_skXN8M7AEeWF7I4YWspV6w" importedPackage="Semantics-CommonBehaviors" importingNamespace="Semantics-Loci"/>
          <packageImport xmi:type="uml:PackageImport" xmi:id="_ufEnIM7AEeWF7I4YWspV6w" importedPackage="Semantics-Activities" importingNamespace="Semantics-Loci"/>
          <packageImport xmi:type="uml:PackageImport" xmi:id="_w7DhYM7AEeWF7I4YWspV6w" importedPackage="Semantics-Actions" importingNamespace="Semantics-Loci"/>
          <packageImport xmi:type="uml:PackageImport" xmi:id="_2KV-0M7CEeWF7I4YWspV6w" importedPackage="_Gm47sM7BEeWF7I4YWspV6w" importingNamespace="Semantics-Loci"/>
          <packageImport xmi:type="uml:PackageImport" xmi:id="_9Pv7QM7CEeWF7I4YWspV6w" importedPackage="_LzvbEM7BEeWF7I4YWspV6w" importingNamespace="Semantics-Loci"/>
          <packageImport xmi:type="uml:PackageImport" xmi:id="_-ogd8M7CEeWF7I4YWspV6w" importedPackage="_VBjOcM7BEeWF7I4YWspV6w" importingNamespace="Semantics-Loci"/>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy" name="ChoiceStrategy" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ChoiceStrategy">
              <body>A choice strategy is used to represent the behavior of making an arbitrary non-deterministic choice.&#xD;
A valid execution may use ANY choice strategy for choosing one element from a given set.</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-_generalization.0" general="Semantics-Loci-LociL1-SemanticStrategy" specific="Semantics-Loci-LociL1-ChoiceStrategy"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName" name="getName" specification="Semantics-Loci-LociL1-ChoiceStrategy-getName.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// The name of a choice strategy is always &quot;choice&quot;.

return &quot;choice&quot;;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName.1" name="getName" method="Semantics-Loci-LociL1-ChoiceStrategy-getName" class="Semantics-Loci-LociL1-ChoiceStrategy">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName.1-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-choose" name="choose" isAbstract="true" class="Semantics-Loci-LociL1-ChoiceStrategy">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-choose-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ChoiceStrategy-choose">
                <body>Choose an integer from 1 to the given size.&#xD;
[The size must be greater than 0.]</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-choose-size" name="size">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-choose-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-ExecutionFactory" name="ExecutionFactory" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory">
              <body> An execution factory is used to create objects that represent the execution of a behavior, the evaluation of a value specification or the activation of an activity node.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-locus" name="locus" type="Semantics-Loci-LociL1-Locus" association="Semantics-Loci-LociL1-A_factory_locus">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-locus-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory-locus">
                <body>The locus at which this factory resides.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-locus-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-locus-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes" name="primitiveBehaviorPrototypes" type="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution" association="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes">
                <body>The set of opaque behavior executions to be used to execute the primitive behaviors known to the factory.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes" name="builtInTypes" association="Semantics-Loci-LociL1-A_builtInTypes_executionFactory">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes">
                <body>The set of primitive types that have corresponding literal value specifications.&#xD;
Must include Integer, Boolean, String and UnlimitedNatural.</body>
              </ownedComment>
              <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#PrimitiveType"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-strategies" name="strategies" visibility="public" type="Semantics-Loci-LociL1-SemanticStrategy" association="Semantics-Loci-LociL1-A_strategies_executionFactory">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-strategies-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory-strategies">
                <body>The set of semantic strategies currently registered with this execution factory.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-strategies-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-strategies-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution" name="createExecution" specification="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-behavior" name="behavior">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Behavior"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-behavior-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-behavior-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-context" name="context" type="Semantics-Classes-Kernel-Object">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-context-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-context-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create an execution object for a given behavior.
// The execution will take place at the locus of the factory in the
// given context.
// If the context is empty, the execution is assumed to provide its own
// context.

Execution execution;

if (behavior instanceof OpaqueBehavior) {
	execution = this
			.instantiateOpaqueBehaviorExecution((OpaqueBehavior) behavior);
} else {
	execution = (Execution) this.instantiateVisitor(behavior);
	execution.types.addValue(behavior);
	execution.createFeatureValues();
}

this.locus.add(execution);

if (context == null) {
	execution.context = execution;
} else {
	execution.context = context;
}

return execution;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation" name="createEvaluation" specification="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Evaluation" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-specification" name="specification">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-specification-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-specification-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Create an evaluation object for a given value specification.
// The evaluation will take place at the locus of the factory.

Evaluation evaluation = (Evaluation) this
		.instantiateVisitor(specification);

evaluation.specification = specification;
evaluation.locus = this.locus;

return evaluation;

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution" name="instantiateOpaqueBehaviorExecution" specification="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-behavior" name="behavior">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#OpaqueBehavior"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-behavior-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-behavior-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return a copy of the prototype for the primitive behavior execution
// of the given opaque behavior.

OpaqueBehaviorExecution execution = null;
int i = 1;
while (execution == null &amp; i &lt;= this.primitiveBehaviorPrototypes.size()) {
	// Debug.println(&quot;[instantiateOpaqueExecution] Checking &quot; +
	// this.primitiveBehaviorPrototypes.getValue(i).objectId() + &quot;...&quot;);
	OpaqueBehaviorExecution prototype = this.primitiveBehaviorPrototypes
			.getValue(i - 1);
	if (prototype.getBehavior() == behavior) {
		execution = (OpaqueBehaviorExecution) (prototype.copy());
	}
	i = i + 1;
}

if (execution == null) {
	Debug
			.println(&quot;[instantiateOpaqueExecution] No prototype execution found for &quot;
					+ behavior.name + &quot;.&quot;);
}

return execution;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype" name="addPrimitiveBehaviorPrototype" specification="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype-execution-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype-execution-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add an opaque behavior execution to use as a prototype for
// instantiating the corresponding primitive opaque behavior.
// Precondition: No primitive behavior prototype for the type of the
// given execution should already exist.

this.primitiveBehaviorPrototypes.addValue(execution);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType" name="addBuiltInType" specification="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#PrimitiveType"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType-type-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType-type-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add the given primitive type as a built-in type.
// Precondition: No built-in type with the same name should already
// exist.

this.builtInTypes.addValue(type);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType" name="getBuiltInType" specification="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#PrimitiveType"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-name" name="name">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-name-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-name-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the built-in type with the given name.

PrimitiveType type = null;
int i = 1;
while (type == null &amp; i &lt;= this.builtInTypes.size()) {
	PrimitiveType primitiveType = this.builtInTypes.getValue(i - 1);
	if (primitiveType.name.equals(name)) {
		type = primitiveType;
	}
	i = i + 1;
}

return type;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy" name="setStrategy" specification="Semantics-Loci-LociL1-ExecutionFactory-setStrategy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy-strategy" name="strategy" type="Semantics-Loci-LociL1-SemanticStrategy">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy-strategy-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy-strategy-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Set the strategy for a semantic variation point. Any existing
// strategy for the same SVP is replaced.

int i = this.getStrategyIndex(strategy.getName());

if (i &lt;= this.strategies.size()) {
	this.strategies.removeValue(i - 1);
}

this.strategies.addValue(strategy);
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy" name="getStrategy" specification="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-name" name="name">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-name-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-name-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-OwnedParameter" name="OwnedParameter" type="Semantics-Loci-LociL1-SemanticStrategy" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-OwnedParameter-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the strategy with the given name.

int i = this.getStrategyIndex(name);

SemanticStrategy strategy = null;
if (i &lt;= this.strategies.size()) {
	strategy = this.strategies.getValue(i - 1);
}

return strategy;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex" name="getStrategyIndex" specification="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-name" name="name">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-name-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-name-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Get the index of the strategy with the given name.
// If there is no such strategy, return the size of the strategies list.

SemanticStrategyList strategies = this.strategies;

int i = 1;
boolean unmatched = true;
while (unmatched &amp; (i &lt;= strategies.size())) {
	if (strategies.getValue(i - 1).getName().equals(name)) {
		unmatched = false;
	} else {
		i = i + 1;
	}
}

return i;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1" name="createExecution" method="Semantics-Loci-LociL1-ExecutionFactory-createExecution" class="Semantics-Loci-LociL1-ExecutionFactory">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1-behavior" name="behavior">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Behavior"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1-context" name="context" type="Semantics-Classes-Kernel-Object">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1-context-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1-context-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation.1" name="createEvaluation" method="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation" class="Semantics-Loci-LociL1-ExecutionFactory">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Evaluation" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation.1-specification" name="specification">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateVisitor" name="instantiateVisitor" visibility="public" isAbstract="true" class="Semantics-Loci-LociL1-ExecutionFactory">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateVisitor-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory-instantiateVisitor">
                <body>Instantiate a visitor object for the given element.</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateVisitor-element" name="element">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateVisitor-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution.1" name="instantiateOpaqueBehaviorExecution" visibility="public" method="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution" class="Semantics-Loci-LociL1-ExecutionFactory">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution.1-behavior" name="behavior">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#OpaqueBehavior"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype.1" name="addPrimitiveBehaviorPrototype" method="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype" class="Semantics-Loci-LociL1-ExecutionFactory">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype.1-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType.1" name="addBuiltInType" method="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType" class="Semantics-Loci-LociL1-ExecutionFactory">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType.1-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#PrimitiveType"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1" name="getBuiltInType" method="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType" class="Semantics-Loci-LociL1-ExecutionFactory">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#PrimitiveType"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1-name" name="name">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy.1" name="setStrategy" method="Semantics-Loci-LociL1-ExecutionFactory-setStrategy" class="Semantics-Loci-LociL1-ExecutionFactory">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy.1-strategy" name="strategy" type="Semantics-Loci-LociL1-SemanticStrategy"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1" name="getStrategy" method="Semantics-Loci-LociL1-ExecutionFactory-getStrategy" class="Semantics-Loci-LociL1-ExecutionFactory">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1-name" name="name">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1-result" name="result" type="Semantics-Loci-LociL1-SemanticStrategy" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1-result-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1-result-_upperValue" value="1"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex.1" name="getStrategyIndex" method="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex" class="Semantics-Loci-LociL1-ExecutionFactory">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex.1-name" name="name">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex.1-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-Executor" name="Executor">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-Executor-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Executor">
              <body>An executor is used to execute behaviors and evaluation value specifications.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-Executor-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-Executor-locus" name="locus" type="Semantics-Loci-LociL1-Locus" association="Semantics-Loci-LociL1-A_executor_locus">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-Executor-locus-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Executor-locus">
                <body>The locus at which this executor resides.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-locus-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-locus-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Executor-execute" name="execute" specification="Semantics-Loci-LociL1-Executor-execute.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-execute-behavior" name="behavior">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Behavior"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute-behavior-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute-behavior-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-execute-context" name="context" type="Semantics-Classes-Kernel-Object">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute-context-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute-context-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-execute-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute-inputs-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-execute-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Execute the given behavior with the given input values in the given
// context, producing the given output values.
// There must be one input parameter value for each input (in or in-out)
// parameter of the behavior.
// The returned values include one parameter value for each output
// (in-out, out or return) parameter of the behavior.
// The execution instance is destroyed at completion.

Execution execution = this.locus.factory.createExecution(behavior,
		context);

for (int i = 0; i &lt; inputs.size(); i++) {
	execution.setParameterValue(inputs.getValue(i));
}

execution.execute();
ParameterValueList outputValues = execution.getOutputParameterValues();
execution.destroy();

return outputValues;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Executor-evaluate" name="evaluate" specification="Semantics-Loci-LociL1-Executor-evaluate.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-evaluate-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-evaluate-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-evaluate-specification" name="specification">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-evaluate-specification-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-evaluate-specification-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Evaluate the given value specification, returning the specified
// value.

// Debug.println(&quot;[evaluate] Start...&quot;);
return this.locus.factory.createEvaluation(specification).evaluate();
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Executor-start" name="start" specification="Semantics-Loci-LociL1-Executor-start.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-start-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Reference" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-start-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-start-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-start-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-start-type-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-start-type-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-start-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-start-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-start-inputs-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Instantiate the given class and start any behavior of the resulting
// object.
// (The behavior of an object includes any classifier behaviors for an
// active object or the class of the object itself, if that is a
// behavior.)

Debug.println(&quot;[start] Starting &quot; + type.name + &quot;...&quot;);

Object_ object = this.locus.instantiate(type);

Debug.println(&quot;[start] Object = &quot; + object);
object.startBehavior(type, inputs);

Reference reference = new Reference();
reference.referent = object;

return reference;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-Executor-execute.1" name="execute" method="Semantics-Loci-LociL1-Executor-execute" class="Semantics-Loci-LociL1-Executor">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-behavior" name="behavior">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Behavior"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-behavior-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-behavior-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-context" name="context" type="Semantics-Classes-Kernel-Object">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-context-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-context-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" isOrdered="true">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-inputs-_upperValue" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" isOrdered="true" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-Executor-evaluate.1" name="evaluate" method="Semantics-Loci-LociL1-Executor-evaluate" class="Semantics-Loci-LociL1-Executor">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-evaluate.1-specification" name="specification">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#ValueSpecification"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-Executor-start.1" name="start" method="Semantics-Loci-LociL1-Executor-start" class="Semantics-Loci-LociL1-Executor">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-start.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Reference" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-start.1-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Executor-start.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-start.1-inputs-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-start.1-inputs-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy" name="FirstChoiceStrategy">
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-_generalization.0" general="Semantics-Loci-LociL1-ChoiceStrategy" specific="Semantics-Loci-LociL1-FirstChoiceStrategy"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose" name="choose" specification="Semantics-Loci-LociL1-FirstChoiceStrategy-choose.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-size" name="size">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-size-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-size-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-OwnedParameter" name="OwnedParameter" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-OwnedParameter-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-OwnedParameter-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Always choose one.

return 1;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose.1" name="choose" method="Semantics-Loci-LociL1-FirstChoiceStrategy-choose" class="Semantics-Loci-LociL1-FirstChoiceStrategy">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose.1-size" name="size">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose.1-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-Locus" name="Locus">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-Locus-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Locus">
              <body>A locus is a place at which extensional values (objects or links) can exist. The extent of a class or association is the set of objects or links of that type that exist at a certain locus.&#xD;
A locus also has an executor and a factory associated with it, used to execute behaviors as a result of requests dispatched to objects at the locus.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-Locus-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
</body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-Locus-executor" name="executor" type="Semantics-Loci-LociL1-Executor" aggregation="composite" association="Semantics-Loci-LociL1-A_executor_locus">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-Locus-executor-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Locus-executor">
                <body>The executor to be used at this locus.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-executor-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-executor-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-Locus-factory" name="factory" type="Semantics-Loci-LociL1-ExecutionFactory" aggregation="composite" association="Semantics-Loci-LociL1-A_factory_locus">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-Locus-factory-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Locus-factory">
                <body>The factory to be used at this locus.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-factory-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-factory-_upperValue" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-Locus-extensionalValues" name="extensionalValues" type="Semantics-Classes-Kernel-ExtensionalValue" aggregation="composite" association="Semantics-Classes-Kernel-A_locus_extensionalValues">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-Locus-extensionalValues-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Locus-extensionalValues">
                <body>The set of values that are members of classifier extents at this locus.</body>
              </ownedComment>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-extensionalValues-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-extensionalValues-_upperValue" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-Locus-identifier" name="identifier">
              <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-setExecutor" name="setExecutor" specification="Semantics-Loci-LociL1-Locus-setExecutor.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-setExecutor-executor" name="executor" type="Semantics-Loci-LociL1-Executor">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-setExecutor-executor-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-setExecutor-executor-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Set the executor for this locus.

this.executor = executor;
this.executor.locus = this;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-setFactory" name="setFactory" specification="Semantics-Loci-LociL1-Locus-setFactory.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-setFactory-factory" name="factory" type="Semantics-Loci-LociL1-ExecutionFactory">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-setFactory-factory-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-setFactory-factory-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Set the factory for this locus.

this.factory = factory;
this.factory.locus = this;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-getExtent" name="getExtent" specification="Semantics-Loci-LociL1-Locus-getExtent.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-getExtent-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-getExtent-classifier-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-getExtent-classifier-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-getExtent-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-ExtensionalValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-getExtent-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-getExtent-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return the set of extensional values at this locus which have the
// given classifier as a type.

ExtensionalValueList extent = new ExtensionalValueList();

ExtensionalValueList extensionalValues = this.extensionalValues;
for (int i = 0; i &lt; extensionalValues.size(); i++) {
	ExtensionalValue value = extensionalValues.getValue(i);
	ClassifierList types = value.getTypes();

	boolean conforms = false;
	int j = 1;
	while (!conforms &amp; j &lt;= types.size()) {
		conforms = this.conforms(types.getValue(j - 1), classifier);
		j = j + 1;
	}

	if (conforms) {
		extent.addValue(value);
	}
}

return extent;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-add" name="add" specification="Semantics-Loci-LociL1-Locus-add.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-add-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-add-value-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-add-value-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Add the given extensional value to this locus

value.locus = this;
value.identifier = this.identifier + &quot;#&quot; + this.makeIdentifier(value);
this.extensionalValues.addValue(value);

</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-remove" name="remove" specification="Semantics-Loci-LociL1-Locus-remove.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-remove-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-remove-value-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-remove-value-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Remove the given extensional value from this locus.

value.locus = null;

boolean notFound = true;
int i = 1;
while (notFound &amp; i &lt;= this.extensionalValues.size()) {
	if (this.extensionalValues.getValue(i - 1) == value) {
		this.extensionalValues.remove(i - 1);
		notFound = false;
	}
	i = i + 1;
}
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-instantiate" name="instantiate" specification="Semantics-Loci-LociL1-Locus-instantiate.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-instantiate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Object" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-instantiate-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-instantiate-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-instantiate-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-instantiate-type-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-instantiate-type-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Instantiate the given class at this locus.

Object_ object = null;

if (type instanceof Behavior) {
	object = this.factory.createExecution((Behavior) type, null);
} else {
	object = new Object_();

	object.types.addValue(type);
	object.createFeatureValues();
	this.add(object);
}

return object;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier" name="makeIdentifier" specification="Semantics-Loci-LociL1-Locus-makeIdentifier.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Return an identifier for the given (newly created) extensional value.

// [No normative specification. A conforming implementation may create an identifier 
// an identifier in any way such that all identifiers for extensional values created
// at any one locus are unique.]

// Non-normative Java implementation
return Integer.toHexString(value.hashCode());
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-conforms" name="conforms" specification="Semantics-Loci-LociL1-Locus-conforms.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-conforms-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-conforms-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-conforms-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-conforms-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-conforms-type-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-conforms-type-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-conforms-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-conforms-classifier-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-conforms-classifier-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Test if a type conforms to a given classifier, that is, the type is
// equal to or a descendant of the classifier.

boolean doesConform = false;

if (type == classifier) {
	doesConform = true;
} else {
	int i = 1;
	while (!doesConform &amp; i &lt;= type.general.size()) {
		doesConform = this.conforms(type.general.getValue(i - 1),
				classifier);
		i = i + 1;
	}
}

return doesConform;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-Locus-setExecutor.1" name="setExecutor" method="Semantics-Loci-LociL1-Locus-setExecutor" class="Semantics-Loci-LociL1-Locus">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-setExecutor.1-executor" name="executor" type="Semantics-Loci-LociL1-Executor"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-Locus-setFactory.1" name="setFactory" method="Semantics-Loci-LociL1-Locus-setFactory" class="Semantics-Loci-LociL1-Locus">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-setFactory.1-factory" name="factory" type="Semantics-Loci-LociL1-ExecutionFactory"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-Locus-getExtent.1" name="getExtent" method="Semantics-Loci-LociL1-Locus-getExtent" class="Semantics-Loci-LociL1-Locus">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-getExtent.1-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-getExtent.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-ExtensionalValue" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-getExtent.1-ReturnResult-_lowerValue"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-getExtent.1-ReturnResult-_upperValue" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-Locus-add.1" name="add" method="Semantics-Loci-LociL1-Locus-add" class="Semantics-Loci-LociL1-Locus">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-add.1-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-Locus-remove.1" name="remove" method="Semantics-Loci-LociL1-Locus-remove" class="Semantics-Loci-LociL1-Locus">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-remove.1-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-Locus-instantiate.1" name="instantiate" method="Semantics-Loci-LociL1-Locus-instantiate" class="Semantics-Loci-LociL1-Locus">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-instantiate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Object" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-instantiate.1-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Class"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier.1" name="makeIdentifier" method="Semantics-Loci-LociL1-Locus-makeIdentifier" class="Semantics-Loci-LociL1-Locus">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier.1-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier.1-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-Locus-conforms.1" name="conforms" method="Semantics-Loci-LociL1-Locus-conforms" class="Semantics-Loci-LociL1-Locus">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-conforms.1-ReturnResult" name="ReturnResult" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-conforms.1-type" name="type">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-Locus-conforms.1-classifier" name="classifier">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Classifier"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-SemanticStrategy" name="SemanticStrategy" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-SemanticStrategy-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-SemanticStrategy">
              <body>The common base class for semantic strategy classes. A semantic strategy class specifies the behavior to be used at a specific semantic variatio point.</body>
            </ownedComment>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-SemanticStrategy-getName" name="getName" isAbstract="true" class="Semantics-Loci-LociL1-SemanticStrategy">
              <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-SemanticStrategy-getName-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-SemanticStrategy-getName">
                <body>Return the name of this strategy, as defined for the semantic variation point to which the strategy applies.</body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-SemanticStrategy-getName-result" name="result" direction="return">
                <type xmi:type="uml:PrimitiveType" href="http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-SemanticVisitor" name="SemanticVisitor" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-SemanticVisitor-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-SemanticVisitor">
              <body>The common base class for semantic visitor classes.</body>
            </ownedComment>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1" name="ExecutionFactoryL1">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory">
              <body> An execution factory is used to create objects that represent the execution of a behavior, the evaluation of a value specification or the activation of an activity node. This class only handles elements available at Conformance Level 1.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-_generalization.0" general="Semantics-Loci-LociL1-ExecutionFactory" specific="Semantics-Loci-LociL1-ExecutionFactoryL1"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor" name="instantiateVisitor" specification="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-element" name="element">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-element-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-element-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Instantiate a visitor object for the given element (at Conformance
// Level 1)

SemanticVisitor visitor = null;

if (element instanceof LiteralBoolean) {
	visitor = new LiteralBooleanEvaluation();
}

else if (element instanceof fUML.Syntax.Classes.Kernel.LiteralString) {
	visitor = new LiteralStringEvaluation();
}

else if (element instanceof fUML.Syntax.Classes.Kernel.LiteralNull) {
	visitor = new LiteralNullEvaluation();
}

else if (element instanceof fUML.Syntax.Classes.Kernel.InstanceValue) {
	visitor = new InstanceValueEvaluation();
}

else if (element instanceof fUML.Syntax.Classes.Kernel.LiteralUnlimitedNatural) {
	visitor = new LiteralUnlimitedNaturalEvaluation();
}

else if (element instanceof fUML.Syntax.Classes.Kernel.LiteralInteger) {
	visitor = new LiteralIntegerEvaluation();
}

else if (element instanceof LiteralReal) {
	visitor = new LiteralRealEvaluation();
}

return visitor;
</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor.1" name="instantiateVisitor" visibility="public" method="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor" class="Semantics-Loci-LociL1-ExecutionFactoryL1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor.1-element" name="element">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor.1-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Loci-LociL1-A_executor_locus" name="A_executor_locus" visibility="private" memberEnd="Semantics-Loci-LociL1-Locus-executor Semantics-Loci-LociL1-Executor-locus"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Loci-LociL1-A_factory_locus" name="A_factory_locus" visibility="private" memberEnd="Semantics-Loci-LociL1-Locus-factory Semantics-Loci-LociL1-ExecutionFactory-locus"/>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Loci-LociL1-A_builtInTypes_executionFactory" name="A_builtInTypes_executionFactory" visibility="private" memberEnd="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes Semantics-Loci-LociL1-A_builtInTypes_executionFactory-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-A_builtInTypes_executionFactory-_ownedEnd.0" visibility="private" type="Semantics-Loci-LociL1-ExecutionFactory" owningAssociation="Semantics-Loci-LociL1-A_builtInTypes_executionFactory" association="Semantics-Loci-LociL1-A_builtInTypes_executionFactory">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-A_builtInTypes_executionFactory-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-A_builtInTypes_executionFactory-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Loci-LociL1-A_strategies_executionFactory" name="A_strategies_executionFactory" visibility="private" memberEnd="Semantics-Loci-LociL1-ExecutionFactory-strategies Semantics-Loci-LociL1-A_strategies_executionFactory-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-A_strategies_executionFactory-_ownedEnd.0" name="" visibility="private" type="Semantics-Loci-LociL1-ExecutionFactory" owningAssociation="Semantics-Loci-LociL1-A_strategies_executionFactory" association="Semantics-Loci-LociL1-A_strategies_executionFactory"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory" name="A_primitiveBehaviorPrototypes_executionFactory" visibility="private" memberEnd="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory-_ownedEnd.0">
            <ownedEnd xmi:type="uml:Property" xmi:id="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory-_ownedEnd.0" visibility="private" type="Semantics-Loci-LociL1-ExecutionFactory" owningAssociation="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory" association="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory-_ownedEnd.0-_lowerValue"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory-_ownedEnd.0-_upperValue" value="*"/>
            </ownedEnd>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2" name="ExecutionFactoryL2">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory">
              <body> An execution factory is used to create objects that represent the execution of a behavior, the evaluation of a value specification or the activation of an activity node. This class only handles elements available at Conformance Level 2.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-_generalization.0" general="Semantics-Loci-LociL1-ExecutionFactoryL1" specific="Semantics-Loci-LociL2-ExecutionFactoryL2"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor" name="instantiateVisitor" specification="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-element" name="element">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-element-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-element-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Instantiate a visitor object for the given element (at Conformance
// Level 2)

SemanticVisitor visitor = null;

if (element instanceof Activity) {
	visitor = new ActivityExecution();
}

else if (element instanceof ActivityParameterNode) {
	visitor = new ActivityParameterNodeActivation();
}

else if (element instanceof InitialNode) {
	visitor = new InitialNodeActivation();
}

else if (element instanceof ActivityFinalNode) {
	visitor = new ActivityFinalNodeActivation();
}

else if (element instanceof FlowFinalNode) {
	visitor = new FlowFinalNodeActivation();
}

else if (element instanceof JoinNode) {
	visitor = new JoinNodeActivation();
}

else if (element instanceof MergeNode) {
	visitor = new MergeNodeActivation();
}

else if (element instanceof ForkNode) {
	visitor = new ForkNodeActivation();
}

else if (element instanceof DecisionNode) {
	visitor = new DecisionNodeActivation();
}

else if (element instanceof InputPin) {
	visitor = new InputPinActivation();
}

else if (element instanceof OutputPin) {
	visitor = new OutputPinActivation();
}

else if (element instanceof CallBehaviorAction) {
	visitor = new CallBehaviorActionActivation();
}

else if (element instanceof CallOperationAction) {
	visitor = new CallOperationActionActivation();
}

else if (element instanceof SendSignalAction) {
	visitor = new SendSignalActionActivation();
}

else if (element instanceof ReadSelfAction) {
	visitor = new ReadSelfActionActivation();
}

else if (element instanceof TestIdentityAction) {
	visitor = new TestIdentityActionActivation();
}

else if (element instanceof ValueSpecificationAction) {
	visitor = new ValueSpecificationActionActivation();
}

else if (element instanceof CreateObjectAction) {
	visitor = new CreateObjectActionActivation();
}

else if (element instanceof DestroyObjectAction) {
	visitor = new DestroyObjectActionActivation();
}

else if (element instanceof ReadStructuralFeatureAction) {
	visitor = new ReadStructuralFeatureActionActivation();
}

else if (element instanceof ClearStructuralFeatureAction) {
	visitor = new ClearStructuralFeatureActionActivation();
}

else if (element instanceof AddStructuralFeatureValueAction) {
	visitor = new AddStructuralFeatureValueActionActivation();
}

else if (element instanceof RemoveStructuralFeatureValueAction) {
	visitor = new RemoveStructuralFeatureValueActionActivation();
}

else if (element instanceof ReadLinkAction) {
	visitor = new ReadLinkActionActivation();
}

else if (element instanceof ClearAssociationAction) {
	visitor = new ClearAssociationActionActivation();
}

else if (element instanceof CreateLinkAction) {
	visitor = new CreateLinkActionActivation();
}

else if (element instanceof DestroyLinkAction) {
	visitor = new DestroyLinkActionActivation();
}

else {
	visitor = super.instantiateVisitor(element);
}

return visitor;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor.1" name="instantiateVisitor" visibility="public" method="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor" class="Semantics-Loci-LociL2-ExecutionFactoryL2">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor.1-element" name="element">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor.1-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3" name="ExecutionFactoryL3">
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory">
              <body> An execution factory is used to create objects that represent the execution of a behavior, the evaluation of a value specification or the activation of an activity node. This class only handles elements available at Conformance Level 3.</body>
            </ownedComment>
            <ownedComment xmi:type="uml:Comment" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-_ownedComment.1">
              <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Semantics.Actions.CompleteActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
import fUML.Semantics.Loci.LociL2.*;&#xD;
</body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-_generalization.0" general="Semantics-Loci-LociL2-ExecutionFactoryL2" specific="Semantics-Loci-LociL3-ExecutionFactoryL3"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor" name="instantiateVisitor" specification="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor.1">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-element" name="element">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-element-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-element-_upperValue" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-ReturnResult-_lowerValue" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-ReturnResult-_upperValue" value="1"/>
              </ownedParameter>
              <language>Java</language>
              <body>// Instantiate a visitor object for the given element (at Conformance
// Level 3)

SemanticVisitor visitor = null;

if (element instanceof ConditionalNode) {
	visitor = new ConditionalNodeActivation();
}

else if (element instanceof LoopNode) {
	visitor = new LoopNodeActivation();
}

else if (element instanceof ExpansionRegion) {
	visitor = new ExpansionRegionActivation();
}

// Note: Since ConditionalNode, LoopNode and ExpansionRegion are
// subclasses of
// StructuredActivityNode, element must be tested against the three
// subclasses before
// the superclass
else if (element instanceof StructuredActivityNode) {
	visitor = new StructuredActivityNodeActivation();
}

else if (element instanceof ExpansionNode) {
	visitor = new ExpansionNodeActivation();
}

else if (element instanceof ReadExtentAction) {
	visitor = new ReadExtentActionActivation();
}

else if (element instanceof ReadIsClassifiedObjectAction) {
	visitor = new ReadIsClassifiedObjectActionActivation();
}

else if (element instanceof ReclassifyObjectAction) {
	visitor = new ReclassifyObjectActionActivation();
}

else if (element instanceof StartObjectBehaviorAction) {
	visitor = new StartObjectBehaviorActionActivation();
}

else if (element instanceof StartClassifierBehaviorAction) {
	visitor = new StartClassifierBehaviorActionActivation();
}

else if (element instanceof AcceptEventAction) {
	visitor = new AcceptEventActionActivation();
}

else if (element instanceof ReduceAction) {
	visitor = new ReduceActionActivation();
}

else {
	visitor = super.instantiateVisitor(element);
}

return visitor;

</body>
            </ownedBehavior>
            <ownedOperation xmi:type="uml:Operation" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor.1" name="instantiateVisitor" visibility="public" method="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor" class="Semantics-Loci-LociL3-ExecutionFactoryL3">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor.1-element" name="element">
                <type xmi:type="uml:Class" href="http://www.omg.org/spec/UML/20131001/UML.xmi#Element"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor.1-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </uml:Model>
</xmi:XMI>
