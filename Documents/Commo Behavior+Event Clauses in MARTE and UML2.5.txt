
A proposal for the Issue to be discussed 3:


3. Proposals shall discuss the relationship of the proposed precise semantics for UML state machines to the causality model defined for the UML Profile for MARTE.

The Causality Model defined in the UML Profile for MARTE (clauses 7.2.2 to 7.2.5 in OMG document formal/11-06-02) integrates the various mechanisms by which a behavior can be triggered upon the reception of an event occurrence. This model takes its semantics from UML 2.1 and explicitly declares conformance to Clause 13 of OMG document ptc/006-04-02, which at its time was the UML 2.1 draft in course of preparation.
The two key aspects in MARTE causality model are: the fact that a behavior occurs due to the existence of an event occurrence to which a time instant (or partial order) may be associated, and the need to indicate the active object (thread, concurrent unit, etc.) that will process the event occurrence in order to trigger the execution of a behavior. The causality model in MARTE treats behaviors in general, it makes no explicit distinction for state machines, though it states that the dispatching may be precisely described in the semantics of the high level or concurrency mechanisms used. The basic elements in this model are events, triggers and behaviors, plus the request to describe the communication of events among active elements. 
The level of detail at which the relevant semantic aspects are described in MARTE, allows this proposal to fix the semantics of state machines freely as far as it is possible to distinguish the   start and termination event occurrences associated to each behavior execution. Additionally, when a communication is needed among active elements, it must be possible to indicate the invocation occurrence and the receive occurrence in the concrete instances involved. 
In general terms it can be seen that the relationship of the precise semantics for UML state machines described in this proposal to the causality model in MARTE is conditioned by the evolution of UML since its version 2.1.






-----------------------------------------------------------------


















Notes on the comparison between the Common Behavior Clauses in MARTE (formal/11-06-2) and UML2.5 (formal/15-03-01)
(A Draft in preparation by the PSSM Submitters team – February-2016)


The objective of this review is to assess the conformance of the mechanisms to express causality in UML2.5 (and consistently in PSSM) with respect to the meta-model that sustain the semantics in MARTE. 
The Common Behavior Clause in MARTE (M) is part of its denominated Causality Model. This model integrates the various mechanisms by which a behavior can be triggered upon the reception of an event occurrence. This clause explicitly declares conformance to Clause 13 of OMG document ptc/006-04-02, which at its time was the UML 2.1 draft in course of preparation. This content is still present in Clause 13 of UML2.5 (U), though the way it is presented and organized has been improved in clarity, being the spirit in both specifications still the same. Then, not significant changes are expected in the underlying semantics for expressing and handling causality.
Both understand behavior as change over time and comprises three basic elements: Behaviors, Events and Triggers.
M focuses more on the triggering mechanisms, trying to determine the appropriate elements to do precise timing specifications and is organized using sub-clauses that describe the runtime context, the invocation, and the communication mechanisms.
U express the semantics of behaviors focusing on the architectural elements that are involved. Its relevant sub-clauses discuss behavior classifiers, opaque behaviors, parameters, and behavioral features. 
Here we do a review in search of potential semantic misalignments. The review will include the following concepts:
The declarative context.
The runtime context.
The triggering mechanisms, their timing, and partial order.
The modeling elements involved in the chain of interactions that cause the triggering (causality) and the events dispatching.
Composite/atomic behaviors.
The Classifier/Instance nature of all the elements involved (both: inside events and behaviors clauses)


TBC….

(I will need some more hours to work on these ones….)
