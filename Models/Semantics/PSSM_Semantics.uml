<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:css="http://www.eclipse.org/papyrus/infra/gmfdiag/css" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_dTbZAHVbEeSH_N3hAolMEw" name="PSSM_Semantics">
    <packageImport xmi:type="uml:PackageImport" xmi:id="_5xuoUJRCEeWAs5MYUhc8EQ">
      <importedPackage xmi:type="uml:Package" href="../Syntax/UML.uml#_0"/>
    </packageImport>
    <packageImport xmi:type="uml:PackageImport" xmi:id="_KMw3YJRDEeWAs5MYUhc8EQ">
      <importedPackage xmi:type="uml:Model" href="PSCS_Semantics.uml#_rP7eQNyJEeGru4CffneBug"/>
    </packageImport>
    <packageImport xmi:type="uml:PackageImport" xmi:id="_MxazMJRIEeWAs5MYUhc8EQ">
      <importedPackage xmi:type="uml:Model" href="fUML_Semantics.uml#_0"/>
    </packageImport>
    <packageImport xmi:type="uml:PackageImport" xmi:id="_e7k_gM59EeWF7I4YWspV6w">
      <importedPackage xmi:type="uml:Model" href="../Syntax/PSSM_Syntax.uml#_q6BcIMU1EeWXLLOylfwRMQ"/>
    </packageImport>
    <packageImport xmi:type="uml:PackageImport" xmi:id="_fR9fMM59EeWF7I4YWspV6w">
      <importedPackage xmi:type="uml:Model" href="../Syntax/fUML_Syntax_UML_2.5.uml#_IRDyIMU3EeWXLLOylfwRMQ"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_VU1pcHVpEeSRWcPi04czfg" name="Semantics">
      <packageImport xmi:type="uml:PackageImport" xmi:id="_XgRdQNLrEeWrx8x7RhrVAQ" importedPackage="_1LSecMOyEeWpYp0WmASFoQ"/>
      <packagedElement xmi:type="uml:Package" xmi:id="_4bWFIMNeEeWpYp0WmASFoQ" name="Values">
        <packageImport xmi:type="uml:PackageImport" xmi:id="_wVHkkM6FEeWF7I4YWspV6w">
          <importedPackage xmi:type="uml:Package" href="PSCS_Semantics.uml#_ddeK4OYUEeGYZqnbU6eCYw"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_eDACoM6GEeWF7I4YWspV6w">
          <importedPackage xmi:type="uml:Package" href="../Syntax/PSSM_Syntax.uml#_coJpQMVGEeWXLLOylfwRMQ"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_1TMWMM6HEeWF7I4YWspV6w">
          <importedPackage xmi:type="uml:Package" href="../Syntax/PSSM_Syntax.uml#_YR7acMVHEeWXLLOylfwRMQ"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_uIP7MM7DEeWF7I4YWspV6w">
          <importedPackage xmi:type="uml:Package" href="fUML_Semantics.uml#Semantics-CommonBehaviors"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_k_kTgM6DEeWF7I4YWspV6w">
          <importedPackage xmi:type="uml:Package" href="PSCS_Semantics.uml#_YlZoMN2OEeGnO-TF_1T_iQ"/>
        </packageImport>
        <packagedElement xmi:type="uml:Association" xmi:id="_Fxqp8HV-EeSvTf7EWD7QRA" name="A_context_opaqueExpressionEvaluation" memberEnd="_Fxqp8XV-EeSvTf7EWD7QRA _FxoNsHV-EeSvTf7EWD7QRA">
          <ownedEnd xmi:type="uml:Property" xmi:id="_Fxqp8XV-EeSvTf7EWD7QRA" name="opaqueExpressionEvaluation" type="_sb52MHVqEeS94falTMzzgw" association="_Fxqp8HV-EeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Fxqp8nV-EeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Fxqp83V-EeSvTf7EWD7QRA" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_sb52MHVqEeS94falTMzzgw" name="SM_OpaqueExpressionEvaluation">
          <generalization xmi:type="uml:Generalization" xmi:id="_nlrB4HV8EeSvTf7EWD7QRA">
            <general xmi:type="uml:Class" href="PSCS_Semantics.uml#_90nNMMEREeKkJbQgitQ3JQ"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_FxoNsHV-EeSvTf7EWD7QRA" name="context" association="_Fxqp8HV-EeSvTf7EWD7QRA">
            <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Object"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FxoNsXV-EeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FxoNsnV-EeSvTf7EWD7QRA" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7CPHIdQuEeW-v_063gYgPA" name="executeExpressionBehavior" specification="_7K4G4HV8EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7CPuMNQuEeW-v_063gYgPA" name="result" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Value"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7CPuMdQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7CPuMtQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// An opaque expression can have an associated behavior. If this is the case
// this behavior is executed. Values produced by the execution of the behavior
// are the result of the evaluation of the opaque expression 
List&lt;Value> evaluation = new ArrayList&lt;Value>();
OpaqueExpression expression = (OpaqueExpression)this.specification;
Behavior behavior = expression.getBehavior();
if(behavior != null) {
	List&lt;ParameterValue> inputs = new ArrayList&lt;ParameterValue>();
	List&lt;ParameterValue> results = this.locus.executor.execute(behavior, context, inputs);
	for(int i = 0; i &lt; results.size(); i++) { // results.size should be 1
		ParameterValue parameterValue = results.get(i);
		List&lt;Value> values = parameterValue.values;
		for(int j = 0; j &lt; values.size(); j++) {
			evaluation.add(values.get(j));
		}
	}
}
return evaluation;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7K4G4HV8EeSvTf7EWD7QRA" name="executeExpressionBehavior" method="_7CPHIdQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7K4G4XV8EeSvTf7EWD7QRA" name="result" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Value"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7K4G4nV8EeSvTf7EWD7QRA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7K4G43V8EeSvTf7EWD7QRA" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DOXNEMOyEeWpYp0WmASFoQ" name="StructuredClassifiers">
        <packageImport xmi:type="uml:PackageImport" xmi:id="_6BEXYM6DEeWF7I4YWspV6w">
          <importedPackage xmi:type="uml:Package" href="../Syntax/fUML_Syntax_UML_2.5.uml#_1J2bQMU3EeWXLLOylfwRMQ"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_55Bj8M6qEeWF7I4YWspV6w" importedPackage="_4bWFIMNeEeWpYp0WmASFoQ"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_jl2UoJRFEeWAs5MYUhc8EQ" name="SM_Object">
          <generalization xmi:type="uml:Generalization" xmi:id="_o_YIoJRGEeWAs5MYUhc8EQ">
            <general xmi:type="uml:Class" href="PSCS_Semantics.uml#_wUwzPd2JEeGnO-TF_1T_iQ"/>
          </generalization>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0h3xcNQuEeWMJphss3BZSg" name="startBehavior" specification="_nxIHYMDpEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0h4YgNQuEeWMJphss3BZSg" name="classifier">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0h4YgdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0h4YgtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0h4Yg9QuEeWMJphss3BZSg" name="inputs">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-ParameterValue"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0h4YhNQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0h4YhdQuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The behavior captured here is almost identical to the one provide by Object_.
// Instead of using a simple ObjectActivation we use a StateMachineObjectActivation.
// This specialized kind of ObjectActivation allows the registering of completion events.
if (this.objectActivation == null) {
	this.objectActivation = new SM_ObjectActivation();
	this.objectActivation.object = this;
}
this.objectActivation.startBehavior(classifier, inputs);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0h-fINQuEeWMJphss3BZSg" name="destroy" specification="_w3LF4MDpEeWpevkdGfdnMA">
            <language>Java</language>
            <body>// In addition to realize the normal process of stopping the object activation
// as well as removing the current object from the locus, this destruction phase
// also implies removal of all events remaining in the pool. This prevents the
// dispatch loop to actually get the next event (even if at this step there is no
// chance to match an accepter) whereas the current object is not anymore registered.
// in the Locus.
if(this.objectActivation!=null){
	this.objectActivation.eventPool.clear();
}
super.destroy();
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_nxIHYMDpEeWpevkdGfdnMA" name="startBehavior" visibility="public" method="_0h3xcNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_nxIHYcDpEeWpevkdGfdnMA" name="classifier" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nxIHYsDpEeWpevkdGfdnMA"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_nxIHY8DpEeWpevkdGfdnMA" name="inputs" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-ParameterValue"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nxIHZMDpEeWpevkdGfdnMA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nxIHZcDpEeWpevkdGfdnMA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_w3LF4MDpEeWpevkdGfdnMA" name="destroy" visibility="public" method="_0h-fINQuEeWMJphss3BZSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_JC02kFgREeaqSKm88dX50g" name="SM_RedefinitionBasedDispatchedStrategy">
          <generalization xmi:type="uml:Generalization" xmi:id="_6fEcwFgREeaqSKm88dX50g">
            <general xmi:type="uml:Class" href="PSCS_Semantics.uml#_wUwL2N2JEeGnO-TF_1T_iQ"/>
          </generalization>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-jy2cFgREeaqSKm88dX50g" name="getMethod">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-jy2cVgREeaqSKm88dX50g" name="ReturnResult" direction="return">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-jy2clgREeaqSKm88dX50g" name="object">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Object"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-jy2c1gREeaqSKm88dX50g" name="operation">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-jzdgFgREeaqSKm88dX50g" name="operationsMatch">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-jzdgVgREeaqSKm88dX50g" name="ReturnResult" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-jzdglgREeaqSKm88dX50g" name="ownedOperation">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-jzdg1gREeaqSKm88dX50g" name="baseOperation">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_1LSecMOyEeWpYp0WmASFoQ" name="CommonBehavior">
        <packageImport xmi:type="uml:PackageImport" xmi:id="_304-cM6pEeWF7I4YWspV6w" importedPackage="_2wgcEHV2EeSvTf7EWD7QRA"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_3uF9cM6qEeWF7I4YWspV6w" importedPackage="_DOXNEMOyEeWpYp0WmASFoQ"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_02bFgMDwEeWiyPv18KZ0lg" name="SM_ObjectActivation" isActive="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_QSn78MDxEeWiyPv18KZ0lg">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-ObjectActivation"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_7QjUING2EeWMvYElZ5Ee4w" name="deferredEventPool" type="_VpelING2EeWMvYElZ5Ee4w" association="_7PTW8NG2EeWMvYElZ5Ee4w">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EUFxMNG3EeWMvYElZ5Ee4w"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EUQwUNG3EeWMvYElZ5Ee4w" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iO90NQuEeWMJphss3BZSg" name="registerCompletionEvent">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0iO90dQuEeWMJphss3BZSg" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0iO90tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0iO909QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A completion event does not have priority over other completion events.
// Therefore if completion events are already in the event pool then the currently
// posted completion event will be placed after these latter. In short the FIFO strategy
// is applied to completion events.
CompletionEventOccurrence completionEventOccurrence = new CompletionEventOccurrence();
completionEventOccurrence.stateActivation = stateActivation;
int insertionIndex = 0;
boolean insertionPointFound = false;
while(!insertionPointFound &amp;&amp; insertionIndex &lt; this.eventPool.size()){
	insertionPointFound = !(this.eventPool.get(insertionIndex) instanceof CompletionEventOccurrence);
	if(!insertionPointFound){
		insertionIndex++;
	}
}
this.eventPool.add(insertionIndex, completionEventOccurrence);
this._send(new ArrivalSignal());
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_VjLesFiTEeaqSKm88dX50g" name="getNextCompletionEvent">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_l-kTEFiTEeaqSKm88dX50g" type="_tryQkJRKEeWAs5MYUhc8EQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_m4jPEFiTEeaqSKm88dX50g" name="getDeferredEventInsertionIndex" visibility="protected">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_xDs0cFiTEeaqSKm88dX50g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_zHIr0FiTEeaqSKm88dX50g" name="registerCompletionEvent">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_IPY38FiUEeaqSKm88dX50g" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_JuvK0FiUEeaqSKm88dX50g" name="releaseDeferredEvents">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_RoyQQFiUEeaqSKm88dX50g" name="deferringState" type="_rVacUHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_VdaYcFiUEeaqSKm88dX50g" name="registerDeferredEvent">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_gys1sFiUEeaqSKm88dX50g" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_l2BloFiUEeaqSKm88dX50g" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_P8GPgFiVEeaqSKm88dX50g" name="getNextEvent">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_TdLJkFiVEeaqSKm88dX50g" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_7PTW8NG2EeWMvYElZ5Ee4w" name="A_objectActivation_deferredEventPool" memberEnd="_7QjUING2EeWMvYElZ5Ee4w _7QjUIdG2EeWMvYElZ5Ee4w">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_7QNV4NG2EeWMvYElZ5Ee4w" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_7QNV4dG2EeWMvYElZ5Ee4w" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_7QjUIdG2EeWMvYElZ5Ee4w" name="objectActivation" type="_02bFgMDwEeWiyPv18KZ0lg" association="_7PTW8NG2EeWMvYElZ5Ee4w"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_TLuMQFpNEeaMpZSzvy8A5Q" name="EventTriggeredExecution">
          <generalization xmi:type="uml:Generalization" xmi:id="_x-HicFpNEeaMpZSzvy8A5Q">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_sPZsIFpNEeaMpZSzvy8A5Q" name="wrappedExecution" association="_sPZFEFpNEeaMpZSzvy8A5Q">
            <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_1Bnvs1pNEeaMpZSzvy8A5Q" name="triggeringEventOccurrence" association="_1BnvsFpNEeaMpZSzvy8A5Q">
            <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          </ownedAttribute>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Dh0pwFpOEeaMpZSzvy8A5Q" name="finalize"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-nBjsFpNEeaMpZSzvy8A5Q" name="execute">
            <ownedComment xmi:type="uml:Comment" xmi:id="_-nBjsVpNEeaMpZSzvy8A5Q" annotatedElement="_-nBjsFpNEeaMpZSzvy8A5Q">
              <body>Execute the behavior given by the type of this execution. &#xD;
The parameterValues for any input (in or in-out) parameters of the behavior should be set before the execution.&#xD;
The parameteValues for any output (in-out, out or return) parameters of the behavior will be set by the execution.&#xD;
</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_DJlI4FpOEeaMpZSzvy8A5Q" name="initialize"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-nAVkFpNEeaMpZSzvy8A5Q" name="copy">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-nAVkVpNEeaMpZSzvy8A5Q" name="ReturnResult" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Value"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-nDY4FpNEeaMpZSzvy8A5Q" name="new_">
            <ownedComment xmi:type="uml:Comment" xmi:id="_-nDY4VpNEeaMpZSzvy8A5Q" annotatedElement="_-nDY4FpNEeaMpZSzvy8A5Q">
              <body>Create a new execution with no behavior or parameterValues.&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-nDY4lpNEeaMpZSzvy8A5Q" name="ReturnResult" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Value"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_sPZFEFpNEeaMpZSzvy8A5Q" memberEnd="_sPZsIFpNEeaMpZSzvy8A5Q _sPZsIVpNEeaMpZSzvy8A5Q">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_sPZFEVpNEeaMpZSzvy8A5Q" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_sPZFElpNEeaMpZSzvy8A5Q" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_sPZsIVpNEeaMpZSzvy8A5Q" name="eventtriggeredexecution" type="_TLuMQFpNEeaMpZSzvy8A5Q" association="_sPZFEFpNEeaMpZSzvy8A5Q"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_1BnvsFpNEeaMpZSzvy8A5Q" memberEnd="_1Bnvs1pNEeaMpZSzvy8A5Q _1BnvtFpNEeaMpZSzvy8A5Q">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_1BnvsVpNEeaMpZSzvy8A5Q" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_1BnvslpNEeaMpZSzvy8A5Q" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_1BnvtFpNEeaMpZSzvy8A5Q" name="eventtriggeredexecution" type="_TLuMQFpNEeaMpZSzvy8A5Q" association="_1BnvsFpNEeaMpZSzvy8A5Q"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_2wgcEHV2EeSvTf7EWD7QRA" name="StateMachines">
        <packageImport xmi:type="uml:PackageImport" xmi:id="_xHjuUM6qEeWF7I4YWspV6w">
          <importedPackage xmi:type="uml:Package" href="../Syntax/PSSM_Syntax.uml#_MULkIMVJEeWXLLOylfwRMQ"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_2Jf-MM6qEeWF7I4YWspV6w">
          <importedPackage xmi:type="uml:Package" href="../Syntax/PSSM_Syntax.uml#_Q_2pEMVJEeWXLLOylfwRMQ"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_7Px7gM6qEeWF7I4YWspV6w" importedPackage="_VU1pcHVpEeSRWcPi04czfg"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_8u0sYM6qEeWF7I4YWspV6w" importedPackage="_LFUAwHVxEeSfVojhNHzNrw"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_MDHHEM6xEeWF7I4YWspV6w" importedPackage="_1LSecMOyEeWpYp0WmASFoQ"/>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_gQp8gNLlEeWrx8x7RhrVAQ">
          <importedPackage xmi:type="uml:Package" href="fUML_Semantics.uml#Semantics-Loci"/>
        </packageImport>
        <packagedElement xmi:type="uml:Class" xmi:id="_mUrtYHV3EeSvTf7EWD7QRA" name="RegionActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_sHYxMHWKEeSvTf7EWD7QRA" general="_yWknYHV2EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_jm_S4HWJEeSvTf7EWD7QRA" name="transitionActivations" visibility="protected" type="_vJ5akHV3EeSvTf7EWD7QRA" aggregation="composite" association="_jnAhAHWJEeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jm_S4XWJEeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jm_S4nWJEeSvTf7EWD7QRA" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_BbHIoJRQEeWAs5MYUhc8EQ" name="isCompleted">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_irabcHWJEeSvTf7EWD7QRA" name="vertexActivations" visibility="protected" type="_z0JjMHV3EeSvTf7EWD7QRA" aggregation="composite" association="_ircQoHWJEeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_irabcXWJEeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_irabcnWJEeSvTf7EWD7QRA" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_6Gr7Qli8EeaMpZSzvy8A5Q" name="history" type="_rVacUHV3EeSvTf7EWD7QRA" association="_6GrUMFi8EeaMpZSzvy8A5Q"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iYHwNQuEeWMJphss3BZSg" name="activate" specification="_WzhK8HWKEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// Create visitors for all vertices owned by the region
Locus locus = this.getExecutionLocus();
VertexActivation activation = null;
Region region = (Region)this.getNode();
for(Vertex vertex : region.getSubvertices()){
	activation = (VertexActivation)locus.factory.instantiateVisitor(vertex);
	activation.setParent(this);
	activation.setNode(vertex);
	activation.activate();
	this.vertexActivations.add(activation);
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iYHwdQuEeWMJphss3BZSg" name="activateTransitions" specification="_ycOHAPiJEeSlpJn94rgDzA">
            <language>Java</language>
            <body>Region region = (Region)this.getNode();
VertexActivation sourceActivation = null;
VertexActivation targetActivation = null;
TransitionActivation transitionActivation = null;
StateMachineExecution context = (StateMachineExecution)this.getStateMachineExecution();
for(Transition transition : region.getTransitions()){
	sourceActivation = context.getVertexActivation(transition.getSource());
	targetActivation = context.getVertexActivation(transition.getTarget());
	transitionActivation = (TransitionActivation) context.locus.factory.instantiateVisitor(transition);
	transitionActivation.setNode(transition);
	transitionActivation.setParent(this);
	transitionActivation.setSourceActivation(sourceActivation);
	transitionActivation.setTargetActivation(targetActivation);
	this.transitionActivations.add(transitionActivation);
	sourceActivation.addOutgoingTransition(transitionActivation);
	targetActivation.addIncomingTransition(transitionActivation);
}
for(VertexActivation activation: this.getVertexActivations()){
	activation.activateTransitions();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iYu0NQuEeWMJphss3BZSg" name="getVertexActivation" specification="_F8a1gHWLEeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0iYu0dQuEeWMJphss3BZSg" name="vertex">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Vertex"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0iYu0tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0iYu09QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0iYu1NQuEeWMJphss3BZSg" name="result" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0iYu1dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0iYu1tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>int i = 0;
VertexActivation activation = null;
/*1. Same level search*/
while(activation==null &amp;&amp; i &lt; this.vertexActivations.size()){
	if(vertex==this.vertexActivations.get(i).getNode()){
		activation = this.vertexActivations.get(i);
	}
	i++;
}
/*2. Do a descending search*/
i = 0;
while(activation==null &amp;&amp; i &lt; this.vertexActivations.size()){
	if(vertex==this.vertexActivations.get(i).getNode()){
		activation = this.vertexActivations.get(i);
	}else{
		activation = this.vertexActivations.get(i).getVertexActivation(vertex);
	}
	i++;
}
return activation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iZ88NQuEeWMJphss3BZSg" name="enter" specification="_jmWfYJRPEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0iZ88dQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0iZ88tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0iZ889QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// An implicit entry of a region means the initial transition is searched.
// If such transition exists then it is fired. An explicit entry as no impact on the region.
// In case the region is entered implicitly a initial pseudo state shall be found to
// start its execution. If no such pseudo-state is found and the state containing
// the region has no other region(s) then the state is treated as a simple leaf state
int i = 0; 
VertexActivation initialNodeActivation = null;
while(initialNodeActivation==null &amp;&amp; i &lt; this.vertexActivations.size()){
	if(this.vertexActivations.get(i) instanceof InitialPseudostateActivation){
		initialNodeActivation = this.vertexActivations.get(i);
	}else{
		i++;
	}
}
if(initialNodeActivation!=null){
	for(TransitionActivation transitionActivation : initialNodeActivation.getOutgoingTransitions()){
		transitionActivation.fire();
	}
}else{
	SemanticVisitor parent = this.getParent();
	if(parent != null &amp;&amp; parent instanceof StateActivation){
		StateActivation parentState = (StateActivation) parent; 
		parentState.regionActivation.remove(this);
		if(parentState.hasCompleted()){
			parentState.notifyCompletion();
		}
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iakANQuEeWMJphss3BZSg" name="exit" specification="_0diegPiJEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0iakAdQuEeWMJphss3BZSg" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0iakAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0iakA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Exiting a region implies exiting all of is active vertices.
for(VertexActivation vertexActivation: this.getVertexActivations()){
	if(vertexActivation.isActive()){
		vertexActivation.exit(exitingTransition, null);
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0iakBNQuEeWMJphss3BZSg" name="terminate" specification="_5QK6sMD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// Capture the semantics related to the termination of a region. Regions typically
// gets terminated when the state-machine which contains it is gets itself terminated.
for(int i=0; i &lt; this.vertexActivations.size(); i++){
	this.vertexActivations.get(i).terminate();
}
this.vertexActivations.clear();
this.transitionActivations.clear();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7C3ZQNQuEeW-v_063gYgPA" name="getVertexActivations" specification="_29IGYPiJEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7C3ZQdQuEeW-v_063gYgPA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7C3ZQtQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7C3ZQ9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return vertexActivations;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7C4AUNQuEeW-v_063gYgPA" name="getTransitionActivations" specification="__NCHEPiJEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7C4AUdQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7C4AUtQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7C4AU9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return transitionActivations;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_WzhK8HWKEeSvTf7EWD7QRA" name="activate" method="_0iYHwNQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_5QK6sMD1EeWiyPv18KZ0lg" name="terminate" method="_0iakBNQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ycOHAPiJEeSlpJn94rgDzA" name="activateTransitions" method="_0iYHwdQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_k9ABMFi7EeaMpZSzvy8A5Q" name="getOrigin">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_qNHP8Fi7EeaMpZSzvy8A5Q" type="_a8oQAHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_0nI-0Fi7EeaMpZSzvy8A5Q" name="isVisitorFor">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0nI-0Vi7EeaMpZSzvy8A5Q" name="node">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0nI-0li7EeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_29IGYPiJEeSlpJn94rgDzA" name="getVertexActivations" method="_7C3ZQNQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GnBzcPiKEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_H4rBgPiKEeSlpJn94rgDzA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_H4sPoPiKEeSlpJn94rgDzA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="__NCHEPiJEeSlpJn94rgDzA" name="getTransitionActivations" method="_7C4AUNQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_LAZncPiKEeSlpJn94rgDzA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MS-CkPiKEeSlpJn94rgDzA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MS_QsPiKEeSlpJn94rgDzA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_F8a1gHWLEeSvTf7EWD7QRA" name="getVertexActivation" visibility="protected" method="_0iYu0NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_PQQ_cHWLEeSvTf7EWD7QRA" name="vertex">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Vertex"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_a0ScQHWLEeSvTf7EWD7QRA" name="result" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_xcdykFi7EeaMpZSzvy8A5Q" name="isRedefined">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bm-3kFi8EeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bnCh8Fi8EeaMpZSzvy8A5Q" name="vertices">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Vertex"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_bnCh8Vi8EeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_bnCh8li8EeaMpZSzvy8A5Q" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bnAswFi8EeaMpZSzvy8A5Q" name="vertex">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Vertex"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_xBj_QFi7EeaMpZSzvy8A5Q" name="isRedefined">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_8s5lAFi7EeaMpZSzvy8A5Q" name="transitions">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Transition"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FuIU8Fi8EeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FuKxMFi8EeaMpZSzvy8A5Q" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_VlZIkFi8EeaMpZSzvy8A5Q" name="transition">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Transition"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Xsh0MFi8EeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_jmWfYJRPEeWAs5MYUhc8EQ" name="enter" visibility="protected" method="_0iZ88NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_uRX3oJRPEeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_J9BzwFi7EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_0diegPiJEeSlpJn94rgDzA" name="exit" method="_0iakANQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_p-Tf8JRPEeWAs5MYUhc8EQ" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Lq8uIFi7EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_meEAwFi6EeaMpZSzvy8A5Q" name="canPropagateExecution">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-cGuQFi6EeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7yrN4Fi6EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_EFO58Fi7EeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rVacUHV3EeSvTf7EWD7QRA" name="StateActivation" visibility="public">
          <generalization xmi:type="uml:Generalization" xmi:id="_4Qu_0HYSEeSvTf7EWD7QRA" general="_z0JjMHV3EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_uXNSAPlQEeSDPZmHIzgmig" name="connectionPointActivations" type="_CDaHsKlAEeSY3-SNA3r3jg" aggregation="composite" association="_uXOgIPlQEeSDPZmHIzgmig">
            <ownedComment xmi:type="uml:Comment" xmi:id="_lrgisM9jEeWYevbRTGHfwg">
              <body></body>
            </ownedComment>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uXNSAflQEeSDPZmHIzgmig"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uXNSAvlQEeSDPZmHIzgmig" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_MzNhcPlREeSDPZmHIzgmig" name="regionActivations" type="_mUrtYHV3EeSvTf7EWD7QRA" aggregation="composite" association="_MzNhc_lREeSDPZmHIzgmig">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MzNhcflREeSDPZmHIzgmig"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MzNhcvlREeSDPZmHIzgmig" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="__-uNsJRQEeWAs5MYUhc8EQ" name="isDoActivityCompleted">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_AfYDsJRREeWAs5MYUhc8EQ" name="isEntryCompleted">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_A1jIAJRREeWAs5MYUhc8EQ" name="isExitCompleted">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_BRoQscDrEeWpevkdGfdnMA" name="doActivityContextObject" type="_EF92AMDqEeWpevkdGfdnMA" association="_BRefsMDrEeWpevkdGfdnMA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nwiQgMNlEeWpYp0WmASFoQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nwl64MNlEeWpYp0WmASFoQ" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_OWl-oNG8EeWB0O9YzCwUNg" association="_OWjiYNG8EeWB0O9YzCwUNg">
            <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lK9ENQuEeWMJphss3BZSg" name="hasCompleted" specification="_on9GIJRREeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lK9EdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lK9EtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lK9E9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A state can only be considered as being completed under the following circumstances
// 1 - If the state is simple, both its entry and doActivity have finished their execution
// 2 - If the state is composite, the same rules than used for the simple state, but additionally
//     all the region of the state must have completed by reaching their final states
// When the operation returns true then the generation of a completion event is allowed
// for that particular state
boolean stateCompleted = this.isEntryCompleted &amp; this.isDoActivityCompleted;
int i = 0;
while(stateCompleted &amp;&amp; i &lt; this.regionActivation.size()){
	stateCompleted = stateCompleted &amp;&amp; this.regionActivation.get(i).isCompleted; 
	i = i + 1;
}
return stateCompleted;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lLkINQuEeWMJphss3BZSg" name="notifyCompletion" specification="_uT-00JRREeWAs5MYUhc8EQ">
            <language>Java</language>
            <body>// The notification of a completion event consists in sending in the execution
// context of the state-machine a completion event occurrence. This event is
// placed in the pool before any other event
Object_ context = this.getExecutionContext();
((SM_ObjectActivation)context.objectActivation).registerCompletionEvent(this);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lMLMNQuEeWMJphss3BZSg" name="getConnectionPointActivation" specification="_p3E5QPlREeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lMLMdQuEeWMJphss3BZSg" type="_CDaHsKlAEeSY3-SNA3r3jg" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lMLMtQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lMLM9QuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>ConnectionPointActivation activation = null;
int i = 0;
while(i &lt; this.connectionPointActivation.size() &amp;&amp; activation==null){
	if(this.connectionPointActivation.get(i).getNode()==vertex){
		activation = this.connectionPointActivation.get(i);
	}
	i++;
}
return activation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lMyQNQuEeWMJphss3BZSg" name="getVertexActivation" specification="_U2jA0MD2EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lMyQdQuEeWMJphss3BZSg" name="vertex">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Vertex"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lMyQtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lMyQ9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lMyRNQuEeWMJphss3BZSg" name="" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lMyRdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lMyRtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>VertexActivation vertexActivation = null;
State state = (State) this.getNode();
if(state.isComposite()){
	vertexActivation = this.getConnectionPointActivation(vertex);
	if(vertexActivation==null){
		int i = 0;
		while(i &lt; this.regionActivation.size() &amp;&amp; vertexActivation==null){
			vertexActivation = this.regionActivation.get(i).getVertexActivation(vertex);
			i++;
		}
	}
}
return vertexActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lNZUNQuEeWMJphss3BZSg" name="activate" specification="_DZfc8HYTEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// Instantiate visitors for all vertices owned by this region 
State state = (State) this.getNode();
if(state.isComposite()){
	Object_ context = this.getExecutionContext();
	for(Pseudostate connectionPoint : state.getConnectionPoints()){
		ConnectionPointActivation activation = (ConnectionPointActivation)context.locus.factory.instantiateVisitor(connectionPoint);
		activation.setParent(this);
		activation.setNode(connectionPoint);
		this.connectionPointActivation.add(activation);
	}
	for(Region region: state.getRegions()){
		RegionActivation activation = (RegionActivation) context.locus.factory.instantiateVisitor(region);
		activation.setParent(this);
		activation.setNode(region);
		activation.activate();
		this.regionActivation.add(activation);
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lNZUdQuEeWMJphss3BZSg" name="activateTransitions" specification="_jAhRIPlREeSDPZmHIzgmig">
            <language>Java</language>
            <body>// Instantiate visitor for transitions owned by this region
State state = (State) this.getNode();
if(state.isComposite()){
	for(RegionActivation activation : this.regionActivation){
		activation.activateTransitions();
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lNZUtQuEeWMJphss3BZSg" name="tryExecuteEntry" specification="_6cP1IHYSEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// If an entry behavior is specified for that state then it is executed
State state = (State) this.getNode();
if(!this.isEntryCompleted){
	Execution execution = this.getExecutionFor(state.getEntry());
	if(execution!=null){
		execution.execute();
		this.isEntryCompleted = true;
	}
	// If state has completed then generate a completion event
	if(this.hasCompleted()){
		this.notifyCompletion();
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lOAYNQuEeWMJphss3BZSg" name="tryExecuteExit" specification="_-A0IEHYSEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// Execute the exit behavior if any
State state = (State) this.getNode();
Execution execution = this.getExecutionFor(state.getExit());
if(execution!=null){
	execution.execute();
}
super.exit(null,null);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lOAYdQuEeWMJphss3BZSg" name="enterRegions" specification="_bAzT8JRREeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lOAYtQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lOAY9QuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lOAZNQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Regions can be entered either implicitly or explicitly. 
// A region is typically entered implicitly when its activation is triggered
// by a transition terminating on the edge of its containing state.
// A region is typically entered explicitly when one of its contained
// state is targeted by a transition coming from the outside.
// *** Regions are entered concurrently ***
List&lt;Vertex> targetedVertices = new ArrayList&lt;Vertex>();
VertexActivation sourceActivation = enteringTransition.getSourceActivation();
if(sourceActivation instanceof ForkPseudostateActivation){
	Pseudostate fork = (Pseudostate)sourceActivation.getNode(); 
	for(int i = 0; i &lt; fork.getOutgoings().size(); i++){
		targetedVertices.add(fork.getOutgoings().get(i).getTarget());
	}
}else{
	VertexActivation targetActivation = enteringTransition.getTargetActivation();
	if(targetActivation instanceof EntryPointActivation){
		Pseudostate entryPoint = (Pseudostate)targetActivation.getNode();
		for(int i = 0; i &lt; entryPoint.getOutgoings().size(); i++){
			targetedVertices.add(entryPoint.getOutgoings().get(i).getTarget());
		}
	}else{
		targetedVertices.add((Vertex)targetActivation.getNode());
	}
}		
for(int i=0; i &lt; this.regionActivation.size(); i++){
	RegionActivation regionActivation = this.regionActivation.get(i);
	int j = 0;
	boolean found = false;
	while(j &lt; targetedVertices.size() &amp;&amp; !found){
		found = regionActivation.getVertexActivation(targetedVertices.get(j)) != null;
		j++;
	}
	if(!found){
		regionActivation.enter(enteringTransition);
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lPOgNQuEeWMJphss3BZSg" name="isEnterable" specification="_7iS44MD2EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lPOgdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lPOgtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lPOg9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lPOhNQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lPOhdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lPOhtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A state can only be entered if it is not part of the state-machine configuration
// (i.e., the state is not currently active)
return !((StateMachineExecution)this.getStateMachineExecution()).getConfiguration().isActive(this);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lP1kNQuEeWMJphss3BZSg" name="enter" specification="_VtCUQJRREeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lP1kdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lP1ktQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lP1k9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lP1lNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lP1ldQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lP1ltQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>if(this.status.equals(StateMetadata.IDLE)){
	// The state is entered via an explicit transition
	// The impact on the execution is that the parent state
	// of the current state is not active then it must be entered
	// the rule applies recursively
	if(leastCommonAncestor!=null){
		RegionActivation parentRegionActivation = (RegionActivation) this.getParent();
		if(leastCommonAncestor!=parentRegionActivation){
			StateActivation stateActivation = (StateActivation) parentRegionActivation.getParent();
			if(stateActivation!=null){
				stateActivation.enter(enteringTransition, leastCommonAncestor);
			}
		}
	}
	// Initialization
	State state = (State) this.getNode();
	super.enter(enteringTransition, leastCommonAncestor);
	this.isEntryCompleted = state.getEntry()==null;
	this.isDoActivityCompleted = state.getDoActivity()==null;
	this.isExitCompleted = state.getExit()==null;
	// When the state is entered it is registered in the current
	// state-machine configuration
	StateMachineExecution smExecution = (StateMachineExecution)this.getStateMachineExecution();
	smExecution.getConfiguration().register(this);
	// If state has completed then generate a completion event*/
	if(this.hasCompleted()){
		this.notifyCompletion();
	}else{
		// Execute the entry behavior if any
		this.tryExecuteEntry();
		// Invoke the doActivity if any
		this.tryInvokeDoActivity();
		// If the state is not completed, then try to start its owned regions.
		// A region is entered implicitly since the is not the 
		this.enterRegions(enteringTransition);
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lQcoNQuEeWMJphss3BZSg" name="isExitable" specification="_7iVVIMD2EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lQcodQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lQcotQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lQco9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lQcpNQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lQcpdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lQcptQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A state can only be be exited if it is part of the state-machine configuration
// (i.e., the state is currently active)
return !this.isEnterable(exitingTransition);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lRDsNQuEeWMJphss3BZSg" name="exit" specification="_hWttIJRREeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lRDsdQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lRDstQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lRDs9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lRDtNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lRDtdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lRDttQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// If we exit a composite state, this provokes the termination of all of its regions 
if(!this.regionActivation.isEmpty()){
	for(RegionActivation regionActivation : this.regionActivation){
		regionActivation.exit(exitingTransition);
	}
}
// If there is a doActivity currently executing then it is aborted
if(!this.isDoActivityCompleted){
	this.doActivityContextObject.destroy();
	this.doActivityContextObject = null;
}
// If there is an exit behavior specified for the state it is executed
if(!this.isExitCompleted){
	this.tryExecuteExit();
}
super.exit(exitingTransition, leastCommonAncestor);
// When the state is exited then it is removed from the state-machine configuration
StateMachineExecution smExecution = (StateMachineExecution)this.getStateMachineExecution();
smExecution.getConfiguration().unregister(this);
// Re-initialize the boolean flags
this.isEntryCompleted = false;
this.isDoActivityCompleted = false;
this.isExitCompleted = false;
// The state is exited by a transition that targets a state which is located within 
// another region. This means parent state must also be exited.  
if(leastCommonAncestor!=null){
	RegionActivation parentRegionActivation = (RegionActivation) this.getParent();
	if(leastCommonAncestor!=parentRegionActivation){
		StateActivation stateActivation = (StateActivation) parentRegionActivation.getParent();
		if(stateActivation!=null){
			stateActivation.exit(exitingTransition, leastCommonAncestor);
		}
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lSR0NQuEeWMJphss3BZSg" name="canDefer" specification="_DRNfQNG0EeWMvYElZ5Ee4w">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lSR0dQuEeWMJphss3BZSg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lSR0tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lSR09QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lSR1NQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lSR1dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lSR1tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return true if current state activation is capable of deferring the given
// event occurrence; false otherwise. Note that false is returned in case where
// the deferring constraint is overridden by an outgoing transition
// 
// Note: for the moment the evaluation is done with the assumption that the
// received event occurrence is a signal event occurrence. This will change
// as soon as other kind of event (e.g. call event) will be supported in fUML.
boolean deferred = false;
int i = 0;
while(!deferred &amp;&amp; i &lt; ((State) this.node).getDeferrableTriggers().size()){
	Trigger trigger = ((State) this.node).getDeferrableTriggers().get(i);
	if(eventOccurrence instanceof SignalEventOccurrence
			&amp;&amp; trigger.getEvent() instanceof SignalEvent){
		SignalInstance signalInstance = ((SignalEventOccurrence)eventOccurrence).signalInstance;
		SignalEvent signalEvent = (SignalEvent) trigger.getEvent();
		deferred = signalInstance.type == signalEvent.getSignal();
		if(deferred &amp;&amp; !trigger.getPorts().isEmpty() 
				&amp;&amp; signalInstance instanceof CS_SignalInstance){
			int j = 0;
			Port matchingPort = null;
			while(matchingPort==null &amp;&amp; j &lt; trigger.getPorts().size()){
				Port currentPort = trigger.getPorts().get(j);
				if(((CS_SignalInstance)signalInstance).interactionPoint.definingPort==currentPort){
					matchingPort = currentPort;
				}
				j++;
			}
			if(matchingPort==null){
				deferred = false;
			}
		}
	}
	i++;
}
if(deferred){
	i = 0;
	TransitionActivation overridingTransitionActivation = null;
	while(overridingTransitionActivation == null &amp;&amp; i &lt; this.outgoingTransitionActivations.size()){
		TransitionActivation currentTransitionActivation = this.outgoingTransitionActivations.get(i);
		if(currentTransitionActivation.canFireOn(eventOccurrence)){
			overridingTransitionActivation = currentTransitionActivation;
		}
		i++;
	}
	deferred = overridingTransitionActivation == null;
}
return deferred;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lS44NQuEeWMJphss3BZSg" name="defer" specification="_PL6WsNG0EeWMvYElZ5Ee4w">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lS44dQuEeWMJphss3BZSg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lS44tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lS449QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Postpone the time at which this event occurrence will be available at the event pool.
// The given event occurrence is placed in the deferred event pool and will be released
// only when the current state activation will leave the state-machine configuration.
SM_ObjectActivation objectActivation = (SM_ObjectActivation) this.getExecutionContext().objectActivation;
DeferredEventOccurrence deferredEventOccurrence = new DeferredEventOccurrence();
deferredEventOccurrence.constrainingStateActivation = this;
deferredEventOccurrence.deferredEventOccurrence = eventOccurrence;
objectActivation.deferredEventPool.add(deferredEventOccurrence);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lS45NQuEeWMJphss3BZSg" name="releaseDeferredEvents" specification="_i8Y3kNG0EeWMvYElZ5Ee4w">
            <language>Java</language>
            <body>// If events have been deferred by that state then following set of action takes place:
// 1 - The events return to the event pool owned by the object activation
// 2 - The events are removed from the deferred event pool
// Note: The release of events deferred by that state occurs when this latter
// leaves the state-machine configuration.
SM_ObjectActivation objectActivation = (SM_ObjectActivation) this.getExecutionContext().objectActivation;
List&lt;DeferredEventOccurrence> releasedDeferredEvent = new ArrayList&lt;DeferredEventOccurrence>();
for(int i=0; i &lt; objectActivation.deferredEventPool.size(); i++){
	DeferredEventOccurrence eventOccurrence = objectActivation.deferredEventPool.get(i);
	if(eventOccurrence.constrainingStateActivation == this){
		releasedDeferredEvent.add(eventOccurrence);
		objectActivation.eventPool.add(eventOccurrence.deferredEventOccurrence);
		objectActivation._send(new ArrivalSignal());
	}
}
objectActivation.deferredEventPool.removeAll(releasedDeferredEvent);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lTf8NQuEeWMJphss3BZSg" name="terminate" specification="_7iXKUMD2EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// A state gets terminated when the state-machine that contains it gets itself terminated.
// If the state has an ongoing doActivity behavior then this latter is aborted. In addition,
// the state is active then it is removed from the active state configuration.
if(this.isActive()){
	if(!this.regionActivation.isEmpty()){
		for(int i = 0; i &lt; this.regionActivation.size(); i++){
			this.regionActivation.get(i).terminate();
		}
		this.regionActivation.clear();
	}
	if(!this.isDoActivityCompleted){
		this.doActivityContextObject.destroy();
	}
	this.connectionPointActivation.clear();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7DBxUNQuEeW-v_063gYgPA" name="getRegionActivation" specification="_sGW0QPlREeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7DBxUdQuEeW-v_063gYgPA" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7DCYYNQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7DCYYdQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.regionActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7DE0oNQuEeW-v_063gYgPA" name="getFireableTransitions" specification="_lX4poNG0EeWMvYElZ5Ee4w">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7DE0odQuEeW-v_063gYgPA" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7DE0otQuEeW-v_063gYgPA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7DE0o9QuEeW-v_063gYgPA" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7DE0pNQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7DE0pdQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7DE0ptQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return the set of transitions that can fire using the the given event occurrence
List&lt;TransitionActivation> fireableTransitions = new ArrayList&lt;TransitionActivation>();
for(int i=0; i &lt; this.outgoingTransitionActivations.size(); i++){
	TransitionActivation outgoingTransitionActivation = this.outgoingTransitionActivations.get(i);
	if(outgoingTransitionActivation.canFireOn(eventOccurrence)){
		fireableTransitions.add(outgoingTransitionActivation);
	}
}
return fireableTransitions;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_DZfc8HYTEeSvTf7EWD7QRA" name="activate" method="_0lNZUNQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7iXKUMD2EeWiyPv18KZ0lg" name="terminate" method="_0lTf8NQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_uT-00JRREeWAs5MYUhc8EQ" name="notifyCompletion" method="_0lLkINQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_jAhRIPlREeSDPZmHIzgmig" name="activateTransitions" method="_0lNZUdQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_i8Y3kNG0EeWMvYElZ5Ee4w" name="releaseDeferredEvents" method="_0lS45NQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_on9GIJRREeWAs5MYUhc8EQ" name="hasCompleted" method="_0lK9ENQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_s_8aEJRREeWAs5MYUhc8EQ" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_PL6WsNG0EeWMvYElZ5Ee4w" name="defer" method="_0lS44NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_S8OmoNG0EeWMvYElZ5Ee4w" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_lMjnQFlXEeaMpZSzvy8A5Q" name="isVisitorFor">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_lMjnQVlXEeaMpZSzvy8A5Q" name="node">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_lMjnQllXEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_sGW0QPlREeSDPZmHIzgmig" name="getRegionActivation" method="_7DBxUNQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_DufjMPlSEeSDPZmHIzgmig" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_GjWQcPlSEeSDPZmHIzgmig"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_GjW3gPlSEeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-A0IEHYSEeSvTf7EWD7QRA" name="tryExecuteExit" visibility="protected" method="_0lOAYNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_VZ_GYFlXEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_6cP1IHYSEeSvTf7EWD7QRA" name="tryExecuteEntry" visibility="protected" method="_0lNZUtQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_UbjvQFlXEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_DRNfQNG0EeWMvYElZ5Ee4w" name="canDefer" method="_0lSR0NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_DRNfQdG0EeWMvYElZ5Ee4w" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_eNQO8NG0EeWMvYElZ5Ee4w" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_8gFVIHYSEeSvTf7EWD7QRA" name="tryExecuteDoActivity" visibility="protected">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_V1A1gFlXEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_U2jA0MD2EeWiyPv18KZ0lg" name="getVertexActivation" visibility="protected" method="_0lMyQNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_aUTC8MD2EeWiyPv18KZ0lg" name="vertex">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Vertex"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_eWshYMD2EeWiyPv18KZ0lg" name="" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ivMLoMD2EeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ivNZwMD2EeWiyPv18KZ0lg" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_p3E5QPlREeSDPZmHIzgmig" name="getConnectionPointActivation" method="_0lMLMNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_1JMtwPlREeSDPZmHIzgmig" type="_CDaHsKlAEeSY3-SNA3r3jg" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2KHYMPlREeSDPZmHIzgmig"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2KH_QPlREeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_q02wIPlREeSDPZmHIzgmig" name="getConnectionPointActivation">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_61tkoPlREeSDPZmHIzgmig" name="vertex">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Vertex"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_9eb6YPlREeSDPZmHIzgmig" type="_CDaHsKlAEeSY3-SNA3r3jg" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kcbwkMD2EeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kcc-sMD2EeWiyPv18KZ0lg" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7iVVIMD2EeWiyPv18KZ0lg" name="isExitable" method="_0lQcoNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7iVVIcD2EeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7iVVIsD2EeWiyPv18KZ0lg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_zoIgAFlXEeaMpZSzvy8A5Q" name="staticCheck">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7iS44MD2EeWiyPv18KZ0lg" name="isEnterable" method="_0lPOgNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7iS44cD2EeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7iS44sD2EeWiyPv18KZ0lg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_yF5RMFlXEeaMpZSzvy8A5Q" name="staticCheck">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_lX4poNG0EeWMvYElZ5Ee4w" name="getFireableTransitions" visibility="public" method="_7DE0oNQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_1zaA4NG0EeWMvYElZ5Ee4w" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_DmsKkNG1EeWMvYElZ5Ee4w" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EhgNANG1EeWMvYElZ5Ee4w"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ehu2gNG1EeWMvYElZ5Ee4w" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_bAzT8JRREeWAs5MYUhc8EQ" name="enterRegions" method="_0lOAYdQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_gZ1OIJRREeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_8YbQ8FlXEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_hWttIJRREeWAs5MYUhc8EQ" name="exit" method="_0lRDsNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_mUIpYJRREeWAs5MYUhc8EQ" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q_t6gFlXEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_9qKTcJ37EeWR28_9aJ_f5g" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="__SpUMJ37EeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="__StloJ37EeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_VtCUQJRREeWAs5MYUhc8EQ" name="enter" method="_0lP1kNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_YGISkJRREeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7XyIwFlWEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_aJLvcJRREeWAs5MYUhc8EQ" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3uMEQJ37EeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3uSK4J37EeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_tAbzsHV3EeSvTf7EWD7QRA" name="StateMachineExecution">
          <generalization xmi:type="uml:Generalization" xmi:id="_yzl7EJROEeWAs5MYUhc8EQ">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_XtLqgHYREeSvTf7EWD7QRA" name="regionActivations" type="_mUrtYHV3EeSvTf7EWD7QRA" aggregation="composite" association="_XtMRkHYREeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XtLqgXYREeSvTf7EWD7QRA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XtLqgnYREeSvTf7EWD7QRA" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_TBdZcIU_EeSZ05Pgomb11g" name="configuration" type="_5yEqwIU8EeSZ05Pgomb11g" aggregation="composite" association="_TBf1sIU_EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_TBdZcYU_EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TBdZcoU_EeSZ05Pgomb11g" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lefENQuEeWMJphss3BZSg" name="getConfiguration" specification="_0oaHMPiIEeSlpJn94rgDzA">
            <language>Java</language>
            <body>return this.configuration;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lefEdQuEeWMJphss3BZSg" name="initRegions" specification="_iAEPkHYREeSvTf7EWD7QRA">
            <language>Java</language>
            <body>StateMachine machine = null;
if(!this.getTypes().isEmpty()){
	machine = (StateMachine) this.getTypes().get(0);
}
if(machine!=null){
	for(Region region: machine.getRegions()){
		RegionActivation activation = (RegionActivation) this.locus.factory.instantiateVisitor(region);
		activation.setParent(this);
		activation.setNode(region);
		this.regionActivation.add(activation);
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lftMNQuEeWMJphss3BZSg" name="getVertexActivation" specification="_29iLgPiIEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lftMdQuEeWMJphss3BZSg">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Vertex"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lftMtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lftM9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lftNNQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lftNdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lftNtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>int i = 0;
VertexActivation vertexActivation = null;
while(vertexActivation==null &amp;&amp; i &lt; this.regionActivation.size()){
	 vertexActivation = this.regionActivation.get(i).getVertexActivation(vertex);
	 i++;
}
return vertexActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lgUQNQuEeWMJphss3BZSg" name="execute" specification="_pyNNEHWLEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// The execution of state-machine is realized as described below
// 1 - An event accepter is placed in the list of waiting event accepters for this state-machine
// 2 - All visitors required to interpret the state-machine are instantiated and link together
// 3 - All top level regions (i.e. those directly owned by the executed state-machine) are entered
//     concurrently.
// Note: a state-machine always has at runtime a single event accepter
if(this.context!=null &amp;&amp; this.context.objectActivation!=null){
	this.context.register(new StateMachineEventAccepter(this));
}
this.initRegions();
for(RegionActivation activation: this.regionActivation){
	activation.activate();
}
for(RegionActivation activation: this.regionActivation){
	activation.activateTransitions();
}
for(RegionActivation regionActivation: this.regionActivation){
	regionActivation.enter(null);
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lgUQdQuEeWMJphss3BZSg" name="new_" specification="_uSp5cHWLEeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lgUQtQuEeWMJphss3BZSg" name="ReturnResult" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Value"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lgUQ9QuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lgURNQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>if(this.context!=null){
	return new StateMachineExecution(this.context);
}
return new StateMachineExecution();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lhiYNQuEeWMJphss3BZSg" name="startBehavior" specification="_QRNX8MNoEeWpYp0WmASFoQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lhiYdQuEeWMJphss3BZSg" name="classifier">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lhiYtQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lhiY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lhiZNQuEeWMJphss3BZSg" name="inputs">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-ParameterValue"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lhiZdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lhiZtQuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The behavior captured here is almost identical to the one provide by Object_.
// Instead of using a simple ObjectActivation we use a StateMachineObjectActivation.
// This specialized kind of ObjectActivation allows the registering of completion events.
if (this.objectActivation == null) {
	this.objectActivation = new SM_ObjectActivation();
	this.objectActivation.object = this;
}
this.objectActivation.startBehavior(classifier, inputs);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lhiZ9QuEeWMJphss3BZSg" name="terminate" specification="_EX-gIMNoEeWpYp0WmASFoQ">
            <language>Java</language>
            <body>// The termination of a state-machine consists in aborting all &quot;ongoing&quot; doActivity behaviors
// started by states owned by this state-machine. States that are currently active (i.e., registered
// in the state-machine configuration) are not exited (i.e., if they have have exit behaviors then
// these behaviors are not executed.
for(int i=0; i &lt; this.regionActivation.size(); i++){
	this.regionActivation.get(i).terminate();
}
this.regionActivation.clear();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7DK7QNQuEeW-v_063gYgPA" name="getRegionActivation" specification="_A-HfoPiJEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7DK7QdQuEeW-v_063gYgPA" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7DK7QtQuEeW-v_063gYgPA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7DK7Q9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return regionActivation;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_pyNNEHWLEeSvTf7EWD7QRA" name="execute" visibility="public" method="_0lgUQNQuEeWMJphss3BZSg">
            <ownedComment xmi:type="uml:Comment" xmi:id="_pyNNEXWLEeSvTf7EWD7QRA" annotatedElement="_pyNNEHWLEeSvTf7EWD7QRA">
              <body>Execute the behavior given by the type of this execution. &#xD;
The parameterValues for any input (in or in-out) parameters of the behavior should be set before the execution.&#xD;
The parameteValues for any output (in-out, out or return) parameters of the behavior will be set by the execution.&#xD;
</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_uSp5cHWLEeSvTf7EWD7QRA" name="new_" visibility="public" method="_0lgUQdQuEeWMJphss3BZSg">
            <ownedComment xmi:type="uml:Comment" xmi:id="_uSp5cXWLEeSvTf7EWD7QRA" annotatedElement="_uSp5cHWLEeSvTf7EWD7QRA">
              <body>Create a new execution with no behavior or parameterValues.&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_uSp5cnWLEeSvTf7EWD7QRA" name="ReturnResult" visibility="public" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Value"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_iAEPkHYREeSvTf7EWD7QRA" name="initRegions" visibility="protected" method="_0lefEdQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_0oaHMPiIEeSlpJn94rgDzA" name="getConfiguration" method="_0lefENQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_29iLgPiIEeSlpJn94rgDzA" name="getVertexActivation" visibility="protected" method="_0lftMNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bytjgPiJEeSlpJn94rgDzA" name="vertex">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Vertex"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_dvTzEPiJEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_A-HfoPiJEeSlpJn94rgDzA" name="getRegionActivation" method="_7DK7QNQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_gsFtQPiJEeSlpJn94rgDzA" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_iGnKgPiJEeSlpJn94rgDzA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iGqN0PiJEeSlpJn94rgDzA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_EX-gIMNoEeWpYp0WmASFoQ" name="terminate" method="_0lhiZ9QuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_QRNX8MNoEeWpYp0WmASFoQ" name="startBehavior" visibility="public" method="_0lhiYNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QRNX8cNoEeWpYp0WmASFoQ" name="classifier" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_QRNX8sNoEeWpYp0WmASFoQ"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QRNX88NoEeWpYp0WmASFoQ" name="inputs" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-ParameterValue"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_QRNX9MNoEeWpYp0WmASFoQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QRNX9cNoEeWpYp0WmASFoQ" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vJ5akHV3EeSvTf7EWD7QRA" name="TransitionActivation" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_NHWH8HWHEeSvTf7EWD7QRA" general="_yWknYHV2EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_iYq1APfzEeS41tijFXo_Iw" name="status" visibility="protected" type="_kHnqIPfzEeS41tijFXo_Iw"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_US6R4pRMEeWAs5MYUhc8EQ" name="vertexSourceActivation" type="_z0JjMHV3EeSvTf7EWD7QRA" association="_US5q0JRMEeWAs5MYUhc8EQ"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_p47YFJRMEeWAs5MYUhc8EQ" name="vertexTargetActivation" type="_z0JjMHV3EeSvTf7EWD7QRA" association="_p47YEJRMEeWAs5MYUhc8EQ"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_4NXsYFjAEeaMpZSzvy8A5Q" name="analyticalStatus" visibility="protected" type="_kHnqIPfzEeS41tijFXo_Iw"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_U2dzwFjBEeaMpZSzvy8A5Q" name="lastPropagation">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_ZSMYMFjBEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_qe7J8VjBEeaMpZSzvy8A5Q" name="lastTriggeringEventOccurrence" association="_qe6i4FjBEeaMpZSzvy8A5Q">
            <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0llz0NQuEeWMJphss3BZSg" name="getStatus" specification="_xiXAcPiBEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0llz0dQuEeWMJphss3BZSg" type="_kHnqIPfzEeS41tijFXo_Iw" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0llz0tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0llz09QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return status;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lma4NQuEeWMJphss3BZSg" name="setStatus" specification="_wU688PiBEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lma4dQuEeWMJphss3BZSg" name="status" type="_kHnqIPfzEeS41tijFXo_Iw">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lma4tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lma49QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.status = state;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lnB8NQuEeWMJphss3BZSg" name="isReached" specification="_zMiDQPiBEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lnB8dQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lnB8tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lnB89QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>/// Convenience operation which returns true if the status of this transition
// is REACHED; false otherwise.
return this.status.equals(TransitionMetadata.REACHED);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lnB9NQuEeWMJphss3BZSg" name="isTraversed" specification="_04TBgPiBEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lnB9dQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lnB9tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lnB99QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Convenience operation which returns true if the status of this transition
// is TRAVERSED; false otherwise.
return this.status.equals(TransitionMetadata.TRAVERSED);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lnpANQuEeWMJphss3BZSg" name="isTriggered" specification="_DLk54PiCEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lnpAdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lnpAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lnpA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return !((Transition)this.node).getTriggers().isEmpty();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0loQENQuEeWMJphss3BZSg" name="isGuarded" specification="_EX-bkPiCEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0loQEdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0loQEtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0loQE9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return ((Transition)this.node).getGuard()!=null;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lo3INQuEeWMJphss3BZSg" name="getSourceActivation" specification="_FbGsgPiCEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lo3IdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lo3ItQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lo3I9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return vertexSourceActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lpeMNQuEeWMJphss3BZSg" name="setSourceActivation" specification="_KByjwPiCEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lpeMdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lpeMtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lpeM9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.vertexSourceActivation = vertexSourceActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lpeNNQuEeWMJphss3BZSg" name="getTargetActivation" specification="_S6QHUPiEEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lpeNdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lpeNtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lpeN9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return vertexTargetActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lqFQNQuEeWMJphss3BZSg" name="setTargetActivation" specification="_ThWjkPiEEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lqFQdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lqFQtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lqFQ9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.vertexTargetActivation = vertexTargetActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lqsUNQuEeWMJphss3BZSg" name="evaluateGuard" specification="_9DjLsPiBEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lqsUdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lqsUtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lqsU9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Evaluate the guard specification thanks to an evaluation.
// The evaluation does not presume of the type of the guard specification.
boolean result = true;  
Transition transition = (Transition) this.node;
if (transition.getGuard() != null) {
	ValueSpecification specification = transition.getGuard().getSpecification() ;
	if(specification!=null){
		Evaluation evaluation = this.getExecutionLocus().factory.createEvaluation(specification);
		if (specification instanceof OpaqueExpression) {
			((SM_OpaqueExpressionEvaluation)evaluation).context = this.getExecutionContext() ;
		}
		if(evaluation!=null){
			BooleanValue evaluationResult = (BooleanValue)evaluation.evaluate() ;
			result = evaluationResult.value ;
		}
	}
	
}
return result;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lrTYNQuEeWMJphss3BZSg" name="hasTrigger" specification="_Axdn4PiCEeS41tijFXo_Iw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lrTYdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lrTYtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lrTY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lrTZNQuEeWMJphss3BZSg" name="signalInstance">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-SignalInstance"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lrTZdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lrTZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return true if the following transition has a trigger that is reactive
// to the given signal instance.
int i = 0;
Transition transition = (Transition)this.node;
Trigger trigger = null;
while(i &lt; transition.getTriggers().size() &amp;&amp; trigger==null){
	Trigger currentTrigger = transition.getTriggers().get(i);
	if(currentTrigger.getEvent()!=null &amp;&amp; 
			currentTrigger.getEvent() instanceof SignalEvent
			&amp;&amp; ((SignalEvent)currentTrigger.getEvent()).getSignal()==signal.type){
		if(currentTrigger.getPorts().size() > 0) {
			List&lt;Port> portsOfTrigger = currentTrigger.getPorts();
			Port onPort = ((CS_SignalInstance)signal).interactionPoint.definingPort;
			Boolean portMatches = false;
			int j = 1;
			while(!portMatches &amp; j &lt;= portsOfTrigger.size()) {
				portMatches = onPort == portsOfTrigger.get(j - 1);
				j = j + 1;
			}
			if(portMatches){
				trigger = currentTrigger;
			}
		}else{
			trigger = currentTrigger;
		}
	}
	i++;
}
return trigger != null;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lr6cNQuEeWMJphss3BZSg" name="canFireOn" specification="_XcxGsNHBEeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lr6cdQuEeWMJphss3BZSg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lr6ctQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lr6c9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lr6dNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lr6ddQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lr6dtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A transition is can fire when:
//
// A completion event is being dispatched and this transition has no trigger
// but its eventual guard evaluates to true. Note: the scope of a completion
// event is the state from which it was generated
//
// A signal event is being dispatched and this transition has a trigger
// that matches the signal and its eventual guard evaluates to true
boolean reactive = true;
if(eventOccurrence instanceof CompletionEventOccurrence){
	reactive = !this.isTriggered() &amp;&amp;
				this.getSourceActivation()==((CompletionEventOccurrence)eventOccurrence).stateActivation &amp;&amp;
				this.evaluateGuard();
}else if(eventOccurrence instanceof SignalEventOccurrence){
	reactive = this.hasTrigger(((SignalEventOccurrence)eventOccurrence).signalInstance) &amp;&amp;
			   this.evaluateGuard();
}else{
	reactive = false;
}
return reactive;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lshgNQuEeWMJphss3BZSg" name="executeEffect" specification="_wZ2W0HWIEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// Execute the effect that is on the transition if it exists one
Transition transition = (Transition) this.getNode();
Execution execution = this.getExecutionFor(transition.getEffect());
if(execution!=null){
	execution.execute();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lshgdQuEeWMJphss3BZSg" name="fire" specification="_1DusAHWIEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// The fire sequence is broken into the following set of actions
// 1 - Exit the source (depends on the kind of transition that is currently used)
// 2 - Execute the effect (if one exists for that transition)
// 3 - Enter the target (depends on the kind of transition that is currently used)
this.exitSource();
FUMLExecutionEngine.eInstance.getControlDelegate().control(this); 
this.executeEffect();
((SM_ControlDelegate)FUMLExecutionEngine.eInstance.getControlDelegate()).inactive(this.getNode()); 
this.setStatus(TransitionMetadata.TRAVERSED);
logger.info(this.getNode().getName()+&quot; => TRAVERSED&quot;);
this.enterTarget();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ltIkNQuEeWMJphss3BZSg" name="getLeastCommonAncestor" specification="_c6Kj4MD0EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0ltIkdQuEeWMJphss3BZSg" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ltIktQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ltIk9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return the common ancestor of the source and the target. This common ancestor is
// a region activation
if(this.vertexSourceActivation.getParentState()!=this.vertexTargetActivation.getParentState()){
	if(this.leastCommonAncestor==null){
		this.leastCommonAncestor = this.vertexSourceActivation.getLeastCommonAncestor(this.vertexTargetActivation);
	}
}
return this.leastCommonAncestor;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_zMiDQPiBEeS41tijFXo_Iw" name="isReached" method="_0lnB8NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_t1rBYPiDEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_04TBgPiBEeS41tijFXo_Iw" name="isTraversed" method="_0lnB9NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_xJPD4PiDEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_DLk54PiCEeS41tijFXo_Iw" name="isTriggered" method="_0lnpANQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_F0hAIPiEEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_EX-bkPiCEeS41tijFXo_Iw" name="isGuarded" method="_0loQENQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_HvNyQPiEEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_xiXAcPiBEeS41tijFXo_Iw" name="getStatus" method="_0llz0NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_p7fDwPiDEeSlpJn94rgDzA" type="_kHnqIPfzEeS41tijFXo_Iw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_wU688PiBEeS41tijFXo_Iw" name="setStatus" method="_0lma4NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_mhKR8PiDEeSlpJn94rgDzA" name="status" type="_kHnqIPfzEeS41tijFXo_Iw"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_FbGsgPiCEeS41tijFXo_Iw" name="getSourceActivation" method="_0lo3INQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KRndkPiEEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_S6QHUPiEEeSlpJn94rgDzA" name="getTargetActivation" method="_0lpeNNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ddqbsPiEEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_1DusAHWIEeSvTf7EWD7QRA" name="fire" method="_0lshgdQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_rCqF8Fi9EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7NHs8Fi-EeaMpZSzvy8A5Q" name="isVisitorFor">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7NHs8Vi-EeaMpZSzvy8A5Q" name="node">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7NHs8li-EeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_nNoDsJ31EeWR28_9aJ_f5g" name="exitSource" visibility="protected" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_529nwFi9EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_c6Kj4MD0EeWiyPv18KZ0lg" name="getLeastCommonAncestor" visibility="protected" method="_0ltIkNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_c6Kj4cD0EeWiyPv18KZ0lg" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_lNJZsJ31EeWR28_9aJ_f5g" name="enterTarget" visibility="protected" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_5DT9QFi9EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_wZ2W0HWIEeSvTf7EWD7QRA" name="executeEffect" method="_0lshgNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_eUOPAFi-EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_KByjwPiCEeS41tijFXo_Iw" name="setSourceActivation" method="_0lpeMNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_PO2zoPiEEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ThWjkPiEEeSlpJn94rgDzA" name="setTargetActivation" method="_0lqFQNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_iqDBAPiEEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_XcxGsNHBEeWB0O9YzCwUNg" name="canFireOn" method="_0lr6cNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_agIxENHBEeWB0O9YzCwUNg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_cTxR4NHBEeWB0O9YzCwUNg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Axdn4PiCEeS41tijFXo_Iw" name="hasTrigger" method="_0lrTYNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Dqq-wPiEEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_IV1sIFi-EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_9DjLsPiBEeS41tijFXo_Iw" name="evaluateGuard" method="_0lqsUNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="___ftgPiDEeSlpJn94rgDzA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GdqpkFi-EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_mg-DcFi9EeaMpZSzvy8A5Q" name="canPropagateExecution">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_mg-DcVi9EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_mg-Dc1i9EeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ircQoHWJEeSvTf7EWD7QRA" name="A_vertexActivations_regionActivation" memberEnd="_ircQoXWJEeSvTf7EWD7QRA _irabcHWJEeSvTf7EWD7QRA">
          <ownedEnd xmi:type="uml:Property" xmi:id="_ircQoXWJEeSvTf7EWD7QRA" name="regionActivation" type="_mUrtYHV3EeSvTf7EWD7QRA" association="_ircQoHWJEeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ircQonWJEeSvTf7EWD7QRA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ircQo3WJEeSvTf7EWD7QRA" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_jnAhAHWJEeSvTf7EWD7QRA" name="A_transitionActivations_regionActivation" memberEnd="_jnAhAXWJEeSvTf7EWD7QRA _jm_S4HWJEeSvTf7EWD7QRA">
          <ownedEnd xmi:type="uml:Property" xmi:id="_jnAhAXWJEeSvTf7EWD7QRA" name="regionActivation" type="_mUrtYHV3EeSvTf7EWD7QRA" association="_jnAhAHWJEeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jnAhAnWJEeSvTf7EWD7QRA" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jnAhA3WJEeSvTf7EWD7QRA" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_XtMRkHYREeSvTf7EWD7QRA" name="A_regionActivations_execution" memberEnd="_XtMRkXYREeSvTf7EWD7QRA _XtLqgHYREeSvTf7EWD7QRA">
          <ownedEnd xmi:type="uml:Property" xmi:id="_XtMRkXYREeSvTf7EWD7QRA" name="execution" type="_tAbzsHV3EeSvTf7EWD7QRA" association="_XtMRkHYREeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XtMRknYREeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XtMRk3YREeSvTf7EWD7QRA" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_TBf1sIU_EeSZ05Pgomb11g" name="A_configuration_execution" memberEnd="_TBf1sYU_EeSZ05Pgomb11g _TBdZcIU_EeSZ05Pgomb11g"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_c1eAsKlbEeSjZIlDMA60Cg" name="FinalStateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_wG6cMKlbEeSjZIlDMA60Cg" general="_rVacUHV3EeSvTf7EWD7QRA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lwL4NQuEeWMJphss3BZSg" name="enter">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lwL4dQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lwL4tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lwL49QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lwL5NQuEeWMJphss3BZSg" name="explicit">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lwL5dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lwL5tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The final state completes the region in which it is located*/
RegionActivation regionActivation = (RegionActivation) this.getParent();
regionActivation.isCompleted = true;
// If this region is the last of this state to complete through its final
// state then it leads to the generation of a completion event
if(regionActivation.getParent() instanceof StateActivation){
	 StateActivation stateActivation = (StateActivation) regionActivation.getParent();
	 if(stateActivation.hasCompleted()){
		 stateActivation.notifyCompletion();
	 }
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ZRkmgFlYEeaMpZSzvy8A5Q" name="enter">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ZRkmgVlYEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ZRkmgllYEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ZRkmg1lYEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZRkmhFlYEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZRkmhVlYEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_uXOgIPlQEeSDPZmHIzgmig" name="A_connectionPointActivations_stateActivation" memberEnd="_uXOgIflQEeSDPZmHIzgmig _uXNSAPlQEeSDPZmHIzgmig">
          <ownedEnd xmi:type="uml:Property" xmi:id="_uXOgIflQEeSDPZmHIzgmig" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" association="_uXOgIPlQEeSDPZmHIzgmig">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uXOgIvlQEeSDPZmHIzgmig" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uXOgI_lQEeSDPZmHIzgmig" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_MzNhc_lREeSDPZmHIzgmig" name="A_regionActivations_stateActivation" memberEnd="_MzNhdPlREeSDPZmHIzgmig _MzNhcPlREeSDPZmHIzgmig">
          <ownedEnd xmi:type="uml:Property" xmi:id="_MzNhdPlREeSDPZmHIzgmig" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" association="_MzNhc_lREeSDPZmHIzgmig">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MzNhdflREeSDPZmHIzgmig"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MzNhdvlREeSDPZmHIzgmig" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_US5q0JRMEeWAs5MYUhc8EQ" name="A_vertexSourceActivation_outgoingTransitionActivations" memberEnd="_US6R4pRMEeWAs5MYUhc8EQ _US6R45RMEeWAs5MYUhc8EQ">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_US6R4JRMEeWAs5MYUhc8EQ" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_US6R4ZRMEeWAs5MYUhc8EQ" key="nature" value="UML_Nature"/>
          </eAnnotations>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_p47YEJRMEeWAs5MYUhc8EQ" name="A_incomingTransitionActivations_Target" memberEnd="_p47YE5RMEeWAs5MYUhc8EQ _p47YFJRMEeWAs5MYUhc8EQ">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_p47YEZRMEeWAs5MYUhc8EQ" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_p47YEpRMEeWAs5MYUhc8EQ" key="nature" value="UML_Nature"/>
          </eAnnotations>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_cSWJcJRTEeWAs5MYUhc8EQ" name="A_registrationContext_eventAccepter" memberEnd="_cSWwgZRTEeWAs5MYUhc8EQ _cSWwgpRTEeWAs5MYUhc8EQ">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_cSWJcZRTEeWAs5MYUhc8EQ" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_cSWwgJRTEeWAs5MYUhc8EQ" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_cSWwgpRTEeWAs5MYUhc8EQ" name="eventAccepter" type="_xkTAcHV3EeSvTf7EWD7QRA" association="_cSWJcJRTEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EkU5IM7kEeWm66KqBui2pQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EkWuUM7kEeWm66KqBui2pQ" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_z0JjMHV3EeSvTf7EWD7QRA" name="VertexActivation" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_MeYqgHWHEeSvTf7EWD7QRA" general="_yWknYHV2EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_4eyfsPiEEeSlpJn94rgDzA" name="status" visibility="protected" type="_6aglgPiEEeSlpJn94rgDzA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_US6R45RMEeWAs5MYUhc8EQ" name="outgoingTransitionActivations" type="_vJ5akHV3EeSvTf7EWD7QRA" association="_US5q0JRMEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_k8nPEJRMEeWAs5MYUhc8EQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_k8pEQJRMEeWAs5MYUhc8EQ" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_p47YE5RMEeWAs5MYUhc8EQ" name="incomingTransitionActivations" type="_vJ5akHV3EeSvTf7EWD7QRA" association="_p47YEJRMEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_1s8_wJRMEeWAs5MYUhc8EQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_1s_cAJRMEeWAs5MYUhc8EQ" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lyoINQuEeWMJphss3BZSg" name="getParentState" specification="_skgfAPiEEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lyoIdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lyoItQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lyoI9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The parent state of a vertex is either a StateMachineExecution or a StateActivation
RegionActivation regionActivation = (RegionActivation)this.getParent();
if(regionActivation!=null){
	if(regionActivation.getParent() instanceof StateMachineExecution){
		return null;
	}else{
		return (VertexActivation) regionActivation.getParent();
	}
}
return null;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lzPMNQuEeWMJphss3BZSg" name="setStatus" specification="_zGPtsPiEEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lzPMdQuEeWMJphss3BZSg" name="status" type="_6aglgPiEEeSlpJn94rgDzA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lzPMtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lzPM9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.status = state;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0lz2QNQuEeWMJphss3BZSg" name="getStatus" specification="_Mqu0kPiFEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0lz2QdQuEeWMJphss3BZSg" type="_6aglgPiEEeSlpJn94rgDzA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0lz2QtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0lz2Q9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.status;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l0dUNQuEeWMJphss3BZSg" name="addIncomingTransition" specification="_N4aIoPiFEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l0dUdQuEeWMJphss3BZSg" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l0dUtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l0dU9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.incomingTransitionActivations.add(activation);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l0dVNQuEeWMJphss3BZSg" name="addOutgoingTransition" specification="_QurLIPiFEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l0dVdQuEeWMJphss3BZSg" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l0dVtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l0dV9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.outgoingTransitionActivations.add(activation);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l1EYNQuEeWMJphss3BZSg" name="getVertexActivation" specification="_SgqGIPiFEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l1rcNQuEeWMJphss3BZSg" name="vertex">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Vertex"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l1rcdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l1rctQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l1rc9QuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l1rdNQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l1rddQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// By default return nothing. Must be overridden by state activation;
return null;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l2SgNQuEeWMJphss3BZSg" name="enter" specification="_Iuv1sJRNEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l2SgdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l2SgtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l2Sg9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l2ShNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l2ShdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l2ShtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// 1-The vertex becomes active
// 2-Outgoing transitions of this vertex are tagged as being REACHED
// 3-The vertex starts to be highlighted
logger.info(this.getNode().getName()+&quot; => ACTIVE&quot;);
this.setStatus(StateMetadata.ACTIVE);
this.tagOutgoingTransitions(TransitionMetadata.REACHED);
FUMLExecutionEngine.eInstance.getControlDelegate().control(this);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l25kNQuEeWMJphss3BZSg" name="exit" specification="_JttYUJRNEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l25kdQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l25ktQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l25k9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l25lNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l25ldQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l25ltQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// 1-The representation of the vertex stops to be highlighted
// 2-The incoming transitions of this vertex get back to the NONE status
// 3- The vertex becomes IDLE
((SM_ControlDelegate)FUMLExecutionEngine.eInstance.getControlDelegate()).inactive(this.getNode());
this.tagIncomingTransitions(TransitionMetadata.NONE);
this.setStatus(StateMetadata.IDLE);
logger.info(this.getNode().getName()+&quot; => IDLE&quot;);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l3goNQuEeWMJphss3BZSg" name="isActive" specification="_gkWDUPiFEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l3godQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l3gotQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l3go9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// FIXME: Shall be replaced by a call to the state-machine configuration
// If a state is active, it is in the state-machine configuration
return this.status.equals(StateMetadata.ACTIVE);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l4HsNQuEeWMJphss3BZSg" name="getLeastCommonAncestor" specification="_gA3f4J3mEeWR28_9aJ_f5g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l4HsdQuEeWMJphss3BZSg" name="vertexActivation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l4HstQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l4Hs9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l4HtNQuEeWMJphss3BZSg" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l4HtdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l4HttQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Calculate paths from both vertices to the root of the state-machine.
// Compare the paths, the first difference means the previous item in the
// path was the least common ancestor.
List&lt;SemanticVisitor> sourceHierarchy = this.getContextChain();
List&lt;SemanticVisitor> targetHierachy = targetVertexActivation.getContextChain();
int i = targetHierachy.size() - 1;
int j = sourceHierarchy.size() - 1;
RegionActivation leastCommonAncestor = null;
while(i >= 0 &amp;&amp; j >= 0 &amp;&amp; leastCommonAncestor==null){
	if(targetHierachy.get(i)!=sourceHierarchy.get(j)){
		leastCommonAncestor = (RegionActivation) sourceHierarchy.get(j+1);
	}
	i--;
	j--;
}
if(leastCommonAncestor==null){
	StateActivation commonAncestor = (StateActivation) sourceHierarchy.get(j+1);
	VertexActivation searchedVertexActivation = sourceHierarchy.size() >= targetHierachy.size() ? this : targetVertexActivation;
	int x = 0;
	while(leastCommonAncestor==null &amp;&amp; x &lt; commonAncestor.getRegionActivation().size()){
		RegionActivation regionActivation = commonAncestor.getRegionActivation().get(x);
		if(regionActivation.getVertexActivation((Vertex)searchedVertexActivation.node)!=null){
			leastCommonAncestor = regionActivation;
		}
		x++;
	}
}
return leastCommonAncestor;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l4uwNQuEeWMJphss3BZSg" name="isEnterable" specification="_JrjPYMDzEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l4uwdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l4uwtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l4uw9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l4uxNQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l4uxdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l4uxtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// By default a vertex has no prerequisites that need to be full-filled
// to be entered. Nevertheless some vertex (e.g., join or exit) have such
// prerequisites. Therefore this method is intended to be overridden in vertex
// activation sub-classes. 
return true;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l584NQuEeWMJphss3BZSg" name="isExitable" specification="_KIEMQMDzEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l584dQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l584tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l5849QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0l585NQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0l585dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0l585tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// By default a vertex has no prerequisites that need to be full-filled to be entered
// Nevertheless some vertex (e.g., Fork) have such prerequisite. Therefore this method
// is intended to be overridden in vertex activation sub-classes.
return true;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l5859QuEeWMJphss3BZSg" name="terminate" specification="_d6aVYMDzEeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// Terminate applied by a vertex activation does nothing by default. However it is intended
// to be overridden by sub-classe(s)  
return;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7D1poNQuEeW-v_063gYgPA" name="getOutgoingTransitions" specification="_2Wh7cMDyEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7D1podQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7D1potQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7D1po9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.outgoingTransitionActivations;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7D2QsNQuEeW-v_063gYgPA" name="getIncomingTransitions" specification="_Mx05QMDyEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7D2QsdQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7D23wNQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7D23wdQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.incomingTransitionActivations;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_d6aVYMDzEeWiyPv18KZ0lg" name="terminate" method="_0l5859QuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_gkWDUPiFEeSlpJn94rgDzA" name="isActive" method="_0l3goNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_PFMDAMDyEeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Mqu0kPiFEeSlpJn94rgDzA" name="getStatus" method="_0lz2QNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QL9qMPiGEeSlpJn94rgDzA" type="_6aglgPiEEeSlpJn94rgDzA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_zGPtsPiEEeSlpJn94rgDzA" name="setStatus" method="_0lzPMNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_JoIw0PiGEeSlpJn94rgDzA" name="status" type="_6aglgPiEEeSlpJn94rgDzA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_skgfAPiEEeSlpJn94rgDzA" name="getParentVertexActivation" method="_0lyoINQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Em-kEPiGEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-1nLsFjAEeaMpZSzvy8A5Q" name="isVisitorFor">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-1nLsVjAEeaMpZSzvy8A5Q" name="node">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-1nLsljAEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_3waE0PiGEeSlpJn94rgDzA" name="getAscendingHierachy">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-YKb8PiGEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AH2Q4PiHEeSlpJn94rgDzA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AH4tIPiHEeSlpJn94rgDzA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_EktAAFjCEeaMpZSzvy8A5Q" name="getOwningRegionActivation">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_JWNAIFjCEeaMpZSzvy8A5Q" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Mx05QMDyEeWiyPv18KZ0lg" name="getIncomingTransitions" method="_7D2QsNQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="__TTCIMDyEeWiyPv18KZ0lg" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_CaQMAMDzEeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CaSoQMDzEeWiyPv18KZ0lg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_2Wh7cMDyEeWiyPv18KZ0lg" name="getOutgoingTransitions" method="_7D1poNQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_FdCAgMDzEeWiyPv18KZ0lg" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_FdCAgcDzEeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FdCAgsDzEeWiyPv18KZ0lg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_SgqGIPiFEeSlpJn94rgDzA" name="getVertexActivation" visibility="protected" method="_0l1EYNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_mblHAPiGEeSlpJn94rgDzA" name="vertex">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Vertex"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oEpWkPiGEeSlpJn94rgDzA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N4aIoPiFEeSlpJn94rgDzA" name="addIncomingTransition" method="_0l0dUNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_T_j3oPiGEeSlpJn94rgDzA" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_QurLIPiFEeSlpJn94rgDzA" name="addOutgoingTransition" method="_0l0dVNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_d42Q8PiGEeSlpJn94rgDzA" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_YlPewPiFEeSlpJn94rgDzA" name="tagOutgoingTransition">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_tadksPiGEeSlpJn94rgDzA" name="status" type="_kHnqIPfzEeS41tijFXo_Iw"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_c5frgFjAEeaMpZSzvy8A5Q" name="staticCheck">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_aoxcwPiFEeSlpJn94rgDzA" name="tagIncomingTransition">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_vbfoUPiGEeSlpJn94rgDzA" name="status" type="_kHnqIPfzEeS41tijFXo_Iw"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ci7loFjAEeaMpZSzvy8A5Q" name="staticCheck">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_gA3f4J3mEeWR28_9aJ_f5g" name="getLeastCommonAncestor" method="_0l4HsNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ivnrgJ3uEeWR28_9aJ_f5g" name="vertexActivation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_eJYgMJ3uEeWR28_9aJ_f5g" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_KIEMQMDzEeWiyPv18KZ0lg" name="isExitable" method="_0l584NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_PVuj8MDzEeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_VcefwMDzEeWiyPv18KZ0lg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_U7IGwFjAEeaMpZSzvy8A5Q" name="staticCheck">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_JrjPYMDzEeWiyPv18KZ0lg" name="isEnterable" method="_0l4uwNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_O-QfIMDzEeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_TrNWcMDzEeWiyPv18KZ0lg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WVkrgFjAEeaMpZSzvy8A5Q" name="staticCheck">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_JttYUJRNEeWAs5MYUhc8EQ" name="exit" method="_0l25kNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_aXM6IJRNEeWAs5MYUhc8EQ" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QV0IgFjAEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_snfIgJ3uEeWR28_9aJ_f5g" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uZUSgJ3uEeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uZaZIJ3uEeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Iuv1sJRNEeWAs5MYUhc8EQ" name="enter" method="_0l2SgNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_NFtO4JRNEeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_OajVsFjAEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WJEFwJRNEeWAs5MYUhc8EQ" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_b_92QJ3mEeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cADV0J3mEeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_14Tu8Fi_EeaMpZSzvy8A5Q" name="canPropagateExecution">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_14Tu8li_EeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_14Tu8Vi_EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_14Tu81i_EeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_86NrcFi_EeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_86NrcVi_EeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_86Nrcli_EeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vblQoMD0EeWiyPv18KZ0lg" name="ExternalTransitionActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_RKpzUMD1EeWiyPv18KZ0lg" general="_vJ5akHV3EeSvTf7EWD7QRA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l-1YNQuEeWMJphss3BZSg" name="exitSource" specification="_WjIT4MD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// The exiting phase of the source vertex activation is conditioned both by
// the prerequisites that apply to leave the source and the prerequisites that
// apply to enter the target. 
// 1 - The source can be exited and its target can be entered
//	 	-> The source is exited using the common ancestor
// 2 - The source can be exited but is target is not ready to be entered
//		-> The source is exited but the common ancestor is used. This implies
//         the exiting phase is not propagated to parent state (if required)
if(this.vertexSourceActivation.isExitable(this)){
	if(this.vertexTargetActivation.isEnterable(this)){
		this.vertexSourceActivation.exit(this, this.getLeastCommonAncestor());
	}else{
		this.vertexSourceActivation.exit(this, null);	
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0l_ccNQuEeWMJphss3BZSg" name="enterTarget" specification="_WjHFwMD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// If the target vertex activation can be entered (i.e., its possible prerequisites
// are satisfied) then the entering process begins. Note that this process may lead
// to enter other states based on what is the common ancestor exiting between the
// the source and the target. Besides the prerequisites imposed by the target vertex
// activation there are no other constraints to enter the target state
if(this.vertexTargetActivation.isEnterable(this)){
	this.vertexTargetActivation.enter(this, this.getLeastCommonAncestor());
}else{
	if(this.vertexTargetActivation instanceof StateActivation){
		StateActivation targetStateActivation = (StateActivation) this.vertexTargetActivation;
		int i = 0;
		RegionActivation containingRegionActivation = null;
		while(containingRegionActivation == null &amp;&amp; i &lt; targetStateActivation.regionActivation.size()){
			RegionActivation currentActivation = targetStateActivation.regionActivation.get(i);
			if(currentActivation.getVertexActivation((Vertex)this.vertexSourceActivation.getNode())!=null){
				containingRegionActivation = currentActivation;
			}
			i++;
		}
		if(containingRegionActivation!=null){
			containingRegionActivation.isCompleted = true;
			if(targetStateActivation.hasCompleted()){
				targetStateActivation.notifyCompletion();
			}
		}
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_WjHFwMD1EeWiyPv18KZ0lg" name="enterTarget" visibility="protected" method="_0l_ccNQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_WjIT4MD1EeWiyPv18KZ0lg" name="exitSource" visibility="protected" method="_0l-1YNQuEeWMJphss3BZSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_yFeEAMD0EeWiyPv18KZ0lg" name="InternalTransitionActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_P4qnAMD1EeWiyPv18KZ0lg" general="_vJ5akHV3EeSvTf7EWD7QRA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mADgNQuEeWMJphss3BZSg" name="exitSource" specification="_UIWTgMD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// An internal transition does not cause exit of the source state
return;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mADgdQuEeWMJphss3BZSg" name="enterTarget" specification="_UIXhoMD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// An internal transition does not cause entry of the target state
return;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_UIWTgMD1EeWiyPv18KZ0lg" name="exitSource" visibility="protected" method="_0mADgNQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_UIXhoMD1EeWiyPv18KZ0lg" name="enterTarget" visibility="protected" method="_0mADgdQuEeWMJphss3BZSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_02O7cMD0EeWiyPv18KZ0lg" name="LocalTransitionActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_QiAe8MD1EeWiyPv18KZ0lg" general="_vJ5akHV3EeSvTf7EWD7QRA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mBRoNQuEeWMJphss3BZSg" name="getContainingState" specification="_eF0pQMD1EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mBRodQuEeWMJphss3BZSg" name="StateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mBRotQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mBRo9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The container of a local transition is determined in the following manner:
// 1 - If the source vertex is an entry point then the containing state is the
//     the state that has this entry point on its edge
// 2 - Else in the case where the source contains the target then the containing
//	   state is the source itself. Otherwise the source is the target
StateActivation containingState = null; 
if(this.vertexSourceActivation instanceof EntryPointActivation){
	containingState = (StateActivation) this.vertexSourceActivation.getParentState();
}else{
	if(this.vertexSourceActivation.getVertexActivation((Vertex)this.vertexTargetActivation.getNode())!=null){
		containingState = (StateActivation) this.vertexSourceActivation;
	}else{
		containingState = (StateActivation) this.vertexTargetActivation;
	}
}
return containingState;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mB4sNQuEeWMJphss3BZSg" name="exitSource" specification="_V81I4MD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// Exiting the source state of a local transition consists in the following set of actions:
// 1 - Check if the source state can be exited (if it cannot then do nothing)
// 2 - If the source can be exited and this latter is an entry point then the exit
//     of the source is trivial (i.e., it only consists in exiting the entry point)
//   - If the source can be exited and this latter is a composite state then the top
//     vertex that is located in the top region which contains (maybe in deep nesting)
//     the tar get is exited. At this point, if the source is not the containing state
//     then it is also exited
StateActivation containingState = this.getContainingState();
if(this.vertexSourceActivation.isExitable(this)){
	if(this.vertexSourceActivation instanceof EntryPointActivation){
		this.vertexSourceActivation.exit(this, null);
	}else{
		int i=0;
		RegionActivation containingRegion = null; 
		while(containingRegion==null &amp;&amp; i &lt; containingState.regionActivation.size()){
			RegionActivation regionActivation = containingState.regionActivation.get(i);
			if(regionActivation.getVertexActivation((Vertex)this.vertexTargetActivation.getNode())!=null){
				containingRegion = regionActivation;
			}
			i++;
		}
		if(containingRegion!=null){
			i = 0;
			VertexActivation vertexActivationToBeExited = null;
			Execution stateMachineExecution = this.getStateMachineExecution();
			while(vertexActivationToBeExited == null &amp;&amp; i &lt; containingRegion.vertexActivations.size()){
				VertexActivation currentActivation = containingRegion.vertexActivations.get(i);
				if(((StateMachineExecution)stateMachineExecution).getConfiguration().isActive(currentActivation)){
					vertexActivationToBeExited = currentActivation;
				}
				i++;
			}
			if(vertexActivationToBeExited != null){
				vertexActivationToBeExited.exit(this, null);
			}
		}
		if(this.vertexSourceActivation != containingState){
			this.vertexSourceActivation.exit(this, this.getLeastCommonAncestor());
		}
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mB4sdQuEeWMJphss3BZSg" name="enterTarget" specification="_V8z6wMD1EeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// Entering the target of local transition consists in checking if the target can be entered. If
// this is the case then only when the target is not also the containing state it is entered 
if(this.vertexTargetActivation.isEnterable(this)){	
	if(this.vertexTargetActivation != this.getContainingState()){
		this.vertexTargetActivation.enter(this, this.getLeastCommonAncestor());
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_V8z6wMD1EeWiyPv18KZ0lg" name="enterTarget" visibility="protected" method="_0mB4sdQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_V81I4MD1EeWiyPv18KZ0lg" name="exitSource" visibility="protected" method="_0mB4sNQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_eF0pQMD1EeWiyPv18KZ0lg" name="getContainingState" visibility="protected" method="_0mBRoNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kqJ48MD1EeWiyPv18KZ0lg" name="StateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5yEqwIU8EeSZ05Pgomb11g" name="StateMachineConfiguration">
          <ownedAttribute xmi:type="uml:Property" xmi:id="_TBf1sYU_EeSZ05Pgomb11g" name="execution" type="_tAbzsHV3EeSvTf7EWD7QRA" association="_TBf1sIU_EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_TBf1soU_EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TBf1s4U_EeSZ05Pgomb11g" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_jC3ScIU9EeSZ05Pgomb11g" name="rootConfiguration" type="_0CstIIU8EeSZ05Pgomb11g" association="_jC680IU9EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jC3ScYU9EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jC3ScoU9EeSZ05Pgomb11g" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mGKINQuEeWMJphss3BZSg" name="getRoot" specification="_BMfWAPiNEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mGKIdQuEeWMJphss3BZSg" type="_0CstIIU8EeSZ05Pgomb11g" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mGKItQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mGKI9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.rootConfiguration;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mGxMNQuEeWMJphss3BZSg" name="getExecution" specification="_CY7T8PiNEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mGxMdQuEeWMJphss3BZSg" type="_tAbzsHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mGxMtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mGxM9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.execution;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mHYQNQuEeWMJphss3BZSg" name="register" specification="_cJr8QPiNEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mHYQdQuEeWMJphss3BZSg" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mHYQtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mHYQ9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mHYRNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mHYRdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mHYRtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Register the given state activation in the state-machine configuration.
// This occurs when the state activation is entered.
return this.add(stateActivation);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mH_UNQuEeWMJphss3BZSg" name="unregister" specification="_dgWNMPiNEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mH_UdQuEeWMJphss3BZSg" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mH_UtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mH_U9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mH_VNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mH_VdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mH_VtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Unregister the given state activation from the state-machine configuration
// This occurs when the state activation is exited. When the removal process
// is successful the last action is to release possibly deferred events related
// to that state activation.
boolean removed = this.remove(stateActivation);
if(removed){
	stateActivation.releaseDeferredEvents();
}
return removed;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mImYNQuEeWMJphss3BZSg" name="isActive" specification="_kcv-oPiNEeSlpJn94rgDzA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mImYdQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mImYtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mImY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mImZNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mImZdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mImZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A vertex that is currently active is part of the state-machine configuration
boolean found = false;
Iterator&lt;Integer> levelsIterator = this.cartorgraphy.keySet().iterator();
while(!found &amp;&amp; levelsIterator.hasNext()){
	found = this.cartorgraphy.get(levelsIterator.next()).contains(activation);
}
return found;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mJNcNQuEeWMJphss3BZSg" name="remove" specification="_EQXhQPiOEeSsfJID7KdsZQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mJNcdQuEeWMJphss3BZSg" name="vertexActivation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mJNctQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mJNc9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mJNdNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mJNddQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mJNdtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>boolean removed = this.rootConfiguration.removeChild(activation);
logger.info(this.toString());
return removed; 
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mJ0gNQuEeWMJphss3BZSg" name="add" specification="_Fm85sPiOEeSsfJID7KdsZQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mJ0gdQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mJ0gtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mJ0g9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mJ0hNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mJ0hdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mJ0htQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>boolean added = this.rootConfiguration.addChild(activation);
logger.info(this.toString());
return added;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_BMfWAPiNEeSlpJn94rgDzA" name="getRoot" method="_0mGKINQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="__VGpcPlDEeSDPZmHIzgmig" type="_0CstIIU8EeSZ05Pgomb11g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_CY7T8PiNEeSlpJn94rgDzA" name="getExecution" method="_0mGxMNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_D-10sPlEEeSDPZmHIzgmig" type="_tAbzsHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_RAmH8PiNEeSlpJn94rgDzA" name="getVertexActivationsAtLevel">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GYUqEM9XEeWYevbRTGHfwg" name="level">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_M785oPlEEeSDPZmHIzgmig" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Bmqo8NAHEeW1e7U-Wzl1ng"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BmseINAHEeW1e7U-Wzl1ng" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_cJr8QPiNEeSlpJn94rgDzA" name="register" method="_0mHYQNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f1CfgPlEEeSDPZmHIzgmig" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0LmwAPlEEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_dgWNMPiNEeSlpJn94rgDzA" name="unregister" method="_0mH_UNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_lK5J4PlEEeSDPZmHIzgmig" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_1i4sAPlEEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_jOpMwPiNEeSlpJn94rgDzA" name="isStable">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_3Rh_IPlEEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_kcv-oPiNEeSlpJn94rgDzA" name="isActive" method="_0mImYNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_sGx98PlEEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_vipn4PlEEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_EQXhQPiOEeSsfJID7KdsZQ" name="remove" visibility="protected" method="_0mJNcNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Sw3CEPlFEeSDPZmHIzgmig" name="vertexActivation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_V41foPlFEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Fm85sPiOEeSsfJID7KdsZQ" name="add" visibility="protected" method="_0mJ0gNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_b6SrwPlFEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ZiBM0PlFEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CDaHsKlAEeSY3-SNA3r3jg" name="ConnectionPointActivation" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_lzwQsFmEEeaMpZSzvy8A5Q" general="_htW88HV3EeSvTf7EWD7QRA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mLpsNQuEeWMJphss3BZSg" name="getParentState" specification="_-00GMPlLEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mLpsdQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mLpstQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mLps9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The parent state of a connection point reference is its owning state
return (VertexActivation)this.getParent();
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-00GMPlLEeSDPZmHIzgmig" name="getParentVertexActivation" method="_0mLpsNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-00GMflLEeSDPZmHIzgmig" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_4_qr8FmEEeaMpZSzvy8A5Q" name="getOwningRegionActivation">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_4_qr8VmEEeaMpZSzvy8A5Q" type="_mUrtYHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_a8oQAHV3EeSvTf7EWD7QRA" name="InitialPseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_zh9NcFmBEeaMpZSzvy8A5Q" general="_htW88HV3EeSvTf7EWD7QRA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mM30NQuEeWMJphss3BZSg" name="enter" specification="_aCjJsJRWEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mM30dQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mM30tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mM309QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mM31NQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mM31dQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mM31tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// If there is an outgoing transition then this outgoing transition is fired.
// If there is a guard or a trigger associated with this initial pseudo state then
// they are not taken into account. If there is no outgoing transitions then the model
// is considered as being ill-formed, similar interpretation occurs if there are more than
// an single outgoing transition for the initial pseudo state.
super.enter(enteringTransition, leastCommonAncestor);
if(this.outgoingTransitionActivations.size()==0){
	this.outgoingTransitionActivations.get(0).fire();	
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_aCjJsJRWEeWAs5MYUhc8EQ" name="enter" method="_0mM30NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_aCjJsZRWEeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_tteGUFmBEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_aCjJspRWEeWAs5MYUhc8EQ" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_v6BkkJ4gEeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v6HrMJ4gEeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_htW88HV3EeSvTf7EWD7QRA" name="PseudostateActivation" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_OoEOMHYTEeSvTf7EWD7QRA" general="_z0JjMHV3EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_nVZmclmAEeaMpZSzvy8A5Q" name="fireableTransitions" type="_vJ5akHV3EeSvTf7EWD7QRA" association="_nVY_YFmAEeaMpZSzvy8A5Q">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sT_AUFmAEeaMpZSzvy8A5Q"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sUA1gFmAEeaMpZSzvy8A5Q" value="*"/>
          </ownedAttribute>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_2t2-MFmAEeaMpZSzvy8A5Q" name="evaluateAllGuards">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_HuJPYFmBEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-GNr0FmAEeaMpZSzvy8A5Q" name="canPropagateExecution">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-GNr0VmAEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-GNr0lmAEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-GNr01mAEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-GNr1FmAEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-GNr1VmAEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-GNr1lmAEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_KYoNUIU9EeSZ05Pgomb11g" name="EntryPointPseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_Mmu8QIVAEeSZ05Pgomb11g" general="_CDaHsKlAEeSY3-SNA3r3jg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mOtANQuEeWMJphss3BZSg" name="isExitable" specification="_HVX-AMD6EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mOtAdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mOtAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mOtA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mOtBNQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mOtBdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mOtBtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// An entry point can be exited as soon as every outgoing transition expect
// the current &quot;exitingTransition&quot; have been traversed.
int i = 0;
boolean isExitable = true;
while(isExitable &amp;&amp; i &lt; this.outgoingTransitionActivations.size()){
	TransitionActivation transitionActivation = this.outgoingTransitionActivations.get(i);
	if(transitionActivation != exitingTransition){
		isExitable = transitionActivation.isTraversed();
	}
	i++;
}
return isExitable;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mPUENQuEeWMJphss3BZSg" name="enter">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mPUEdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mPUEtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mPUE9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mPUFNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mPUFdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mP7INQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Enter a state through an entry point. The state on which the entry point is
// placed can be a deeply nested state. Therefore parent state of that state must
// be entered before if it is not already the case.
super.enter(enteringTransition, leastCommonAncestor);
VertexActivation vertexActivation = this.getParentState();
if(vertexActivation!=null){
	vertexActivation.enter(enteringTransition, leastCommonAncestor);
}
// Fire all transitions originating from the entry point. These transitions
// are fired under the condition that the guard is true. 
for(int i = 0; i &lt; this.getOutgoingTransitions().size(); i++){
	TransitionActivation transitionActivation = this.getOutgoingTransitions().get(i);
	if(transitionActivation.evaluateGuard()){
		transitionActivation.fire();
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_HVX-AMD6EeWiyPv18KZ0lg" name="isExitable" method="_0mOtANQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVX-AcD6EeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_HVX-AsD6EeWiyPv18KZ0lg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ipp5wFmfEeaMpZSzvy8A5Q" name="staticCheck">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_wuRCMFmfEeaMpZSzvy8A5Q" name="exit">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_wuRCMVmfEeaMpZSzvy8A5Q" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_wuRCMlmfEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_wuRCM1mfEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wuRCNFmfEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wuRCNVmfEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_WlneUFmfEeaMpZSzvy8A5Q" name="enter">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WlneUVmfEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WlneUlmfEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WlneU1mfEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WlneVFmfEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WlneVVmfEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_cY_yMFmfEeaMpZSzvy8A5Q" name="_enter" visibility="private">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_cY_yMVmfEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_cY_yMlmfEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_cY_yM1mfEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_cY_yNFmfEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cY_yNVmfEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_REv2wFmfEeaMpZSzvy8A5Q" name="canPropagateExecution">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_REv2wVmfEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_REv2wlmfEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_REv2w1mfEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_REv2xFmfEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_REv2xVmfEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_REv2xlmfEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NBEPMIU9EeSZ05Pgomb11g" name="ExitPointPseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_L6BnQIVAEeSZ05Pgomb11g" general="_CDaHsKlAEeSY3-SNA3r3jg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mS-cNQuEeWMJphss3BZSg" name="isEnterable" specification="_bSsBAMD6EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mS-cdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mS-ctQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mS-c9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mS-dNQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mS-ddQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mS-dtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Determine if this exit point satisfied its requirement to be exited.
// The requirement is: all incoming transitions must have been fired once
// if they originate from sub-states located in orthogonal regions
int i = 0;
boolean isReady = true;
while (isReady &amp;&amp; i &lt; this.incomingTransitionActivations.size()) {
	TransitionActivation transitionActivation = this.incomingTransitionActivations.get(i);
	if(enteringTransition!=transitionActivation &amp;&amp; !transitionActivation.isTraversed()){
		isReady = false;
	}
	i++;
}
return isReady;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mTlgNQuEeWMJphss3BZSg" name="enter" specification="_8hu6sJRWEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mTlgdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mTlgtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mTlg9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mTlhNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mTlhdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mTlhtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When the ExitPoint is entered then the state on which it is placed is exited.
// One outgoing transition is chosen non-deterministically in set of transition
// that can be used to leave the ExitPoint. This transition is fired. This lead
// to exit and parent states in cascade if required.
List&lt;TransitionActivation> fireableTransitions = this.getFireableTransitions();
if (!fireableTransitions.isEmpty()) {
	ChoiceStrategy choiceStrategy = (ChoiceStrategy) this.getExecutionLocus().factory.getStrategy(&quot;choice&quot;);
	int chosenIndex = choiceStrategy.choose(fireableTransitions.size());
	TransitionActivation selectedTransition = fireableTransitions.get(chosenIndex - 1);
	RegionActivation newLeastCommonAncestor = this.getLeastCommonAncestor(selectedTransition.getTargetActivation());
	super.enter(enteringTransition, leastCommonAncestor);
	VertexActivation vertexActivation = this.getParentState();
	if (vertexActivation != null) {
		vertexActivation.exit(enteringTransition, newLeastCommonAncestor);
	}
	selectedTransition.fire();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7EDFANQuEeW-v_063gYgPA" name="getFireableTransitions">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EDFAdQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EDsENQuEeW-v_063gYgPA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EDsEdQuEeW-v_063gYgPA" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Determine the list of transitions originating from this pseudo-state that can be fired.
// A transition is considered as being fireable as soon as its guard evaluates to true.
List&lt;TransitionActivation> fireableTransitions = new ArrayList&lt;TransitionActivation>();
for (int i = 0; i &lt; this.outgoingTransitionActivations.size(); i++) {
	TransitionActivation transitionActivation = this.outgoingTransitionActivations.get(i);
	if (transitionActivation.evaluateGuard()) {
		fireableTransitions.add(transitionActivation);
	}
}
return fireableTransitions;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_bSsBAMD6EeWiyPv18KZ0lg" name="isEnterable" method="_0mS-cNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bSsBAcD6EeWiyPv18KZ0lg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bSsBAsD6EeWiyPv18KZ0lg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GwCQQFmgEeaMpZSzvy8A5Q" name="staticCheck">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_8hu6sJRWEeWAs5MYUhc8EQ" name="enter" method="_0mTlgNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_8hu6sZRWEeWAs5MYUhc8EQ" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_LdlkgFmgEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_8hu6spRWEeWAs5MYUhc8EQ" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eo7awJ4hEeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_epCIcJ4hEeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_P30UIFmgEeaMpZSzvy8A5Q" name="canPropagateExecution">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_P30UIVmgEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_P30UIlmgEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_P30UI1mgEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_P30UJFmgEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_P30UJVmgEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_P30UJlmgEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_cCFw0J4gEeWR28_9aJ_f5g" name="ChoicePseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_YICBYFmhEeaMpZSzvy8A5Q" general="_ZjPosFmBEeaMpZSzvy8A5Q"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mVasNQuEeWMJphss3BZSg" name="enter" specification="_n57FAJ4hEeWR28_9aJ_f5g">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mVasdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mVastQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mVas9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mVatNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mVatdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mVattQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When an choice pseudo-state is reached then guards placed are evaluated dynamically
// If more than a guard evaluates to true then the selected transition is selected using
// using the first choice semantic strategy
super.enter(enteringTransition, leastCommonAncestor);
TransitionActivation elseTransitionActivation = null;
List&lt;TransitionActivation> fireableTransitons = new ArrayList&lt;TransitionActivation>();
for (int i = 0; i &lt; this.outgoingTransitionActivations.size(); i++) {
	TransitionActivation currentTransitionActivation = this.outgoingTransitionActivations.get(i);
	if(this.isElseTransition(currentTransitionActivation)){
		elseTransitionActivation = currentTransitionActivation;
	}else{
		if (currentTransitionActivation.evaluateGuard()) {
			fireableTransitons.add(currentTransitionActivation);
		}
	}
}
if (fireableTransitons.size() == 1) {
	fireableTransitons.get(0).fire();
} else if (fireableTransitons.size() > 1) {
	ChoiceStrategy strategy =  (ChoiceStrategy)this.getExecutionContext().locus.factory.getStrategy(&quot;choice&quot;);
	TransitionActivation transitionActivation = fireableTransitons.get(strategy.choose(fireableTransitons.size()-1));
	transitionActivation.fire();
} else if (elseTransitionActivation!=null) {
	elseTransitionActivation.fire();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mWo0NQuEeWMJphss3BZSg" name="isElseTransition">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mWo0dQuEeWMJphss3BZSg" name="transition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mWo0tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mWo09QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mWo1NQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mWo1dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mWo1tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Determine if the given transition materialize the else branch of a choice pseudo state.
// A transition materializes an else branch since it has a guard which specification is
// an Expression that has no operand(s) and whose symbol is &quot;else&quot;
boolean isElse = false;
if(transitionActivation!=null){
	Transition transition = (Transition)transitionActivation.getNode();
	if(transition.getGuard()!=null &amp;&amp; transition.getGuard().getSpecification() instanceof Expression){
		Expression expression = (Expression) transition.getGuard().getSpecification();
		isElse = expression.getOperands().isEmpty() &amp;&amp; expression.getSymbol() !=null &amp;&amp; expression.getSymbol().toLowerCase().equals(ELSE_OPERATOR);
	}
}
return isElse;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_n57FAJ4hEeWR28_9aJ_f5g" name="enter" method="_0mVasNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_n57FAZ4hEeWR28_9aJ_f5g" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_sPYxMFmhEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_n57FAp4hEeWR28_9aJ_f5g" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_n57FA54hEeWR28_9aJ_f5g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n57FBJ4hEeWR28_9aJ_f5g" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_3L9zgFmhEeaMpZSzvy8A5Q" name="canPropagateExecution">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_3L9zgVmhEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_3L9zglmhEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_3L9zg1mhEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_3L9zhFmhEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3L9zhVmhEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_3L9zhlmhEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_hfOGoMD4EeWiyPv18KZ0lg" name="ForkPseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_Q8IXAFmDEeaMpZSzvy8A5Q" general="_htW88HV3EeSvTf7EWD7QRA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mX28NQuEeWMJphss3BZSg" name="isExitable">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mX28dQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mX28tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mX289QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mX29NQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mX29dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mX29tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The Fork node activation can only be exited when all of its outgoing transitions
// (expect the current &quot;exitingTransition&quot;)previously fired.
int i = 0;
boolean isExitable = true;
while(isExitable &amp;&amp; i &lt; this.outgoingTransitionActivations.size()){
	TransitionActivation transitionActivation = this.outgoingTransitionActivations.get(i);
	if(transitionActivation != exitingTransition){
		isExitable = transitionActivation.isTraversed();
	}
	i++;
}
return isExitable;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mZFENQuEeWMJphss3BZSg" name="enter">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mZFEdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mZFEtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mZFE9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mZFFNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mZFFdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mZFFtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Fires all outgoing transitions of the for **concurrently**
// Transitions outgoing from a fork are not guarded nor triggered
// If required parent state is entered first (the rule applies recursively)
if (leastCommonAncestor != null &amp;&amp; this.getParent() != leastCommonAncestor) {
	VertexActivation parentVertexActivation = this.getParentState();
	if (parentVertexActivation != null) {
		parentVertexActivation.enter(enteringTransition, leastCommonAncestor);
	}
}
super.enter(enteringTransition, leastCommonAncestor);
for(int i=0; i &lt; this.outgoingTransitionActivations.size(); i++){
	this.outgoingTransitionActivations.get(i).fire();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mZsINQuEeWMJphss3BZSg" name="exit">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mZsIdQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mZsItQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mZsI9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mZsJNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mZsJdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mZsJtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// A fork will only be allowed to exit when all other transitions outgoing
//this pseudo state have already been traversed
super.exit(exitingTransition, leastCommonAncestor);
// If required parent state is exited (the rule applies recursively)
if (leastCommonAncestor != null &amp;&amp; this.getParent() != leastCommonAncestor) {
	VertexActivation parentVertexActivation = this.getParentState();
	if (parentVertexActivation != null) {
		parentVertexActivation.enter(exitingTransition, leastCommonAncestor);
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_nJxd4FmDEeaMpZSzvy8A5Q" name="isExitable">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_nJxd4VmDEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_nJxd4lmDEeaMpZSzvy8A5Q" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_nJxd41mDEeaMpZSzvy8A5Q" name="staticCheck">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_hZDccFmDEeaMpZSzvy8A5Q" name="enter">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_hZDccVmDEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_hZDcclmDEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_hZEDgFmDEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_hZEDgVmDEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hZEDglmDEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_zxfzYFmDEeaMpZSzvy8A5Q" name="canPropagateExecution">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_zxfzYVmDEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_zxfzYlmDEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_zxfzY1mDEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_zxfzZFmDEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zxfzZVmDEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zxfzZlmDEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_5IDBUFmDEeaMpZSzvy8A5Q" name="_canPropagateExecution" visibility="private">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_5IDBUVmDEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_5IDBUlmDEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_5IDBU1mDEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_5IDBVFmDEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_5IDBVVmDEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5IDBVlmDEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_i65acMD4EeWiyPv18KZ0lg" name="JoinPseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_Gsy_wFmEEeaMpZSzvy8A5Q" general="_htW88HV3EeSvTf7EWD7QRA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ma6QNQuEeWMJphss3BZSg" name="isEnterable">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0ma6QdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ma6QtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ma6Q9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0ma6RNQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ma6RdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ma6RtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Determine if all incoming transitions except this one already have been traversed
// If this is the case then this node is ready to be entered
boolean isReady = true;
int i = 0;
while (isReady &amp;&amp; i &lt; this.incomingTransitionActivations.size()) {
	TransitionActivation transitionActivation = this.incomingTransitionActivations.get(i);
	if (enteringTransition != transitionActivation &amp;&amp; !transitionActivation.isTraversed()) {
		isReady = false;
	}
	i++;
}
return isReady;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mbhUNQuEeWMJphss3BZSg" name="enter">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mbhUdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mbhUtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mbhU9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mbhVNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mbhVdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mbhVtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When entered by the last incoming transition that had not already fired the Fork pseudo state
// is allowed to continue its execution. The continuation of the execution consist in firing the
// outgoing transition of the Join. Note that a Fork cannot have more than an outgoing transition
// (if this is the case then the model is ill-formed).
// The guard of the outgoing transition is evaluated to verify that the transition can be fired
// If required parent state is entered first (the rule applies recursively)
if (leastCommonAncestor != null &amp;&amp; this.getParent() != leastCommonAncestor) {
	VertexActivation parentVertexActivation = this.getParentState();
	if (parentVertexActivation != null) {
		parentVertexActivation.enter(enteringTransition, leastCommonAncestor);
	}
}
// The Join pseudo state is entered and its outgoing transition is fired (if possible)
super.enter(enteringTransition, leastCommonAncestor);
if (!this.outgoingTransitionActivations.isEmpty()) {
	TransitionActivation transitionActivation = this.outgoingTransitionActivations.get(0);
	if (transitionActivation.evaluateGuard()) {
		transitionActivation.fire();
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mcIYNQuEeWMJphss3BZSg" name="exit">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mcIYdQuEeWMJphss3BZSg" name="exitingTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mcIYtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mcIY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mcIZNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mcIZdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mcIZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When the join pseudo state is exited then it also provokes the exit of all containing
// state that not directly belong to the least common ancestor before its outgoing transition
// fires
super.exit(exitingTransition, leastCommonAncestor);
if (leastCommonAncestor != null &amp;&amp; this.getParent() != leastCommonAncestor) {
	VertexActivation parentVertexActivation = this.getParentState();
	if (parentVertexActivation != null) {
		parentVertexActivation.exit(exitingTransition, leastCommonAncestor);
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ReF_IFmEEeaMpZSzvy8A5Q" name="isEnterable">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ReF_IVmEEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ReF_IlmEEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ReF_I1mEEeaMpZSzvy8A5Q" name="staticCheck">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Vdw5sFmEEeaMpZSzvy8A5Q" name="enter">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vdw5sVmEEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vdw5slmEEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vdw5s1mEEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Vdw5tFmEEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vdw5tVmEEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_VdtPUFmEEeaMpZSzvy8A5Q" name="canPropagateExecution">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_VdtPUVmEEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_VdtPUlmEEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vdt2YFmEEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vdt2YVmEEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Vdt2YlmEEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vdt2Y1mEEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_VdvEgFmEEeaMpZSzvy8A5Q" name="_canPropagateExecution" visibility="private">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_VdvEgVmEEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_VdvEglmEEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_VdvEg1mEEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_VdvEhFmEEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_VdvEhVmEEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VdvEhlmEEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_p6b_cMD4EeWiyPv18KZ0lg" name="TerminatePseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_7k37AFmBEeaMpZSzvy8A5Q" general="_htW88HV3EeSvTf7EWD7QRA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mdWgNQuEeWMJphss3BZSg" name="enter" specification="_-iRJoMD5EeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mdWgdQuEeWMJphss3BZSg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mdWgtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mdWg9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mdWhNQuEeWMJphss3BZSg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mdWhdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mdWhtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When a terminate pseudo state is entered the state-machine executing terminates its execution.
// This termination occurs without exiting &quot;exit&quot; behaviors of state(s) that are currently
// registered in the state-machine configuration.
// 
// Note: the termination of the current state-machine execution leads
// to the destruction of its context object. This means the object
// will be stopped and consequently no any other event will be dispatched
// and the object will finally be removed from the locus.
if (leastCommonAncestor != null &amp;&amp; this.getParent() != leastCommonAncestor) {
	VertexActivation parentVertexActivation = this.getParentState();
	if (parentVertexActivation != null) {
		parentVertexActivation.enter(enteringTransition, leastCommonAncestor);
	}
}
super.enter(enteringTransition, leastCommonAncestor);
Execution stateMachineExecution = this.getStateMachineExecution();
stateMachineExecution.terminate();
stateMachineExecution.context.destroy();
super.exit(enteringTransition, leastCommonAncestor);
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-iRJoMD5EeWiyPv18KZ0lg" name="enter" method="_0mdWgNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-iRJocD5EeWiyPv18KZ0lg" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_5Z3cAFmBEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-iRJosD5EeWiyPv18KZ0lg" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-iRJo8D5EeWiyPv18KZ0lg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-iRJpMD5EeWiyPv18KZ0lg" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_tryQkJRKEeWAs5MYUhc8EQ" name="CompletionEventOccurrence">
          <generalization xmi:type="uml:Generalization" xmi:id="_9UlKYJRKEeWAs5MYUhc8EQ">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_HtNLE5RLEeWAs5MYUhc8EQ" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" association="_HtNLEJRLEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_cmoW8M9lEeWYevbRTGHfwg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_cmplEM9lEeWYevbRTGHfwg" value="1"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_HtNLEJRLEeWAs5MYUhc8EQ" name="A_stateActivation_eventOccurrence" memberEnd="_HtNLE5RLEeWAs5MYUhc8EQ _HtNyIJRLEeWAs5MYUhc8EQ">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_HtNLEZRLEeWAs5MYUhc8EQ" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_HtNLEpRLEeWAs5MYUhc8EQ" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_HtNyIJRLEeWAs5MYUhc8EQ" name="eventOccurrence" type="_tryQkJRKEeWAs5MYUhc8EQ" association="_HtNLEJRLEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_CKOyAMNvEeWpYp0WmASFoQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CKQAIMNvEeWpYp0WmASFoQ" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_xkTAcHV3EeSvTf7EWD7QRA" name="StateMachineEventAccepter">
          <generalization xmi:type="uml:Generalization" xmi:id="_H2cF8JRTEeWAs5MYUhc8EQ">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventAccepter"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_cSWwgZRTEeWAs5MYUhc8EQ" name="registrationContext" type="_tAbzsHV3EeSvTf7EWD7QRA" association="_cSWJcJRTEeWAs5MYUhc8EQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mfLsNQuEeWMJphss3BZSg" name="accept" specification="_D0f6gJRTEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mfywNQuEeWMJphss3BZSg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mfywdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mfywtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// When an event occurrence is accepted this marks the beginning of a new RTC step for
// the executed state-machine. The following set of actions takes place:
// 1 - The list of transition that can be fired using the given event occurrence is computed
// 2 - This list is organized as a different sub-set of transitions that can be fired. One of the
//     subset is chosen to be fired. Each transition fires **Concurrently**
// 3 - When the RTC step is about to complete a new event accepter for the state-machine
//     is registered at the waiting event accepter list handled by the object activation
// Note that there always is a single event accepter for a state-machine (this works differently
// than for activities).
if(this.selectionStrategy.isDeferred(eventOccurrence)){
	this.selectionStrategy.defer(eventOccurrence);
}else{
	List&lt;TransitionActivation> fireableTransition = this.selectionStrategy.select(eventOccurrence);
	if(!fireableTransition.isEmpty()){
		int i = 0;
		while(i &lt; fireableTransition.size()){
			fireableTransition.get(i).fire();
			i++;
		}
	}
}
Object_ context = this.registrationContext.context;
if(context!=null &amp;&amp; context.objectActivation!=null){
	context.register(new StateMachineEventAccepter(this.registrationContext));
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mgZ0NQuEeWMJphss3BZSg" name="match" specification="_D0esYJRTEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mgZ0dQuEeWMJphss3BZSg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mgZ0tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mgZ09QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mgZ1NQuEeWMJphss3BZSg" name="result" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mgZ1dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mgZ1tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// There are two cases in which the state machine event accepter can match
// 1 - In the current state machine configuration the event can be deferred
// 2 - In the current state machine configuration the current event can trigger one or more transitions
return this.selectionStrategy.isDeferred(eventOccurrence) | this.selectionStrategy.isTriggering(eventOccurrence);
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_D0esYJRTEeWAs5MYUhc8EQ" name="match" visibility="public" method="_0mgZ0NQuEeWMJphss3BZSg">
            <ownedComment xmi:type="uml:Comment" xmi:id="_D0esYZRTEeWAs5MYUhc8EQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_D0esYpRTEeWAs5MYUhc8EQ" name="eventOccurrence" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_D0esY5RTEeWAs5MYUhc8EQ" name="result" visibility="public" direction="return" effect="create">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_D0f6gJRTEeWAs5MYUhc8EQ" name="accept" visibility="public" method="_0mfLsNQuEeWMJphss3BZSg">
            <ownedComment xmi:type="uml:Comment" xmi:id="_D0f6gZRTEeWAs5MYUhc8EQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_D0ghkJRTEeWAs5MYUhc8EQ" name="eventOccurrence" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_W9bNIFipEeaqSKm88dX50g" name="select" visibility="protected">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_o2m1MFipEeaqSKm88dX50g" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_InbigFiqEeaqSKm88dX50g" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JwCJUFiqEeaqSKm88dX50g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JwD-gFiqEeaqSKm88dX50g" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_R9SeoFiqEeaqSKm88dX50g" name="_select" visibility="private">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_R9SeoViqEeaqSKm88dX50g" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_R9SeoliqEeaqSKm88dX50g" name="stateConfiguration" type="_0CstIIU8EeSZ05Pgomb11g"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_R9Seo1iqEeaqSKm88dX50g" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R9SepFiqEeaqSKm88dX50g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9SepViqEeaqSKm88dX50g" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_a3XdsFiqEeaqSKm88dX50g" name="isDeferred" visibility="protected">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_fTOlAFiqEeaqSKm88dX50g" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ipIJ0FiqEeaqSKm88dX50g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_yNItcFiuEeaqSKm88dX50g" name="isDeferred" visibility="private">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-TrogFiuEeaqSKm88dX50g" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-Ts2oFiuEeaqSKm88dX50g" name="stateConfiguration" type="_0CstIIU8EeSZ05Pgomb11g"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_AS6VUFivEeaqSKm88dX50g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_IOlycFivEeaqSKm88dX50g" name="defer" visibility="protected">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_RJU40FivEeaqSKm88dX50g" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_SHvB0FivEeaqSKm88dX50g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_IrkCUFivEeaqSKm88dX50g" name="defer" visibility="private">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mre0gFivEeaqSKm88dX50g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_MrgpsFivEeaqSKm88dX50g" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Mrh30FivEeaqSKm88dX50g" name="stateConfiguration" type="_0CstIIU8EeSZ05Pgomb11g"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_UPW1oFivEeaqSKm88dX50g" name="isTriggering" visibility="protected">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_a8D-MFivEeaqSKm88dX50g" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_glx_wFivEeaqSKm88dX50g" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Snh_EKVsEeWdedL6rOcLVw" name="DoActivityExecutionEventAccepter">
          <generalization xmi:type="uml:Generalization" xmi:id="_ZiSKsKVsEeWdedL6rOcLVw">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventAccepter"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_mxIbQMDvEeWiyPv18KZ0lg" name="context" type="_EF92AMDqEeWpevkdGfdnMA" association="_mxF_AMDvEeWiyPv18KZ0lg"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_8kZTQcDvEeWiyPv18KZ0lg" name="encapsulatedAccepter" aggregation="composite" association="_8kYsMMDvEeWiyPv18KZ0lg">
            <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventAccepter"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SmG5IMNwEeWpYp0WmASFoQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_SmJVYMNwEeWpYp0WmASFoQ" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mhn8NQuEeWMJphss3BZSg" name="accept" specification="_bZwCoKVsEeWdedL6rOcLVw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mhn8dQuEeWMJphss3BZSg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mhn8tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mhn89QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Execute the RTC step related to the acceptance of this event.
// Afterwards check if there are remaining accepters registered in
// the for the object activation which is attached to the do activity
// context object.
this.context.unregister(this.encapsulatedAccepter);
this.encapsulatedAccepter.accept(eventOccurrence);
if(this.context.objectActivation.waitingEventAccepters.isEmpty()){
	// Make the state to complete if it is ready to do so
	if(this.context.owner!=null){
		this.context.owner.isDoActivityCompleted = true;
		if(this.context.owner.hasCompleted()){
			this.context.owner.notifyCompletion();
		}
	}
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0miPANQuEeWMJphss3BZSg" name="match" specification="_bZsYQKVsEeWdedL6rOcLVw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0miPAdQuEeWMJphss3BZSg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0miPAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0miPA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0miPBNQuEeWMJphss3BZSg" name="result" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0miPBdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0miPBtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Simply delegates to the match operation of the encapsulated accepter.
return this.encapsulatedAccepter.match(eventOccurrence);
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_bZsYQKVsEeWdedL6rOcLVw" name="match" visibility="public" method="_0miPANQuEeWMJphss3BZSg">
            <ownedComment xmi:type="uml:Comment" xmi:id="_bZsYQaVsEeWdedL6rOcLVw"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bZsYQqVsEeWdedL6rOcLVw" name="eventOccurrence" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bZsYQ6VsEeWdedL6rOcLVw" name="result" visibility="public" direction="return" effect="create">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_bZwCoKVsEeWdedL6rOcLVw" name="accept" visibility="public" method="_0mhn8NQuEeWMJphss3BZSg">
            <ownedComment xmi:type="uml:Comment" xmi:id="_bZwCoaVsEeWdedL6rOcLVw"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bZwCoqVsEeWdedL6rOcLVw" name="eventOccurrence" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_mxF_AMDvEeWiyPv18KZ0lg" name="A_context_doActivityEventAccepter" memberEnd="_mxIbQMDvEeWiyPv18KZ0lg _mxIbQcDvEeWiyPv18KZ0lg">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_mxHNIMDvEeWiyPv18KZ0lg" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_mxH0MMDvEeWiyPv18KZ0lg" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_mxIbQcDvEeWiyPv18KZ0lg" name="doActivityEventAccepter" type="_Snh_EKVsEeWdedL6rOcLVw" association="_mxF_AMDvEeWiyPv18KZ0lg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_8kYsMMDvEeWiyPv18KZ0lg" name="A_encapsulatedAccepter_encpasulatingAccepter" memberEnd="_8kZTQcDvEeWiyPv18KZ0lg _8kZTQsDvEeWiyPv18KZ0lg">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_8kYsMcDvEeWiyPv18KZ0lg" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_8kZTQMDvEeWiyPv18KZ0lg" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_8kZTQsDvEeWiyPv18KZ0lg" name="encapsulatingAccepter" type="_Snh_EKVsEeWdedL6rOcLVw" association="_8kYsMMDvEeWiyPv18KZ0lg">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pzaAoM9tEeW1e7U-Wzl1ng"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pzcc4M9tEeW1e7U-Wzl1ng" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_2Y06MIVAEeSZ05Pgomb11g" name="TransitionSelectionStrategy" isAbstract="true">
          <ownedOperation xmi:type="uml:Operation" xmi:id="_hQbtMPlJEeSDPZmHIzgmig" name="selectTransitions" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GcOjAJRZEeWAs5MYUhc8EQ" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Xzr-EJRZEeWAs5MYUhc8EQ" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ZH1tkJRZEeWAs5MYUhc8EQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ZH3iwJRZEeWAs5MYUhc8EQ" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_8yqi8NG9EeWB0O9YzCwUNg" name="isDeferred">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_MWVFING-EeWB0O9YzCwUNg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Oett8NG-EeWB0O9YzCwUNg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_QZTyYNG-EeWB0O9YzCwUNg" name="defer">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WeAfwNG-EeWB0O9YzCwUNg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_XahLUNG-EeWB0O9YzCwUNg" name="isTriggering">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bJRVANG-EeWB0O9YzCwUNg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kXPgcNG-EeWB0O9YzCwUNg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_800tQIVAEeSZ05Pgomb11g" name="DefaultTransitionSelectionStrategy">
          <generalization xmi:type="uml:Generalization" xmi:id="_gxP4UIVBEeSZ05Pgomb11g" general="_2Y06MIVAEeSZ05Pgomb11g"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0ml5YNQuEeWMJphss3BZSg" name="isDeferred" specification="_oaIHENG-EeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0ml5YdQuEeWMJphss3BZSg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ml5YtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ml5Y9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0ml5ZNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0ml5ZdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0ml5ZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Returns true when at least one state within the configuration can defers the given
// event occurrence. The evaluation starts from the innermost part of the state-machine
// configuration. If no state can defer the given event occurrence false is returned.
boolean isDeferred = false;
boolean isTriggered = false;
Map&lt;Integer, List&lt;VertexActivation>> cartography = this.execution.getConfiguration().getCartography();
int i = cartography.size();
while(i >= 1 &amp;&amp; (!isDeferred &amp;&amp; !isTriggered)){
	List&lt;VertexActivation> verticesActivations = cartography.get(i);
	int j = 0;
	while(j &lt; verticesActivations.size() &amp;&amp; (!isDeferred &amp;&amp; !isTriggered)){
		StateActivation currentStateActivation = (StateActivation) verticesActivations.get(j);
		isTriggered = !currentStateActivation.getFireableTransitions(eventOccurrence).isEmpty();
		if(!isTriggered &amp;&amp; currentStateActivation.canDefer(eventOccurrence)){
			isDeferred = true;
		}
		j++;
	}
	i--;
}
return isDeferred;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mmgcNQuEeWMJphss3BZSg" name="defer" specification="_oaJVMNG-EeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mmgcdQuEeWMJphss3BZSg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mmgctQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mmgc9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The state indicating that the given event occurrence is deferred defers the given event
// occurrence. When deferred the event occurrence is placed within the deferred event pool.
// This operation is intended to be called only and only if the &quot;isDeferred&quot; operation
// returned true.
boolean isDeferred = false;
Map&lt;Integer, List&lt;VertexActivation>> cartography = this.execution.getConfiguration().getCartography();
int i = cartography.size();
while(i >= 1 &amp;&amp; !isDeferred){
	int j = 0;
	List&lt;VertexActivation> verticesActivations = cartography.get(i);
	while(j &lt; verticesActivations.size() &amp;&amp; !isDeferred){
		StateActivation currentStateActivation = (StateActivation) verticesActivations.get(j);
		if(currentStateActivation.canDefer(eventOccurrence)){
			currentStateActivation.defer(eventOccurrence);
			isDeferred = true;
		}
		j++;
	}
	i--;
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mnHgNQuEeWMJphss3BZSg" name="isTriggering" specification="_oaKjUNG-EeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mnukNQuEeWMJphss3BZSg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mnukdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mnuktQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mnuk9QuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mnulNQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mnuldQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Returns true when one or more transition are ready to be fired using this event
// occurrence; false otherwise.
return !this.select(eventOccurrence).isEmpty();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7EOEINQuEeW-v_063gYgPA" name="group" specification="_r05k0NG-EeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EOEIdQuEeW-v_063gYgPA" name="fireableTransitions" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EOEItQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EOEI9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EOEJNQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EOEJdQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EOEJtQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The purpose here is to choose among a set of fireable transitions a subset that will
// effectively be fired. This subset can contain in the most trivial case a single
// transition. In the case of orthogonal region it can contain several transitions
// that will be fired using the same event occurrence
Map&lt;VertexActivation, List&lt;TransitionActivation>> transitionGroups = new HashMap&lt;VertexActivation, List&lt;TransitionActivation>>();
List&lt;List&lt;TransitionActivation>> groupingResults = new ArrayList&lt;List&lt;TransitionActivation>>();
if(fireableTransitions.isEmpty()){
	groupingResults.add(new ArrayList&lt;TransitionActivation>());
}else{
	int i = 0;
	while(i &lt; fireableTransitions.size()){
		TransitionActivation transitionActivation = fireableTransitions.get(i);
		List&lt;TransitionActivation> group = transitionGroups.get(transitionActivation.getSourceActivation().getParentState());
		if(group==null){
			group = new ArrayList&lt;TransitionActivation>();
			group.add(transitionActivation);
			transitionGroups.put(transitionActivation.getSourceActivation().getParentState(), group);
		}else{
			group.add(transitionActivation);
		}
		i++;
	}
	for(VertexActivation vertexActivation: transitionGroups.keySet()){
		List&lt;TransitionActivation> group = transitionGroups.get(vertexActivation);
		List&lt;TransitionActivation> conflictingTransitions = this.getConflictingTransitions(group);
		if(!conflictingTransitions.isEmpty()){
			this.resolveConflitcs(group, conflictingTransitions);
		}
		groupingResults.add(group);
		i++;
	}
}
return groupingResults;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7EOrMNQuEeW-v_063gYgPA" name="getConflictingTransitions" specification="_GjV9YNG_EeWB0O9YzCwUNg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EOrMdQuEeW-v_063gYgPA" name="group" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EOrMtQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EOrM9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EOrNNQuEeW-v_063gYgPA" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EPSQNQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EPSQdQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Detect conflicting transitions located in a group of transitions. Conflicting transitions
// are transitions which are in the firing set but which originate from the same source vertex.
List&lt;TransitionActivation> conflictingTransitions = new ArrayList&lt;TransitionActivation>();
int i = 0;
while(i &lt; group.size()){
	TransitionActivation referenceTransition = group.get(i);
	for(int j=0; j &lt; group.size(); j++){
		TransitionActivation currentTransition = group.get(j);
		if(referenceTransition!=currentTransition 
				&amp;&amp; !conflictingTransitions.contains(currentTransition)
				&amp;&amp; referenceTransition.getSourceActivation()==currentTransition.getSourceActivation()){
				if(!conflictingTransitions.contains(referenceTransition)){
					conflictingTransitions.add(referenceTransition);
				}
				conflictingTransitions.add(currentTransition);
		}
	}
	i++;
}
return conflictingTransitions;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_b5nRoJRZEeWAs5MYUhc8EQ" name="selectTransitions">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_b5nRopRZEeWAs5MYUhc8EQ" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_b5nRo5RZEeWAs5MYUhc8EQ" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_b5nRpJRZEeWAs5MYUhc8EQ"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_b5nRpZRZEeWAs5MYUhc8EQ" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="__a8kcMNyEeWpYp0WmASFoQ" name="choose" visibility="protected">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QgCdIMNzEeWpYp0WmASFoQ" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_R80kMMNzEeWpYp0WmASFoQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R82ZYMNzEeWpYp0WmASFoQ" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_e0s1kMNzEeWpYp0WmASFoQ" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_iOXgEMNzEeWpYp0WmASFoQ" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iOZVQMNzEeWpYp0WmASFoQ" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_jR1cYJRZEeWAs5MYUhc8EQ" name="isFireable" visibility="private">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_n_5G8JRZEeWAs5MYUhc8EQ" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_rOqwEJRZEeWAs5MYUhc8EQ" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_t2twYJRZEeWAs5MYUhc8EQ" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_oaIHENG-EeWB0O9YzCwUNg" name="isDeferred" method="_0ml5YNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oaIHEdG-EeWB0O9YzCwUNg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oaIHEtG-EeWB0O9YzCwUNg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_oaJVMNG-EeWB0O9YzCwUNg" name="defer" method="_0mmgcNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oaJVMdG-EeWB0O9YzCwUNg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_oaKjUNG-EeWB0O9YzCwUNg" name="isTriggering" method="_0mnHgNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oaKjUdG-EeWB0O9YzCwUNg" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_oaKjUtG-EeWB0O9YzCwUNg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_r05k0NG-EeWB0O9YzCwUNg" name="group" visibility="package" method="_7EOEINQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_73h68NG-EeWB0O9YzCwUNg" name="fireableTransitions" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_DamDwNG_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dan48NG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ag7H8NG_EeWB0O9YzCwUNg" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EwnbgNG_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EwopoNG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_GjV9YNG_EeWB0O9YzCwUNg" name="getConflictingTransitions" method="_7EOrMNQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_NbC1ANG_EeWB0O9YzCwUNg" name="group" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_QXMdENG_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_QXNrMNG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WwmPING_EeWB0O9YzCwUNg" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_XhReING_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_XhSFMNG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_a1BG0NG_EeWB0O9YzCwUNg" name="resolveConflicts">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_igEG8NG_EeWB0O9YzCwUNg" name="group" type="_vJ5akHV3EeSvTf7EWD7QRA" direction="inout">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lQtpoNG_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lQu3wNG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_po6Y8NG_EeWB0O9YzCwUNg" name="conflictingTransitions" type="_vJ5akHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qkkv8NG_EeWB0O9YzCwUNg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qkl-ENG_EeWB0O9YzCwUNg" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_0CstIIU8EeSZ05Pgomb11g" name="StateConfiguration">
          <ownedAttribute xmi:type="uml:Property" xmi:id="_yajzsPlFEeSDPZmHIzgmig" name="level" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_jC680YU9EeSZ05Pgomb11g" name="completeConfiguration" type="_5yEqwIU8EeSZ05Pgomb11g" association="_jC680IU9EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jC680oU9EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jC6804U9EeSZ05Pgomb11g" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_deFl0IU-EeSZ05Pgomb11g" name="vertexActivation" type="_z0JjMHV3EeSvTf7EWD7QRA" association="_deGz8IU-EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_deFl0YU-EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_deFl0oU-EeSZ05Pgomb11g" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_rkhKcIU9EeSZ05Pgomb11g" name="children" type="_0CstIIU8EeSZ05Pgomb11g" aggregation="composite" association="_rkkNwIU9EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rkhKcYU9EeSZ05Pgomb11g"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rkhKcoU9EeSZ05Pgomb11g" value="*"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mpjwNQuEeWMJphss3BZSg" name="getLevel" specification="_7GtEcPlFEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mpjwdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mpjwtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mpjw9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.level;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mpjxNQuEeWMJphss3BZSg" name="getParent" specification="_R6zHUPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mqK0NQuEeWMJphss3BZSg" type="_0CstIIU8EeSZ05Pgomb11g" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mqK0dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mqK0tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.parent;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mqK09QuEeWMJphss3BZSg" name="getVertexActivation" specification="_UGXnAPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mqK1NQuEeWMJphss3BZSg" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mqK1dQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mqK1tQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.vertexActivation;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mqx4NQuEeWMJphss3BZSg" name="setParent" specification="_WfqZoPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mqx4dQuEeWMJphss3BZSg" name="stateConfiguration" type="_0CstIIU8EeSZ05Pgomb11g">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mqx4tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mqx49QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.parent = configuration;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mrY8NQuEeWMJphss3BZSg" name="remove" specification="_fyxjwPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mrY8dQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mrY8tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mrY89QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mrY9NQuEeWMJphss3BZSg" name="context" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mrY9dQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mrY9tQuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>boolean removed = false;
if(!context.isEmpty()){
	VertexActivation current = context.get(context.size()-1);
	StateConfiguration selectedStateConfiguration = null; 
	int i = 0;
	while(i &lt; this.children.size() &amp;&amp; selectedStateConfiguration==null){
		if(this.children.get(i).vertexActivation==current){
			selectedStateConfiguration = this.children.get(i);
		}
		i++;
	}
	if(selectedStateConfiguration!=null){
		removed = selectedStateConfiguration.remove(activation, context.subList(0, context.size()-1));
	}
}else{
	int i = 0;
	while(i &lt; this.children.size() &amp;&amp; !removed){
		if(this.children.get(i).vertexActivation==activation){
			this.completeConfiguration.deleteFromCartography(this.children.get(i));
			this.children.remove(i);
			removed = true;
		}
		i++;
	}
}
return removed;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0msAANQuEeWMJphss3BZSg" name="add" specification="_jl7FQPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0msAAdQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0msAAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0msAA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0msABNQuEeWMJphss3BZSg" name="context" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0msABdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0msABtQuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>boolean added = false;
if(!context.isEmpty()){
	VertexActivation current = context.get(context.size()-1);
	StateConfiguration selectedStateConfiguration = null; 
	int i = 0;
	while(i &lt; this.children.size() &amp;&amp; selectedStateConfiguration==null){
		if(this.children.get(i).vertexActivation==current){
			selectedStateConfiguration = this.children.get(i);
		}
		i++;
	}
	if(selectedStateConfiguration!=null){
		added = selectedStateConfiguration.add(activation, context.subList(0, context.size()-1));
	}
}else{
	int i = 0;
	boolean alreadyAdded = false;
	while(i &lt; this.children.size() &amp;&amp; !alreadyAdded){
		if(this.children.get(i).vertexActivation==activation){
			alreadyAdded = true;
		}
		i++;
	}
	if(!alreadyAdded){
		StateConfiguration newConfiguration = new StateConfiguration(activation);
		newConfiguration.level = this.level + 1;
		newConfiguration.completeConfiguration = this.completeConfiguration;
		this.completeConfiguration.addToCartography(newConfiguration);
		added = this.children.add(newConfiguration);
	}
}
return added;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0msnENQuEeWMJphss3BZSg" name="removeChild" specification="_apJXgPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0msnEdQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0msnEtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0msnE9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.remove(activation, this.getContext(activation));
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mtOINQuEeWMJphss3BZSg" name="addChild" specification="_icNrMPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mtOIdQuEeWMJphss3BZSg" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mtOItQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mtOI9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.add(activation, this.getContext(activation));	
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7ERugNQuEeW-v_063gYgPA" name="getChildren" specification="_J6eawPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7ERugdQuEeW-v_063gYgPA" type="_0CstIIU8EeSZ05Pgomb11g" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7ERugtQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7ERug9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.children;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7ESVkNQuEeW-v_063gYgPA" name="getContext" specification="_YytaUPlGEeSDPZmHIzgmig">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7ESVkdQuEeW-v_063gYgPA" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7ESVktQuEeW-v_063gYgPA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7ESVk9QuEeW-v_063gYgPA" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7ESVlNQuEeW-v_063gYgPA" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <name xsi:nil="true"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7ESVldQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7ESVltQuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>List&lt;VertexActivation> context = new ArrayList&lt;VertexActivation>();
List&lt;VertexActivation> hierarchy = activation.getAscendingHierarchy();
int i = hierarchy.size();
int j = 0;
boolean found = false;
while(i >= 1 &amp;&amp; !found){
	while(j &lt; this.children.size() &amp;&amp; !found){
		if(this.children.get(j).vertexActivation==hierarchy.get(i-1)){
			found = true;
			context = hierarchy.subList(1, i);
		}
		j++;
	}
	j = 0;
	i--;
}
return context;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7GtEcPlFEeSDPZmHIzgmig" name="getLevel" visibility="protected" method="_0mpjwNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GO2oIPlHEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_J6eawPlGEeSDPZmHIzgmig" name="getChildren" method="_7ERugNQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KbLeoPlHEeSDPZmHIzgmig" type="_0CstIIU8EeSZ05Pgomb11g" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_MCxHgPlHEeSDPZmHIzgmig"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_MCyVoPlHEeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_R6zHUPlGEeSDPZmHIzgmig" name="getParent" method="_0mpjxNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_SzJPIPlHEeSDPZmHIzgmig" type="_0CstIIU8EeSZ05Pgomb11g" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_UGXnAPlGEeSDPZmHIzgmig" name="getVertexActivation" method="_0mqK09QuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_WLu7kPlHEeSDPZmHIzgmig" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_WfqZoPlGEeSDPZmHIzgmig" name="setParent" method="_0mqx4NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_YSga0PlHEeSDPZmHIzgmig" name="stateConfiguration" type="_0CstIIU8EeSZ05Pgomb11g"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_YytaUPlGEeSDPZmHIzgmig" name="getContext" visibility="private" method="_7ESVkNQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_bsOvsPlHEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kK-doPlHEeSDPZmHIzgmig" type="_z0JjMHV3EeSvTf7EWD7QRA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_lYJbYPlHEeSDPZmHIzgmig"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lYNFwPlHEeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_apJXgPlGEeSDPZmHIzgmig" name="removeChild" method="_0msnENQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_pcuEEPlHEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_fyxjwPlGEeSDPZmHIzgmig" name="remove" visibility="private" method="_0mrY8NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_uN-MkPlHEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_vPsIQPlHEeSDPZmHIzgmig" name="context" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wZnkwPlHEeSDPZmHIzgmig"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wZoL0PlHEeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_icNrMPlGEeSDPZmHIzgmig" name="addChild" method="_0mtOINQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_yf1qYPlHEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_jl7FQPlGEeSDPZmHIzgmig" name="add" visibility="private" method="_0msAANQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_z8hDwPlHEeSDPZmHIzgmig" name="activation" type="_z0JjMHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_1WbdAPlHEeSDPZmHIzgmig" name="context" type="_z0JjMHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2L5scPlHEeSDPZmHIzgmig" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2L6TgPlHEeSDPZmHIzgmig" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_oV-68PlGEeSDPZmHIzgmig" name="isActive">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t2EwPlHEeSDPZmHIzgmig" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_jC680IU9EeSZ05Pgomb11g" name="A_rootConfiguration_completeConfiguration" memberEnd="_jC680YU9EeSZ05Pgomb11g _jC3ScIU9EeSZ05Pgomb11g"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_rkkNwIU9EeSZ05Pgomb11g" name="A_children_parent" memberEnd="_rkkNwYU9EeSZ05Pgomb11g _rkhKcIU9EeSZ05Pgomb11g" navigableOwnedEnd="_rkkNwYU9EeSZ05Pgomb11g">
          <ownedEnd xmi:type="uml:Property" xmi:id="_rkkNwYU9EeSZ05Pgomb11g" name="parent" type="_0CstIIU8EeSZ05Pgomb11g" association="_rkkNwIU9EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_rkkNwoU9EeSZ05Pgomb11g"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rkkNw4U9EeSZ05Pgomb11g" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_deGz8IU-EeSZ05Pgomb11g" name="A_vertexActivations_stateConfiguration" memberEnd="_deGz8YU-EeSZ05Pgomb11g _deFl0IU-EeSZ05Pgomb11g">
          <ownedEnd xmi:type="uml:Property" xmi:id="_deGz8YU-EeSZ05Pgomb11g" name="stateConfiguration" type="_0CstIIU8EeSZ05Pgomb11g" association="_deGz8IU-EeSZ05Pgomb11g">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_deGz8oU-EeSZ05Pgomb11g" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_deGz84U-EeSZ05Pgomb11g" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EF92AMDqEeWpevkdGfdnMA" name="DoActivityContextObject">
          <generalization xmi:type="uml:Generalization" xmi:id="_TCHsQMDqEeWpevkdGfdnMA">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Object"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_gQD3w8DrEeWpevkdGfdnMA" name="context" association="_gQD3wMDrEeWpevkdGfdnMA">
            <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Object"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_BRoQsMDrEeWpevkdGfdnMA" name="owner" type="_rVacUHV3EeSvTf7EWD7QRA" association="_BRefsMDrEeWpevkdGfdnMA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mvDUNQuEeWMJphss3BZSg" name="initialize" specification="_2QwAYMDuEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mvDUdQuEeWMJphss3BZSg" name="context">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Object"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mvDUtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mvDU9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Create the object activation and reference the context of the executing state-machine
this.objectActivation = new ObjectActivation();
this.objectActivation.object = this;
if(context!=null){
	this.context = context;
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mvDVNQuEeWMJphss3BZSg" name="register" specification="_P1WG4sDtEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mvDVdQuEeWMJphss3BZSg" name="accepter">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventAccepter"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mvDVtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mvDV9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// The accepter is registered in the object activation event accepter list.
// In addition the accepter is also registered in the object activation of
// the context object of state machine to which the state activation belongs
super.register(accepter);
if(this.owner!=null){
	Object_ stateMachineExecutionContext =  this.owner.getExecutionContext();
	DoActivityExecutionEventAccepter encapsulatingAccepter = new DoActivityExecutionEventAccepter();
	encapsulatingAccepter.encapsulatedAccepter = accepter;
	encapsulatingAccepter.context = this;
	stateMachineExecutionContext.register(encapsulatingAccepter);
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mvqYNQuEeWMJphss3BZSg" name="getFeatureValue" specification="_ylb3IMDsEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mvqYdQuEeWMJphss3BZSg" name="ReturnResult" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-FeatureValue"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mvqYtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mvqY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mvqZNQuEeWMJphss3BZSg" name="feature">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mvqZdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mvqZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Delegate read of a particular feature to the state-machine context
FeatureValue featureValue = null;
if(this.context!=null){
	featureValue = this.context.getFeatureValue(feature);
}
return featureValue;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mw4gNQuEeWMJphss3BZSg" name="setFeatureValue" specification="_ylb3I8DsEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mw4gdQuEeWMJphss3BZSg" name="feature">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mw4gtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mw4g9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mw4hNQuEeWMJphss3BZSg" name="values">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Value"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mw4hdQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mw4htQuEeWMJphss3BZSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mw4h9QuEeWMJphss3BZSg" name="position">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mw4iNQuEeWMJphss3BZSg"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mw4idQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Delegate write of particular feature to the state-machine context
if(this.context!=null){
	this.context.setFeatureValue(feature, values, position);
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mxfkNQuEeWMJphss3BZSg" name="dispatch" specification="_KeaecMDtEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mxfkdQuEeWMJphss3BZSg" name="ReturnResult" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mxfktQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mxfk9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mxflNQuEeWMJphss3BZSg" name="operation">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mxfldQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mxfltQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Delegate operation call to the state-machine context
Execution execution = null;
if(this.context!=null){
	execution = this.context.dispatch(operation);
}
return execution;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0myGoNQuEeWMJphss3BZSg" name="send" specification="_Keaec8DtEeWpevkdGfdnMA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0myGodQuEeWMJphss3BZSg" name="signalInstance">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-SignalInstance"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0myGotQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0myGo9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Delegate the reception of a signal to the state-machine context
if(this.context!=null){
	this.context.send(signalInstance);
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0myGpNQuEeWMJphss3BZSg" name="destroy" specification="_de9hwMDuEeWiyPv18KZ0lg">
            <language>Java</language>
            <body>// When destroyed in addition to the usual behavior, the do activity context object
// has to remove the encapsulating accepters it may have registered.
for(int i=0; i &lt; this.objectActivation.waitingEventAccepters.size(); i++){
	this.unregisterFromContext(this.objectActivation.waitingEventAccepters.get(i));
}
super.destroy();
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mytsNQuEeWMJphss3BZSg" name="unregisterFromContext" specification="_fkDmAMDuEeWiyPv18KZ0lg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mytsdQuEeWMJphss3BZSg" name="encapsulatedAccepter">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventAccepter"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mytstQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0myts9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Unregister in the context of this do activity context the encapsulating
// event accepter.
ObjectActivation contextObjectActivation = this.context.objectActivation;
if(contextObjectActivation!=null){
	DoActivityExecutionEventAccepter encapsulatingAccepter = null;
	int i = 0;
	while(encapsulatingAccepter==null &amp;&amp; i &lt; contextObjectActivation.waitingEventAccepters.size()){
		EventAccepter currentAccepter = contextObjectActivation.waitingEventAccepters.get(i);
		if(currentAccepter instanceof DoActivityExecutionEventAccepter
				&amp;&amp; ((DoActivityExecutionEventAccepter)currentAccepter).encapsulatedAccepter==encapsulatedAccepter){
			encapsulatingAccepter = (DoActivityExecutionEventAccepter) currentAccepter;
		}
		i++;
	}
	if(encapsulatingAccepter!=null){
		contextObjectActivation.unregister(encapsulatingAccepter);
	}
}
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ylb3IMDsEeWpevkdGfdnMA" name="getFeatureValue" visibility="public" method="_0mvqYNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ylb3IcDsEeWpevkdGfdnMA" name="ReturnResult" visibility="public" direction="return" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-FeatureValue"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ylb3IsDsEeWpevkdGfdnMA" name="feature" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ylb3I8DsEeWpevkdGfdnMA" name="setFeatureValue" visibility="public" method="_0mw4gNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ylb3JMDsEeWpevkdGfdnMA" name="feature" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ylb3JcDsEeWpevkdGfdnMA" name="values" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Value"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ylb3JsDsEeWpevkdGfdnMA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ylb3J8DsEeWpevkdGfdnMA" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ylb3KMDsEeWpevkdGfdnMA" name="position" visibility="public" effect="create">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ylb3KcDsEeWpevkdGfdnMA"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_KeaecMDtEeWpevkdGfdnMA" name="dispatch" visibility="public" method="_0mxfkNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KeaeccDtEeWpevkdGfdnMA" name="ReturnResult" visibility="public" direction="return" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KeaecsDtEeWpevkdGfdnMA" name="operation" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Keaec8DtEeWpevkdGfdnMA" name="send" visibility="public" method="_0myGoNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KeaedMDtEeWpevkdGfdnMA" name="eventOccurrence" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_P1WG4MDtEeWpevkdGfdnMA" name="unregister" visibility="public">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_P1WG4cDtEeWpevkdGfdnMA" name="accepter" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventAccepter"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_P1WG4sDtEeWpevkdGfdnMA" name="register" visibility="public" method="_0mvDVNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_P1WG48DtEeWpevkdGfdnMA" name="accepter" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventAccepter"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_de9hwMDuEeWiyPv18KZ0lg" name="destroy" visibility="public" method="_0myGpNQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_fkDmAMDuEeWiyPv18KZ0lg" name="unregisterFromContext" visibility="protected" method="_0mytsNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_lV5BwMDuEeWiyPv18KZ0lg" name="encapsulatedAccepter" visibility="public" effect="create">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventAccepter"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_2QwAYMDuEeWiyPv18KZ0lg" name="initialize" method="_0mvDUNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7OGrMMDuEeWiyPv18KZ0lg" name="context">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Object"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_BRefsMDrEeWpevkdGfdnMA" name="A_owner_doActivityContextObject" memberEnd="_BRoQsMDrEeWpevkdGfdnMA _BRoQscDrEeWpevkdGfdnMA">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_BRefscDrEeWpevkdGfdnMA" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_BRefssDrEeWpevkdGfdnMA" key="nature" value="UML_Nature"/>
          </eAnnotations>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_gQD3wMDrEeWpevkdGfdnMA" name="A_context_doActivityContextObject" memberEnd="_gQD3w8DrEeWpevkdGfdnMA _gQD3xMDrEeWpevkdGfdnMA">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_gQD3wcDrEeWpevkdGfdnMA" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_gQD3wsDrEeWpevkdGfdnMA" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_gQD3xMDrEeWpevkdGfdnMA" name="doActivityContextObject" type="_EF92AMDqEeWpevkdGfdnMA" association="_gQD3wMDrEeWpevkdGfdnMA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_POCAUM90EeW1e7U-Wzl1ng"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_PODOcM90EeW1e7U-Wzl1ng" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_yWknYHV2EeSvTf7EWD7QRA" name="StateMachineSemanticVisitor" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_WzJ94JRIEeWAs5MYUhc8EQ">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-SemanticVisitor"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_zl1UgpRHEeWAs5MYUhc8EQ" name="node" association="_zl0tcJRHEeWAs5MYUhc8EQ">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_HOBBQHWAEeSvTf7EWD7QRA" name="parent" association="_HOCPYHWAEeSvTf7EWD7QRA">
            <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-SemanticVisitor"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOBoUHWAEeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOBoUXWAEeSvTf7EWD7QRA" value="1"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0mz70NQuEeWMJphss3BZSg" name="getNode" specification="_P4IKwPP9EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0mz70dQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0mz70tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0mz709QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return node;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m0i4NQuEeWMJphss3BZSg" name="setNode" specification="_QTM9MPP9EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m0i4dQuEeWMJphss3BZSg">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m0i4tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m0i49QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.node = node;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m0i5NQuEeWMJphss3BZSg" name="getParent" specification="_QsMsAPP9EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m0i5dQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-SemanticVisitor"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m0i5tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m0i59QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return parent;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m1J8NQuEeWMJphss3BZSg" name="setParent" specification="_RHuKYPP9EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m1J8dQuEeWMJphss3BZSg">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-SemanticVisitor"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m1J8tQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m1J89QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>this.parent = parent;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m1xANQuEeWMJphss3BZSg" name="getStateMachineExecution" specification="_diRwsHWEEeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m1xAdQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m1xAtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m1xA9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return the state-machine execution from which the caller of this operation belongs
if(this.parent!=null &amp;&amp; this.parent instanceof StateMachineExecution){
	return (Execution)this.parent;
}else{
	return ((StateMachineSemanticVisitor)this.parent).getStateMachineExecution();
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m1xBNQuEeWMJphss3BZSg" name="getExecutionLocus" specification="_ubgYEPP-EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m2YENQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-Locus"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m2YEdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m2YEtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.getStateMachineExecution().locus;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m2YE9QuEeWMJphss3BZSg" name="getExecutionContext" specification="_vCEo0PP-EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m2YFNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Object"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m2YFdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m2YFtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>return this.getStateMachineExecution().context;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m2_INQuEeWMJphss3BZSg" name="activate" specification="_evimUHWKEeSvTf7EWD7QRA">
            <language>Java</language>
            <body>// This operation is intended to be overridden by sub-classes. For required sub-classes
// (e.g., RegionActivation, StateActivation) it will initiate the instantiation phase of
// child semantic visitors. By default activate does nothing.
return;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m2_IdQuEeWMJphss3BZSg" name="activateTransitions" specification="_75aHoPP-EeSZYezF3nFWWw">
            <language>Java</language>
            <body>// ActivateTransition is intended to be overridden by sub-classes. It will capture the instantiation
// of transitions visitors as well as the linking between these visitors and the required vertices
// activation. By default activate does nothing.
return;
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m3mMNQuEeWMJphss3BZSg" name="getExecutionFor" specification="_-QpEwPP-EeSZYezF3nFWWw">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m3mMdQuEeWMJphss3BZSg" name="behavior">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m3mMtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m3mM9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m3mNNQuEeWMJphss3BZSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m3mNdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m3mNtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Convenience method to make easier for each semantic visitor of the state-machine
// the creation of an execution for a particular behavior. This is particularly useful
// for visitors such as TransitionActivation and StateActivation.
Locus locus = this.getExecutionLocus();
if(behavior==null){
	return null;
}else{
	return locus.factory.createExecution(behavior, this.getExecutionContext());
}
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_7EYcMNQuEeW-v_063gYgPA" name="getContextChain" specification="_c8HvoHWEEeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_7EYcMdQuEeW-v_063gYgPA" name="contextChain" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-SemanticVisitor"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7EYcMtQuEeW-v_063gYgPA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7EYcM9QuEeW-v_063gYgPA" value="*"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Return the hierarchy of visitors that need to be traversed to access
// the visitor that called context chain. The caller is part of the returned
// context chain.
List&lt;SemanticVisitor> contextChain = new ArrayList&lt;SemanticVisitor>();
if(!(this instanceof ExitPointActivation) &amp;&amp; !(this instanceof EntryPointActivation)){
	contextChain.add(this);
}
if(this.parent!=null){
	if(this.parent instanceof StateMachineExecution){
		contextChain.add(this.parent);
	}else{
		contextChain.addAll(((StateMachineSemanticVisitor)this.parent).getContextChain());
	}
}
return contextChain;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_P4IKwPP9EeSZYezF3nFWWw" name="getNode" method="_0mz70NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Fsb9YPP-EeSZYezF3nFWWw" direction="return">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_QTM9MPP9EeSZYezF3nFWWw" name="setNode" method="_0m0i4NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KAyHcPP-EeSZYezF3nFWWw">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_QsMsAPP9EeSZYezF3nFWWw" name="getParent" method="_0m0i5NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_cuiAAPP-EeSZYezF3nFWWw" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-SemanticVisitor"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_RHuKYPP9EeSZYezF3nFWWw" name="setParent" method="_0m1J8NQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_qTy70PP-EeSZYezF3nFWWw" name="parent">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-SemanticVisitor"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_diRwsHWEEeSvTf7EWD7QRA" name="getStateMachineExecution" method="_0m1xANQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_5hPy4PP9EeSZYezF3nFWWw" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_vCEo0PP-EeSZYezF3nFWWw" name="getExecutionContext" method="_0m2YE9QuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_TzecUPfqEeS41tijFXo_Iw" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Object"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_ubgYEPP-EeSZYezF3nFWWw" name="getExecutionLocus" method="_0m1xBNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Fcp_gPP_EeSZYezF3nFWWw" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-Locus"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_c8HvoHWEEeSvTf7EWD7QRA" name="getContextChain" method="_7EYcMNQuEeW-v_063gYgPA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_qX2U8HWEEeSvTf7EWD7QRA" name="contextChain" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-SemanticVisitor"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ulQwkHWEEeSvTf7EWD7QRA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ulRXoHWEEeSvTf7EWD7QRA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_evimUHWKEeSvTf7EWD7QRA" name="activate" method="_0m2_INQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_75aHoPP-EeSZYezF3nFWWw" name="activateTransitions" method="_0m2_IdQuEeWMJphss3BZSg"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-QpEwPP-EeSZYezF3nFWWw" name="getExecutionFor" visibility="protected" method="_0m3mMNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_F-b_IPfqEeS41tijFXo_Iw" name="behavior">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhyxIPfqEeS41tijFXo_Iw" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kyZloFi5EeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_7GLwwFi5EeaMpZSzvy8A5Q" name="isVisitorFor">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_K17nIFi6EeaMpZSzvy8A5Q" name="node">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_MdhQAFi6EeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_HOCPYHWAEeSvTf7EWD7QRA" name="A_parent_visitor" memberEnd="_HOCPYXWAEeSvTf7EWD7QRA _HOBBQHWAEeSvTf7EWD7QRA">
          <ownedEnd xmi:type="uml:Property" xmi:id="_HOCPYXWAEeSvTf7EWD7QRA" name="visitor" type="_yWknYHV2EeSvTf7EWD7QRA" association="_HOCPYHWAEeSvTf7EWD7QRA">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_HOCPYnWAEeSvTf7EWD7QRA"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HOCPY3WAEeSvTf7EWD7QRA" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zl0tcJRHEeWAs5MYUhc8EQ" name="A_node_visitor" memberEnd="_zl1UgpRHEeWAs5MYUhc8EQ _zl17kJRHEeWAs5MYUhc8EQ">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_zl1UgJRHEeWAs5MYUhc8EQ" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_zl1UgZRHEeWAs5MYUhc8EQ" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_zl17kJRHEeWAs5MYUhc8EQ" name="visitor" type="_yWknYHV2EeSvTf7EWD7QRA" association="_zl0tcJRHEeWAs5MYUhc8EQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pHxygM7lEeWm66KqBui2pQ"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pH0OwM7lEeWm66KqBui2pQ" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_6aglgPiEEeSlpJn94rgDzA" name="StateMetadata">
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_9M838PiEEeSlpJn94rgDzA" name="idle"/>
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-GXMMPiEEeSlpJn94rgDzA" name="active"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_kHnqIPfzEeS41tijFXo_Iw" name="TransitionMetadata">
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_ilq-sPiBEeS41tijFXo_Iw" name="none"/>
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_jzZWEPiBEeS41tijFXo_Iw" name="reached"/>
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_lLOEoPiBEeS41tijFXo_Iw" name="traversed"/>
          <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_mLrcEPiBEeS41tijFXo_Iw" name="completed"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_VpelING2EeWMvYElZ5Ee4w" name="DeferredEventOccurrence">
          <generalization xmi:type="uml:Generalization" xmi:id="_rNbOwNG2EeWMvYElZ5Ee4w">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_8w1B0NG7EeWB0O9YzCwUNg" name="constrainingStateActivation" type="_rVacUHV3EeSvTf7EWD7QRA" association="_8wTdYNG7EeWB0O9YzCwUNg"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_B5LmQdG9EeWB0O9YzCwUNg" name="deferredEventOccurrence" association="_B5KYING9EeWB0O9YzCwUNg">
            <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_8wTdYNG7EeWB0O9YzCwUNg" name="A_constrainingStateActivation_deferredEventOccurrence" memberEnd="_8w1B0NG7EeWB0O9YzCwUNg _8w7vgNG7EeWB0O9YzCwUNg">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_8wzzsNG7EeWB0O9YzCwUNg" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_8wzzsdG7EeWB0O9YzCwUNg" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_8w7vgNG7EeWB0O9YzCwUNg" name="deferredEventOccurrence" type="_VpelING2EeWMvYElZ5Ee4w" association="_8wTdYNG7EeWB0O9YzCwUNg">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pn-PsNG9EeWB0O9YzCwUNg"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pn-2wNG9EeWB0O9YzCwUNg" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_OWjiYNG8EeWB0O9YzCwUNg" memberEnd="_OWkJctG8EeWB0O9YzCwUNg _OWl-oNG8EeWB0O9YzCwUNg">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_OWkJcNG8EeWB0O9YzCwUNg" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_OWkJcdG8EeWB0O9YzCwUNg" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_OWkJctG8EeWB0O9YzCwUNg" name="stateactivation" type="_rVacUHV3EeSvTf7EWD7QRA" association="_OWjiYNG8EeWB0O9YzCwUNg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_B5KYING9EeWB0O9YzCwUNg" name="A_deferredEventOccurrence_deferral" memberEnd="_B5LmQdG9EeWB0O9YzCwUNg _B5LmQtG9EeWB0O9YzCwUNg">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_B5K_MNG9EeWB0O9YzCwUNg" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_B5LmQNG9EeWB0O9YzCwUNg" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_B5LmQtG9EeWB0O9YzCwUNg" name="deferral" type="_VpelING2EeWMvYElZ5Ee4w" association="_B5KYING9EeWB0O9YzCwUNg">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_oZEzoNG9EeWB0O9YzCwUNg" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZHP4NG9EeWB0O9YzCwUNg" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Pz_pYFgGEeaqSKm88dX50g" name="CallEventExecution">
          <generalization xmi:type="uml:Generalization" xmi:id="_0gUx8FgHEeaqSKm88dX50g">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_WlsUwFgIEeaqSKm88dX50g" name="operation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_XNWKoFgIEeaqSKm88dX50g" name="behavior">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_1jaKIFgIEeaqSKm88dX50g" name="callerSuspended">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_GReC4lgJEeaqSKm88dX50g" name="callerContext" association="_GRc0wFgJEeaqSKm88dX50g">
            <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Object"/>
          </ownedAttribute>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_WGz10FgHEeaqSKm88dX50g" name="_send" visibility="protected">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_djRAUFgHEeaqSKm88dX50g" name="eventOccurrence" type="_ScFF8FgGEeaqSKm88dX50g"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_YleQoFgHEeaqSKm88dX50g" name="_suspend" visibility="private"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_920AMFgHEeaqSKm88dX50g" name="execute">
            <ownedComment xmi:type="uml:Comment" xmi:id="_920AMVgHEeaqSKm88dX50g" annotatedElement="_920AMFgHEeaqSKm88dX50g">
              <body>Execute the behavior given by the type of this execution. &#xD;
The parameterValues for any input (in or in-out) parameters of the behavior should be set before the execution.&#xD;
The parameteValues for any output (in-out, out or return) parameters of the behavior will be set by the execution.&#xD;
</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_922ccFgHEeaqSKm88dX50g" name="getBehavior">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_922ccVgHEeaqSKm88dX50g" name="ReturnResult" direction="return">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_923qkFgHEeaqSKm88dX50g" name="new_">
            <ownedComment xmi:type="uml:Comment" xmi:id="_923qkVgHEeaqSKm88dX50g" annotatedElement="_923qkFgHEeaqSKm88dX50g">
              <body>Create a new execution with no behavior or parameterValues.&#xD;
</body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_923qklgHEeaqSKm88dX50g" name="ReturnResult" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Value"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_FEcrkFgIEeaqSKm88dX50g" name="releaseCaller"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_JDQDcFgIEeaqSKm88dX50g" name="getInputParameterValues">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_OVHlsFgIEeaqSKm88dX50g" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-BasicBehaviors-ParameterValue"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Pj9XYFgIEeaqSKm88dX50g"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Pj_zoFgIEeaqSKm88dX50g" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ScFF8FgGEeaqSKm88dX50g" name="CallEventOccurrence">
          <generalization xmi:type="uml:Generalization" xmi:id="_fawi4FgGEeaqSKm88dX50g">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          </generalization>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_vgepQFgGEeaqSKm88dX50g" name="execution" type="_Pz_pYFgGEeaqSKm88dX50g" association="_vgYioFgGEeaqSKm88dX50g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vgYioFgGEeaqSKm88dX50g" memberEnd="_vgepQFgGEeaqSKm88dX50g _vgfQUFgGEeaqSKm88dX50g">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_vgaX0FgGEeaqSKm88dX50g" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_vgaX0VgGEeaqSKm88dX50g" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_vgfQUFgGEeaqSKm88dX50g" name="calleventoccurrence" type="_ScFF8FgGEeaqSKm88dX50g" association="_vgYioFgGEeaqSKm88dX50g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_GRc0wFgJEeaqSKm88dX50g" memberEnd="_GReC4lgJEeaqSKm88dX50g _GRep8FgJEeaqSKm88dX50g">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_GReC4FgJEeaqSKm88dX50g" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_GReC4VgJEeaqSKm88dX50g" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_GRep8FgJEeaqSKm88dX50g" name="calleventexecution" type="_Pz_pYFgGEeaqSKm88dX50g" association="_GRc0wFgJEeaqSKm88dX50g"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_6GrUMFi8EeaMpZSzvy8A5Q" memberEnd="_6Gr7Qli8EeaMpZSzvy8A5Q _6GsiUFi8EeaMpZSzvy8A5Q">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_6Gr7QFi8EeaMpZSzvy8A5Q" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_6Gr7QVi8EeaMpZSzvy8A5Q" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_6GsiUFi8EeaMpZSzvy8A5Q" name="regionactivation" type="_mUrtYHV3EeSvTf7EWD7QRA" association="_6GrUMFi8EeaMpZSzvy8A5Q"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_qe6i4FjBEeaMpZSzvy8A5Q" memberEnd="_qe7J8VjBEeaMpZSzvy8A5Q _qe7J8ljBEeaMpZSzvy8A5Q">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_qe6i4VjBEeaMpZSzvy8A5Q" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_qe7J8FjBEeaMpZSzvy8A5Q" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_qe7J8ljBEeaMpZSzvy8A5Q" name="transitionactivation" type="_vJ5akHV3EeSvTf7EWD7QRA" association="_qe6i4FjBEeaMpZSzvy8A5Q">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wn56YFjBEeaMpZSzvy8A5Q"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wn8WoFjBEeaMpZSzvy8A5Q" value="*"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_RoRuUFliEeaMpZSzvy8A5Q" name="DoActivityContextObjectActivation" isActive="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_fiNSkFliEeaMpZSzvy8A5Q">
            <general xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-ObjectActivation"/>
          </generalization>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_p3hgkFliEeaMpZSzvy8A5Q" name="dispatchNextEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_nVY_YFmAEeaMpZSzvy8A5Q" memberEnd="_nVZmclmAEeaMpZSzvy8A5Q _nVZmc1mAEeaMpZSzvy8A5Q">
          <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_nVZmcFmAEeaMpZSzvy8A5Q" source="org.eclipse.papyrus">
            <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_nVZmcVmAEeaMpZSzvy8A5Q" key="nature" value="UML_Nature"/>
          </eAnnotations>
          <ownedEnd xmi:type="uml:Property" xmi:id="_nVZmc1mAEeaMpZSzvy8A5Q" name="pseudostateactivation" type="_htW88HV3EeSvTf7EWD7QRA" association="_nVY_YFmAEeaMpZSzvy8A5Q"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_UsmC0FmBEeaMpZSzvy8A5Q" name="HistoryPseudostateActivation" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_oFcmgFmEEeaMpZSzvy8A5Q" general="_htW88HV3EeSvTf7EWD7QRA"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_hVJcsFpbEeaMpZSzvy8A5Q" name="hasDefaultTransition">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_kiFSwFpbEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_65RccFmFEeaMpZSzvy8A5Q" name="restore">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QcQcwFmGEeaMpZSzvy8A5Q" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QcS5AFmGEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Sh4sgFmGEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_6eZeUFmFEeaMpZSzvy8A5Q" name="restore" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_A4vEgFmGEeaMpZSzvy8A5Q" name="regionActivation" type="_mUrtYHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_E1RykFmGEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_KjDNsFmGEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_uBWu0FmFEeaMpZSzvy8A5Q" name="enter">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_uBWu0VmFEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_uBWu0lmFEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_uBWu01mFEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uBWu1FmFEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uBWu1VmFEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZjPosFmBEeaMpZSzvy8A5Q" name="ConditionalPseudostateActivation" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_pvWjkFmEEeaMpZSzvy8A5Q" general="_htW88HV3EeSvTf7EWD7QRA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_VXvUwFmFEeaMpZSzvy8A5Q" name="ELSE_OPERATOR">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_cdOJsFmFEeaMpZSzvy8A5Q" name="else" value="else"/>
          </ownedAttribute>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_QPkhEFmFEeaMpZSzvy8A5Q" name="evaluateAllGuards">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_QPkhEVmFEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Hr5P0FmFEeaMpZSzvy8A5Q" name="isElseTransition">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_NiyKsFmFEeaMpZSzvy8A5Q" name="transitionActivation" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_nCEBcFmFEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_YnlEIFmhEeaMpZSzvy8A5Q" name="JunctionPseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_cr7qYFmhEeaMpZSzvy8A5Q" general="_ZjPosFmBEeaMpZSzvy8A5Q"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_-AzkYFmhEeaMpZSzvy8A5Q" name="enter">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-AzkYVmhEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-AzkYlmhEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_-AzkY1mhEeaMpZSzvy8A5Q" name="leastCommonAncestor" type="_mUrtYHV3EeSvTf7EWD7QRA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-AzkZFmhEeaMpZSzvy8A5Q"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-AzkZVmhEeaMpZSzvy8A5Q" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_sbcNwFoxEeaMpZSzvy8A5Q" name="DeepHistoryPseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_6zIsEFoxEeaMpZSzvy8A5Q" general="_UsmC0FmBEeaMpZSzvy8A5Q"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Vv-F8FoyEeaMpZSzvy8A5Q" name="canRestore">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_YsxOQFoyEeaMpZSzvy8A5Q" name="stateActivation" type="_rVacUHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_aNL4IFoyEeaMpZSzvy8A5Q" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_BkC_MFoyEeaMpZSzvy8A5Q" name="restore">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_BkC_MVoyEeaMpZSzvy8A5Q" name="regionActivation" type="_mUrtYHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_BkC_MloyEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_BkC_M1oyEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_xUuQ4FoxEeaMpZSzvy8A5Q" name="ShallowHistoryPseudostateActivation">
          <generalization xmi:type="uml:Generalization" xmi:id="_8bhmMFoxEeaMpZSzvy8A5Q" general="_UsmC0FmBEeaMpZSzvy8A5Q"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_DkDvIFoyEeaMpZSzvy8A5Q" name="restore">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_DkDvIVoyEeaMpZSzvy8A5Q" name="regionActivation" type="_mUrtYHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_DkDvIloyEeaMpZSzvy8A5Q" name="enteringTransition" type="_vJ5akHV3EeSvTf7EWD7QRA"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_DkDvI1oyEeaMpZSzvy8A5Q" name="eventOccurrence">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-CommonBehaviors-Communications-EventOccurrence"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_LFUAwHVxEeSfVojhNHzNrw" name="Loci">
        <packageImport xmi:type="uml:PackageImport" xmi:id="_97AFkMN7EeWpYp0WmASFoQ">
          <importedPackage xmi:type="uml:Package" href="PSCS_Semantics.uml#_3NM98N-9EeGnO-TF_1T_iQ"/>
        </packageImport>
        <packageImport xmi:type="uml:PackageImport" xmi:id="_eZDr0M5-EeWF7I4YWspV6w" importedPackage="_LFUAwHVxEeSfVojhNHzNrw"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tTknkHV2EeSvTf7EWD7QRA" name="SM_ExecutionFactory">
          <generalization xmi:type="uml:Generalization" xmi:id="__s09MHV-EeSvTf7EWD7QRA">
            <general xmi:type="uml:Class" href="PSCS_Semantics.uml#_ScbvYN--EeGnO-TF_1T_iQ"/>
          </generalization>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m5bYNQuEeWMJphss3BZSg" name="instantiateVisitor" specification="_EoMD8HV_EeSvTf7EWD7QRA">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m5bYdQuEeWMJphss3BZSg" name="element">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Element"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m5bYtQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m5bY9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m5bZNQuEeWMJphss3BZSg" name="result" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-SemanticVisitor"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m5bZdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m5bZtQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>// Provide the semantic visitor corresponding to the syntactic
// element provided as a parameter
SemanticVisitor visitor = null ;
if(element instanceof StateMachine){
	visitor = new StateMachineExecution();
}else if (element instanceof Pseudostate) {
	Pseudostate pseudostate = (Pseudostate) element;
	switch(pseudostate.getKind()){
		case INITIAL_LITERAL: visitor = new InitialPseudostateActivation(); break;
		case ENTRY_POINT_LITERAL: visitor = new EntryPointActivation(); break;
		case EXIT_POINT_LITERAL: visitor = new ExitPointActivation(); break;
		case CHOICE_LITERAL: visitor = new ChoicePseudostateActivation(); break;
		case FORK_LITERAL: visitor = new ForkPseudostateActivation(); break;
		case JOIN_LITERAL: visitor = new JoinPseudostateActivation(); break;
		case TERMINATE_LITERAL: visitor = new TerminatePseudostateActivation(); break;
		default: System.err.println(&quot;Element: &quot;+element+&quot; is not supported&quot;);break;
	}
}else if (element instanceof State) {
	if(element instanceof FinalState){
		visitor = new FinalStateActivation();
	}else{
		visitor = new StateActivation() ;
	}
}else if (element instanceof Transition) {
	Transition transition = (Transition) element;
	switch(transition.getKind()){
		case EXTERNAL_LITERAL: visitor = new ExternalTransitionActivation(); break;
		case INTERNAL_LITERAL: visitor = new InternalTransitionActivation(); break;
		case LOCAL_LITERAL: visitor = new LocalTransitionActivation(); break;
	}
}else if (element instanceof Region) {
	visitor = new RegionActivation();
}else if(element instanceof OpaqueExpression) {
	visitor = new SM_OpaqueExpressionEvaluation();
}else {
	visitor = super.instantiateVisitor(element);
}
return visitor;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_EoMD8HV_EeSvTf7EWD7QRA" name="instantiateVisitor" visibility="public" method="_0m5bYNQuEeWMJphss3BZSg">
            <ownedComment xmi:type="uml:Comment" xmi:id="_EoMD8XV_EeSvTf7EWD7QRA">
              <body>&lt;&lt;TextualRepresentation>>public instantiateVisitor (in element : Element ) : SemanticVisitor {
	// TODO
	return super.instantiateVisitor(element) ;
}</body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_EoMD8nV_EeSvTf7EWD7QRA" name="element">
              <type xmi:type="uml:Class" href="../Syntax/UML.uml#Element"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EoMD83V_EeSvTf7EWD7QRA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EoMD9HV_EeSvTf7EWD7QRA" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_EoMD9XV_EeSvTf7EWD7QRA" name="result" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Loci-LociL1-SemanticVisitor"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_EoMD9nV_EeSvTf7EWD7QRA" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EoMD93V_EeSvTf7EWD7QRA" value="1"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_0IXkYJRIEeWAs5MYUhc8EQ" name="SM_Locus">
          <generalization xmi:type="uml:Generalization" xmi:id="_GhNj8JRJEeWAs5MYUhc8EQ">
            <general xmi:type="uml:Class" href="PSCS_Semantics.uml#_m8YmQOYdEeGYZqnbU6eCYw"/>
          </generalization>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0m73oNQuEeWMJphss3BZSg" name="instantiate" specification="_LjFiYJRJEeWAs5MYUhc8EQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m73odQuEeWMJphss3BZSg" name="type">
              <type xmi:type="uml:Class" href="../Syntax/fUML_Syntax.uml#Syntax-Classes-Kernel-Class"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m73otQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m73o9QuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_0m73pNQuEeWMJphss3BZSg" name="result" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Object"/>
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0m73pdQuEeWMJphss3BZSg" value="1"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_0m73ptQuEeWMJphss3BZSg" value="1"/>
            </ownedParameter>
            <language>Java</language>
            <body>Object_ object = null;
if (type instanceof Behavior) {
	object = super.instantiate(type);
} else {
	object = new SM_Object();
	object.types.add(type);
	object.createFeatureValues();
	this.add(object);
}
return object;
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_LjFiYJRJEeWAs5MYUhc8EQ" name="instantiate" visibility="public" method="_0m73oNQuEeWMJphss3BZSg">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_LjFiYZRJEeWAs5MYUhc8EQ" name="type">
              <type xmi:type="uml:Class" href="../Syntax/fUML_Syntax.uml#Syntax-Classes-Kernel-Class"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_LjFiYpRJEeWAs5MYUhc8EQ" name="result" direction="return">
              <type xmi:type="uml:Class" href="fUML_Semantics.uml#Semantics-Classes-Kernel-Object"/>
            </ownedParameter>
            <redefinedOperation xmi:type="uml:Operation" href="fUML_Semantics.uml#Semantics-Loci-LociL1-Locus-instantiate.1"/>
          </ownedOperation>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </uml:Model>
  <css:ModelStyleSheets xmi:id="_v81hIHV8EeSvTf7EWD7QRA"/>
</xmi:XMI>
