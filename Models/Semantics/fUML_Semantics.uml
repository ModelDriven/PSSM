<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_0" name="fUML_Semantics">
  <packageImport xmi:id="_packageImport.0">
    <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
  </packageImport>
  <packagedElement xmi:type="uml:Package" xmi:id="Semantics" name="Semantics">
    <packagedElement xmi:type="uml:Package" xmi:id="Semantics-Classes" name="Classification" URI="">
      <packageImport xmi:id="_F-y2YM7AEeWF7I4YWspV6w" importedPackage="Semantics-CommonBehaviors"/>
      <packageImport xmi:id="_IHhdcM7AEeWF7I4YWspV6w" importedPackage="Semantics-Loci"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-Value" name="Value" isAbstract="true">
        <ownedComment xmi:id="Semantics-Classes-Kernel-Value-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Value">
          <body>A value is an instance of one or more classifiers, which are its types. A value is always representable using a value specification.&#xD;
&#xD;
[Note: Value specializes SemanticVisitor to allow the Execution subclass to be a semantic visitor, without requiring multiple generalization of Execution.]</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-Value-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-Value-_generalization.0" general="Semantics-Loci-LociL1-SemanticVisitor"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Value-equals" name="equals" specification="Semantics-Classes-Kernel-Value-equals.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-equals-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-equals-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-equals-otherValue-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-equals-otherValue-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if this value is equal to otherValue. To be equal, this value
// must have the same type as otherValue.
// This operation must be overridden in Value subclasses to check for
// equality of properties defined in those subclasses.

ClassifierList myTypes = this.getTypes();
ClassifierList otherTypes = otherValue.getTypes();

boolean isEqual = true;

// Debug.println(&quot;[equals] Value...&quot;);
// Debug.println(&quot;[equals] this has &quot; + myTypes.size() +
// &quot;types, other has &quot; + otherTypes.size() + &quot;.&quot;);
if (myTypes.size() != otherTypes.size()) {
	isEqual = false;

} else {
	// Debug.println(&quot;[equals] &quot; + myTypes.size() + &quot; type(s).&quot;);

	int i = 1;
	while (isEqual &amp; i &lt;= myTypes.size()) {

		// Debug.println(&quot;[equals] this type = &quot; +
		// myTypes.getValue(i-1).name);

		boolean matched = false;
		int j = 1;
		while (!matched &amp; j &lt;= otherTypes.size()) {
			// Debug.println(&quot;[equals] other type = &quot; +
			// otherTypes.getValue(j-1).name);
			matched = (otherTypes.getValue(j - 1) == myTypes
					.getValue(i - 1));
			j = j + 1;
		}

		isEqual = matched;
		i = i + 1;
	}
}

return isEqual;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Value-copy" name="copy" specification="Semantics-Classes-Kernel-Value-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new value that is equal to this value.
// By default, this operation simply creates a new value with empty
// properties.
// It must be overridden in each Value subclass to do the superclass
// copy and then appropriately set properties defined in the subclass.

return this.new_();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Value-hasType" name="hasType" specification="Semantics-Classes-Kernel-Value-hasType.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-hasType-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-hasType-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-hasType-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-hasType-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-hasType-type-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-hasType-type-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Check if this object has the given classifier as a type.

ClassifierList types = this.getTypes();

boolean found = false;
int i = 1;
while (!found &amp; i &lt;= types.size()) {
	found = (types.getValue(i - 1) == type);
	i = i + 1;
}

return found;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Value-specify" name="specify" isAbstract="true">
          <ownedComment xmi:id="Semantics-Classes-Kernel-Value-specify-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Value-specify">
            <body>Return a value specification whose evaluation gives a value equal to this value.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-specify-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Value-equals.1" name="equals" method="Semantics-Classes-Kernel-Value-equals">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-equals.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Value-copy.1" name="copy" method="Semantics-Classes-Kernel-Value-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Value-new_" name="new_" visibility="protected" isAbstract="true">
          <ownedComment xmi:id="Semantics-Classes-Kernel-Value-new_-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Value-new_">
            <body>Create a new value of the same Value subclass as this value, with all properties empty (even if this violates multiplicity constraints). &#xD;
This operation must be defined in each concrete Value subclass to create an instance of that subclass.&#xD;
&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Value-getTypes" name="getTypes" isAbstract="true">
          <ownedComment xmi:id="Semantics-Classes-Kernel-Value-getTypes-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Value-getTypes">
            <body>Gets all the classifiers under which this value is currently classifier.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-getTypes-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Value-getTypes-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Value-getTypes-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Value-hasType.1" name="hasType" method="Semantics-Classes-Kernel-Value-hasType">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-hasType.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-hasType.1-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Value-toString" name="toString" isAbstract="true">
          <ownedComment xmi:id="Semantics-Classes-Kernel-Value-toString-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Value-toString">
            <body>Return a string representation of this value.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Value-toString-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Gm47sM7BEeWF7I4YWspV6w" name="Values">
      <packageImport xmi:id="_wahxwM7BEeWF7I4YWspV6w" importedPackage="Semantics-Loci"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation" name="LiteralBooleanEvaluation">
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralBooleanEvaluation">
          <body>A boolean evaluation is an evaluation whose specification is a literal boolean.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Evaluate a literal boolean, producing a boolean value.

LiteralBoolean literal = (LiteralBoolean) specification;
BooleanValue booleanValue = new BooleanValue();
booleanValue.type = this.getType(&quot;Boolean&quot;);
booleanValue.value = literal.value;

return booleanValue;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralBooleanEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation" name="LiteralEvaluation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralEvaluation">
          <body>A literal evaluation is an evaluation whose specification is a Literal Specification.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-_generalization.0" general="Semantics-Classes-Kernel-Evaluation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType" name="getType" specification="Semantics-Classes-Kernel-LiteralEvaluation-getType.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#PrimitiveType"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-builtInTypeName" name="builtInTypeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-builtInTypeName-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType-builtInTypeName-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the type of the specification. If that is null, then use the
// built-in type of the given name.

PrimitiveType type = (PrimitiveType) (this.specification.type);

if (type == null) {
	type = this.locus.factory.getBuiltInType(builtInTypeName);
}

return type;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType.1" name="getType" method="Semantics-Classes-Kernel-LiteralEvaluation-getType">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#PrimitiveType"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralEvaluation-getType.1-builtInTypeName" name="builtInTypeName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation" name="LiteralIntegerEvaluation">
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralIntegerEvaluation">
          <body>A literal integer evaluation is an evaluation whose specification is a literal integer.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Evaluate a literal integer, producing an integer value.

LiteralInteger literal = (LiteralInteger) specification;
IntegerValue integerValue = new IntegerValue();
integerValue.type = this.getType(&quot;Integer&quot;);
integerValue.value = literal.value;

return integerValue;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralIntegerEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation" name="LiteralNullEvaluation">
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralNullEvaluation">
          <body>A literal null evaluation is an evaluation whose specification is a literal null.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Evaluate a literal null, returning nothing (since a null represents
// an &quot;absence of any value&quot;).

return null;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralNullEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation" name="LiteralStringEvaluation">
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralStringEvaluation">
          <body>A literal string evaluation is an evaluation whose specification is a literal string.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Evaluate a literal string, producing a string value.

LiteralString literal = (LiteralString) specification;
StringValue stringValue = new StringValue();
stringValue.type = this.getType(&quot;String&quot;);
stringValue.value = literal.value;

return stringValue;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralStringEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation" name="LiteralUnlimitedNaturalEvaluation">
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation">
          <body>A literal unlimited natural evaluation is an evaluation whose specification is a literal unlimited natural.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Evaluate a literal unlimited natural producing an unlimited natural
// value.

LiteralUnlimitedNatural literal = (LiteralUnlimitedNatural) specification;
UnlimitedNaturalValue unlimitedNaturalValue = new UnlimitedNaturalValue();
unlimitedNaturalValue.type = this.getType(&quot;UnlimitedNatural&quot;);
unlimitedNaturalValue.value = literal.value;

return unlimitedNaturalValue;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralUnlimitedNaturalEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation" name="InstanceValueEvaluation">
        <ownedComment xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-InstanceValueEvaluation">
          <body>An instance value evaluation is an evaluation whose specification is an instance value. </body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-_generalization.0" general="Semantics-Classes-Kernel-Evaluation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If the instance specification is for an enumeration, then return the
// identified enumeration literal.
// If the instance specification is for a data type (but not a primitive
// value or an enumeration), then create a data value of the given data
// type.
// If the instance specification is for an object, then create an object
// at the current locus with the specified types.
// Set each feature of the created value to the result of evaluating the
// value specifications for the specified slot for the feature.

// Debug.println(&quot;[evaluate] InstanceValueEvaluation...&quot;);

InstanceSpecification instance = ((InstanceValue) this.specification).instance;
ClassifierList types = instance.classifier;
Classifier myType = types.getValue(0);

Debug.println(&quot;[evaluate] type = &quot; + myType.name);

Value value;
if (instance instanceof EnumerationLiteral) {
	// Debug.println(&quot;[evaluate] Type is an enumeration.&quot;);
	EnumerationValue enumerationValue = new EnumerationValue();
	enumerationValue.type = (Enumeration) myType;
	enumerationValue.literal = (EnumerationLiteral) instance;
	value = enumerationValue;
} else {
	StructuredValue structuredValue = null;

	if (myType instanceof DataType) {
		// Debug.println(&quot;[evaluate] Type is a data type.&quot;);
		DataValue dataValue = new DataValue();
		dataValue.type = (DataType) myType;
		structuredValue = dataValue;
	} else {
		Object_ object = null;
		if (myType instanceof Behavior) {
			// Debug.println(&quot;[evaluate] Type is a behavior.&quot;);
			object = this.locus.factory.createExecution(
					(Behavior) myType, null);
		} else {
			// Debug.println(&quot;[evaluate] Type is a class.&quot;);
			object = new Object_();
			for (int i = 0; i &lt; types.size(); i++) {
				Classifier type = types.getValue(i);
				object.types.addValue((Class_) type);
			}
		}

		this.locus.add(object);

		Reference reference = new Reference();
		reference.referent = object;
		structuredValue = reference;
	}

	structuredValue.createFeatureValues();

	// Debug.println(&quot;[evaluate] &quot; + instance.slot.size() +
	// &quot; slot(s).&quot;);

	SlotList instanceSlots = instance.slot;
	for (int i = 0; i &lt; instanceSlots.size(); i++) {
		Slot slot = instanceSlots.getValue(i);
		ValueList values = new ValueList();

		// Debug.println(&quot;[evaluate] feature = &quot; +
		// slot.definingFeature.name + &quot;, &quot; + slot.value.size() +
		// &quot; value(s).&quot;);
		ValueSpecificationList slotValues = slot.value;
		for (int j = 0; j &lt; slotValues.size(); j++) {
			ValueSpecification slotValue = slotValues.getValue(j);
			// Debug.println(&quot;[evaluate] Value = &quot; +
			// slotValue.getClass().getName());
			values.addValue(this.locus.executor.evaluate(slotValue));
		}
		structuredValue
				.setFeatureValue(slot.definingFeature, values, 0);
	}

	value = structuredValue;
}

return value;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-InstanceValueEvaluation-evaluate.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-Evaluation" name="Evaluation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Classes-Kernel-Evaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Evaluation">
          <body>An evaluation is used to evaluate a value specification to produce a value.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-Evaluation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-Evaluation-_generalization.0" general="Semantics-Loci-LociL1-SemanticVisitor"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-Evaluation-specification" name="specification" association="Semantics-Classes-Kernel-A_specification_evaluation">
          <ownedComment xmi:id="Semantics-Classes-Kernel-Evaluation-specification-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Evaluation-specification">
            <body>The value specification to be evaluated.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Evaluation-specification-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Evaluation-specification-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-Evaluation-locus" name="locus" type="Semantics-Loci-LociL1-Locus" association="Semantics-Classes-Kernel-A_locus_evaluation">
          <ownedComment xmi:id="Semantics-Classes-Kernel-Evaluation-locus-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Evaluation-locus">
            <body>The locus at which this evaluation is taking place.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Evaluation-locus-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Evaluation-locus-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Evaluation-evaluate" name="evaluate" isAbstract="true" isQuery="true">
          <ownedComment xmi:id="Semantics-Classes-Kernel-Evaluation-evaluate-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Evaluation-evaluate">
            <body>Evaluate the specification, returning the resulting value.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Evaluation-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Evaluation-evaluate-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Evaluation-evaluate-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_specification_evaluation" name="A_specification_evaluation" visibility="private" memberEnd="Semantics-Classes-Kernel-Evaluation-specification Semantics-Classes-Kernel-A_specification_evaluation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_specification_evaluation-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-Evaluation" association="Semantics-Classes-Kernel-A_specification_evaluation">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_specification_evaluation-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_specification_evaluation-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_locus_evaluation" name="A_locus_evaluation" visibility="private" memberEnd="Semantics-Classes-Kernel-Evaluation-locus Semantics-Classes-Kernel-A_locus_evaluation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_locus_evaluation-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-Evaluation" association="Semantics-Classes-Kernel-A_locus_evaluation">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_locus_evaluation-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_locus_evaluation-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_LzvbEM7BEeWF7I4YWspV6w" name="SimpleClassifiers">
      <packageImport xmi:id="_m_ygMM7CEeWF7I4YWspV6w" importedPackage="Semantics-Classes"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-StructuredValue" name="StructuredValue" isAbstract="true">
        <ownedComment xmi:id="Semantics-Classes-Kernel-StructuredValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-StructuredValue">
          <body>A structured value is a Value whose type has structural features: a data type (but not a primitive type or enumeration), a class or an association.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-StructuredValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-StructuredValue-_generalization.0" general="Semantics-Classes-Kernel-Value"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-specify" name="specify" specification="Semantics-Classes-Kernel-StructuredValue-specify.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-specify-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-specify-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-specify-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return an instance value that specifies this structured value.

// Debug.println(&quot;[specify] StructuredValue...&quot;);

InstanceValue instanceValue = new InstanceValue();
InstanceSpecification instance = new InstanceSpecification();

instanceValue.type = null;
instanceValue.instance = instance;

instance.classifier = this.getTypes();

FeatureValueList featureValues = this.getFeatureValues();
// Debug.println(&quot;[specify] &quot; + featureValues.size() + &quot; feature(s).&quot;);

for (int i = 0; i &lt; featureValues.size(); i++) {
	FeatureValue featureValue = featureValues.getValue(i);

	Slot slot = new Slot();
	slot.definingFeature = featureValue.feature;

	// Debug.println(&quot;[specify] feature = &quot; + featureValue.feature.name
	// + &quot;, &quot; + featureValue.values.size() + &quot; value(s).&quot;);

	ValueList values = featureValue.values;
	for (int j = 0; j &lt; values.size(); j++) {
		Value value = values.getValue(j);
		// Debug.println(&quot;[specify] value = &quot; + value);
		slot.value.addValue(value.specify());
	}

	instance.slot.addValue(slot);
}

return instanceValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-createFeatureValues" name="createFeatureValues" specification="Semantics-Classes-Kernel-StructuredValue-createFeatureValues.1">
          <language>Java</language>
          <body>// Create empty feature values for all structural features of the types 
// of this structured value and all its supertypes (including private
// features that are not inherited).

this.addFeatureValues(new FeatureValueList());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues" name="getMemberValues" specification="Semantics-Classes-Kernel-StructuredValue-getMemberValues.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues-result" name="result" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues-result-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues-result-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the feature values for this structured value that are for structural
// features that are members of one of the types of the structured value.
// (That is, they are owned are inherited, excluding private features of
// supertypes that are not inherited.)

FeatureValueList featureValues = this.getFeatureValues();
FeatureValueList memberValues = new FeatureValueList();

ClassifierList types = this.getTypes();
for (int i = 0; i &lt; featureValues.size(); i++) {
	FeatureValue featureValue = featureValues.getValue(i);
	Boolean isMember = false;
	int j = 1;
	while (j &lt;= types.size() &amp; !isMember) {
		Classifier type = types.getValue(j-1);
		NamedElementList members = type.member;
		int k = 1;
		while (k &lt;= members.size() &amp; !isMember) {
			NamedElement member = members.getValue(k-1);
			isMember = featureValue.feature == member;
			k = k + 1;
		}
		j = j + 1;
	}
	if (isMember) {
		memberValues.addValue(featureValue);
	}
}

return memberValues;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues" name="addFeatureValues" specification="Semantics-Classes-Kernel-StructuredValue-addFeatureValues.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues-oldFeatureValues" name="oldFeatureValues" type="Semantics-Classes-Kernel-FeatureValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues-oldFeatureValues-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues-oldFeatureValues-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add feature values for all structural features of the types 
// of this structured value and all its supertypes (including private
// features that are not inherited). If a feature has an old feature 
// value in the given list, then use that to initialize the values of 
// the corresponding new feature value. Otherwise leave the values of 
// the new feature value empty.

ClassifierList types = this.getTypes();

for (int i = 0; i &lt; types.size(); i++) {
	Classifier type = types.getValue(i);
	this.addFeatureValuesForType(type, oldFeatureValues);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType" name="addFeatureValuesForType" specification="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType-oldFeatureValues" name="oldFeatureValues" type="Semantics-Classes-Kernel-FeatureValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType-oldFeatureValues-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType-oldFeatureValues-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add feature values for all structural features of the given type and
// all of its supertypes (including private features that are not
// inherited). If a feature has an old feature value in the given list,
// then use that to initialize the values of the corresponding new
// feature value. Otherwise leave the values of the new feature value
// empty.

// Set feature values for the owned structural features of the given
// type. (Any common structural values that have already been added
// previously will simply have their values set again.)
NamedElementList ownedMembers = type.ownedMember;
for (int j = 0; j &lt; ownedMembers.size(); j++) {
	NamedElement ownedMember = ownedMembers.getValue(j);
	if (ownedMember instanceof StructuralFeature) {
		this.setFeatureValue((StructuralFeature) ownedMember, 
			this.getValues(ownedMember, oldFeatureValues), 0);
	}
}

// Add feature values for the structural features of the supertypes
// of the given type. (Note that the feature values for supertype
// features always come after the feature values for owned features.)
ClassifierList supertypes = type.general;		
for (int i = 0; i &lt; supertypes.size(); i++) {
	Classifier supertype = supertypes.getValue(i);
	this.addFeatureValuesForType(supertype, oldFeatureValues);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues" name="getValues" specification="Semantics-Classes-Kernel-StructuredValue-getValues.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-featureValues" name="featureValues" type="Semantics-Classes-Kernel-FeatureValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-featureValues-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-featureValues-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-result" name="result" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-result-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues-result-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the values from the feature value in the given list for the 
// given feature. If there is no such feature value, return an empty
// list.

FeatureValue foundFeatureValue = null;

int i = 1;
while (foundFeatureValue == null &amp; i &lt;= featureValues.size()) {
	FeatureValue featureValue = featureValues.getValue(i-1);
	if (featureValue.feature == feature) {
		foundFeatureValue = featureValue;
	}
	i = i + 1;
}

ValueList values;
if (foundFeatureValue == null) {
	values = new ValueList();
} else {
	values = foundFeatureValue.values;
}

return values;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StructuredValue-specify.1" name="specify" method="Semantics-Classes-Kernel-StructuredValue-specify">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValue" name="getFeatureValue" isAbstract="true">
          <ownedComment xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-StructuredValue-getFeatureValue">
            <body>Get the feature value associated with the given feature. &#xD;
The given feature must be a structural feature of the type of the structured value.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValue-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue" name="setFeatureValue" isAbstract="true">
          <ownedComment xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-StructuredValue-setFeatureValue">
            <body>Set the value(s) and, optionally, the position index associated with the given feature. &#xD;
The given feature must be a structural feature of the type of the structured value.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-values" name="values" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-values-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-values-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-position" name="position">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-position-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-setFeatureValue-position-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValues" name="getFeatureValues" isAbstract="true">
          <ownedComment xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValues-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-StructuredValue-getFeatureValues">
            <body>Return the feature values associated with this structural value.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValues-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getFeatureValues-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StructuredValue-createFeatureValues.1" name="createFeatureValues" method="Semantics-Classes-Kernel-StructuredValue-createFeatureValues"/>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues.1" name="getMemberValues" method="Semantics-Classes-Kernel-StructuredValue-getMemberValues">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues.1-result" name="result" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues.1-result-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getMemberValues.1-result-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues.1" name="addFeatureValues" method="Semantics-Classes-Kernel-StructuredValue-addFeatureValues">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues.1-oldFeatureValues" name="oldFeatureValues" type="Semantics-Classes-Kernel-FeatureValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues.1-oldFeatureValues-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValues.1-oldFeatureValues-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1" name="addFeatureValuesForType" method="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1-oldFeatureValues" name="oldFeatureValues" type="Semantics-Classes-Kernel-FeatureValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1-oldFeatureValues-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-addFeatureValuesForType.1-oldFeatureValues-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1" name="getValues" method="Semantics-Classes-Kernel-StructuredValue-getValues">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#NamedElement"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-featureValues" name="featureValues" type="Semantics-Classes-Kernel-FeatureValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-featureValues-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-featureValues-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-result" name="result" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-result-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StructuredValue-getValues.1-result-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue" name="UnlimitedNaturalValue">
        <ownedComment xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-UnlimitedNaturalValue">
          <body>An unlimited natural value is a primitive value whose type is UnlimitedNatural.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-_generalization.0" general="Semantics-Classes-Kernel-PrimitiveValue"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-value" name="value">
          <ownedComment xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-value-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-UnlimitedNaturalValue-value">
            <body>The actual unlimited natural value.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify" name="specify" specification="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return a literal unlimited natural with the value of this unlimited
// natural value.

LiteralUnlimitedNatural literal = new LiteralUnlimitedNatural();

literal.type = this.type;
literal.value = this.value;

return literal;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals" name="equals" specification="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-otherValue-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals-otherValue-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if this unlimited natural value is equal to the otherValue.
// To be equal, the otherValue must have the same value as this
// unlimited natural value.

boolean isEqual = false;
if (otherValue instanceof UnlimitedNaturalValue) {
	isEqual = ((UnlimitedNaturalValue) otherValue).value.naturalValue == this.value.naturalValue;
}

return isEqual;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy" name="copy" specification="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new unlimited natural value with the same value as this
// value.

UnlimitedNaturalValue newValue = (UnlimitedNaturalValue) (super.copy());

newValue.value = this.value;
return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_" name="new_" specification="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new unlimited natural value with no value.

return new UnlimitedNaturalValue();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString" name="toString" specification="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>String stringValue = &quot;*&quot;;

if (this.value.naturalValue >= 0) {
	IntegerValue integerValue = new IntegerValue();
	integerValue.value = this.value.naturalValue;
	stringValue = integerValue.toString();
}

return stringValue;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify.1" name="specify" method="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals.1" name="equals" method="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy.1" name="copy" method="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString.1" name="toString" method="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-UnlimitedNaturalValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-StringValue" name="StringValue">
        <ownedComment xmi:id="Semantics-Classes-Kernel-StringValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-StringValue">
          <body>A string value is a primitive value whose type is String.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-StringValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-StringValue-_generalization.0" general="Semantics-Classes-Kernel-PrimitiveValue"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-StringValue-value" name="value">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StringValue-specify" name="specify" specification="Semantics-Classes-Kernel-StringValue-specify.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-specify-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-specify-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-specify-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return a literal string with the value of this string value.

LiteralString literal = new LiteralString();

literal.type = this.type;
literal.value = this.value;

return literal;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StringValue-equals" name="equals" specification="Semantics-Classes-Kernel-StringValue-equals.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-equals-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-equals-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-equals-otherValue-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-equals-otherValue-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if this string value is equal to the otherValue.
// To be equal, the otherValue must have the same value as this string
// value.

boolean isEqual = false;
if (otherValue instanceof StringValue) {
	isEqual = ((StringValue) otherValue).value.equals(this.value);
}

return isEqual;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StringValue-copy" name="copy" specification="Semantics-Classes-Kernel-StringValue-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new string value with the same value as this string value.

StringValue newValue = (StringValue) (super.copy());

newValue.value = this.value;
return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StringValue-new_" name="new_" specification="Semantics-Classes-Kernel-StringValue-new_.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-new_-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-new_-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new string value with no value.

return new StringValue();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-StringValue-toString" name="toString" specification="Semantics-Classes-Kernel-StringValue-toString.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-toString-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-StringValue-toString-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-StringValue-toString-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>return value;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StringValue-specify.1" name="specify" method="Semantics-Classes-Kernel-StringValue-specify">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StringValue-equals.1" name="equals" method="Semantics-Classes-Kernel-StringValue-equals">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StringValue-copy.1" name="copy" method="Semantics-Classes-Kernel-StringValue-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StringValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-StringValue-new_">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-StringValue-toString.1" name="toString" method="Semantics-Classes-Kernel-StringValue-toString">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-StringValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-PrimitiveValue" name="PrimitiveValue" isAbstract="true">
        <ownedComment xmi:id="Semantics-Classes-Kernel-PrimitiveValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-PrimitiveValue">
          <body>A primitive value is a value whose (single) type is a primitive type.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-PrimitiveValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-PrimitiveValue-_generalization.0" general="Semantics-Classes-Kernel-Value"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-PrimitiveValue-type" name="type" association="Semantics-Classes-Kernel-A_type_primitiveValue">
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#PrimitiveType"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-type-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-type-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy" name="copy" specification="Semantics-Classes-Kernel-PrimitiveValue-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new value that is equal to this primitive value.

PrimitiveValue newValue = (PrimitiveValue) (super.copy());

newValue.type = this.type;
return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-PrimitiveValue-getTypes.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the single primitive type of this value.

ClassifierList types = new ClassifierList();
types.addValue(this.type);
return types;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy.1" name="copy" method="Semantics-Classes-Kernel-PrimitiveValue-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-PrimitiveValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-PrimitiveValue-getTypes">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-PrimitiveValue-getTypes.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-IntegerValue" name="IntegerValue">
        <ownedComment xmi:id="Semantics-Classes-Kernel-IntegerValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-IntegerValue">
          <body>An integer value is a primitive value whose type is Integer.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-IntegerValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-IntegerValue-_generalization.0" general="Semantics-Classes-Kernel-PrimitiveValue"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-IntegerValue-value" name="value">
          <ownedComment xmi:id="Semantics-Classes-Kernel-IntegerValue-value-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-IntegerValue-value">
            <body>The actual Integer value.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-IntegerValue-specify" name="specify" specification="Semantics-Classes-Kernel-IntegerValue-specify.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-specify-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-specify-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-specify-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return a literal integer with the value of this integer value.

LiteralInteger literal = new LiteralInteger();

literal.type = this.type;
literal.value = this.value;

return literal;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals" name="equals" specification="Semantics-Classes-Kernel-IntegerValue-equals.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-otherValue-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-equals-otherValue-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if this integer value is equal to the otherValue.
// To be equal, the otherValue must have the same value as this integer
// value.

boolean isEqual = false;
if (otherValue instanceof IntegerValue) {
	isEqual = ((IntegerValue) otherValue).value == this.value;
}

return isEqual;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-IntegerValue-copy" name="copy" specification="Semantics-Classes-Kernel-IntegerValue-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new integer value with the same value as this integer value.

IntegerValue newValue = (IntegerValue) (super.copy());

newValue.value = this.value;
return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-IntegerValue-new_" name="new_" specification="Semantics-Classes-Kernel-IntegerValue-new_.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-new_-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-new_-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new integer value with no value.

return new IntegerValue();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-IntegerValue-toString" name="toString" specification="Semantics-Classes-Kernel-IntegerValue-toString.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-toString-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-IntegerValue-toString-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-IntegerValue-toString-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>String stringValue = &quot;&quot;;

if (this.value == 0) {
	stringValue = &quot;0&quot;;
} else {
	int positiveValue = this.value;

	if (positiveValue &lt; 0) {
		positiveValue = -positiveValue;
	}

	do {
		int digit = positiveValue % 10;

		if (digit == 0) {
			stringValue = &quot;0&quot; + stringValue;
		} else if (digit == 1) {
			stringValue = &quot;1&quot; + stringValue;
		} else if (digit == 2) {
			stringValue = &quot;2&quot; + stringValue;
		} else if (digit == 3) {
			stringValue = &quot;3&quot; + stringValue;
		} else if (digit == 4) {
			stringValue = &quot;4&quot; + stringValue;
		} else if (digit == 5) {
			stringValue = &quot;5&quot; + stringValue;
		} else if (digit == 6) {
			stringValue = &quot;6&quot; + stringValue;
		} else if (digit == 7) {
			stringValue = &quot;7&quot; + stringValue;
		} else if (digit == 8) {
			stringValue = &quot;8&quot; + stringValue;
		} else if (digit == 9) {
			stringValue = &quot;9&quot; + stringValue;
		}

		positiveValue = positiveValue / 10;
	} while (positiveValue > 0);

	if (this.value &lt; 0) {
		stringValue = &quot;-&quot; + stringValue;
	}
}

return stringValue;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-IntegerValue-specify.1" name="specify" method="Semantics-Classes-Kernel-IntegerValue-specify">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-IntegerValue-equals.1" name="equals" method="Semantics-Classes-Kernel-IntegerValue-equals">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-IntegerValue-copy.1" name="copy" method="Semantics-Classes-Kernel-IntegerValue-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-IntegerValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-IntegerValue-new_">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-IntegerValue-toString.1" name="toString" method="Semantics-Classes-Kernel-IntegerValue-toString">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-IntegerValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-FeatureValue" name="FeatureValue">
        <ownedComment xmi:id="Semantics-Classes-Kernel-FeatureValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-FeatureValue">
          <body>A feature value gives the value(s) that a single structural feature has in a specific structured value.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-FeatureValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-FeatureValue-feature" name="feature" association="Semantics-Classes-Kernel-A_feature_featureValue">
          <ownedComment xmi:id="Semantics-Classes-Kernel-FeatureValue-feature-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-FeatureValue-feature">
            <body>The structural feature being given value(s).</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-feature-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-feature-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-FeatureValue-values" name="values" type="Semantics-Classes-Kernel-Value" isOrdered="true" isUnique="false" aggregation="composite" association="Semantics-Classes-Kernel-A_values_featureValue">
          <ownedComment xmi:id="Semantics-Classes-Kernel-FeatureValue-values-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-FeatureValue-values">
            <body>The values of for the feature. Zero or more values are possible, as constrained by the multiplicity of the feature.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-values-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-values-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-FeatureValue-position" name="position">
          <ownedComment xmi:id="Semantics-Classes-Kernel-FeatureValue-position-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-FeatureValue-position">
            <body>The position of this feature value in a set of ordered values for a feature of an association.&#xD;
[This is only relevant if the feature value is for a link and the feature is ordered.]</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-position-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-position-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues" name="hasEqualValues" specification="Semantics-Classes-Kernel-FeatureValue-hasEqualValues.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-other" name="other" type="Semantics-Classes-Kernel-FeatureValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-other-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues-other-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Determine if this feature value has an equal set of values as another
// feature value.
// If the feature is ordered, then the values also have to be in the
// same order.

boolean equal = true;

if (this.values.size() != other.values.size()) {
	equal = false;

} else {

	// Debug.println(&quot;[hasEqualValues] feature = &quot; + this.feature.name +
	// &quot;, &quot; + this.values.size() + &quot; value(s).&quot;);

	if (this.feature.multiplicityElement.isOrdered) {
		int i = 1;
		while (equal &amp; i &lt;= this.values.size()) {
			equal = this.values.getValue(i - 1).equals(
					other.values.getValue(i - 1));
			i = i + 1;
		}

	} else {
		// Note: otherFeatureValues is used here solely as a holder for
		// a copy of the list of other values,
		// since the Java to UML mapping conventions do not allow
		// &quot;remove&quot; on a local list variable.
		FeatureValue otherFeatureValues = new FeatureValue();
		ValueList values = other.values;
		for (int i = 0; i &lt; values.size(); i++) {
			Value value = values.getValue(i);
			otherFeatureValues.values.addValue(value);
		}

		int i = 1;
		while (equal &amp; i &lt;= this.values.size()) {
			// Debug.println(&quot;[hasEqualValues] This value [&quot; + (i-1) +
			// &quot;] = &quot; + this.values.getValue(i-1));

			boolean matched = false;
			int j = 1;
			while (!matched &amp; j &lt;= otherFeatureValues.values.size()) {
				if (this.values.getValue(i - 1).equals(
						otherFeatureValues.values.getValue(j - 1))) {
					// Debug.println(&quot;[hasEqualValues] Other value [&quot; +
					// (j-1) + &quot;] = &quot; +
					// otherFeatureValues.values.getValue(j-1));
					matched = true;
					otherFeatureValues.values.remove(j - 1);
				}
				j = j + 1;
			}

			equal = matched;
			i = i + 1;
		}
	}
}

return equal;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-FeatureValue-copy" name="copy" specification="Semantics-Classes-Kernel-FeatureValue-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-FeatureValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-FeatureValue-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-FeatureValue-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a copy of this feature value.

FeatureValue newValue = new FeatureValue();

newValue.feature = this.feature;
newValue.position = this.position;

ValueList values = this.values;
for (int i = 0; i &lt; values.size(); i++) {
	Value value = values.getValue(i);
	newValue.values.addValue(value.copy());
}

return newValue;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues.1" name="hasEqualValues" method="Semantics-Classes-Kernel-FeatureValue-hasEqualValues">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-FeatureValue-hasEqualValues.1-other" name="other" type="Semantics-Classes-Kernel-FeatureValue"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-FeatureValue-copy.1" name="copy" method="Semantics-Classes-Kernel-FeatureValue-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-FeatureValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-EnumerationValue" name="EnumerationValue">
        <ownedComment xmi:id="Semantics-Classes-Kernel-EnumerationValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-EnumerationValue">
          <body>An enumeration value is a value whose (single) type is an enumeration. &#xD;
It's literal must be an owned literal of it's type.&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-EnumerationValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-EnumerationValue-_generalization.0" general="Semantics-Classes-Kernel-Value"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-EnumerationValue-literal" name="literal" association="Semantics-Classes-Kernel-A_literal_enumerationValue">
          <ownedComment xmi:id="Semantics-Classes-Kernel-EnumerationValue-literal-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-EnumerationValue-literal">
            <body>The literal value of this enumeration value.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#EnumerationLiteral"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-literal-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-literal-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-EnumerationValue-type" name="type" association="Semantics-Classes-Kernel-A_type_enumerationValue">
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#Enumeration"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-type-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-type-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify" name="specify" specification="Semantics-Classes-Kernel-EnumerationValue-specify.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return an instance value with literal as the instance.

InstanceValue instanceValue = new InstanceValue();
InstanceSpecification instance = new InstanceSpecification();

instanceValue.type = this.type;
instanceValue.instance = this.literal;

return instanceValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals" name="equals" specification="Semantics-Classes-Kernel-EnumerationValue-equals.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-otherValue-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals-otherValue-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if this enumeration value is equal to the otherValue.
// To be equal, the otherValue must also be an enumeration value with
// the same literal as this enumeration value.

boolean isEqual = false;
if (otherValue instanceof EnumerationValue) {
	isEqual = ((EnumerationValue) otherValue).literal == this.literal;
}

return isEqual;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy" name="copy" specification="Semantics-Classes-Kernel-EnumerationValue-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new enumeration value with the same literal as this
// enumeration value.

EnumerationValue newValue = (EnumerationValue) (super.copy());

newValue.type = this.type;
newValue.literal = this.literal;

return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_" name="new_" specification="Semantics-Classes-Kernel-EnumerationValue-new_.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new enumeration value with no literal.

return new EnumerationValue();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-EnumerationValue-getTypes.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the single type of this enumeration value.

ClassifierList types = new ClassifierList();
types.addValue(this.type);

return types;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString" name="toString" specification="Semantics-Classes-Kernel-EnumerationValue-toString.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>return literal.name;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify.1" name="specify" method="Semantics-Classes-Kernel-EnumerationValue-specify">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals.1" name="equals" method="Semantics-Classes-Kernel-EnumerationValue-equals">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy.1" name="copy" method="Semantics-Classes-Kernel-EnumerationValue-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-EnumerationValue-new_">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-EnumerationValue-getTypes">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-EnumerationValue-getTypes.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString.1" name="toString" method="Semantics-Classes-Kernel-EnumerationValue-toString">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-EnumerationValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-DataValue" name="DataValue">
        <ownedComment xmi:id="Semantics-Classes-Kernel-DataValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-DataValue">
          <body>A data value is a compund value whose (single) type is a data type other than a primitive type or an enumeration.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-DataValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-DataValue-_generalization.0" general="Semantics-Classes-Kernel-CompoundValue"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-DataValue-type" name="type" association="Semantics-Classes-Kernel-A_type_dataValue">
          <ownedComment xmi:id="Semantics-Classes-Kernel-DataValue-type-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-DataValue-type">
            <body>The type of this data value. This must not be a primitive or an enumeration.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#DataType"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DataValue-type-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DataValue-type-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-DataValue-getTypes.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DataValue-getTypes-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the single type of this data value.

ClassifierList types = new ClassifierList();
types.addValue(this.type);

return types;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-DataValue-copy" name="copy" specification="Semantics-Classes-Kernel-DataValue-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DataValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DataValue-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DataValue-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new data value with the same type and feature values as this
// data value.

DataValue newValue = (DataValue) (super.copy());

newValue.type = this.type;

return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-DataValue-new_" name="new_" specification="Semantics-Classes-Kernel-DataValue-new_.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DataValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DataValue-new_-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DataValue-new_-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new data value with no type or feature values.

return new DataValue();
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-DataValue-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-DataValue-getTypes">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DataValue-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DataValue-getTypes.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-DataValue-copy.1" name="copy" method="Semantics-Classes-Kernel-DataValue-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DataValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-DataValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-DataValue-new_">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DataValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-CompoundValue" name="CompoundValue" isAbstract="true">
        <ownedComment xmi:id="Semantics-Classes-Kernel-CompoundValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-CompoundValue">
          <body>A compound value is a structured value with by-value semantics. Values are associated with each structural feature specified by the type(s) of the compound value.&#xD;
</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-CompoundValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-CompoundValue-_generalization.0" general="Semantics-Classes-Kernel-StructuredValue"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-CompoundValue-featureValues" name="featureValues" type="Semantics-Classes-Kernel-FeatureValue" aggregation="composite" association="Semantics-Classes-Kernel-A_featureValues_compoundValue">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-featureValues-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-featureValues-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals" name="equals" specification="Semantics-Classes-Kernel-CompoundValue-equals.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-otherValue-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-equals-otherValue-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if this data value is equal to the otherValue.
// To be equal, the otherValue must also be a compund value with the
// same types and equal values for each feature.

// Debug.println(&quot;[equals] othervalue instanceof CompoundValue = &quot; + (otherValue instanceof CompoundValue));
// Debug.println(&quot;[equals] super.equals(otherValue) = &quot; + super.equals(otherValue));

boolean isEqual = otherValue instanceof CompoundValue;

if (isEqual) {

	CompoundValue otherCompoundValue = (CompoundValue) otherValue;
	// Debug.println(&quot;[equals] &quot; + this.featureValues.size() +
	// &quot; feature(s).&quot;);

	isEqual = super.equals(otherValue)
			&amp; otherCompoundValue.featureValues.size() == this.featureValues
					.size();

	int i = 1;
	while (isEqual &amp; i &lt;= this.featureValues.size()) {
		FeatureValue thisFeatureValue = this.featureValues
				.getValue(i - 1);

		boolean matched = false;
		int j = 1;
		while (!matched &amp; j &lt;= otherCompoundValue.featureValues.size()) {
			FeatureValue otherFeatureValue = otherCompoundValue.featureValues
					.getValue(j - 1);
			if (thisFeatureValue.feature == otherFeatureValue.feature) {
				matched = thisFeatureValue
						.hasEqualValues(otherFeatureValue);
			}
			j = j + 1;
		}

		isEqual = matched;
		i = i + 1;
	}
}

return isEqual;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-copy" name="copy" specification="Semantics-Classes-Kernel-CompoundValue-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new data value with the same featureValues as this data
// value.

CompoundValue newValue = (CompoundValue) (super.copy());

FeatureValueList featureValues = this.featureValues;
for (int i = 0; i &lt; featureValues.size(); i++) {
	FeatureValue featureValue = featureValues.getValue(i);
	newValue.featureValues.addValue(featureValue.copy());
}

return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue" name="getFeatureValue" specification="Semantics-Classes-Kernel-CompoundValue-getFeatureValue.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-feature-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue-feature-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the value(s) of the member of featureValues for the given
// feature.

FeatureValue featureValue = null;
int i = 1;
while (featureValue == null &amp; i &lt;= this.featureValues.size()) {
	if (this.featureValues.getValue(i - 1).feature == feature) {
		featureValue = this.featureValues.getValue(i - 1);
	}
	i = i + 1;
}

return featureValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue" name="setFeatureValue" specification="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-feature-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-feature-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-values" name="values" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-values-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-values-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-position" name="position">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-position-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue-position-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Set the value(s) of the member of featureValues for the given
// feature.

FeatureValue featureValue = this.getFeatureValue(feature);

if (featureValue == null) {
	featureValue = new FeatureValue();
	this.featureValues.addValue(featureValue);
}

featureValue.feature = feature;
featureValue.values = values;
featureValue.position = position;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues" name="getFeatureValues" specification="Semantics-Classes-Kernel-CompoundValue-getFeatureValues.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the feature values for this compound value.

return this.featureValues;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-CompoundValue-toString" name="toString" specification="Semantics-Classes-Kernel-CompoundValue-toString.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-toString-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-toString-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-toString-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>String buffer = &quot;(&quot;;

ClassifierList types = this.getTypes();

int i = 1;
while (i &lt;= types.size()) {
	if (i != 1) {
		buffer = buffer + &quot; &quot;;
	}
	buffer = buffer + types.getValue(i - 1).name;
	i = i + 1;
}

int k = 1;
while (k &lt;= this.featureValues.size()) {
	FeatureValue featureValue = this.featureValues.getValue(k - 1);
	buffer = buffer + &quot;\n\t\t&quot; + featureValue.feature.name + &quot;[&quot;
			+ featureValue.position + &quot;]  =&quot;;

	int j = 1;
	while (j &lt;= featureValue.values.size()) {
		Value value = featureValue.values.getValue(j - 1);
		if (value instanceof Reference) {
			Object_ object = ((Reference)value).referent;
			buffer = buffer + &quot; Reference to &quot; + object.identifier + &quot;(&quot;;
			types = object.getTypes();
			int n = 1;
			while (n &lt;= types.size()) {
				if (n != 1) {
					buffer = buffer + &quot; &quot;;
				}
				buffer = buffer + types.getValue(n - 1).name;
				n = n + 1;
			}
			buffer = buffer + &quot;)&quot;;
		} else {
			buffer = buffer + &quot; &quot; + value.toString();
		}
		j = j + 1;
	}

	k = k + 1;
}

return buffer + &quot;)&quot;;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-CompoundValue-equals.1" name="equals" method="Semantics-Classes-Kernel-CompoundValue-equals">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-CompoundValue-copy.1" name="copy" method="Semantics-Classes-Kernel-CompoundValue-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue.1" name="getFeatureValue" method="Semantics-Classes-Kernel-CompoundValue-getFeatureValue">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValue.1-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1" name="setFeatureValue" method="Semantics-Classes-Kernel-CompoundValue-setFeatureValue">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-values" name="values" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-values-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-values-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-position" name="position">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-position-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-setFeatureValue.1-position-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues.1" name="getFeatureValues" method="Semantics-Classes-Kernel-CompoundValue-getFeatureValues">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-CompoundValue-getFeatureValues.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-CompoundValue-toString.1" name="toString" method="Semantics-Classes-Kernel-CompoundValue-toString">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-CompoundValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-BooleanValue" name="BooleanValue">
        <ownedComment xmi:id="Semantics-Classes-Kernel-BooleanValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-BooleanValue">
          <body>A boolean value is a primitive value whose type is Boolean.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-BooleanValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-BooleanValue-_generalization.0" general="Semantics-Classes-Kernel-PrimitiveValue"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-BooleanValue-value" name="value">
          <ownedComment xmi:id="Semantics-Classes-Kernel-BooleanValue-value-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-BooleanValue-value">
            <body>The actual Boolean value.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-BooleanValue-specify" name="specify" specification="Semantics-Classes-Kernel-BooleanValue-specify.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-specify-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-specify-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-specify-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return a literal boolean with the value of this boolean value.

LiteralBoolean literal = new LiteralBoolean();

literal.type = this.type;
literal.value = this.value;

return literal;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals" name="equals" specification="Semantics-Classes-Kernel-BooleanValue-equals.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-otherValue-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-equals-otherValue-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if this boolean value is equal to the otherValue.
// To be equal, the otherValue must have the same value as this boolean
// value.

boolean isEqual = false;
if (otherValue instanceof BooleanValue) {
	isEqual = ((BooleanValue) otherValue).value == this.value;
}

return isEqual;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-BooleanValue-copy" name="copy" specification="Semantics-Classes-Kernel-BooleanValue-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new boolean value with the same value as this boolean value.

BooleanValue newValue = (BooleanValue) (super.copy());

newValue.value = this.value;
return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-BooleanValue-new_" name="new_" specification="Semantics-Classes-Kernel-BooleanValue-new_.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-new_-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-new_-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return a new boolean value with no value.

return new BooleanValue();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-BooleanValue-toString" name="toString" specification="Semantics-Classes-Kernel-BooleanValue-toString.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-toString-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-BooleanValue-toString-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-BooleanValue-toString-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>String stringValue = &quot;false&quot;;

if (this.value) {
	stringValue = &quot;true&quot;;
}

return stringValue;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-BooleanValue-specify.1" name="specify" method="Semantics-Classes-Kernel-BooleanValue-specify">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-specify.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-BooleanValue-equals.1" name="equals" method="Semantics-Classes-Kernel-BooleanValue-equals">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-equals.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-BooleanValue-copy.1" name="copy" method="Semantics-Classes-Kernel-BooleanValue-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-BooleanValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-BooleanValue-new_">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-BooleanValue-toString.1" name="toString" method="Semantics-Classes-Kernel-BooleanValue-toString">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-BooleanValue-toString.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation" name="LiteralRealEvaluation">
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-LiteralRealEvaluation">
          <body>A literal real evaluation is an evaluation whose specification is a literal real.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-_generalization.0" general="Semantics-Classes-Kernel-LiteralEvaluation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate" name="evaluate" specification="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate.1">
          <language>Java</language>
          <body>// Evaluate a real integer, producing a real value.

LiteralReal literal = (LiteralReal) specification;
RealValue realValue = new RealValue();
realValue.type = this.getType(&quot;Real&quot;);
realValue.value = literal.value;
return realValue;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate.1" name="evaluate" method="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate.1-Parameter1" name="Parameter1" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate.1-Parameter1-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-LiteralRealEvaluation-evaluate.1-Parameter1-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-RealValue" name="RealValue">
        <ownedComment xmi:id="Semantics-Classes-Kernel-RealValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-RealValue">
          <body>A real value is a primitive value whose type is Real.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-RealValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-RealValue-_generalization.0" general="Semantics-Classes-Kernel-PrimitiveValue"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-RealValue-value" name="value" visibility="public">
          <ownedComment xmi:id="Semantics-Classes-Kernel-RealValue-value-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-RealValue-value">
            <body>The actual Real value.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_Iunz8GqlEd-4nvrqhtGdIw?PrimitiveTypes/Real?"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RealValue-copy" name="copy" specification="Semantics-Classes-Kernel-RealValue-copy.1">
          <language>Java</language>
          <body>// Create a new real value with the same value as this real value.

RealValue newValue = (RealValue) (super.copy());

newValue.value = this.value;
return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RealValue-equals" name="equals" specification="Semantics-Classes-Kernel-RealValue-equals.1">
          <language>Java</language>
          <body>// Test if this real value is equal to the otherValue.
// To be equal, the otherValue must have the same value as this real
// value.

boolean isEqual = false;
if (otherValue instanceof RealValue) {
	isEqual = ((RealValue) otherValue).value == this.value;
}

return isEqual;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RealValue-new_" name="new_" specification="Semantics-Classes-Kernel-RealValue-new_.1">
          <language>Java</language>
          <body>return new RealValue();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RealValue-specify" name="specify" specification="Semantics-Classes-Kernel-RealValue-specify.1">
          <language>Java</language>
          <body>// Return a literal real with the value of this real value.

LiteralReal literal = new LiteralReal();

literal.type = this.type;
literal.value = this.value;

return literal;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RealValue-toString" name="toString" specification="Semantics-Classes-Kernel-RealValue-toString.1">
          <language>Java</language>
          <body>String stringValue = &quot;&quot;;

if (this.value == 0) {
	stringValue = &quot;0&quot;;
} else {
	float positiveValue = this.value;

	if (positiveValue &lt; 0) {
		positiveValue = -positiveValue;
	}

	int exponent = 0;

	if (positiveValue &lt; .1) {
		while (positiveValue &lt; .1) {
			positiveValue = positiveValue * 10;
			exponent = exponent - 1;
		}
	} else if (positiveValue > 1) {
		while (positiveValue > 1) {
			positiveValue = positiveValue / 10;
			exponent = exponent + 1;
		}
	}

	// This gives 9 significant digits in the mantissa.
	for (int i = 0; i &lt; 9; i++) {
		positiveValue = positiveValue * 10;
	}

	IntegerValue integerValue = new IntegerValue();
	integerValue.value = (int) positiveValue;
	stringValue = &quot;0.&quot; + integerValue.toString();
	integerValue.value = exponent;
	stringValue = stringValue + &quot;E&quot; + integerValue.toString();

	if (this.value &lt; 0) {
		stringValue = &quot;-&quot; + stringValue;
	}
}

return stringValue;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-RealValue-specify.1" name="specify" method="Semantics-Classes-Kernel-RealValue-specify">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RealValue-specify.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-RealValue-equals.1" name="equals" method="Semantics-Classes-Kernel-RealValue-equals">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RealValue-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RealValue-equals.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-RealValue-copy.1" name="copy" method="Semantics-Classes-Kernel-RealValue-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RealValue-copy.1-Parameter1" name="Parameter1" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-RealValue-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-RealValue-new_">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RealValue-new_.1-Parameter1" name="Parameter1" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-RealValue-toString.1" name="toString" method="Semantics-Classes-Kernel-RealValue-toString">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RealValue-toString.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_featureValues_compoundValue" name="A_featureValues_compoundValue" visibility="private" memberEnd="Semantics-Classes-Kernel-CompoundValue-featureValues Semantics-Classes-Kernel-A_featureValues_compoundValue-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_featureValues_compoundValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-CompoundValue" association="Semantics-Classes-Kernel-A_featureValues_compoundValue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_type_dataValue" name="A_type_dataValue" visibility="private" memberEnd="Semantics-Classes-Kernel-DataValue-type Semantics-Classes-Kernel-A_type_dataValue-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_type_dataValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-DataValue" association="Semantics-Classes-Kernel-A_type_dataValue">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_type_dataValue-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_type_dataValue-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_type_enumerationValue" name="A_type_enumerationValue" visibility="private" memberEnd="Semantics-Classes-Kernel-EnumerationValue-type Semantics-Classes-Kernel-A_type_enumerationValue-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_type_enumerationValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-EnumerationValue" association="Semantics-Classes-Kernel-A_type_enumerationValue">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_type_enumerationValue-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_type_enumerationValue-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_literal_enumerationValue" name="A_literal_enumerationValue" visibility="private" memberEnd="Semantics-Classes-Kernel-EnumerationValue-literal Semantics-Classes-Kernel-A_literal_enumerationValue-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_literal_enumerationValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-EnumerationValue" association="Semantics-Classes-Kernel-A_literal_enumerationValue">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_literal_enumerationValue-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_literal_enumerationValue-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_type_primitiveValue" name="A_type_primitiveValue" visibility="private" memberEnd="Semantics-Classes-Kernel-PrimitiveValue-type Semantics-Classes-Kernel-A_type_primitiveValue-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_type_primitiveValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-PrimitiveValue" association="Semantics-Classes-Kernel-A_type_primitiveValue">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_type_primitiveValue-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_type_primitiveValue-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_values_featureValue" name="A_values_featureValue" visibility="private" memberEnd="Semantics-Classes-Kernel-FeatureValue-values Semantics-Classes-Kernel-A_values_featureValue-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_values_featureValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-FeatureValue" association="Semantics-Classes-Kernel-A_values_featureValue">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_values_featureValue-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_values_featureValue-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_feature_featureValue" name="A_feature_featureValue" visibility="private" memberEnd="Semantics-Classes-Kernel-FeatureValue-feature Semantics-Classes-Kernel-A_feature_featureValue-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_feature_featureValue-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-FeatureValue" association="Semantics-Classes-Kernel-A_feature_featureValue">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_feature_featureValue-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_feature_featureValue-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance" name="SignalInstance">
        <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-_ownedComment.0">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-_generalization.0" general="Semantics-Classes-Kernel-CompoundValue"/>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-type" name="type" association="Semantics-CommonBehaviors-Communications-A_type_signalInstance">
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#Signal"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-type-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-type-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes" name="getTypes" specification="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the single type of this signal instance.

ClassifierList types = new ClassifierList();

types.addValue(this.type);

return types;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_" name="new_" specification="Semantics-CommonBehaviors-Communications-SignalInstance-new_.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new signal instance with no type or feature values.

return new SignalInstance();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy" name="copy" specification="Semantics-CommonBehaviors-Communications-SignalInstance-copy.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new signal instance with the same type and feature values as
// this signal instance.

SignalInstance newValue = (SignalInstance) (super.copy());

newValue.type = this.type;

return newValue;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes.1" name="getTypes" method="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-getTypes.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_.1" name="new_" method="Semantics-CommonBehaviors-Communications-SignalInstance-new_">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy.1" name="copy" method="Semantics-CommonBehaviors-Communications-SignalInstance-copy">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-SignalInstance-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_type_signalInstance" name="A_type_signalInstance" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-SignalInstance-type Semantics-CommonBehaviors-Communications-A_type_signalInstance-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-CommonBehaviors-Communications-A_type_signalInstance-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-Communications-SignalInstance" association="Semantics-CommonBehaviors-Communications-A_type_signalInstance">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_type_signalInstance-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_type_signalInstance-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_VBjOcM7BEeWF7I4YWspV6w" name="StructuredClassifiers">
      <packageImport xmi:id="_szhZYM7CEeWF7I4YWspV6w" importedPackage="_LzvbEM7BEeWF7I4YWspV6w"/>
      <packageImport xmi:id="_udVP0M7CEeWF7I4YWspV6w" importedPackage="Semantics-Loci"/>
      <packageImport xmi:id="_xlRRIM7CEeWF7I4YWspV6w" importedPackage="Semantics-CommonBehaviors"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-Reference" name="Reference">
        <ownedComment xmi:id="Semantics-Classes-Kernel-Reference-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Reference">
          <body>A reference is an access path to a specific object. There may be multiple references to the same object.&#xD;
As a structured value, the reference acts just the same as its referent in terms of type, features, operations, etc.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-Reference-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-Reference-_generalization.0" general="Semantics-Classes-Kernel-StructuredValue"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-Reference-referent" name="referent" type="Semantics-Classes-Kernel-Object" association="Semantics-Classes-Kernel-A_reference_reference">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-referent-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-referent-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior" name="startBehavior" specification="Semantics-Classes-Kernel-Reference-startBehavior.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-classifier-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-classifier-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior-inputs-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Asynchronously start the behavior of the given classifier for the
// referent object.

this.referent.startBehavior(classifier, inputs);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-dispatch" name="dispatch" specification="Semantics-Classes-Kernel-Reference-dispatch.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-dispatch-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-dispatch-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-dispatch-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-dispatch-operation" name="operation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-dispatch-operation-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-dispatch-operation-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Dispatch the given operation to the referent object.

return this.referent.dispatch(operation);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-send" name="send" specification="Semantics-Classes-Kernel-Reference-send.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-send-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-send-signalInstance-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-send-signalInstance-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Send the given signal instance to the referent object.

this.referent.send(signalInstance);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-destroy" name="destroy" specification="Semantics-Classes-Kernel-Reference-destroy.1">
          <language>Java</language>
          <body>// Destroy the referent.

this.referent.destroy();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-equals" name="equals" specification="Semantics-Classes-Kernel-Reference-equals.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-equals-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-equals-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-equals-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-equals-otherValue-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-equals-otherValue-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if this reference is equal to the otherValue.
// To be equal, the otherValue must also be a reference, with the same
// referent as this reference.

boolean isEqual = false;
if (otherValue instanceof Reference) {
	isEqual = (((Reference) otherValue).referent == this.referent);
}

return isEqual;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-copy" name="copy" specification="Semantics-Classes-Kernel-Reference-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new reference with the same referent as this reference.

Reference newValue = (Reference) (super.copy());

newValue.referent = this.referent;

return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-new_" name="new_" specification="Semantics-Classes-Kernel-Reference-new_.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-new_-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-new_-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new reference with no referent.

return new Reference();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-Reference-getTypes.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-getTypes-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getTypes-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getTypes-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the types of the referent object.

return this.referent.getTypes();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue" name="getFeatureValue" specification="Semantics-Classes-Kernel-Reference-getFeatureValue.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-feature-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue-feature-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the feature value associated with the given feature in the
// referent object.

return this.referent.getFeatureValue(feature);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue" name="setFeatureValue" specification="Semantics-Classes-Kernel-Reference-setFeatureValue.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-feature-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-feature-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-values" name="values" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-values-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-values-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-position" name="position">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-position-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue-position-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Set the values associated with the given feature in the referent
// object.

this.referent.setFeatureValue(feature, values, position);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues" name="getFeatureValues" specification="Semantics-Classes-Kernel-Reference-getFeatureValues.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the feature values of the referent.

return this.referent.getFeatureValues();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Reference-toString" name="toString" specification="Semantics-Classes-Kernel-Reference-toString.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-toString-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-toString-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-toString-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>return &quot;Reference to &quot; + this.referent.toString();
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1" name="startBehavior" method="Semantics-Classes-Kernel-Reference-startBehavior">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-classifier-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-classifier-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-startBehavior.1-inputs-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-dispatch.1" name="dispatch" method="Semantics-Classes-Kernel-Reference-dispatch">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-dispatch.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-dispatch.1-operation" name="operation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-send.1" name="send" method="Semantics-Classes-Kernel-Reference-send">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-send.1-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-destroy.1" name="destroy" method="Semantics-Classes-Kernel-Reference-destroy"/>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-equals.1" name="equals" method="Semantics-Classes-Kernel-Reference-equals">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-equals.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-equals.1-otherValue" name="otherValue" type="Semantics-Classes-Kernel-Value"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-copy.1" name="copy" method="Semantics-Classes-Kernel-Reference-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-Reference-new_">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-Reference-getTypes">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getTypes.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getTypes.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue.1" name="getFeatureValue" method="Semantics-Classes-Kernel-Reference-getFeatureValue">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return"/>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValue.1-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1" name="setFeatureValue" method="Semantics-Classes-Kernel-Reference-setFeatureValue">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-values" name="values" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-values-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-values-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-position" name="position">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-position-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-setFeatureValue.1-position-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues.1" name="getFeatureValues" method="Semantics-Classes-Kernel-Reference-getFeatureValues">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Reference-getFeatureValues.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Reference-toString.1" name="toString" method="Semantics-Classes-Kernel-Reference-toString">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Reference-toString.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-Object" name="Object">
        <ownedComment xmi:id="Semantics-Classes-Kernel-Object-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Object">
          <body>An object is an extensional value that may have multiple types, all of which must be classes. (Note that a destroyed object has no types.)&#xD;
An object has a unique identity. Usually, references to objects are manipulated, rather than the objects themselves, and there may be multiple references to the same object.&#xD;
If an object is active, it has an object activation that handle the execution of its classifier behavior(s).</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-Object-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-Object-_generalization.0" general="Semantics-Classes-Kernel-ExtensionalValue"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-Object-types" name="types" association="Semantics-Classes-Kernel-A_types_object">
          <ownedComment xmi:id="Semantics-Classes-Kernel-Object-types-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Object-types">
            <body>The classes under which this object is currently classified. (A destroyed object has no types.)</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-types-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-types-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-Object-objectActivation" name="objectActivation" type="Semantics-CommonBehaviors-Communications-ObjectActivation" aggregation="composite" association="Semantics-Classes-Kernel-A_objectActivation_object">
          <ownedComment xmi:id="Semantics-Classes-Kernel-Object-objectActivation-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Object-objectActivation">
            <body>The object activation handling the active behavior of this object.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-objectActivation-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-objectActivation-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-startBehavior" name="startBehavior" specification="Semantics-Classes-Kernel-Object-startBehavior.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-startBehavior-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-startBehavior-classifier-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-startBehavior-classifier-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-startBehavior-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-startBehavior-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-startBehavior-inputs-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create an object activation for this object (if one does not already
// exist) and start its behavior(s).

// Debug.println(&quot;[startBehavior] On object...&quot;);

if (this.objectActivation == null) {
	this.objectActivation = new ObjectActivation();
	this.objectActivation.object = this;
}

// Debug.println(&quot;[startBehavior] objectActivation = &quot; +
// objectActivation);

this.objectActivation.startBehavior(classifier, inputs);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-dispatch" name="dispatch" specification="Semantics-Classes-Kernel-Object-dispatch.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-dispatch-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-dispatch-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-dispatch-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-dispatch-operation" name="operation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-dispatch-operation-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-dispatch-operation-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Dispatch the given operation to a method execution, using a dispatch
// strategy.

return ((DispatchStrategy) this.locus.factory.getStrategy(&quot;dispatch&quot;))
		.dispatch(this, operation);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-send" name="send" specification="Semantics-Classes-Kernel-Object-send.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-send-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-send-signalInstance-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-send-signalInstance-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If the object is active, add the given signal instance to the event
// pool and signal that a new signal instance has arrived.

if (this.objectActivation != null) {
	this.objectActivation.send(signalInstance);
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-destroy" name="destroy" specification="Semantics-Classes-Kernel-Object-destroy.1">
          <language>Java</language>
          <body>// Stop the object activation (if any), clear all types and destroy the
// object as an extensional value.

Debug.println(&quot;[destroy] object = &quot; + this.identifier);

if (this.objectActivation != null) {
	this.objectActivation.stop();
	this.objectActivation = null;
}

this.types.clear();
super.destroy();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-register" name="register" specification="Semantics-Classes-Kernel-Object-register.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-register-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-register-accepter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-register-accepter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Register the given accept event accepter to wait for a dispatched
// signal event.

if (this.objectActivation != null) {
	this.objectActivation.register(accepter);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-unregister" name="unregister" specification="Semantics-Classes-Kernel-Object-unregister.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-unregister-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-unregister-accepter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-unregister-accepter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Remove the given event accepter for the list of waiting event
// accepters.

if (this.objectActivation != null) {
	this.objectActivation.unregister(accepter);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-copy" name="copy" specification="Semantics-Classes-Kernel-Object-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new object that is a copy of this object at the same locus
// as this object.
// However, the new object will NOT have any object activation (i.e, its
// classifier behaviors will not be started).

Object_ newObject = (Object_) (super.copy());

Class_List types = this.types;
for (int i = 0; i &lt; types.size(); i++) {
	Class_ type = types.getValue(i);
	newObject.types.addValue(type);
}

return newObject;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-new_" name="new_" specification="Semantics-Classes-Kernel-Object-new_.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-new_-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-new_-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new object with no type, feature values or locus.

return new Object_();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Object-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-Object-getTypes.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-getTypes-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-getTypes-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-getTypes-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the types of this object.

ClassifierList types = new ClassifierList();
Class_List myTypes = this.types;
for (int i = 0; i &lt; myTypes.size(); i++) {
	Class_ type = myTypes.getValue(i);
	types.addValue(type);
}

return types;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1" name="startBehavior" method="Semantics-Classes-Kernel-Object-startBehavior">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-classifier-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-classifier-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-startBehavior.1-inputs-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Object-dispatch.1" name="dispatch" method="Semantics-Classes-Kernel-Object-dispatch">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-dispatch.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-dispatch.1-operation" name="operation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Object-send.1" name="send" method="Semantics-Classes-Kernel-Object-send">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-send.1-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Object-destroy.1" name="destroy" method="Semantics-Classes-Kernel-Object-destroy"/>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Object-register.1" name="register" method="Semantics-Classes-Kernel-Object-register">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-register.1-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Object-unregister.1" name="unregister" method="Semantics-Classes-Kernel-Object-unregister">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-unregister.1-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Object-copy.1" name="copy" method="Semantics-Classes-Kernel-Object-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Object-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-Object-new_">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Object-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-Object-getTypes">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Object-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Object-getTypes.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Object-getTypes.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-Link" name="Link">
        <ownedComment xmi:id="Semantics-Classes-Kernel-Link-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Link">
          <body>A link is an extensional value whose (single) type is an association. (However, if the link has been destroyed, then it has no type.)&#xD;
A link must at have most one feature value for each structural feature owned by its type.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-Link-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-Link-_generalization.0" general="Semantics-Classes-Kernel-ExtensionalValue"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-Link-type" name="type" association="Semantics-Classes-Kernel-A_type_Link">
          <ownedComment xmi:id="Semantics-Classes-Kernel-Link-type-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-Link-type">
            <body>The type of this link.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#Association"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-type-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-type-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-destroy" name="destroy" specification="Semantics-Classes-Kernel-Link-destroy.1">
          <language>Java</language>
          <body>// Remove the type of this link and destroy it.
// Shift the positions of the feature values of any remaining links in
// the extent of the same association, for ends that are ordered.

Debug.println(&quot;[destroy] link = &quot; + this.identifier);

PropertyList ends = this.type.memberEnd;
ExtensionalValueList extent = this.locus.getExtent(this.type);

for (int i = 0; i &lt; extent.size(); i++) {
	ExtensionalValue otherLink = extent.getValue(i);
	for (int j = 0; j &lt; ends.size(); j++) {
		Property end = ends.getValue(j);
		if (end.multiplicityElement.isOrdered) {
			FeatureValue featureValue = otherLink.getFeatureValue(end);
			if (this.getFeatureValue(end).position &lt; featureValue.position) {
				featureValue.position = featureValue.position - 1;
			}
		}
	}
}

this.type = null;
super.destroy();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-copy" name="copy" specification="Semantics-Classes-Kernel-Link-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new link with the same type, locus and feature values as
// this link.

Link newValue = (Link) (super.copy());

newValue.type = this.type;

return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-new_" name="new_" specification="Semantics-Classes-Kernel-Link-new_.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-new_-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-new_-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new link with no type or properies.

return new Link();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-getTypes" name="getTypes" specification="Semantics-Classes-Kernel-Link-getTypes.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-getTypes-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getTypes-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getTypes-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the single type of this link (if any).

ClassifierList types = null;

if (this.type == null) {
	types = new ClassifierList();
} else {
	types = new ClassifierList();
	types.addValue(this.type);
}

return types;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink" name="isMatchingLink" specification="Semantics-Classes-Kernel-Link-isMatchingLink.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink-link" name="link" type="Semantics-Classes-Kernel-ExtensionalValue"/>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink-end" name="end">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Property"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink-ReturnResult" name="ReturnResult">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test whether the given link matches the values of this link on all
// ends other than the given end.

PropertyList ends = this.type.memberEnd;

boolean matches = true;
int i = 1;
while (matches &amp; i &lt;= ends.size()) {
	Property otherEnd = ends.getValue(i - 1);
	if (otherEnd != end
			&amp; !this.getFeatureValue(otherEnd).values.getValue(0)
					.equals(
							link.getFeatureValue(otherEnd).values
									.getValue(0))) {
		matches = false;
	}
	i = i + 1;
}

return matches;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues" name="getOtherFeatureValues" specification="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-extent" name="extent" type="Semantics-Classes-Kernel-ExtensionalValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-extent-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-extent-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-end" name="end">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Property"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return all feature values for the given end of links in the given
// extent whose other ends match this link.

FeatureValueList featureValues = new FeatureValueList();
for (int i = 0; i &lt; extent.size(); i++) {
	ExtensionalValue link = extent.getValue(i);
	if (link != this) {
		if (isMatchingLink(link, end)) {
			featureValues.addValue(link.getFeatureValue(end));
		}
	}
}
return featureValues;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-Link-addTo" name="addTo" specification="Semantics-Classes-Kernel-Link-addTo.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-addTo-locus" name="locus" type="Semantics-Loci-LociL1-Locus"/>
          <language>Java</language>
          <body>// Add this link to the extent of its association at the given locus.
// Shift the positions of ends of other links, as appropriate, for ends
// that are ordered.

Debug.println(&quot;[addTo] link = &quot; + this.identifier);

PropertyList ends = this.type.memberEnd;
ExtensionalValueList extent = locus.getExtent(this.type);

for (int i = 0; i &lt; ends.size(); i++) {
	Property end = ends.getValue(i);
	if (end.multiplicityElement.isOrdered) {
		FeatureValue featureValue = this.getFeatureValue(end);
		FeatureValueList otherFeatureValues = this
				.getOtherFeatureValues(extent, end);
		int n = otherFeatureValues.size();
		if (featureValue.position &lt; 0 | featureValue.position > n) {
			featureValue.position = n + 1;
		} else {
			if (featureValue.position == 0) {
				featureValue.position = 1;
			}
			for (int j = 0; j &lt; otherFeatureValues.size(); j++) {
				FeatureValue otherFeatureValue = otherFeatureValues
						.getValue(j);
				if (featureValue.position &lt;= otherFeatureValue.position) {
					otherFeatureValue.position = otherFeatureValue.position + 1;
				}
			}
		}
	}
}

locus.add(this);
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Link-destroy.1" name="destroy" method="Semantics-Classes-Kernel-Link-destroy"/>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Link-copy.1" name="copy" method="Semantics-Classes-Kernel-Link-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Link-new_.1" name="new_" visibility="protected" method="Semantics-Classes-Kernel-Link-new_">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Link-getTypes.1" name="getTypes" method="Semantics-Classes-Kernel-Link-getTypes">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-getTypes.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getTypes.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getTypes.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink.1" name="isMatchingLink" method="Semantics-Classes-Kernel-Link-isMatchingLink">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink.1-link" name="link" type="Semantics-Classes-Kernel-ExtensionalValue"/>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink.1-end" name="end">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Property"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-isMatchingLink.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1" name="getOtherFeatureValues" method="Semantics-Classes-Kernel-Link-getOtherFeatureValues">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-extent" name="extent" type="Semantics-Classes-Kernel-ExtensionalValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-extent-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-extent-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-end" name="end">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Property"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-FeatureValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-Link-getOtherFeatureValues.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-Link-addTo.1" name="addTo" method="Semantics-Classes-Kernel-Link-addTo">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-Link-addTo.1-locus" name="locus" type="Semantics-Loci-LociL1-Locus"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-ExtensionalValue" name="ExtensionalValue" isAbstract="true">
        <ownedComment xmi:id="Semantics-Classes-Kernel-ExtensionalValue-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-ExtensionalValue">
          <body>An extensional value is a data value that is part of the extent of some classifier at a specific locus.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-ExtensionalValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-ExtensionalValue-_generalization.0" general="Semantics-Classes-Kernel-CompoundValue"/>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-ExtensionalValue-locus" name="locus" type="Semantics-Loci-LociL1-Locus" association="Semantics-Classes-Kernel-A_locus_extensionalValues">
          <ownedComment xmi:id="Semantics-Classes-Kernel-ExtensionalValue-locus-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-ExtensionalValue-locus">
            <body>The locus of the extent of which this value is a member. (If the value has been destroyed, it has no locus.)</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-locus-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-locus-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Classes-Kernel-ExtensionalValue-identifier" name="identifier">
          <ownedComment xmi:id="Semantics-Classes-Kernel-ExtensionalValue-identifier-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-ExtensionalValue-identifier">
            <body>The identifier for this extensional value, unique among the extensional values created at the same locus as this value.

</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-destroy" name="destroy" specification="Semantics-Classes-Kernel-ExtensionalValue-destroy.1">
          <language>Java</language>
          <body>// Remove this value from its locus (if it has not already been
// destroyed).

if (this.locus != null) {
	this.locus.remove(this);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy" name="copy" specification="Semantics-Classes-Kernel-ExtensionalValue-copy.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new extensional value with the same feature values at the
// same locus as this one.

ExtensionalValue newValue = (ExtensionalValue) (super.copy());

if (this.locus != null) {
	this.locus.add(newValue);
} else {
	this.identifier = &quot;&quot;;
}

return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-ExtensionalValue-toString" name="toString">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-ExtensionalValue-toString-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>Java</language>
          <body>return this.identifier + super.toString();
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-ExtensionalValue-destroy.1" name="destroy" method="Semantics-Classes-Kernel-ExtensionalValue-destroy"/>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy.1" name="copy" method="Semantics-Classes-Kernel-ExtensionalValue-copy">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-ExtensionalValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-ExtensionalValue-toString.1" name="toString" redefinedOperation="Semantics-Classes-Kernel-CompoundValue-toString.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-ExtensionalValue-toString.1-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-DispatchStrategy" name="DispatchStrategy" isAbstract="true">
        <ownedComment xmi:id="Semantics-Classes-Kernel-DispatchStrategy-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-DispatchStrategy">
          <body>A dispatch strategy is a semantic strategy for the polymorphic dispatching of an operation to an execution of a method for that operation.</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-DispatchStrategy-_generalization.0" general="Semantics-Loci-LociL1-SemanticStrategy"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName" name="getName" specification="Semantics-Classes-Kernel-DispatchStrategy-getName.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Dispatch strategies are always named &quot;dispatch&quot;.

return &quot;dispatch&quot;;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch" name="dispatch" specification="Semantics-Classes-Kernel-DispatchStrategy-dispatch.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-object" name="object" type="Semantics-Classes-Kernel-Object">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-object-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-object-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-operation" name="operation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-operation-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-operation-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the behavior for the given operation as determined by the type(s)
// of the given object, compile the behavior at the locus of the object,
// and return the resulting execution object.

return object.locus.factory.createExecution(this.getMethod(object,
		operation), object);
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName.1" name="getName" method="Semantics-Classes-Kernel-DispatchStrategy-getName">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getName.1-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch.1" name="dispatch" method="Semantics-Classes-Kernel-DispatchStrategy-dispatch">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch.1-object" name="object" type="Semantics-Classes-Kernel-Object"/>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch.1-operation" name="operation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DispatchStrategy-dispatch.1-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getMethod" name="getMethod" isAbstract="true">
          <ownedComment xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getMethod-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-DispatchStrategy-getMethod">
            <body>// Get the method that corresponds to the given operation for the given object.</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getMethod-object" name="object" type="Semantics-Classes-Kernel-Object"/>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getMethod-operation" name="operation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-DispatchStrategy-getMethod-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy" name="RedefinitionBasedDispatchStrategy">
        <ownedComment xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-_ownedComment.0" annotatedElement="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy">
          <body>A redefinition-based dispatch strategy is one that requires:&#xD;
- each non-abstract operation to have exactly one method &#xD;
- an overriding subclass operation to explicitly redefine the overridden superclass operation.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-_generalization.0" general="Semantics-Classes-Kernel-DispatchStrategy"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod" name="getMethod" specification="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-object" name="object" type="Semantics-Classes-Kernel-Object">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-object-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-object-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-operation" name="operation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-operation-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod-operation-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the method that corresponds to the given operation for the given
// object.
// [If there is more than one type with a method for the operation, then
// the first one is arbitrarily chosen.]

Behavior method = null;
int i = 1;
while (method == null &amp; i &lt;= object.types.size()) {
	Class_ type = object.types.getValue(i - 1);
	NamedElementList members = type.member;
	int j = 1;
	while (method == null &amp; j &lt;= members.size()) {
		NamedElement member = members.getValue(j - 1);
		if (member instanceof Operation) {
			Operation memberOperation = (Operation) member;
			if (this.operationsMatch(memberOperation, operation)) {
				method = memberOperation.method.getValue(0);
			}
		}
		j = j + 1;
	}
	i = i + 1;
}

return method;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch" name="operationsMatch" specification="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch.1">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ownedOperation" name="ownedOperation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ownedOperation-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-ownedOperation-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-baseOperation" name="baseOperation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-baseOperation-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch-baseOperation-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Check if the owned operation is equal to or a redefinition (directly
// or indirectly) of the base operation.

boolean matches = false;
if (ownedOperation == baseOperation) {
	matches = true;
} else {
	int i = 1;
	while (!matches &amp; i &lt;= ownedOperation.redefinedOperation.size()) {
		matches = this.operationsMatch(
				ownedOperation.redefinedOperation.getValue(i - 1),
				baseOperation);
		i = i + 1;
	}
}

return matches;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod.1" name="getMethod" method="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod.1-object" name="object" type="Semantics-Classes-Kernel-Object"/>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-getMethod.1-operation" name="operation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch.1" name="operationsMatch" method="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch">
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch.1-ownedOperation" name="ownedOperation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Classes-Kernel-RedefinitionBasedDispatchStrategy-operationsMatch.1-baseOperation" name="baseOperation">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Operation"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_locus_extensionalValues" name="A_locus_extensionalValues" visibility="private" memberEnd="Semantics-Classes-Kernel-ExtensionalValue-locus Semantics-Loci-LociL1-Locus-extensionalValues"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_objectActivation_object" name="A_objectActivation_object" visibility="private" memberEnd="Semantics-Classes-Kernel-Object-objectActivation Semantics-CommonBehaviors-Communications-ObjectActivation-object"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_types_object" name="A_types_object" visibility="private" memberEnd="Semantics-Classes-Kernel-Object-types Semantics-Classes-Kernel-A_types_object-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_types_object-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-Object" association="Semantics-Classes-Kernel-A_types_object">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_types_object-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_types_object-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_reference_reference" name="A_reference_reference" visibility="private" memberEnd="Semantics-Classes-Kernel-Reference-referent Semantics-Classes-Kernel-A_reference_reference-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_reference_reference-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-Reference" association="Semantics-Classes-Kernel-A_reference_reference">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_reference_reference-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_reference_reference-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Classes-Kernel-A_type_Link" name="A_type_Link" visibility="private" memberEnd="Semantics-Classes-Kernel-Link-type Semantics-Classes-Kernel-A_type_Link-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Classes-Kernel-A_type_Link-_ownedEnd.0" visibility="private" type="Semantics-Classes-Kernel-Link" association="Semantics-Classes-Kernel-A_type_Link">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Classes-Kernel-A_type_Link-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Classes-Kernel-A_type_Link-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Semantics-CommonBehaviors" name="CommonBehavior">
      <packageImport xmi:id="_Qkap4M7DEeWF7I4YWspV6w" importedPackage="_VBjOcM7BEeWF7I4YWspV6w"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" name="ParameterValue">
        <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
          <body>A parameter value gives the value(s) for a specific parameter.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-parameter" name="parameter" association="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue">
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#Parameter"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-parameter-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-parameter-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values" name="values" type="Semantics-Classes-Kernel-Value" aggregation="composite" association="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue">
          <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values">
            <body>The values of for the parameter. Zero or more values are possible, as constrained by the multiplicity of the parameter.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy" name="copy" specification="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new parameter value for the same parameter as this parameter
// value, but with copies of the values of this parameter value.

ParameterValue newValue = new ParameterValue();

newValue.parameter = this.parameter;

ValueList values = this.values;
for (int i = 0; i &lt; values.size(); i++) {
	Value value = values.getValue(i);
	newValue.values.addValue(value.copy());
}

return newValue;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy.1" name="copy" method="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-copy.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution" name="OpaqueBehaviorExecution" isAbstract="true">
        <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution">
          <body>An opaque execution is an execution for an opaque behavior. &#xD;
Opaque behaviors are used to define primitive behaviors.&#xD;
The actual definition of the primitive behavior should be given in a concrete subclass of OpaqueBehaviorExecution.&#xD;
</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-_generalization.0" general="Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-execute" name="execute" specification="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-execute.1">
          <language>Java</language>
          <body>// Execute the body of the opaque behavior.

Debug.println(&quot;[execute] Opaque behavior &quot; + this.getBehavior().name
		+ &quot;...&quot;);

ParameterList parameters = this.getBehavior().ownedParameter;

ParameterValueList inputs = new ParameterValueList();
ParameterValueList outputs = new ParameterValueList();

for (int i = 0; i &lt; parameters.size(); i++) {
	Parameter parameter = parameters.getValue(i);

	if ((parameter.direction == ParameterDirectionKind.in)
			| (parameter.direction == ParameterDirectionKind.inout)) {
		inputs.addValue(this.getParameterValue(parameter));
	}

	if ((parameter.direction == ParameterDirectionKind.inout)
			| (parameter.direction == ParameterDirectionKind.out)
			| (parameter.direction == ParameterDirectionKind.return_)) {
		ParameterValue parameterValue = new ParameterValue();
		parameterValue.parameter = parameter;
		this.setParameterValue(parameterValue);
		outputs.addValue(parameterValue);
	}
}

this.doBody(inputs, outputs);
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-execute.1" name="execute" method="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-execute"/>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody" name="doBody" isAbstract="true">
          <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody">
            <body>The actual definition of the behavior of an Opaque Behavior should be given in a concrete subclass that defines this operation.&#xD;
The values of the inputParameters are set when the operation is called.&#xD;
The values of the outputParmeters should be set during the execution of the operation.</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-inputParameters" name="inputParameters" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-inputParameters-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-inputParameters-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-outputParameters" name="outputParameters" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-outputParameters-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution-doBody-outputParameters-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution" name="Execution" isAbstract="true">
        <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-Execution">
          <body>An execution is used to execute a specific behavior. Since a behavior is a kind of class, an execution is an object with the behavior as its type.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-_generalization.0" general="Semantics-Classes-Kernel-Object"/>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-context" name="context" type="Semantics-Classes-Kernel-Object" association="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution">
          <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-context-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-Execution-context">
            <body>The object that provides the context for this execution. &#xD;
The type of the context of the execution must be the context of the type (behavior) of the execution.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-context-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-context-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues" name="parameterValues" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" aggregation="composite" association="Semantics-CommonBehaviors-BasicBehaviors-A_parameterValues_execution">
          <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues">
            <body>The parameterValues for this execution. All parameterValues must have a parameter that is a parameter of the type of this execution.&#xD;
The values of all input (in and in-out) parameters must be set before the execution is executed.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-terminate" name="terminate" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-terminate.1">
          <language>Java</language>
          <body>// Terminate an ongoing execution. By default, do nothing.

return;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy" name="copy" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new execution that has the same behavior and parameterValues
// as this execution.

// Debug.println(&quot;[Copy] execution = &quot; + this);

Execution newValue = (Execution) (super.copy());

newValue.context = this.context;

ParameterValueList parameterValues = this.parameterValues;
for (int i = 0; i &lt; parameterValues.size(); i++) {
	ParameterValue parameterValue = parameterValues.getValue(i);
	newValue.parameterValues.addValue(parameterValue.copy());
}

// Debug.println(&quot;[Copy] Done.&quot;);

return newValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue" name="setParameterValue" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue-parameterValue" name="parameterValue" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue-parameterValue-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue-parameterValue-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Set the given parameter value for this execution.
// If a parameter value already existed for the parameter of the given
// parameter value, then replace its value.

// Debug.println(&quot;[setParameterValue] parameter = &quot; +
// parameterValue.parameter.name + &quot; with &quot; +
// parameterValue.values.size() + &quot; values&quot;);

ParameterValue existingParameterValue = this
		.getParameterValue(parameterValue.parameter);

if (existingParameterValue == null) {
	this.parameterValues.addValue(parameterValue);
} else {
	existingParameterValue.values = parameterValue.values;
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue" name="getParameterValue" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-parameter" name="parameter">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Parameter"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-parameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue-parameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the parameter value of this execution corresponding to the given
// parameter (if any).

ParameterValue parameterValue = null;
int i = 1;
while (parameterValue == null &amp; i &lt;= this.parameterValues.size()) {
	if (this.parameterValues.getValue(i - 1).parameter == parameter) {
		parameterValue = this.parameterValues.getValue(i - 1);
	}
	i = i + 1;
}

return parameterValue;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues" name="getOutputParameterValues" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the parameter values for output (in-out, out and return)
// parameters.

ParameterValueList outputs = new ParameterValueList();
ParameterValueList parameterValues = this.parameterValues;
for (int i = 0; i &lt; parameterValues.size(); i++) {
	ParameterValue parameterValue = parameterValues.getValue(i);
	Parameter parameter = parameterValue.parameter;
	if ((parameter.direction == ParameterDirectionKind.inout)
			| (parameter.direction == ParameterDirectionKind.out)
			| (parameter.direction == ParameterDirectionKind.return_)) {
		outputs.addValue(parameterValue);
	}
}

return outputs;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior" name="getBehavior" specification="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the behavior that is the type of this execution.

return (Behavior) (this.getTypes().getValue(0));
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-execute" name="execute" isAbstract="true">
          <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-execute-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-Execution-execute">
            <body>Execute the behavior given by the type of this execution. &#xD;
The parameterValues for any input (in or in-out) parameters of the behavior should be set before the execution.&#xD;
The parameteValues for any output (in-out, out or return) parameters of the behavior will be set by the execution.&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-terminate.1" name="terminate" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-terminate"/>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy.1" name="copy" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-new_" name="new_" isAbstract="true">
          <ownedComment xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-new_-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-BasicBehaviors-Execution-new_">
            <body>Create a new execution with no behavior or parameterValues.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue.1" name="setParameterValue" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-setParameterValue.1-parameterValue" name="parameterValue" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue.1" name="getParameterValue" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return"/>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getParameterValue.1-parameter" name="parameter">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Parameter"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues.1" name="getOutputParameterValues" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getOutputParameterValues.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior.1" name="getBehavior" method="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-BasicBehaviors-Execution-getBehavior.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution" name="A_context_execution" visibility="private" memberEnd="Semantics-CommonBehaviors-BasicBehaviors-Execution-context Semantics-CommonBehaviors-BasicBehaviors-A_context_execution-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" association="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_context_execution-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameterValues_execution" name="A_parameterValues_execution" visibility="private" memberEnd="Semantics-CommonBehaviors-BasicBehaviors-Execution-parameterValues Semantics-CommonBehaviors-BasicBehaviors-A_parameterValues_execution-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameterValues_execution-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" association="Semantics-CommonBehaviors-BasicBehaviors-A_parameterValues_execution"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue" name="A_parameter_parameterValue" visibility="private" memberEnd="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-parameter Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" association="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_parameter_parameterValue-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue" name="A_values_parameterValue" visibility="private" memberEnd="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue-values Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" association="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-BasicBehaviors-A_values_parameterValue-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter" name="EventAccepter" isAbstract="true">
        <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-EventAccepter">
          <body>An event accepter handles signal reception events.&#xD;
This is an abstract class intended to provide a common interface for different kinds of event accepters.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-accept" name="accept" isAbstract="true">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-accept-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-EventAccepter-accept">
            <body>Accept a signal occurance for the given signal instance.</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-accept-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-match" name="match" isAbstract="true">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-match-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-EventAccepter-match">
            <body>Determine if the given signal instance matches a trigger of this event accepter.</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-match-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-EventAccepter-match-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter" name="ClassifierBehaviorInvocationEventAccepter">
        <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter">
          <body>A classifier behavior execution executes the classifier behavior from a specific active class. </body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-_generalization.0" general="Semantics-CommonBehaviors-Communications-EventAccepter"/>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" association="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution">
            <body>The execution of the associated classifier behavior for a certain object.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier" name="classifier" association="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier">
            <body>The classifier whose behavior is being executed. (This must be an active class.)</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation" name="objectActivation" type="Semantics-CommonBehaviors-Communications-ObjectActivation" association="Semantics-CommonBehaviors-Communications-A_classifierBehaviorInvocations_objectActivation">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation">
            <body>The object activation that owns this classifier behavior execution.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior" name="invokeBehavior" specification="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-classifier-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-classifier-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior-inputs-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Set the classifier for this classifier behavior invocation event accepter 
// to the given class.
// If the given class is a behavior, set the execution to be the object
// of the object activation of the classifier behavior execution.
// Otherwise the class must be an active class, so get an execution
// object for the classifier behavior for the class.
// Set the input parameters for the execution to the given values.
// Then register this event accepter with the object activation.

// Debug.println(&quot;[invokeBehavior] Invoking behavior for &quot; + classifier.name +
// &quot;...&quot;);

this.classifier = classifier;
Object_ object = this.objectActivation.object;

if (classifier instanceof Behavior) {
	this.execution = (Execution) object;
} else {
	this.execution = object.locus.factory.createExecution(
			classifier.classifierBehavior, object);
}

if (inputs != null) {
	for (int i = 0; i &lt; inputs.size(); i++) {
		ParameterValue input = inputs.getValue(i);
		this.execution.setParameterValue(input);
	}
}

this.objectActivation.register(this);

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-terminate" name="terminate" specification="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-terminate.1">
          <language>Java</language>
          <body>// Terminate the associated execution.
// If the execution is not itself the object of the object activation,
// then destroy it.

// Debug.println(&quot;[terminate] Terminating behavior for &quot; +
// classifier.name + &quot;...&quot;);

this.execution.terminate();

if (this.execution != this.objectActivation.object) {
	this.execution.destroy();
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept" name="accept" specification="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          <language>Java</language>
          <body>// Accept an invocation event occurrence. Execute the execution of this
// classifier behavior invocation event accepter.

if (eventOccurrence instanceof InvocationEventOccurrence) {
	this.execution.execute();
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match" name="match" specification="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return true if the given event occurrence is an invocation event
// occurrence for the execution of this classifier behavior invocation
// event accepter.

boolean matches = false;
if (eventOccurrence instanceof InvocationEventOccurrence) {
	matches = ((InvocationEventOccurrence)eventOccurrence).execution == this.execution;
}
return matches;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1" name="invokeBehavior" method="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-invokeBehavior.1-inputs-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-terminate.1" name="terminate" method="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-terminate"/>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept.1" name="accept" method="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept" redefinedOperation="Semantics-CommonBehaviors-Communications-EventAccepter-accept">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-accept.1-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match.1" name="match" method="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match" redefinedOperation="Semantics-CommonBehaviors-Communications-EventAccepter-match">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match.1-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-match.1-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Signal" xmi:id="Semantics-CommonBehaviors-Communications-ArrivalSignal" name="ArrivalSignal" visibility="private"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation" name="ObjectActivation" classifierBehavior="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop" isActive="true">
        <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation">
          <body>An object activation handles the active behavior of an active object.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-_ownedComment.1">
          <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations" name="classifierBehaviorInvocations" type="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter" aggregation="composite" association="Semantics-CommonBehaviors-Communications-A_classifierBehaviorInvocations_objectActivation">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations">
            <body>The invocations of the executing classifier behaviors for this object activation.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters" name="waitingEventAccepters" visibility="public" type="Semantics-CommonBehaviors-Communications-EventAccepter" association="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters">
            <body>The set of event accepters waiting for event occurrences to be dispatched from the event pool.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-object" name="object" type="Semantics-Classes-Kernel-Object" association="Semantics-Classes-Kernel-A_objectActivation_object">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-object-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation-object">
            <body>The object whose active behavior is being handled by this active object.</body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool" name="eventPool" type="Semantics-CommonBehaviors-Communications-EventOccurrence" isOrdered="true" aggregation="composite" association="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool">
            <body>The pool of event occurrences received by the object of this object activation.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:Activity" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop" name="EventDispatchLoop" node="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.0 Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-ReadSelf Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Accept20ArrivalSignal Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.4">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent">
            <body>The response to each event is completed before dispatching the next event (run to completion semantics).</body>
          </ownedComment>
          <edge xmi:type="uml:ControlFlow" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.0" target="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.4" source="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent">
            <guard xmi:type="uml:OpaqueExpression" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.0-_guard"/>
            <weight xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.0-_weight" value="1"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.1" target="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent-_target" source="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-ReadSelf-_result">
            <guard xmi:type="uml:OpaqueExpression" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.1-_guard">
              <body></body>
            </guard>
            <weight xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.1-_weight" value="1"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.2" target="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-ReadSelf" source="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Accept20ArrivalSignal">
            <guard xmi:type="uml:OpaqueExpression" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.2-_guard">
              <body></body>
            </guard>
            <weight xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.2-_weight" value="1"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.3" target="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.4" source="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.0">
            <guard xmi:type="uml:OpaqueExpression" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.3-_guard">
              <body></body>
            </guard>
            <weight xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.3-_weight" value="1"/>
          </edge>
          <edge xmi:type="uml:ControlFlow" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.4" target="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Accept20ArrivalSignal" source="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.4">
            <guard xmi:type="uml:OpaqueExpression" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.4-_guard">
              <body></body>
            </guard>
            <weight xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.4-_weight" value="1"/>
          </edge>
          <node xmi:type="uml:InitialNode" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.0" outgoing="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.3"/>
          <node xmi:type="uml:CallOperationAction" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent" name="Call dispatchNextEvent" outgoing="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.0" operation="Semantics-CommonBehaviors-Communications-ObjectActivation-dispatchNextEvent.1">
            <target xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent-_target" incoming="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.1" type="Semantics-CommonBehaviors-Communications-ObjectActivation">
              <upperBound xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Call20dispatchNextEvent-_target-_upperBound" value="1024"/>
            </target>
          </node>
          <node xmi:type="uml:ReadSelfAction" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-ReadSelf" name="ReadSelf" incoming="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.2">
            <result xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-ReadSelf-_result" outgoing="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.1" type="Semantics-CommonBehaviors-Communications-ObjectActivation"/>
          </node>
          <node xmi:type="uml:AcceptEventAction" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Accept20ArrivalSignal" name="Accept ArrivalSignal" incoming="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.4" outgoing="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.2">
            <trigger xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-Accept20ArrivalSignal-_trigger.0" name="" event="Semantics-CommonBehaviors-Communications-ArrivalSignalEvent"/>
          </node>
          <node xmi:type="uml:MergeNode" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_ownedNode.4" incoming="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.3 Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.0" outgoing="Semantics-CommonBehaviors-Communications-ObjectActivation-EventDispatchLoop-_edge.4"/>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-stop" name="stop" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-stop.1">
          <language>Java</language>
          <body>// Stop this object activation by terminating all classifier behavior
// executions.

ClassifierBehaviorInvocationEventAccepterList classifierBehaviorInvocations = this.classifierBehaviorInvocations;
for (int i = 0; i &lt; classifierBehaviorInvocations.size(); i++) {
	ClassifierBehaviorInvocationEventAccepter classifierBehaviorInvocation = classifierBehaviorInvocations
			.getValue(i);
	classifierBehaviorInvocation.terminate();
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register" name="register" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-register.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register-accepter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register-accepter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Register the given event accepter to wait for a dispatched signal
// event.

Debug.println(&quot;[register] object = &quot; + this.object);
Debug.println(&quot;[register] accepter = &quot; + accepter);

this.waitingEventAccepters.addValue(accepter);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister" name="unregister" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister-accepter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister-accepter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Remove the given event accepter for the list of waiting event
// accepters.

Debug.println(&quot;[unregister] object = &quot; + this.object);
Debug.println(&quot;[unregister] accepter = &quot; + accepter);

boolean notFound = true;
int i = 1;
while (notFound &amp; i &lt;= this.waitingEventAccepters.size()) {
	if (this.waitingEventAccepters.getValue(i - 1) == accepter) {
		this.waitingEventAccepters.remove(i - 1);
		notFound = false;
	}
	i = i + 1;
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-dispatchNextEvent" name="dispatchNextEvent" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-dispatchNextEvent.1">
          <language>Java</language>
          <body>// Get the next event occurrence out of the event pool.
// If there are one or more waiting event accepters with triggers that
// match the event occurrence, then dispatch it to exactly one of those
// waiting accepters.

if (this.eventPool.size() > 0) {
	EventOccurrence eventOccurrence = this.getNextEvent();

	Debug.println(&quot;[dispatchNextEvent] eventOccurrence = &quot;
			+ eventOccurrence);

	intList matchingEventAccepterIndexes = new intList();
	EventAccepterList waitingEventAccepters = this.waitingEventAccepters;
	for (int i = 0; i &lt; waitingEventAccepters.size(); i++) {
		EventAccepter eventAccepter = waitingEventAccepters.getValue(i);
		if (eventAccepter.match(eventOccurrence)) {
			matchingEventAccepterIndexes.addValue(i);
		}
	}

	if (matchingEventAccepterIndexes.size() > 0) {
		// *** Choose one matching event accepter non-deterministically.
		// ***
		int j = ((ChoiceStrategy) this.object.locus.factory
				.getStrategy(&quot;choice&quot;))
				.choose(matchingEventAccepterIndexes.size());
		EventAccepter selectedEventAccepter = this.waitingEventAccepters
				.getValue(matchingEventAccepterIndexes.getValue(j - 1));
		this.waitingEventAccepters.removeValue(j - 1);
		selectedEventAccepter.accept(eventOccurrence);
	}
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent" name="getNextEvent" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-Communications-SignalInstance" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the next event from the event pool, using a get next event
// strategy.

return ((GetNextEventStrategy) this.object.locus.factory
		.getStrategy(&quot;getNextEvent&quot;)).getNextEvent(this);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-send" name="send" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-send.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-send-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
          <language>Java</language>
          <body>// Add a signal event occurrence for the given signal instance to the event pool 
// and signal that a new event occurrence has arrived.

SignalEventOccurrence eventOccurrence = new SignalEventOccurrence();
eventOccurrence.signalInstance = (SignalInstance) signalInstance.copy();
this.eventPool.addValue(eventOccurrence);
_send(new ArrivalSignal());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior" name="startBehavior" specification="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior-inputs-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Start the event dispatch loop for this object activation (if it has
// not already been started).
// If a classifier is given that is a type of the object of this object
// activation and there is not already a classifier behavior invocation
// for it,
// then create a classifier behavior invocation for it and add an invocation
// event occurrence to the event pool.
// Otherwise, create a classifier behavior invocation for each of the
// types of the object of this object activation which has a classifier
// behavior or which is a behavior itself
// and for which there is not currently a classifier behavior invocation.

// Start EventDispatchLoop
_startObjectBehavior();

if (classifier == null) {
	Debug.println(&quot;[startBehavior] Starting behavior for all classifiers...&quot;);
	// *** Start all classifier behaviors concurrently. ***
	Class_List types = this.object.types;
	for (Iterator i = types.iterator(); i.hasNext();) {
		Class_ type = (Class_) i.next();
		if (type instanceof Behavior | type.classifierBehavior != null) {
			this.startBehavior(type, new ParameterValueList());
		}
	}
} else {
	Debug.println(&quot;[startBehavior] Starting behavior for &quot;
			+ classifier.name + &quot;...&quot;);

	_beginIsolation();
	boolean notYetStarted = true;
	int i = 1;
	while (notYetStarted
			&amp; i &lt;= this.classifierBehaviorInvocations.size()) {
		notYetStarted = (this.classifierBehaviorInvocations
				.getValue(i - 1).classifier != classifier);
		i = i + 1;
	}

	if (notYetStarted) {
		ClassifierBehaviorInvocationEventAccepter newInvocation = new ClassifierBehaviorInvocationEventAccepter();
		newInvocation.objectActivation = this;
		this.classifierBehaviorInvocations.addValue(newInvocation);
		newInvocation.invokeBehavior(classifier, inputs);
		InvocationEventOccurrence eventOccurrence = new InvocationEventOccurrence();
		eventOccurrence.execution = newInvocation.execution;
		this.eventPool.addValue(eventOccurrence);
		_send(new ArrivalSignal());
	}
	_endIsolation();
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-stop.1" name="stop" method="Semantics-CommonBehaviors-Communications-ObjectActivation-stop"/>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register.1" name="register" method="Semantics-CommonBehaviors-Communications-ObjectActivation-register">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-register.1-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister.1" name="unregister" method="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-unregister.1-accepter" name="accepter" type="Semantics-CommonBehaviors-Communications-EventAccepter"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-dispatchNextEvent.1" name="dispatchNextEvent" method="Semantics-CommonBehaviors-Communications-ObjectActivation-dispatchNextEvent"/>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent.1" name="getNextEvent" method="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-getNextEvent.1-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-Communications-SignalInstance" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-send.1" name="send" method="Semantics-CommonBehaviors-Communications-ObjectActivation-send">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-send.1-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1" name="startBehavior" method="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-classifier-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-classifier-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-startBehavior.1-inputs-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedReception xmi:id="Semantics-CommonBehaviors-Communications-ObjectActivation-ArrivalSignal" name="ArrivalSignal" signal="Semantics-CommonBehaviors-Communications-ArrivalSignal"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_classifierBehaviorInvocations_objectActivation" name="A_classifierBehaviorInvocations_objectActivation" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-ObjectActivation-classifierBehaviorInvocations Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-objectActivation"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation" name="A_waitingEventAcceptors_objectActivation" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-ObjectActivation-waitingEventAccepters Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-Communications-ObjectActivation" association="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_waitingEventAcceptors_objectActivation-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation" name="A_eventPool_objectActivation" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-ObjectActivation-eventPool Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-Communications-ObjectActivation" association="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_eventPool_objectActivation-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution" name="A_classifier_classifierBehaviorExecution" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-classifier Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter" association="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_classifier_classifierBehaviorExecution-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter" name="A_execution_classifierBehaviorInvocationEventAccepter" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter-execution Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter-_ownedEnd.0" visibility="private" type="Semantics-CommonBehaviors-Communications-ClassifierBehaviorInvocationEventAccepter" association="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_classifierBehaviorInvocationEventAccepter-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:SignalEvent" xmi:id="Semantics-CommonBehaviors-Communications-ArrivalSignalEvent" name="ArrivalSignalEvent" signal="Semantics-CommonBehaviors-Communications-ArrivalSignal"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy" name="GetNextEventStrategy" isAbstract="true">
        <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-GetNextEventStrategy">
          <body>A get next event strategy is a semantic strategy that determines the order in which signal instances are retrieved from the event pool of an object activation.</body>
        </ownedComment>
        <generalization xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-_generalization.0" general="Semantics-Loci-LociL1-SemanticStrategy"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName" name="getName" specification="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get next event strategies are always named &quot;getNextEvent&quot;.

return &quot;getNextEvent&quot;;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName.1" name="getName" method="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getName.1-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getNextEvent" name="getNextEvent" isAbstract="true">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getNextEvent-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getNextEvent">
            <body>Get the next event from the event pool of the given object activation. The event is removed from the pool.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getNextEvent-objectActivation" name="objectActivation" type="Semantics-CommonBehaviors-Communications-ObjectActivation"/>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-GetNextEventStrategy-getNextEvent-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-Communications-SignalInstance" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy" name="FIFOGetNextEventStrategy">
        <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy">
          <body>A FIFO get next event strategy gets events in first-in first-out order.</body>
        </ownedComment>
        <generalization xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-_generalization.0" general="Semantics-CommonBehaviors-Communications-GetNextEventStrategy"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent" name="getNextEvent" specification="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent.1">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-objectActivation" name="objectActivation" type="Semantics-CommonBehaviors-Communications-ObjectActivation">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-objectActivation-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-objectActivation-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-Communications-SignalInstance" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the first event from the given event pool. The event is removed
// from the pool.

EventOccurrence eventOccurrence = objectActivation.eventPool.getValue(0);
objectActivation.eventPool.removeValue(0);
return eventOccurrence;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent.1" name="getNextEvent" method="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent">
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent.1-objectActivation" name="objectActivation" type="Semantics-CommonBehaviors-Communications-ObjectActivation"/>
          <ownedParameter xmi:id="Semantics-CommonBehaviors-Communications-FIFOGetNextEventStrategy-getNextEvent.1-OwnedParameter" name="OwnedParameter" type="Semantics-CommonBehaviors-Communications-SignalInstance" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-EventOccurrence" name="EventOccurrence"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-SignalEventOccurrence" name="SignalEventOccurrence">
        <generalization xmi:id="Semantics-CommonBehaviors-Communications-SignalEventOccurrence-_generalization.0" general="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-Communications-SignalEventOccurrence-signalinstance" name="signalinstance" type="Semantics-CommonBehaviors-Communications-SignalInstance" association="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-SignalEventOccurrence-signalinstance-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-SignalEventOccurrence-signalinstance">
            <body>The signal instance whose receipt caused this signal event occurrence.</body>
          </ownedComment>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence" name="A_signalInstance_signalEventOccurrence" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-SignalEventOccurrence-signalinstance Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence-_ownedEnd.0">
        <eAnnotations xmi:id="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence-_org.eclipse.papyrus" source="org.eclipse.papyrus">
          <details xmi:id="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence-_org.eclipse.papyrus-_details.0" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence-_ownedEnd.0" type="Semantics-CommonBehaviors-Communications-SignalEventOccurrence" association="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_signalInstance_signalEventOccurrence-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence" name="InvocationEventOccurrence">
        <generalization xmi:id="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence-_generalization.0" general="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
        <ownedAttribute xmi:id="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" association="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence">
          <ownedComment xmi:id="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence-execution-_ownedComment.0" annotatedElement="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence-execution">
            <body>The execution being asynchronously invoked.</body>
          </ownedComment>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence" name="A_execution_invocationEventOccurrence" visibility="private" memberEnd="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence-execution Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence-_ownedEnd.0">
        <eAnnotations xmi:id="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence-_org.eclipse.papyrus" source="org.eclipse.papyrus">
          <details xmi:id="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence-_org.eclipse.papyrus-_details.0" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence-_ownedEnd.0" type="Semantics-CommonBehaviors-Communications-InvocationEventOccurrence" association="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-CommonBehaviors-Communications-A_execution_invocationEventOccurrence-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Semantics-Actions" name="Actions">
      <packageImport xmi:id="_v92HsM6_EeWF7I4YWspV6w" importedPackage="Semantics-Activities"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation" name="SendSignalActionActivation">
        <ownedComment xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-SendSignalActionActivation">
          <body>A send signal action activation is an invocation action activation for a send signal action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-InvocationActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation-doAction" name="doAction" specification="Semantics-Actions-BasicActions-SendSignalActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the value from the target pin. If the value is not a reference,
// then do nothing.
// Otherwise, construct a signal using the values from the argument pins
// and send it to the referent object.

SendSignalAction action = (SendSignalAction) (this.node);
Value target = this.takeTokens(action.target).getValue(0);

if (target instanceof Reference) {
	Signal signal = action.signal;

	SignalInstance signalInstance = new SignalInstance();
	signalInstance.type = signal;

	PropertyList attributes = signal.ownedAttribute;
	InputPinList argumentPins = action.argument;
	for (int i = 0; i &lt; attributes.size(); i++) {
		Property attribute = attributes.getValue(i);
		InputPin argumentPin = argumentPins.getValue(i);
		ValueList values = this.takeTokens(argumentPin);
		signalInstance.setFeatureValue(attribute, values, 0);
	}

	((Reference) target).send(signalInstance);
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-SendSignalActionActivation-doAction.1" name="doAction" method="Semantics-Actions-BasicActions-SendSignalActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-PinActivation" name="PinActivation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Actions-BasicActions-PinActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-PinActivation">
          <body>A pin activation is an object node activation for a node that is a pin.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-BasicActions-PinActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-BasicActions-PinActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ObjectNodeActivation"/>
        <ownedAttribute xmi:id="Semantics-Actions-BasicActions-PinActivation-actionActivation" name="actionActivation" type="Semantics-Actions-BasicActions-ActionActivation" association="Semantics-Actions-BasicActions-A_pinActivations_actionActivation">
          <ownedComment xmi:id="Semantics-Actions-BasicActions-PinActivation-actionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-PinActivation-actionActivation">
            <body>The activation of the action that owns the pin for this pin activation.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-PinActivation-actionActivation-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-PinActivation-actionActivation-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire" name="fire" specification="Semantics-Actions-BasicActions-PinActivation-fire.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-PinActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add all incoming tokens to the pin.

Debug.println(&quot;[fire] Pin &quot;
		+ (this.node == null ? &quot;&quot; : this.node.name + &quot;...&quot;));

this.addTokens(incomingTokens);

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens-Parameter1-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens-Parameter1-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Take only a number of tokens only up to the limit allowed by
// the multiplicity upper bound of the pin for this activation.

int count = this.countUnofferedTokens();
int upper = -1;

// Note: A pin activation used in an expansion activation group
// will have this.node == null.
if (this.node != null) {
	upper = ((Pin) (this.node)).multiplicityElement.upper.naturalValue;
}

TokenList tokens = new TokenList();

// Note: upper &lt; 0 indicates an unbounded upper multiplicity.
if (upper &lt; 0 | count &lt; upper) {
	ActivityEdgeInstanceList incomingEdges = this.incomingEdges;
	for (int i = 0; i &lt; incomingEdges.size(); i++) {
		ActivityEdgeInstance edge = incomingEdges.getValue(i);
		int incomingCount = edge.countOfferedValues();
		TokenList incomingTokens = new TokenList();
		if (upper &lt; 0 | incomingCount &lt; upper - count) {
			incomingTokens = edge.takeOfferedTokens();
			count = count + incomingCount;
		} else if (count &lt; upper) {
			incomingTokens = edge.takeOfferedTokens(upper - count);
			count = upper;
		}
		for (int j = 0; j &lt; incomingTokens.size(); j++) {
			Token token = incomingTokens.getValue(j);
			tokens.addValue(token);
		}
	}
}

return tokens;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-PinActivation-fire.1" name="fire" method="Semantics-Actions-BasicActions-PinActivation-fire">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-PinActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-PinActivation-fire.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens.1-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens.1-Parameter1-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-PinActivation-takeOfferedTokens.1-Parameter1-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-OutputPinActivation" name="OutputPinActivation">
        <ownedComment xmi:id="Semantics-Actions-BasicActions-OutputPinActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-OutputPinActivation">
          <body>An output pin activation is a pin activation for an output pin.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-BasicActions-OutputPinActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-BasicActions-OutputPinActivation-_generalization.0" general="Semantics-Actions-BasicActions-PinActivation"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-InvocationActionActivation" name="InvocationActionActivation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Actions-BasicActions-InvocationActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-InvocationActionActivation">
          <body>An invocation action activation is an action activation of an invocation action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-BasicActions-InvocationActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-BasicActions-InvocationActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-InputPinActivation" name="InputPinActivation">
        <ownedComment xmi:id="Semantics-Actions-BasicActions-InputPinActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-InputPinActivation">
          <body>An input pin activation is a pin activation for an input pin.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-BasicActions-InputPinActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-BasicActions-InputPinActivation-_generalization.0" general="Semantics-Actions-BasicActions-PinActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-receiveOffer" name="receiveOffer" specification="Semantics-Actions-BasicActions-InputPinActivation-receiveOffer.1">
          <language>Java</language>
          <body>// Forward the offer to the action activation. [When all input pins are
// ready, the action will fire them.]

this.actionActivation.receiveOffer();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady" name="isReady" specification="Semantics-Actions-BasicActions-InputPinActivation-isReady.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return true if the total number of values already being offered by
// this pin plus those being offered
// by the sources of incoming edges is at least equal to the minimum
// multiplicity of the pin.

boolean ready = super.isReady();
if (ready) {
	int totalValueCount = this.countUnofferedTokens()
			+ this.countOfferedValues();
	int minimum = ((Pin) this.node).multiplicityElement.lower;
	ready = totalValueCount >= minimum;
}

return ready;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-InputPinActivation-receiveOffer.1" name="receiveOffer" method="Semantics-Actions-BasicActions-InputPinActivation-receiveOffer"/>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady.1" name="isReady" method="Semantics-Actions-BasicActions-InputPinActivation-isReady">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-InputPinActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-CallActionActivation" name="CallActionActivation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Actions-BasicActions-CallActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-CallActionActivation">
          <body>A call action activation is an invocation action activation for a call action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-BasicActions-CallActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-BasicActions-CallActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-InvocationActionActivation"/>
        <ownedAttribute xmi:id="Semantics-Actions-BasicActions-CallActionActivation-callExecutions" name="callExecutions" visibility="public" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" aggregation="composite" association="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation">
          <ownedComment xmi:id="Semantics-Actions-BasicActions-CallActionActivation-callExecutions-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-CallActionActivation-callExecutions">
            <body>The set of execution object for currently ongoing calls made through this call action activation.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-callExecutions-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-callExecutions-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-doAction" name="doAction" specification="Semantics-Actions-BasicActions-CallActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the call execution object, set its input parameters from the
// argument pins and execute it.
// Once execution completes, copy the values of the output parameters of
// the call execution to the result pins of the call action execution,
// then destroy the execution.

Execution callExecution = this.getCallExecution();

if (callExecution != null) {
	this.callExecutions.addValue(callExecution);

	CallAction callAction = (CallAction) (this.node);
	InputPinList argumentPins = callAction.argument;
	OutputPinList resultPins = callAction.result;

	ParameterList parameters = callExecution.getBehavior().ownedParameter;

	int pinNumber = 1;
	int i = 1;
	while (i &lt;= parameters.size()) {
		Parameter parameter = parameters.getValue(i - 1);
		if (parameter.direction == ParameterDirectionKind.in
				| parameter.direction == ParameterDirectionKind.inout) {
			ParameterValue parameterValue = new ParameterValue();
			parameterValue.parameter = parameter;
			parameterValue.values = this.takeTokens(argumentPins
					.getValue(pinNumber - 1));
			callExecution.setParameterValue(parameterValue);
			pinNumber = pinNumber + 1;
		}
		i = i + 1;
	}

	callExecution.execute();

	ParameterValueList outputParameterValues = callExecution
			.getOutputParameterValues();

	pinNumber = 1;
	i = 1;
	while (i &lt;= parameters.size()) {
		Parameter parameter = parameters.getValue(i - 1);
		if ((parameter.direction == ParameterDirectionKind.inout)
				| (parameter.direction == ParameterDirectionKind.out)
				| (parameter.direction == ParameterDirectionKind.return_)) {
			for (int j = 0; j &lt; outputParameterValues.size(); j++) {
				ParameterValue outputParameterValue = outputParameterValues
						.getValue(j);
				if (outputParameterValue.parameter == parameter) {
					OutputPin resultPin = resultPins
							.getValue(pinNumber - 1);
					this.putTokens(resultPin,
							outputParameterValue.values);
				}
			}
			pinNumber = pinNumber + 1;
		}
		i = i + 1;
	}

	callExecution.destroy();
	this.removeCallExecution(callExecution);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-terminate" name="terminate" specification="Semantics-Actions-BasicActions-CallActionActivation-terminate.1">
          <language>Java</language>
          <body>// Terminate all call executions (if any), then terminate the call
// action activation (self).

for (int i = 0; i &lt; this.callExecutions.size(); i++) {
	Execution execution = this.callExecutions.getValue(i);
	execution.terminate();
}

super.terminate();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution" name="removeCallExecution" specification="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution-execution-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution-execution-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Remove the given execution from the current list of call executions.

boolean notFound = true;
int i = 1;
while (notFound &amp; i &lt;= this.callExecutions.size()) {
	if (this.callExecutions.getValue(i - 1) == execution) {
		this.callExecutions.removeValue(i - 1);
		notFound = false;
	}
	i = i + 1;
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-CallActionActivation-doAction.1" name="doAction" method="Semantics-Actions-BasicActions-CallActionActivation-doAction"/>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-CallActionActivation-getCallExecution" name="getCallExecution" isAbstract="true">
          <ownedComment xmi:id="Semantics-Actions-BasicActions-CallActionActivation-getCallExecution-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-CallActionActivation-getCallExecution">
            <body>Get the execution object for the called behavior.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-CallActionActivation-getCallExecution-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-CallActionActivation-terminate.1" name="terminate" method="Semantics-Actions-BasicActions-CallActionActivation-terminate"/>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution.1" name="removeCallExecution" method="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-CallActionActivation-removeCallExecution.1-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation" name="CallBehaviorActionActivation">
        <ownedComment xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-CallBehaviorActionActivation">
          <body>A call behavior action activation is a call action activation for a call behavior action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-CallActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution" name="getCallExecution" specification="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create and execution for the given behavior at the current locus and
// return the resulting execution object.
// If the given behavior is in the context of a classifier, then pass
// the current context object as the context for the call.
// Otherwise, use a null context.
// [Note that this requires the behavior context to be compatible with
// the type of the current contect object.]

Behavior behavior = ((CallBehaviorAction) (this.node)).behavior;

Object_ context;
if (behavior.context == null) {
	context = null;
} else {
	// Debug.println(&quot;[getCallExecution] behavior context = &quot; +
	// behavior.context.name);
	context = this.getExecutionContext();
}

// Debug.println(&quot;[getCallExecution] context = &quot; + context);

return this.getExecutionLocus().factory.createExecution(behavior,
		context);

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution.1" name="getCallExecution" method="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-CallBehaviorActionActivation-getCallExecution.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation" name="CallOperationActionActivation">
        <ownedComment xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-CallOperationActionActivation">
          <body>A call operation action activation is a call action activation for a call operation action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-CallActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution" name="getCallExecution" specification="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If the value on the target input pin is a reference, dispatch the
// operation to it and return the resulting execution object.

CallOperationAction action = (CallOperationAction) (this.node);
Value target = this.takeTokens(action.target).getValue(0);

Execution execution;
if (target instanceof Reference) {
	execution = ((Reference) target).dispatch(action.operation);
} else {
	execution = null;
}

return execution;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution.1" name="getCallExecution" method="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-CallOperationActionActivation-getCallExecution.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-BasicActions-ActionActivation" name="ActionActivation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Actions-BasicActions-ActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-ActionActivation">
          <body>An action activation is an activity node activation for a node that is an action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-BasicActions-ActionActivation-_ownedComment.1">
          <body>import java.util.*;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-BasicActions-ActionActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
        <ownedAttribute xmi:id="Semantics-Actions-BasicActions-ActionActivation-pinActivations" name="pinActivations" type="Semantics-Actions-BasicActions-PinActivation" association="Semantics-Actions-BasicActions-A_pinActivations_actionActivation">
          <ownedComment xmi:id="Semantics-Actions-BasicActions-ActionActivation-pinActivations-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-ActionActivation-pinActivations">
            <body>The activations of the pins owned by the action of this action activation.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-pinActivations-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-pinActivations-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Actions-BasicActions-ActionActivation-firing" name="firing" visibility="public">
          <ownedComment xmi:id="Semantics-Actions-BasicActions-ActionActivation-firing-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-ActionActivation-firing">
            <body>Whether this action activation is already firing. This attribute is only used if the action for this action activation has isLocallyReentrant = false (the default). If isLocallyReentrant=true, then firing always just remains false.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize" name="initialize" specification="Semantics-Actions-BasicActions-ActionActivation-initialize.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
          <language>Java</language>
          <body>// Initialize this action activation to be not firing.

super.initialize(node, group);
this.firing = false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-run" name="run" specification="Semantics-Actions-BasicActions-ActionActivation-run.1">
          <language>Java</language>
          <body>// Run this action activation and any outoging fork node attached to it.

super.run();

if (this.outgoingEdges.size() > 0) {
	this.outgoingEdges.getValue(0).target.run();
}

this.firing = false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If the action is not locally reentrant, then mark this activation as
// firing.
// Take any incoming offers of control tokens, then concurrently fire
// all input pin activations.

// Note: This is included here to happen in the same isolation scope as
// the isReady test.
this.firing = !((Action) this.node).isLocallyReentrant;

TokenList offeredTokens = new TokenList();

ActivityEdgeInstanceList incomingEdges = this.incomingEdges;
for (int i = 0; i &lt; incomingEdges.size(); i++) {
	ActivityEdgeInstance incomingEdge = incomingEdges.getValue(i);
	TokenList tokens = incomingEdge.takeOfferedTokens();
	for (int j = 0; j &lt; tokens.size(); j++) {
		Token token = tokens.getValue(j);
		token.withdraw();
		offeredTokens.addValue(token);
	}
}

Action action = (Action) (this.node);

// *** Fire all input pins concurrently. ***
InputPinList inputPins = action.input;
for (Iterator i = inputPins.iterator(); i.hasNext();) {
	InputPin pin = (InputPin) (i.next());
	PinActivation pinActivation = this.getPinActivation(pin);
	TokenList tokens = pinActivation.takeOfferedTokens();
	pinActivation.fire(tokens);
	for (int j = 0; j &lt; tokens.size(); j++) {
		Token token = tokens.getValue(j);
		offeredTokens.addValue(token);
	}
}

return offeredTokens;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire" name="fire" specification="Semantics-Actions-BasicActions-ActionActivation-fire.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Do the main action behavior then concurrently fire all output pin
// activations
// and offer a single control token. Then activate the action again,
// if it is still ready to fire and has at least one token actually
// being
// offered to it.

do {

	Debug.println(&quot;[fire] Action &quot; + this.node.name + &quot;...&quot;);
	Debug.println(&quot;[event] Fire activity=&quot;
			+ this.getActivityExecution().getBehavior().name
			+ &quot; action=&quot; + this.node.name);

	this.doAction();
	incomingTokens = this.completeAction();

} while (incomingTokens.size() > 0);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-terminate" name="terminate" specification="Semantics-Actions-BasicActions-ActionActivation-terminate.1">
          <language>Java</language>
          <body>// Terminate this action activation and any outgoing fork node attached
// to it.

super.terminate();

if (this.outgoingEdges.size() > 0) {
	this.outgoingEdges.getValue(0).target.terminate();
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady" name="isReady" specification="Semantics-Actions-BasicActions-ActionActivation-isReady.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// In addition to the default condition, check that, if the action has
// isLocallyReentrant=false, then the activation is not currently
// firing,
// and that the sources of all incoming edges (control flows) have
// offers and all input pin activations are ready.
// [This assumes that all edges directly incoming to the action are
// control flows.]

boolean ready = super.isReady()
		&amp; (((Action) this.node).isLocallyReentrant | !this.isFiring());

int i = 1;
while (ready &amp; i &lt;= this.incomingEdges.size()) {
	ready = this.incomingEdges.getValue(i - 1).hasOffer();
	i = i + 1;
}

InputPinList inputPins = ((Action) (this.node)).input;
int j = 1;
while (ready &amp; j &lt;= inputPins.size()) {
	ready = this.getPinActivation(inputPins.getValue(j - 1)).isReady();
	j = j + 1;
}

return ready;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring" name="isFiring" specification="Semantics-Actions-BasicActions-ActionActivation-isFiring.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring-Parameter1-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring-Parameter1-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Indicate whether this action activation is currently firing or not.

return firing;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-sendOffers" name="sendOffers" specification="Semantics-Actions-BasicActions-ActionActivation-sendOffers.1">
          <language>Java</language>
          <body>// Fire all output pins and send offers on all outgoing control flows.

Action action = (Action) (this.node);

// *** Send offers from all output pins concurrently. ***
OutputPinList outputPins = action.output;
for (Iterator i = outputPins.iterator(); i.hasNext();) {
	OutputPin outputPin = (OutputPin) i.next();
	PinActivation pinActivation = this.getPinActivation(outputPin);
	pinActivation.sendUnofferedTokens();
}

// Send offers on all outgoing control flows.
if (this.outgoingEdges.size() > 0) {
	TokenList tokens = new TokenList();
	tokens.addValue(new ControlToken());
	this.addTokens(tokens);
	this.outgoingEdges.getValue(0).sendOffer(tokens);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-createNodeActivations" name="createNodeActivations" specification="Semantics-Actions-BasicActions-ActionActivation-createNodeActivations.1">
          <language>Java</language>
          <body>// Create node activations for the input and output pins of the action
// for this activation.
// [Note: Pins are owned by their actions, not by the enclosing activity
// (or group), so they must be activated through the action activation.]

Action action = (Action) (this.node);

ActivityNodeList inputPinNodes = new ActivityNodeList();
InputPinList inputPins = action.input;
for (int i = 0; i &lt; inputPins.size(); i++) {
	InputPin inputPin = inputPins.getValue(i);
	inputPinNodes.addValue(inputPin);
}

this.group.createNodeActivations(inputPinNodes);

for (int i = 0; i &lt; inputPinNodes.size(); i++) {
	ActivityNode node = inputPinNodes.getValue(i);
	this.addPinActivation((PinActivation) (this.group
			.getNodeActivation(node)));
}

ActivityNodeList outputPinNodes = new ActivityNodeList();
OutputPinList outputPins = action.output;
for (int i = 0; i &lt; outputPins.size(); i++) {
	OutputPin outputPin = outputPins.getValue(i);
	outputPinNodes.addValue(outputPin);
}

this.group.createNodeActivations(outputPinNodes);

for (int i = 0; i &lt; outputPinNodes.size(); i++) {
	ActivityNode node = outputPinNodes.getValue(i);
	this.addPinActivation((PinActivation) (this.group
			.getNodeActivation(node)));
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge" name="addOutgoingEdge" specification="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge-edge-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge-edge-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If there are no outgoing activity edge instances, create a single
// activity edge instance with a fork node execution at the other end.
// Add the give edge to the fork node execution that is the target of
// the activity edge instance out of this action execution.
// [This assumes that all edges directly outgoing from the action are
// control flows, with an implicit fork for offers out of the action.]

ActivityNodeActivation forkNodeActivation;

if (this.outgoingEdges.size() == 0) {
	forkNodeActivation = new ForkNodeActivation();
	forkNodeActivation.running = false;
	ActivityEdgeInstance newEdge = new ActivityEdgeInstance();
	super.addOutgoingEdge(newEdge);
	forkNodeActivation.addIncomingEdge(newEdge);
} else {
	forkNodeActivation = this.outgoingEdges.getValue(0).target;
}

forkNodeActivation.addOutgoingEdge(edge);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation" name="addPinActivation" specification="Semantics-Actions-BasicActions-ActionActivation-addPinActivation.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation-pinActivation" name="pinActivation" type="Semantics-Actions-BasicActions-PinActivation">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation-pinActivation-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation-pinActivation-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add a pin activation to this action activation.

this.pinActivations.addValue(pinActivation);
pinActivation.actionActivation = this;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation" name="getPinActivation" specification="Semantics-Actions-BasicActions-ActionActivation-getPinActivation.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-ReturnResult" name="ReturnResult" type="Semantics-Actions-BasicActions-PinActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Pin"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-pin-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation-pin-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Precondition: The given pin is owned by the action of the action
// activation.
// Return the pin activation corresponding to the given pin.

PinActivation pinActivation = null;
int i = 1;
while (pinActivation == null &amp; i &lt;= this.pinActivations.size()) {
	PinActivation thisPinActivation = this.pinActivations
			.getValue(i - 1);
	if (thisPinActivation.node == pin) {
		pinActivation = thisPinActivation;
	}
	i = i + 1;
}

return pinActivation;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken" name="putToken" specification="Semantics-Actions-BasicActions-ActionActivation-putToken.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#OutputPin"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-pin-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-pin-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-value" name="value" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-value-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken-value-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Precondition: The action execution has fired and the given pin is
// owned by the action of the action execution.
// Place a token for the given value on the pin activation corresponding
// to the given output pin.

Debug.println(&quot;[putToken] node = &quot; + this.node.name);

ObjectToken token = new ObjectToken();
token.value = value;

PinActivation pinActivation = this.getPinActivation(pin);
pinActivation.addToken(token);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens" name="putTokens" specification="Semantics-Actions-BasicActions-ActionActivation-putTokens.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#OutputPin"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-pin-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-pin-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-values" name="values" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-values-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens-values-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Precondition: The action execution has fired and the given pin is
// owned by the action of the action execution.
// Place tokens for the given values on the pin activation corresponding
// to the given output pin.

// Debug.println(&quot;[putTokens] node = &quot; + this.node.name);

for (int i = 0; i &lt; values.size(); i++) {
	Value value = values.getValue(i);
	this.putToken(pin, value);
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens" name="getTokens" specification="Semantics-Actions-BasicActions-ActionActivation-getTokens.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#InputPin"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-pin-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-pin-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Precondition: The action execution has fired and the given pin is
// owned by the action of the action execution.
// Get any tokens held by the pin activation corresponding to the given
// input pin and return them
// (but leave the tokens on the pin).

Debug.println(&quot;[getTokens] node = &quot; + this.node.name + &quot;, pin = &quot;
		+ pin.name);

PinActivation pinActivation = this.getPinActivation(pin);
TokenList tokens = pinActivation.getUnofferedTokens();

ValueList values = new ValueList();
for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	Value value = ((ObjectToken) token).value;
	if (value != null) {
		values.addValue(value);
	}
}

return values;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens" name="takeTokens" specification="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#InputPin"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-pin-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-pin-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Precondition: The action execution has fired and the given pin is
// owned by the action of the action execution.
// Take any tokens held by the pin activation corresponding to the given
// input pin and return them.

Debug.println(&quot;[takeTokens] node = &quot; + this.node.name + &quot;, pin = &quot;
		+ pin.name);

PinActivation pinActivation = this.getPinActivation(pin);
TokenList tokens = pinActivation.takeUnofferedTokens();

ValueList values = new ValueList();
for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	Value value = ((ObjectToken) token).value;
	if (value != null) {
		values.addValue(value);
	}
}

return values;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor" name="isSourceFor" specification="Semantics-Actions-BasicActions-ActionActivation-isSourceFor.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-edgeInstance-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor-edgeInstance-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If this action has an outgoing fork node, check that the fork node is
// the source of the given edge instance.

boolean isSource = false;
if (this.outgoingEdges.size() > 0) {
	isSource = this.outgoingEdges.getValue(0).target
			.isSourceFor(edgeInstance);
}

return isSource;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink" name="valueParticipatesInLink" specification="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-value" name="value" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-value-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-value-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-link" name="link" type="Semantics-Classes-Kernel-Link">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-link-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink-link-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if the given value participates in the given link.

FeatureValueList linkFeatureValues = link.getFeatureValues();

boolean participates = false;
int i = 1;
while (!participates &amp; i &lt;= linkFeatureValues.size()) {
	participates = linkFeatureValues.getValue(i - 1).values.getValue(0)
			.equals(value);
	i = i + 1;
}

return participates;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue" name="makeBooleanValue" specification="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-BooleanValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-value" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-value-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue-value-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Make a Boolean value using the built-in Boolean primitive type.
// [This ensures that Boolean values created internally are the same as
// the default used for evaluating Boolean literals.]

LiteralBoolean booleanLiteral = new LiteralBoolean();
booleanLiteral.value = value;
return (BooleanValue) (this.getExecutionLocus().executor
		.evaluate(booleanLiteral));
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-completeAction" name="completeAction" specification="Semantics-Actions-BasicActions-ActionActivation-completeAction.1">
          <language>Java</language>
          <body>// Concurrently fire all output pin activations and offer a single
// control token. Then check if the action should fire again
// and, if so, return additional incoming tokens for this.

this.sendOffers();

Debug.println(&quot;[fire] Checking if &quot; + this.node.name
		+ &quot; should fire again...&quot;);

_beginIsolation();
TokenList incomingTokens = new TokenList();
this.firing = false;
if (this.isReady()) {
	incomingTokens = this.takeOfferedTokens();
	this.firing = this.isFiring() &amp; incomingTokens.size() > 0;
}
_endIsolation();

return incomingTokens;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents" name="checkAllParents" specification="Semantics-Actions-BasicActions-ActionActivation-checkAllParents.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Check if the given classifier matches any of the direct or indirect
// ancestors of a given type.

ClassifierList directParents = type.general;
boolean matched = false;
int i = 1;
while (!matched &amp; i &lt;= directParents.size()) {
	Classifier directParent = directParents.getValue(i - 1);
	if (directParent == classifier) {
		matched = true;
	} else {
		matched = this.checkAllParents(directParent, classifier);
	}
	i = i + 1;
}

return matched;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize.1" name="initialize" method="Semantics-Actions-BasicActions-ActionActivation-initialize" redefinedOperation="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize.1">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize.1-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-initialize.1-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-run.1" name="run" method="Semantics-Actions-BasicActions-ActionActivation-run"/>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens.1-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeOfferedTokens.1-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire.1" name="fire" method="Semantics-Actions-BasicActions-ActionActivation-fire">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-fire.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-terminate.1" name="terminate" method="Semantics-Actions-BasicActions-ActionActivation-terminate"/>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-completeAction.1" name="completeAction" method="Semantics-Actions-BasicActions-ActionActivation-completeAction">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-completeAction.1-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-completeAction.1-Parameter1-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-completeAction.1-Parameter1-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady.1" name="isReady" method="Semantics-Actions-BasicActions-ActionActivation-isReady">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring.1" name="isFiring" method="Semantics-Actions-BasicActions-ActionActivation-isFiring">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-isFiring.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-doAction" name="doAction" isAbstract="true">
          <ownedComment xmi:id="Semantics-Actions-BasicActions-ActionActivation-doAction-_ownedComment.0" annotatedElement="Semantics-Actions-BasicActions-ActionActivation-doAction">
            <body>Do the required action behavior.&#xD;
</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-sendOffers.1" name="sendOffers" method="Semantics-Actions-BasicActions-ActionActivation-sendOffers"/>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-createNodeActivations.1" name="createNodeActivations" method="Semantics-Actions-BasicActions-ActionActivation-createNodeActivations"/>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge.1" name="addOutgoingEdge" method="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-addOutgoingEdge.1-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation.1" name="addPinActivation" method="Semantics-Actions-BasicActions-ActionActivation-addPinActivation">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-addPinActivation.1-pinActivation" name="pinActivation" type="Semantics-Actions-BasicActions-PinActivation"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation.1" name="getPinActivation" method="Semantics-Actions-BasicActions-ActionActivation-getPinActivation">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Actions-BasicActions-PinActivation" direction="return"/>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-getPinActivation.1-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Pin"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken.1" name="putToken" method="Semantics-Actions-BasicActions-ActionActivation-putToken">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken.1-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#OutputPin"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-putToken.1-value" name="value" type="Semantics-Classes-Kernel-Value"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens.1" name="putTokens" method="Semantics-Actions-BasicActions-ActionActivation-putTokens">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens.1-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#OutputPin"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens.1-values" name="values" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens.1-values-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-putTokens.1-values-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens.1" name="getTokens" method="Semantics-Actions-BasicActions-ActionActivation-getTokens">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens.1-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#InputPin"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens.1-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-getTokens.1-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1" name="takeTokens" method="Semantics-Actions-BasicActions-ActionActivation-takeTokens">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#InputPin"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-ActionActivation-takeTokens.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor.1" name="isSourceFor" method="Semantics-Actions-BasicActions-ActionActivation-isSourceFor">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-isSourceFor.1-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink.1" name="valueParticipatesInLink" method="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink.1-value" name="value" type="Semantics-Classes-Kernel-Value"/>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-valueParticipatesInLink.1-link" name="link" type="Semantics-Classes-Kernel-Link"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue.1" name="makeBooleanValue" method="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-BooleanValue" direction="return"/>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-makeBooleanValue.1-value" name="value">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents.1" name="checkAllParents" method="Semantics-Actions-BasicActions-ActionActivation-checkAllParents">
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents.1-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents.1-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-BasicActions-ActionActivation-checkAllParents.1-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Actions-BasicActions-A_pinActivations_actionActivation" name="A_pinActivations_actionActivation" visibility="private" memberEnd="Semantics-Actions-BasicActions-ActionActivation-pinActivations Semantics-Actions-BasicActions-PinActivation-actionActivation"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation" name="A_callExecutions_callActionActivation" visibility="private" memberEnd="Semantics-Actions-BasicActions-CallActionActivation-callExecutions Semantics-Actions-BasicActions-A_callExecutions_callActionActivation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation-_ownedEnd.0" visibility="private" type="Semantics-Actions-BasicActions-CallActionActivation" association="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-BasicActions-A_callExecutions_callActionActivation-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-WriteLinkActionActivation" name="WriteLinkActionActivation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-WriteLinkActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-WriteLinkActionActivation">
          <body>A write link action activation is a link action activation for a write link action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-WriteLinkActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-WriteLinkActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-LinkActionActivation"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation" name="WriteStructuralFeatureActionActivation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation">
          <body>A write structural feature action activation is a structural feature action activation for a write structural feature action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position" name="position" specification="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-value" name="value" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-value-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-value-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-list" name="list" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-list-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-list-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-startAt" name="startAt">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-startAt-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position-startAt-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the position (counting from 1) of the first occurance of the
// given value in the given list at or after the starting index, or 0 if
// it is not found.

boolean found = false;
int i = startAt;
while (!found &amp; i &lt;= list.size()) {
	found = list.getValue(i - 1).equals(value);
	i = i + 1;
}

if (!found) {
	i = 1;
}

return i - 1;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1" name="position" method="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-value" name="value" type="Semantics-Classes-Kernel-Value"/>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-list" name="list" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-list-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-list-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation-position.1-startAt" name="startAt">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation" name="ValueSpecificationActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation">
          <body>A value specification action activation is an action activation for a value specification action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-doAction.1">
          <language>Java</language>
          <body>// Evaluate the value specification for the action and place the result
// on the result pin of the action.

ValueSpecificationAction action = (ValueSpecificationAction) (this.node);

Value value = this.getExecutionLocus().executor.evaluate(action.value);
this.putToken(action.result, value);

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ValueSpecificationActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation" name="TestIdentityActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-TestIdentityActionActivation">
          <body>A test identity action activation is an action activation for a test identity action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the values from the first and second input pins and test if they
// are equal. (Note the equality of references is defined to be that
// they have identical referents.)
// If they are equal, place true on the pin execution for the result
// output pin, otherwise place false.

TestIdentityAction action = (TestIdentityAction) (this.node);

Value firstValue = this.takeTokens(action.first).getValue(0);
Value secondValue = this.takeTokens(action.second).getValue(0);

Value testResult = this
		.makeBooleanValue(firstValue.equals(secondValue));
this.putToken(action.result, testResult);

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-TestIdentityActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation" name="StructuralFeatureActionActivation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation">
          <body>A structural feature action activation is an action activation for a structural feature action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation" name="getAssociation" specification="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-feature-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-feature-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Association"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-Parameter1-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation-Parameter1-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If the structural feature for the action of this activation is an
// association end,
// then get the associated association.

Association association = null;
if (feature instanceof Property) {
	association = ((Property) feature).association;
}

return association;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks" name="getMatchingLinks" specification="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-association" name="association">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Association"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-association-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-association-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-end" name="end">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-end-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-end-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-oppositeValue" name="oppositeValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-oppositeValue-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-oppositeValue-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-Parameter1" name="Parameter1" type="Semantics-Classes-Kernel-Link" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-Parameter1-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks-Parameter1-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the links of the given binary association whose end opposite
// to the given end has the given value

return this.getMatchingLinksForEndValue(association, end, oppositeValue, null);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue" name="getMatchingLinksForEndValue" specification="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-association" name="association">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Association"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-end" name="end">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-oppositeValue" name="oppositeValue" type="Semantics-Classes-Kernel-Value"/>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-endValue" name="endValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-endValue-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-endValue-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-result" name="result" type="Semantics-Classes-Kernel-Link" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-result-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue-result-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the links of the given binary association whose end opposite
// to the given end has the given opposite value and, optionally, that
// has a given end value for the given end.

Property oppositeEnd = this.getOppositeEnd(association, end);

ExtensionalValueList extent = this.getExecutionLocus().getExtent(
		association);

LinkList links = new LinkList();
for (int i = 0; i &lt; extent.size(); i++) {
	ExtensionalValue link = extent.getValue(i);
	if (link.getFeatureValue(oppositeEnd).values.getValue(0).equals(oppositeValue)) {
		boolean matches = true;
		if (endValue != null) {
			matches = link.getFeatureValue(end).values.getValue(0).equals(endValue);
		}
		if (matches) {
			if (!end.multiplicityElement.isOrdered | links.size() == 0) {
				links.addValue((Link) link);
			} else {
				int n = link.getFeatureValue(end).position;
				boolean continueSearching = true;
				int j = 0;
				while (continueSearching &amp; j &lt; links.size()) {
					j = j + 1;
					continueSearching = links.getValue(j - 1).getFeatureValue(end).position &lt; n;
				}
				if (continueSearching) {
					links.addValue((Link) link);
				} else {
					links.addValue(j - 1, (Link) link);
				}
			}
		}
	}
}

return links;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd" name="getOppositeEnd" specification="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd.1">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-association" name="association">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Association"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-association-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-association-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-end" name="end">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-end-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-end-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Property"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-Parameter1-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd-Parameter1-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the end of a binary association opposite to the given end.

Property oppositeEnd = association.memberEnd.getValue(0);
if (oppositeEnd == end) {
	oppositeEnd = association.memberEnd.getValue(1);
}

return oppositeEnd;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1" name="getAssociation" method="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1-feature" name="feature">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Association"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1-Parameter1-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getAssociation.1-Parameter1-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1" name="getMatchingLinks" method="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-association" name="association">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Association"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-end" name="end">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-oppositeValue" name="oppositeValue" type="Semantics-Classes-Kernel-Value"/>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-Parameter1" name="Parameter1" type="Semantics-Classes-Kernel-Link" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-Parameter1-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinks.1-Parameter1-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1" name="getMatchingLinksForEndValue" method="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-association" name="association">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Association"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-end" name="end">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-oppositeValue" name="oppositeValue" type="Semantics-Classes-Kernel-Value"/>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-endValue" name="endValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-endValue-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-endValue-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-result" name="result" type="Semantics-Classes-Kernel-Link" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-result-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getMatchingLinksForEndValue.1-result-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd.1" name="getOppositeEnd" method="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd.1-association" name="association">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Association"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd.1-end" name="end">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#StructuralFeature"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation-getOppositeEnd.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Property"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation" name="RemoveStructuralFeatureValueActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation">
          <body>A remove structural feature action activation is a write structural feature action activation for a remove structural feature value action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the values of the object and value input pins.
// If the given feature is an association end, then destroy any matching
// links.
// Otherwise, if the object input is a structural value, remove values
// from the given feature.
// If isRemoveDuplicates is true, then destroy all current matching
// links or remove all values equal to the input value.
// If isRemoveDuplicates is false and there is no removeAt input pin,
// remove any one feature value equal to the input value (if there are
// any that are equal).
// If isRemoveDuplicates is false, and there is a removeAt input pin
// remove the feature value at that position.

RemoveStructuralFeatureValueAction action = (RemoveStructuralFeatureValueAction) (this.node);
StructuralFeature feature = action.structuralFeature;
Association association = this.getAssociation(feature);

Value value = this.takeTokens(action.object).getValue(0);

Value inputValue = null;
if (action.value != null) {
	// NOTE: Multiplicity of the value input pin is required to be 1..1.
	inputValue = this.takeTokens(action.value).getValue(0);
}

int removeAt = 0;
if (action.removeAt != null) {
	removeAt = ((UnlimitedNaturalValue) this
			.takeTokens(action.removeAt).getValue(0)).value.naturalValue;
}

if (association != null) {
	LinkList links = this.getMatchingLinksForEndValue(association, feature, value, inputValue);
	
	if (action.isRemoveDuplicates) {
		for (int i = 0; i &lt; links.size(); i++) {
			Link link = links.getValue(i);
			link.destroy();
		}

	} else if (action.removeAt == null) {
		// *** If there is more than one matching link,
		// non-deterministically choose one. ***
		if (links.size() > 0) {
			int i = ((ChoiceStrategy) this.getExecutionLocus().factory
					.getStrategy(&quot;choice&quot;)).choose(links.size());
			links.getValue(i - 1).destroy();
		}

	} else {
		boolean notFound = true;
		int i = 1;
		while (notFound &amp; i &lt;= links.size()) {
			Link link = links.getValue(i - 1);
			if (link.getFeatureValue(feature).position == removeAt) {
				notFound = false;
				link.destroy();
			}
			i = i + 1;
		}
	}

} else if (value instanceof StructuredValue) {
	// If the value is a data value, then it must be copied before
	// any change is made.
	if (!(value instanceof Reference)) {
		value = value.copy();
	}

	FeatureValue featureValue = ((StructuredValue) value)
			.getFeatureValue(action.structuralFeature);

	if (action.isRemoveDuplicates) {
		int j = this.position(inputValue, featureValue.values, 1);
		while (j > 0) {
			featureValue.values.remove(j - 1);
			j = this.position(inputValue, featureValue.values, j);
		}

	} else if (action.removeAt == null) {
		intList positions = new intList();
		int j = this.position(inputValue, featureValue.values, 1);
		while (j > 0) {
			positions.addValue(j);
			j = this.position(inputValue, featureValue.values, j + 1);
		}

		if (positions.size() > 0) {
			// *** Nondeterministically choose which value to remove.
			// ***
			int k = ((ChoiceStrategy) this.getExecutionLocus().factory
					.getStrategy(&quot;choice&quot;)).choose(positions.size());
			featureValue.values.remove(positions.getValue(k - 1) - 1);
		}

	} else {
		if (featureValue.values.size() >= removeAt) {
			featureValue.values.remove(removeAt - 1);
		}
	}
}

if (action.result != null) {
	this.putToken(action.result, value);
}

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-RemoveStructuralFeatureValueActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation" name="ReadLinkActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ReadLinkActionActivation">
          <body>A read link action activation is a link action activation for a read link action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-LinkActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the extent, at the current execution locus, of the association to
// which the action applies.
// For all links that match the link end data, place the value of the
// remaining &quot;open&quot; end on the result pin.

ReadLinkAction action = (ReadLinkAction) (this.node);
LinkEndDataList endDataList = action.endData;
LinkEndData openEnd = null;

int i = 1;
while ((openEnd == null) &amp; i &lt;= endDataList.size()) {
	if (endDataList.getValue(i - 1).value == null) {
		openEnd = endDataList.getValue(i - 1);
	}
	i = i + 1;
}

ExtensionalValueList extent = this.getExecutionLocus().getExtent(
		this.getAssociation());

FeatureValueList featureValues = new FeatureValueList();
for (int j = 0; j &lt; extent.size(); j++) {
	ExtensionalValue value = extent.getValue(j);
	Link link = (Link) value;
	if (this.linkMatchesEndData(link, endDataList)) {
		FeatureValue featureValue = link.getFeatureValue(openEnd.end);
		if (!openEnd.end.multiplicityElement.isOrdered
				| featureValues.size() == 0) {
			featureValues.addValue(featureValue);
		} else {
			int n = featureValue.position;
			boolean continueSearching = true;
			int k = 0;
			while (continueSearching &amp; k &lt; featureValues.size()) {
				k = k + 1;
				continueSearching = featureValues.getValue(k - 1).position &lt; n;
			}
			if (continueSearching) {
				featureValues.addValue(featureValue);
			} else {
				featureValues.addValue(k - 1, featureValue);
			}
		}
	}
}

for (int j = 0; j &lt; featureValues.size(); j++) {
	FeatureValue featureValue = featureValues.getValue(j);
	this.putToken(action.result, featureValue.values.getValue(0));
}

// Now that matching is done, ensure that all tokens on end data input
// pins
// are consumed.
for (int k = 0; k &lt; endDataList.size(); k++) {
	LinkEndData endData = endDataList.getValue(k);
	if (endData.value != null) {
		this.takeTokens(endData.value);
	}
}

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ReadLinkActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation" name="ReadSelfActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ReadSelfActionActivation">
          <body>A read self action activation is an action activation for a read self action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the context object of the activity execution containing this
// action activation and place a reference to it on the result output
// pin.

// Debug.println(&quot;[ReadSelfActionActivation] Start...&quot;);

Reference context = new Reference();
context.referent = this.getExecutionContext();

// Debug.println(&quot;[ReadSelfActionActivation] context object = &quot; +
// context.referent);

OutputPin resultPin = ((ReadSelfAction) (this.node)).result;
this.putToken(resultPin, context);
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ReadSelfActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation" name="ReadStructuralFeatureActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation">
          <body>A read structural feature action activation is an action activation for a read structural feature action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the value of the object input pin.
// If the given feature is an association end, then get all values of
// the that end.
// for which the opposite end has the object input value and place them
// on the result pin.
// Otherwise, if the object input value is a structural value, then get
// the values
// of the appropriate feature of the input value and place them on the
// result output pin.

ReadStructuralFeatureAction action = (ReadStructuralFeatureAction) (this.node);
StructuralFeature feature = action.structuralFeature;
Association association = this.getAssociation(feature);

Value value = this.takeTokens(action.object).getValue(0);
ValueList resultValues = new ValueList();

if (association != null) {
	LinkList links = this.getMatchingLinks(association, feature, value);
	for (int i = 0; i &lt; links.size(); i++) {
		Link link = links.getValue(i);
		resultValues.addValue(link.getFeatureValue(feature).values
				.getValue(0));
	}
} else if (value instanceof StructuredValue) {
	// Debug.println(&quot;[ReadStructuralFeatureActionActivation] value = &quot;
	// + value +&quot;, structural feature = &quot; + feature.name);
	resultValues = ((StructuredValue) value).getFeatureValue(feature).values;
}

this.putTokens(action.result, resultValues);
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ReadStructuralFeatureActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation" name="LinkActionActivation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-LinkActionActivation">
          <body>A link action activation is an action activation for a link action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData" name="linkMatchesEndData" specification="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-link" name="link" type="Semantics-Classes-Kernel-Link">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-link-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-link-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-endDataList" name="endDataList">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#LinkEndData"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-endDataList-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData-endDataList-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test whether the given link matches the given end data.

boolean matches = true;
int i = 1;
while (matches &amp; i &lt;= endDataList.size()) {
	matches = this.endMatchesEndData(link, endDataList.getValue(i - 1));
	i = i + 1;
}

return matches;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData" name="endMatchesEndData" specification="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData.1">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-link" name="link" type="Semantics-Classes-Kernel-Link">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-link-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-link-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-endData" name="endData">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#LinkEndData"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-endData-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData-endData-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test whether the appropriate end of the given link matches the given
// end data.

boolean matches = false;
if (endData.value == null) {
	matches = true;
} else {
	Property end = endData.end;
	FeatureValue linkFeatureValue = link.getFeatureValue(end);
	Value endValue = this.getTokens(endData.value).getValue(0);
	if (endData instanceof LinkEndDestructionData) {
		if (!((LinkEndDestructionData) endData).isDestroyDuplicates
				&amp; !end.multiplicityElement.isUnique
				&amp; end.multiplicityElement.isOrdered) {
			int destroyAt = ((UnlimitedNaturalValue) (this
					.getTokens(((LinkEndDestructionData) endData).destroyAt)
					.getValue(0))).value.naturalValue;
			matches = linkFeatureValue.values.getValue(0).equals(
					endValue)
					&amp;&amp; linkFeatureValue.position == destroyAt;
		} else {
			matches = linkFeatureValue.values.getValue(0).equals(
					endValue);
		}
	} else {
		matches = linkFeatureValue.values.getValue(0).equals(endValue);
	}
}

return matches;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation" name="getAssociation" specification="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation.1">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Association"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the association for the link action of this activation.

return (Association) (((LinkAction) (this.node)).endData.getValue(0).end.association);
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1" name="linkMatchesEndData" method="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1-link" name="link" type="Semantics-Classes-Kernel-Link"/>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1-endDataList" name="endDataList">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#LinkEndData"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1-endDataList-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-linkMatchesEndData.1-endDataList-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData.1" name="endMatchesEndData" method="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData.1-link" name="link" type="Semantics-Classes-Kernel-Link"/>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-endMatchesEndData.1-endData" name="endData">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#LinkEndData"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation.1" name="getAssociation" method="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-LinkActionActivation-getAssociation.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Association"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation" name="DestroyLinkActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation">
          <body>A destroy link action activation is a write link action activation for a destroy link action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-WriteLinkActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the extent, at the current execution locus, of the association
// for which links are being destroyed.
// Destroy all links that match the given link end destruction data.
// For unique ends, or non-unique ends for which isDestroyDuplicates is
// true, match links with a matching value for that end.
// For non-unique, ordered ends for which isDestroyDuplicates is false,
// match links with an end value at the given destroyAt position. [Must
// a value be given, too, in this case?]
// For non-unique, non-ordered ends for which isDestroyDuplicates is
// false, pick one matching link (if any) non-deterministically. [The
// semantics of this case is not clear from the current spec.]

Debug.println(&quot;[doAction] DestroyLinkAction...&quot;);

DestroyLinkAction action = (DestroyLinkAction) (this.node);
LinkEndDestructionDataList destructionDataList = action.endData;

Debug.println(&quot;[doAction] end data size = &quot;
		+ destructionDataList.size());

boolean destroyOnlyOne = false;
int j = 1;
while (!destroyOnlyOne &amp; j &lt;= destructionDataList.size()) {
	LinkEndDestructionData endData = destructionDataList
			.getValue(j - 1);
	destroyOnlyOne = !endData.end.multiplicityElement.isUnique
			&amp; !endData.end.multiplicityElement.isOrdered
			&amp; !endData.isDestroyDuplicates;
	j = j + 1;
}

LinkEndDataList endDataList = new LinkEndDataList();
for (int i = 0; i &lt; destructionDataList.size(); i++) {
	LinkEndDestructionData endData = destructionDataList.getValue(i);
	Debug.println(&quot;[doAction] Matching end = &quot; + endData.end.name);
	endDataList.addValue(endData);
}

ExtensionalValueList extent = this.getExecutionLocus().getExtent(
		this.getAssociation());
ExtensionalValueList matchingLinks = new ExtensionalValueList();

for (int i = 0; i &lt; extent.size(); i++) {
	ExtensionalValue value = extent.getValue(i);
	Link link = (Link) value;
	if (this.linkMatchesEndData(link, endDataList)) {
		matchingLinks.addValue(link);
	}
}

// Now that matching is done, ensure that all tokens on end data input
// pins
// are consumed.
for (int i = 0; i &lt; destructionDataList.size(); i++) {
	LinkEndDestructionData endData = destructionDataList.getValue(i);
	Property end = endData.end;
	if (!endData.isDestroyDuplicates
			&amp; !end.multiplicityElement.isUnique
			&amp; end.multiplicityElement.isOrdered) {
		this.takeTokens(endData.destroyAt);
	}
	Debug.println(&quot;[doAction] Consuming tokens for end &quot; + end.name);
	this.takeTokens(endData.value);
}

if (destroyOnlyOne) {
	// *** If there is more than one matching link,
	// non-deterministically choose one. ***
	if (matchingLinks.size() > 0) {
		int i = ((ChoiceStrategy) this.getExecutionLocus().factory
				.getStrategy(&quot;choice&quot;)).choose(matchingLinks.size());
		matchingLinks.getValue(i - 1).destroy();
	}
} else {
	for (int i = 0; i &lt; matchingLinks.size(); i++) {
		ExtensionalValue matchingLink = matchingLinks.getValue(i);
		matchingLink.destroy();
	}
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-DestroyLinkActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation" name="DestroyObjectActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation">
          <body>A destroy object action activation is an action activation for a destroy object action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the value on the target input pin.
// If the value is not a reference, then the action has no effect.
// Otherwise, do the following.
// If isDestroyLinks is true, destroy all links in which the referent
// participates.
// If isDestroyOwnedObjects is true, destroy all objects owned by the
// referent via composition links.
// Destroy the referent object.

DestroyObjectAction action = (DestroyObjectAction) (this.node);
Value value = this.takeTokens(action.target).getValue(0);

this.destroyObject(value, action.isDestroyLinks,
		action.isDestroyOwnedObjects);

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject" name="destroyObject" specification="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject.1">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-value" name="value" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-value-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-value-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyLinks" name="isDestroyLinks">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyLinks-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyLinks-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyOwnedObjects" name="isDestroyOwnedObjects">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyOwnedObjects-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject-isDestroyOwnedObjects-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If the given value is a reference, then destroy the referenced
// object, per the given destroy action attribute values.

// Debug.println(&quot;[destroyObject] object = &quot; + value.objectId());

if (value instanceof Reference) {
	Reference reference = (Reference) value;

	if (isDestroyLinks | isDestroyOwnedObjects) {
		Debug.println(&quot;[destroyObject] Destroying links...&quot;);
		ExtensionalValueList extensionalValues = this
				.getExecutionLocus().extensionalValues;
		for (int i = 0; i &lt; extensionalValues.size(); i++) {
			ExtensionalValue extensionalValue = extensionalValues
					.getValue(i);
			if (extensionalValue instanceof Link) {
				Link link = (Link) extensionalValue;
				if (this.valueParticipatesInLink(reference, link)) {
					if (isDestroyLinks
							| this.objectIsComposite(reference, link)) {
						// Debug.println(&quot;[destroyObject] Destroying link &quot;
						// + link.objectId());
						link.destroy();
					}
				}
			}
		}
	}

	if (isDestroyOwnedObjects) {
		Debug.println(&quot;[destroyObject] Destroying owned objects...&quot;);
		FeatureValueList objectFeatureValues = reference
				.getFeatureValues();
		for (int i = 0; i &lt; objectFeatureValues.size(); i++) {
			FeatureValue featureValue = objectFeatureValues.getValue(i);
			if (((Property) featureValue.feature).aggregation == AggregationKind.composite) {
				ValueList values = featureValue.values;
				for (int j = 0; j &lt; values.size(); j++) {
					Value ownedValue = values.getValue(j);
					this.destroyObject(ownedValue, isDestroyLinks,
							isDestroyOwnedObjects);
				}
			}
		}
	}

	reference.destroy();
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite" name="objectIsComposite" specification="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite.1">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-reference" name="reference" type="Semantics-Classes-Kernel-Reference">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-reference-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-reference-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-link" name="link" type="Semantics-Classes-Kernel-Link">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-link-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite-link-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test whether the given reference participates in the given link as a
// composite.

FeatureValueList linkFeatureValues = link.getFeatureValues();

boolean isComposite = false;
int i = 1;
while (!isComposite &amp; i &lt;= linkFeatureValues.size()) {
	FeatureValue featureValue = linkFeatureValues.getValue(i - 1);
	if (!featureValue.values.getValue(0).equals(reference)
			&amp; ((Property) featureValue.feature).aggregation == AggregationKind.composite) {
		isComposite = true;
	}
	i = i + 1;
}

return isComposite;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-doAction"/>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject.1" name="destroyObject" method="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject.1-value" name="value" type="Semantics-Classes-Kernel-Value"/>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject.1-isDestroyLinks" name="isDestroyLinks">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-destroyObject.1-isDestroyOwnedObjects" name="isDestroyOwnedObjects">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite.1" name="objectIsComposite" method="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite">
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite.1-reference" name="reference" type="Semantics-Classes-Kernel-Reference"/>
          <ownedParameter xmi:id="Semantics-Actions-IntermediateActions-DestroyObjectActionActivation-objectIsComposite.1-link" name="link" type="Semantics-Classes-Kernel-Link"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation" name="CreateLinkActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-CreateLinkActionActivation">
          <body>A create link action activation is a write link action activation for a create link action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-WriteLinkActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-doAction.1">
          <language>Java</language>
          <body>// If the association has any unique ends, then destroy an existing link
// that matches all ends of the link being created.
// Get the extent at the current execution locus of the association for
// which a link is being created.
// Destroy all links that have a value for any end for which
// isReplaceAll is true.
// Create a new link for the association, at the current locus, with the
// given end data values,
// inserted at the given insertAt position (for ordered ends).

CreateLinkAction action = (CreateLinkAction) (this.node);
LinkEndCreationDataList endDataList = action.endData;

Association linkAssociation = this.getAssociation();
ExtensionalValueList extent = this.getExecutionLocus().getExtent(
		linkAssociation);

boolean unique = false;
for (int i = 0; i &lt; endDataList.size(); i++) {
	if (endDataList.getValue(i).end.multiplicityElement.isUnique) {
		unique = true;
	}
}

for (int i = 0; i &lt; extent.size(); i++) {
	ExtensionalValue value = extent.getValue(i);
	Link link = (Link) value;

	boolean match = true;
	boolean destroy = false;
	int j = 1;
	while (j &lt;= endDataList.size()) {
		LinkEndCreationData endData = endDataList.getValue(j - 1);
		if (this.endMatchesEndData(link, endData)) {
			if (endData.isReplaceAll) {
				destroy = true;
			}
		} else {
			match = false;
		}
		j = j + 1;
	}
	if (destroy | unique &amp; match) {
		link.destroy();
	}
}

Link newLink = new Link();
newLink.type = linkAssociation;

for (int i = 0; i &lt; endDataList.size(); i++) {
	LinkEndCreationData endData = endDataList.getValue(i);

	int insertAt = 0;
	if (endData.insertAt != null) {
		insertAt = ((UnlimitedNaturalValue) (this
				.takeTokens(endData.insertAt).getValue(0))).value.naturalValue;
	}

	newLink.setFeatureValue(endData.end,
			this.takeTokens(endData.value), insertAt);
}

newLink.addTo(this.getExecutionLocus());
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-CreateLinkActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation" name="CreateObjectActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-CreateObjectActionActivation">
          <body>A create object action activation is an action activation for a create object action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-doAction.1">
          <language>Java</language>
          <body>// Create an object with the given classifier (which must be a class) as
// its type, at the same locus as the action activation.
// Place a reference to the object on the result pin of the action.

CreateObjectAction action = (CreateObjectAction) (this.node);

Reference reference = new Reference();
reference.referent = this.getExecutionLocus().instantiate(
		(Class_) (action.classifier));

this.putToken(action.result, reference);

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-CreateObjectActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation" name="ClearAssociationActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation">
          <body>A clear association action activation is an action activation for a clear association action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the extent, at the current execution locus, of the given
// association.
// Read the object input pin. Destroy all links in which the object
// participates.

ClearAssociationAction action = (ClearAssociationAction) (this.node);

ExtensionalValueList extent = this.getExecutionLocus().getExtent(
		action.association);
Value objectValue = this.takeTokens(action.object).getValue(0);

for (int i = 0; i &lt; extent.size(); i++) {
	Link link = (Link) (extent.getValue(i));
	if (this.valueParticipatesInLink(objectValue, link)) {
		link.destroy();
	}
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ClearAssociationActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation" name="ClearStructuralFeatureActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation">
          <body>A clear structural feature action activation is a structural feature action activation for a clear structural feature action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-StructuralFeatureActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the value of the object input pin.
// If the given feature is an association end, then
// destroy all links that have the object input on the opposite end.
// Otherwise, if the object input is a structured value, then
// set the appropriate feature of the input value to be empty.

ClearStructuralFeatureAction action = (ClearStructuralFeatureAction) (this.node);
StructuralFeature feature = action.structuralFeature;
Association association = this.getAssociation(feature);

Value value = this.takeTokens(action.object).getValue(0);

if (association != null) {
	LinkList links = this.getMatchingLinks(association, feature, value);
	for (int i = 0; i &lt; links.size(); i++) {
		Link link = links.getValue(i);
		link.destroy();
	}
} else if (value instanceof StructuredValue) {
	// If the value is a data value, then it must be copied before
	// any change is made.
	if (!(value instanceof Reference)) {
		value = value.copy();
	}

	((StructuredValue) value).setFeatureValue(action.structuralFeature,
			new ValueList(), 0);
}

if (action.result != null) {
	this.putToken(action.result, value);
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-ClearStructuralFeatureActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation" name="AddStructuralFeatureValueActionActivation">
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-_ownedComment.0">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-_ownedComment.1" annotatedElement="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation">
          <body>An add structural feature action value activation is a write structural feature action activation for an add structural feature value action.</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-_generalization.0" general="Semantics-Actions-IntermediateActions-WriteStructuralFeatureActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-doAction" name="doAction" specification="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the values of the object and value input pins.
// If the given feature is an association end, then create a link
// between the object and value inputs.
// Otherwise, if the object input is a structural value, then add a
// value to the values for the feature.
// If isReplaceAll is true, first remove all current matching links or
// feature values.
// If isReplaceAll is false and there is an insertAt pin, insert the
// value at the appropriate position.

AddStructuralFeatureValueAction action = (AddStructuralFeatureValueAction) (this.node);
StructuralFeature feature = action.structuralFeature;
Association association = this.getAssociation(feature);

Value value = this.takeTokens(action.object).getValue(0);
ValueList inputValues = this.takeTokens(action.value);

// NOTE: Multiplicity of the value input pin is required to be 1..1.
Value inputValue = inputValues.getValue(0);

int insertAt = 0;
if (action.insertAt != null) {
	insertAt = ((UnlimitedNaturalValue) this
			.takeTokens(action.insertAt).getValue(0)).value.naturalValue;
}

if (association != null) {
	LinkList links = this.getMatchingLinks(association, feature, value);

	Property oppositeEnd = this.getOppositeEnd(association, feature);
	int position = 0;
	if (oppositeEnd.multiplicityElement.isOrdered) {
		position = this.getMatchingLinks(association, oppositeEnd,
				inputValue).size() + 1;
	}

	if (action.isReplaceAll) {
		for (int i = 0; i &lt; links.size(); i++) {
			Link link = links.getValue(i);
			link.destroy();
		}
	} else if (feature.multiplicityElement.isUnique) {
		int i = 1;
		boolean destroyed = false;
		while (!destroyed &amp; i &lt;= links.size()) {
			Link link = links.getValue(i - 1);
			FeatureValue featureValue = link.getFeatureValue(feature);
			if (featureValue.values.getValue(0).equals(inputValue)) {
				position = link.getFeatureValue(oppositeEnd).position;
				link.destroy();
				destroyed = true;
			}
			i = i + 1;
		}
	}

	Link newLink = new Link();
	newLink.type = association;

	newLink.setFeatureValue(feature, inputValues, insertAt);

	ValueList oppositeValues = new ValueList();
	oppositeValues.addValue(value);
	newLink.setFeatureValue(oppositeEnd, oppositeValues, position);

	newLink.addTo(this.getExecutionLocus());

} else if (value instanceof StructuredValue) {
	// If the value is a data value, then it must be copied before
	// any change is made.
	if (!(value instanceof Reference)) {
		value = value.copy();
	}

	StructuredValue structuredValue = (StructuredValue) value;

	if (action.isReplaceAll) {
		structuredValue.setFeatureValue(feature, inputValues, 0);
	} else {
		FeatureValue featureValue = structuredValue
				.getFeatureValue(feature);

		if (featureValue.values.size() > 0 &amp; insertAt == 0) {
			// *** If there is no insertAt pin, then the structural
			// feature must be unordered, and the insertion position is
			// immaterial. ***
			insertAt = ((ChoiceStrategy) this.getExecutionLocus().factory
					.getStrategy(&quot;choice&quot;)).choose(featureValue.values
					.size());
		}

		if (feature.multiplicityElement.isUnique) {
			// Remove any existing value that duplicates the input value
			int j = position(inputValue, featureValue.values, 1);
			if (j > 0) {
				featureValue.values.remove(j - 1);
			}
		}

		if (insertAt &lt;= 0) { // Note: insertAt = -1 indicates an
								// unlimited value of &quot;*&quot;
			featureValue.values.addValue(inputValue);
		} else {
			featureValue.values.addValue(insertAt - 1, inputValue);
		}
	}
}

if (action.result != null) {
	this.putToken(action.result, value);
}

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-doAction.1" name="doAction" method="Semantics-Actions-IntermediateActions-AddStructuralFeatureValueActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation" name="StartClassifierBehaviorActionActivation">
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation">
          <body>A start classifier behavior action activation is an action activation for a start classifier behavior action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the value on the object input pin. If it is not a reference, then
// do nothing.
// Start the classifier behavior of the referent object for the
// classifier given as the type of the object input pin.
// If the object input pin has no type, then start the classifier
// behaviors of all types of the referent object. [The required behavior
// in this case is not clear from the spec.]

StartClassifierBehaviorAction action = (StartClassifierBehaviorAction) (this.node);

Value object = this.takeTokens(action.object).getValue(0);

if (object instanceof Reference) {
	((Reference) object).startBehavior(
			(Class_) (action.object.typedElement.type),
			new ParameterValueList());
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-StartClassifierBehaviorActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation" name="StartObjectBehaviorActionActivation">
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation">
          <body>A start behavior action activation is an action activation for a start behavior action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-InvocationActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the value on the object input pin. If it is not a reference, then
// do nothing.
// Start the behavior of the referent object for the classifier given as
// the type of the object input pin, with parameter values taken from
// the argument input pins.
// If the object input pin has no type, then start the classifier
// behaviors of all types of the referent object.

StartObjectBehaviorAction action = (StartObjectBehaviorAction) (this.node);

Value object = this.takeTokens(action.object).getValue(0);

if (object instanceof Reference) {
	Class_ type = (Class_) (action.object.typedElement.type);
	InputPinList argumentPins = action.argument;

	ParameterValueList inputs = new ParameterValueList();

	if (type != null) {
		Behavior behavior;

		if (type instanceof Behavior) {
			behavior = (Behavior) type;
		} else {
			behavior = type.classifierBehavior;
		}

		if (behavior != null) {
			ParameterList parameters = behavior.ownedParameter;

			int pinNumber = 1;
			int i = 1;
			while (i &lt;= parameters.size()) {
				Parameter parameter = parameters.getValue(i - 1);
				int j = pinNumber;
				if (parameter.direction == ParameterDirectionKind.in
						| parameter.direction == ParameterDirectionKind.inout) {
					ParameterValue parameterValue = new ParameterValue();
					parameterValue.parameter = parameter;
					parameterValue.values = this
							.takeTokens(argumentPins.getValue(j - 1));
					inputs.addValue(parameterValue);
					j = j + 1;
				}
				pinNumber = j;
				i = i + 1;
			}
		}
	}

	((Reference) object).startBehavior(type, inputs);
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-StartObjectBehaviorActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation" name="ReduceActionActivation">
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-ReduceActionActivation">
          <body>A reduce action activation is an action activation for a reduce action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedAttribute xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution" name="currentExecution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" association="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation">
          <ownedComment xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution">
            <body>The current execution of the reducer behavior.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-ReduceActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the values of the collection input pin.
// If the input pin has no values, then do nothing. Otherwise, do the
// following.
// Repeatedly invoke the reducer behavior on successive pairs to reduce
// the collection to a single value, and place that value on the result
// pin.
// To invoke the reducer behavior, compile it to create an execution,
// make the execution the current execution, place the appropriate
// values on its input parameters, and execute it.

ReduceAction action = (ReduceAction) (this.node);

ValueList values = this.takeTokens(action.collection);

if (values.size() > 0) {
	ParameterList parameters = action.reducer.ownedParameter;
	Parameter input1 = null;
	Parameter input2 = null;
	Parameter output = null;

	int i = 1;
	while (i &lt;= parameters.size()) {
		Parameter parameter = parameters.getValue(i - 1);
		if (parameter.direction == ParameterDirectionKind.in) {
			if (input1 == null) {
				input1 = parameter;
			} else {
				input2 = parameter;
			}
		} else if (parameter.direction == ParameterDirectionKind.out
				| parameter.direction == ParameterDirectionKind.return_) {
			output = parameter;
		}
		i = i + 1;
	}

	ParameterValue parameterValue1 = new ParameterValue();
	parameterValue1.parameter = input1;
	parameterValue1.values = new ValueList();
	parameterValue1.values.addValue(values.getValue(0));

	int j = 2;
	while (j &lt;= values.size()) {
		this.currentExecution = this.getExecutionLocus().factory
				.createExecution(action.reducer, this
						.getExecutionContext());

		this.currentExecution.setParameterValue(parameterValue1);

		ParameterValue parameterValue2 = new ParameterValue();
		parameterValue2.parameter = input2;
		parameterValue2.values = new ValueList();
		parameterValue2.values.addValue(values.getValue(j - 1));
		this.currentExecution.setParameterValue(parameterValue2);

		this.currentExecution.execute();

		parameterValue1.values = this.currentExecution
				.getParameterValue(output).values;

		j = j + 1;

		if (parameterValue1.values.isEmpty() &amp; j &lt;= values.size()) {
			parameterValue1.values.add(values.getValue(j - 1));
			j = j + 1;
		}

	}

	this.putTokens(action.result, parameterValue1.values);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-terminate" name="terminate" specification="Semantics-Actions-CompleteActions-ReduceActionActivation-terminate.1">
          <language>Java</language>
          <body>// If there is a current execution, terminate it. Then terminate self.

if (this.currentExecution != null) {
	this.currentExecution.terminate();
}

super.terminate();
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-ReduceActionActivation-doAction"/>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-ReduceActionActivation-terminate.1" name="terminate" method="Semantics-Actions-CompleteActions-ReduceActionActivation-terminate"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation" name="ReadIsClassifiedObjectActionActivation">
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation">
          <body>A read-is-classified object activation is an action activation for a read-is-classified object action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the value on the object input pin and determine if it is
// classified by the classifier specified in the action.
// If the isDirect attribute of the action is false, then place true on
// the result output pin if the input object has the specified
// classifier or of one its (direct or indirect) descendants as a type.
// If the isDirect attribute of the action is true, then place true on
// the result output pin if the input object has the specified
// classifier as a type.
// Otherwise place false on the result output pin.

ReadIsClassifiedObjectAction action = (ReadIsClassifiedObjectAction) (this.node);

Value input = this.takeTokens(action.object).getValue(0);
ClassifierList types = input.getTypes();

boolean result = false;
int i = 1;
while (!result &amp; i &lt;= types.size()) {
	Classifier type = types.getValue(i - 1);

	if (type == action.classifier) {
		result = true;
	} else if (!action.isDirect) {
		result = this.checkAllParents(type, action.classifier);
	}

	i = i + 1;
}

ValueList values = new ValueList();
values.addValue(this.makeBooleanValue(result));

this.putTokens(action.result, values);
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-ReadIsClassifiedObjectActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation" name="ReclassifyObjectActionActivation">
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation">
          <body>A reclassify object activation is an action activation for a reclassify object action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the value of the object input pin. If it is not a reference, then
// do nothing. Otherwise, do the following.
// Remove all types from the referent object that are in the set of old
// classifiers but not the set of new classifiers (or just all types
// that are not new classifiers, if isReplaceAll is true).
// Remove the feature values from the referent object for all
// classifiers that are removed.
// Add all new classifiers as types of the referent object that are not
// already types.
// Add feature values to the referent object for the structural
// features of all added classifiers.
// Any features that previously had values maintain those values,
// while new features are initialized as being empty.

ReclassifyObjectAction action = (ReclassifyObjectAction) (this.node);
ClassifierList newClassifiers = action.newClassifier;
ClassifierList oldClassifiers = action.oldClassifier;

Value input = this.takeTokens(action.object).getValue(0);

if (input instanceof Reference) {
	Object_ object = ((Reference) input).referent;

	int i = 1;
	while (i &lt;= object.types.size()) {
		Class_ type = object.types.getValue(i - 1);

		boolean toBeRemoved = true;
		int j = 1;
		while (toBeRemoved &amp; j &lt;= newClassifiers.size()) {
			toBeRemoved = (type != newClassifiers.getValue(j - 1));
			j = j + 1;
		}

		if (toBeRemoved &amp; !action.isReplaceAll) {
			boolean notInOld = true;
			int k = 1;
			while (notInOld &amp; k &lt;= oldClassifiers.size()) {
				notInOld = (type != oldClassifiers.getValue(k - 1));
				k = k + 1;
			}
			toBeRemoved = !notInOld;
		}

		if (toBeRemoved) {
			object.types.removeValue(i - 1);
		} else {
			i = i + 1;
		}
	}

	for (int n = 0; n &lt; newClassifiers.size(); n++) {
		Classifier classifier = newClassifiers.getValue(n);

		boolean toBeAdded = true;
		int j = 1;
		while (toBeAdded &amp; j &lt;= object.types.size()) {
			toBeAdded = (classifier != object.types.getValue(j - 1));
			j = j + 1;
		}

		if (toBeAdded) {
			object.types.addValue((Class_) classifier);
		}
	}
	
	FeatureValueList oldFeatureValues = object.getFeatureValues();
	object.featureValues = new FeatureValueList();
	object.addFeatureValues(oldFeatureValues);
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-ReclassifyObjectActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation" name="ReadExtentActionActivation">
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-ReadExtentActionActivation">
          <body>A read extent action activation is an action activation for a read extent action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-ReadExtentActionActivation-doAction.1">
          <language>Java</language>
          <body>// Get the extent, at the current execution locus, of the classifier
// (which must be a class) identified in the action.
// Place references to the resulting set of objects on the result pin.

ReadExtentAction action = (ReadExtentAction) (this.node);
ExtensionalValueList objects = this.getExecutionLocus().getExtent(
		action.classifier);

// Debug.println(&quot;[doAction] &quot; + action.classifier.name + &quot; has &quot; +
// objects.size() + &quot; instance(s).&quot;);

ValueList references = new ValueList();
for (int i = 0; i &lt; objects.size(); i++) {
	Value object = objects.getValue(i);
	Reference reference = new Reference();
	reference.referent = (Object_) object;
	references.addValue(reference);
}

this.putTokens(action.result, references);
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-ReadExtentActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-ReadExtentActionActivation-doAction"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation" name="AcceptEventActionActivation">
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionActivation">
          <body>An accept event action activation is an action activation for an accept event action.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-_ownedComment.1">
          <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedAttribute xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter" name="eventAccepter" visibility="public" type="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter" association="Semantics-Actions-CompleteActions-A_actionActivation_eventAccepter">
          <ownedComment xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter">
            <body>If the accept event action activation is waiting for an event, then this is the accepter it has registered for the event.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-waiting" name="waiting" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize" name="initialize" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize.1">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
          <language>Java</language>
          <body>// Initialize this accept event action activation to be not waiting for an event.

super.initialize(node, group);
this.waiting = false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-run" name="run" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-run.1">
          <language>Java</language>
          <body>// Create an event accepter and initialize waiting to false.

super.run();

this.eventAccepter = new AcceptEventActionEventAccepter();
this.eventAccepter.actionActivation = this;

this.waiting = false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire" name="fire" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire.1">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Register the event accepter for this accept event action activation
// with the context object of the enclosing activity execution
// and wait for an event to be accepted.

Debug.println(&quot;[fire] Action &quot; + this.node.name + &quot;...&quot;);

this.getExecutionContext().register(this.eventAccepter);
this.waiting = true;
this.firing = false;

this.suspend();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady" name="isReady" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady.1">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// An accept event action activation is ready to fire only if it is not
// already waiting for an event.

boolean ready;
if (this.waiting) {
	ready = false;
} else {
	ready = super.isReady();
}

return ready;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-doAction" name="doAction" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-doAction.1">
          <language>Java</language>
          <body>// Do nothing. [This will never be called.]

return;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept" name="accept" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept.1">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept-signalInstance-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept-signalInstance-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Accept a signal occurance for the given signal instance.
// If the action does not unmarshall, then place the signal instance on
// the result pin, if any.
// If the action does unmarshall, then get the feature values of the
// signal instance, and place the values for each feature on the
// corresponding output pin.
// Concurrently fire all output pins while offering a single control
// token.
// If there are no incoming edges, then re-register this accept event
// action execution with the context object.

AcceptEventAction action = (AcceptEventAction) (this.node);
OutputPinList resultPins = action.result;

Debug.println(&quot;[accept] action = &quot; + action.name
		+ &quot;, signalinstance = &quot; + signalInstance);

if (this.running) {
	if (!action.isUnmarshall) {
		ValueList result = new ValueList();
		result.addValue(signalInstance);
		if (resultPins.size() > 0) {
			this.putTokens(resultPins.getValue(0), result);
		}
	} else {
		FeatureValueList featureValues = signalInstance.getMemberValues();
		for (int i = 0; i &lt; featureValues.size(); i++) {
			FeatureValue featureValue = featureValues.getValue(i);
			OutputPin resultPin = resultPins.getValue(i);
			this.putTokens(resultPin, featureValue.values);
		}
	}

	this.sendOffers();

	this.waiting = false;

	Debug.println(&quot;[fire] Checking if &quot; + this.node.name
			+ &quot; should fire again...&quot;);
	this.receiveOffer();

	this.resume();
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match" name="match" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match.1">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-signalInstance-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match-signalInstance-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return true if the given signal instance matches a trigger of the
// accept action of this activation.

AcceptEventAction action = (AcceptEventAction) (this.node);
TriggerList triggers = action.trigger;
Signal signal = signalInstance.type;

boolean matches = false;
int i = 1;
while (!matches &amp; i &lt;= triggers.size()) {
	Signal triggerSignal = ((SignalEvent) (triggers.getValue(i - 1).event)).signal;
	if (triggerSignal == signal) {
		matches = true;
	} else {
		matches = this.checkAllParents(signal, triggerSignal);
	}
	i = i + 1;
}

return matches;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-terminate" name="terminate" specification="Semantics-Actions-CompleteActions-AcceptEventActionActivation-terminate.1">
          <language>Java</language>
          <body>// Terminate this action and unregister its event accepter.

super.terminate();

if (this.waiting) {
	this.getExecutionContext().unregister(this.eventAccepter);
	this.waiting = false;
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize.1" name="initialize" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize" redefinedOperation="Semantics-Actions-BasicActions-ActionActivation-initialize.1">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize.1-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-initialize.1-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-run.1" name="run" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-run"/>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire.1" name="fire" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-fire.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady.1" name="isReady" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-isReady.1-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-doAction.1" name="doAction" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-doAction"/>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept.1" name="accept" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-accept.1-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match.1" name="match" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-match.1-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionActivation-terminate.1" name="terminate" method="Semantics-Actions-CompleteActions-AcceptEventActionActivation-terminate"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter" name="AcceptEventActionEventAccepter">
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter">
          <body>An accept event action event accepter handles signal reception events on the behalf of a specific accept event action activation.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-_generalization.0" general="Semantics-CommonBehaviors-Communications-EventAccepter"/>
        <ownedAttribute xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation" name="actionActivation" visibility="public" type="Semantics-Actions-CompleteActions-AcceptEventActionActivation" association="Semantics-Actions-CompleteActions-A_actionActivation_eventAccepter">
          <ownedComment xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation">
            <body>The accept event action activation on behalf of which this event accepter is waiting.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept" name="accept" specification="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept.1">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept-signalInstance-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept-signalInstance-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Accept a signal event occurrence. Forward the signal instance to the action activation.

if (eventOccurrence instanceof SignalEventOccurrence) {
	this.actionActivation.accept(((SignalEventOccurrence)eventOccurrence).signalInstance);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match" name="match" specification="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1">
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-signalInstance" name="signalInstance" type="Semantics-CommonBehaviors-Communications-SignalInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-signalInstance-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-signalInstance-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return true if the given event occurrence is a signal event occurrence and the
// signal instance matches a trigger of the accept action of the action activation.

boolean matches = false;
if (eventOccurrence instanceof SignalEventOccurrence) {
	matches = this.actionActivation.
			match(((SignalEventOccurrence)eventOccurrence).signalInstance);
}
return matches;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept.1" name="accept" method="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept">
          <ownedComment xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept.1-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept.1">
            <body>Accept a signal occurance for the given signal instance.</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-accept.1-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1" name="match" method="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match">
          <ownedComment xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1-_ownedComment.0" annotatedElement="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1">
            <body>Determine if the given signal instance matches a trigger of the accept action of the action activation.</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1-eventOccurrence" name="eventOccurrence" type="Semantics-CommonBehaviors-Communications-EventOccurrence"/>
          <ownedParameter xmi:id="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-match.1-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Actions-CompleteActions-A_actionActivation_eventAccepter" name="A_actionActivation_eventAccepter" visibility="private" memberEnd="Semantics-Actions-CompleteActions-AcceptEventActionEventAccepter-actionActivation Semantics-Actions-CompleteActions-AcceptEventActionActivation-eventAccepter"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation" name="A_currentExecution_reduceActionActivation" visibility="private" memberEnd="Semantics-Actions-CompleteActions-ReduceActionActivation-currentExecution Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation-_ownedEnd.0" visibility="private" type="Semantics-Actions-CompleteActions-ReduceActionActivation" association="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Actions-CompleteActions-A_currentExecution_reduceActionActivation-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation" name="StructuredActivityNodeActivation">
        <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation">
          <body>A structured activity node activation is an action activation for an action that is a structured activity node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-_ownedComment.1">
          <body>import java.util.*;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedAttribute xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-activationGroup" name="activationGroup" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" aggregation="composite" association="Semantics-Activities-CompleteStructuredActivities-A_activationGroup_containingNodeActivation">
          <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-activationGroup-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-activationGroup">
            <body>The group of activations of the activity nodes contained in the structured activity node.</body>
          </ownedComment>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doAction" name="doAction" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doAction.1">
          <language>Java</language>
          <body>// If the structured activity node has mustIsolate=true, then carry out
// its behavior with isolation.
// Otherwise just activate it normally.

if (((StructuredActivityNode) (this.node)).mustIsolate) {
	_beginIsolation();
	this.doStructuredActivity();
	_endIsolation();
} else {
	this.doStructuredActivity();
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doStructuredActivity" name="doStructuredActivity" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doStructuredActivity.1">
          <language>Java</language>
          <body>// Run all activations of contained nodes. When this is complete,
// return.
// (This is the default behavior for a structured activity node used
// simply as a group. It is overridden for the execution of conditional
// and loop nodes.)

Action action = (Action) (this.node);

// *** Concurrently send offers from all input pins. ***
InputPinList inputPins = action.input;
for (Iterator i = inputPins.iterator(); i.hasNext();) {
	InputPin inputPin = (InputPin) i.next();
	PinActivation pinActivation = this.getPinActivation(inputPin);
	pinActivation.sendUnofferedTokens();
}

this.activationGroup.run(this.activationGroup.nodeActivations);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminate" name="terminate" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminate.1">
          <language>Java</language>
          <body>// Terminate the execution of all contained node activations (which
// completes the performance of the structured activity node
// activation), and then terminate this node itself.

this.terminateAll();
super.terminate();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation" name="getNodeActivation" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-node-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation-node-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If this structured activity node activation is not for the given
// node, then check if there is an activation for the node in the
// activation group.

ActivityNodeActivation thisActivation = super.getNodeActivation(node);

ActivityNodeActivation activation = null;
if (thisActivation != null) {
	activation = thisActivation;
} else if (this.activationGroup != null) {
	activation = this.activationGroup.getNodeActivation(node);
}

return activation;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList" name="makeActivityNodeList" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-nodes" name="nodes">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ExecutableNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-nodes-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-nodes-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return an activity node list containing the given list of executable
// nodes
// and any pins that they own.

ActivityNodeList activityNodes = new ActivityNodeList();

for (int i = 0; i &lt; nodes.size(); i++) {
	ActivityNode node = nodes.getValue(i);
	activityNodes.addValue(node);

	if (node instanceof Action) {
		Action action = (Action) node;

		InputPinList inputPins = action.input;
		for (int j = 0; j &lt; inputPins.size(); j++) {
			InputPin inputPin = inputPins.getValue(j);
			activityNodes.addValue(inputPin);
		}

		OutputPinList outputPins = action.output;
		for (int j = 0; j &lt; outputPins.size(); j++) {
			OutputPin outputPin = outputPins.getValue(j);
			activityNodes.addValue(outputPin);
		}
	}
}

return activityNodes;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues" name="getPinValues" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#OutputPin"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-pin-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-pin-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the values of the tokens on the pin activation corresponding
// to the given pin in the internal activation group for this node
// activation.

PinActivation pinActivation = (PinActivation) (this.activationGroup
		.getNodeActivation(pin));
TokenList tokens = pinActivation.getTokens();

ValueList values = new ValueList();
for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	Value value = ((ObjectToken) token).value;
	if (value != null) {
		values.addValue(value);
	}
}

return values;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues" name="putPinValues" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#OutputPin"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-pin-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-pin-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-values" name="values" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-values-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues-values-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Place tokens for the given values on the pin activation corresponding
// to the given output pin on the internal activation group for this
// node activation.

PinActivation pinActivation = (PinActivation) (this.activationGroup
		.getNodeActivation(pin));

for (int i = 0; i &lt; values.size(); i++) {
	Value value = values.getValue(i);
	ObjectToken token = new ObjectToken();
	token.value = value;
	pinActivation.addToken(token);
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createNodeActivations" name="createNodeActivations" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createNodeActivations.1">
          <language>Java</language>
          <body>// Create an activation group and create node activations for all the
// nodes within the structured activity node.

super.createNodeActivations();

this.activationGroup = new ActivityNodeActivationGroup();
this.activationGroup.containingNodeActivation = this;
this.activationGroup
		.createNodeActivations(((StructuredActivityNode) (this.node)).node);

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createEdgeInstances" name="createEdgeInstances" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createEdgeInstances.1">
          <language>Java</language>
          <body>// Create instances for all edges owned by this node.

this.activationGroup
		.createEdgeInstances(((StructuredActivityNode) (this.node)).edge);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor" name="isSourceFor" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor.1">
          <language>Java</language>
          <body>// Returns true if this node is either the source for the given
// edgeInstance itself or if it contains the source in its
// activation group.

boolean isSource = super.isSourceFor(edgeInstance);
if (!isSource) {
	isSource = this.activationGroup.hasSourceFor(edgeInstance);
}
return isSource;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminateAll" name="terminateAll" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminateAll.1">
          <language>Java</language>
          <body>// Terminate the execution of all contained node activations (which
// completes the performance of the structured activity node
// activation).

this.activationGroup.terminateAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSuspended" name="isSuspended" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSuspended.1">
          <language>Java</language>
          <body>// Check if the activation group for this node is suspended.

return this.activationGroup.isSuspended();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction" name="completeAction" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction.1">
          <language>Java</language>
          <body>// Only actually complete this structured activity node if it is not
// suspended.

TokenList incomingTokens = new TokenList();
if (!this.isSuspended()) {
	incomingTokens = super.completeAction();
}
return incomingTokens;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-resume" name="resume" specification="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-resume.1">
          <language>Java</language>
          <body>// When this structured activity node is resumed after being suspended,
// then complete its prior firing and, if there are more incoming
// tokens, fire it again. If, after that, the node is not suspended,
// then finish its resumption.

TokenList incomingTokens = super.completeAction();
if (incomingTokens.size() > 0) {
	this.fire(incomingTokens);
}
if (!this.isSuspended()) {
	super.resume();
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doAction.1" name="doAction" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doAction"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doStructuredActivity.1" name="doStructuredActivity" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-doStructuredActivity"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminate.1" name="terminate" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminate"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1" name="getNodeActivation" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getNodeActivation.1-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1" name="makeActivityNodeList" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-nodes" name="nodes">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ExecutableNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-nodes-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-nodes-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-makeActivityNodeList.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1" name="getPinValues" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#OutputPin"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-getPinValues.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1" name="putPinValues" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1-pin" name="pin">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#OutputPin"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1-values" name="values" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1-values-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-putPinValues.1-values-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createNodeActivations.1" name="createNodeActivations" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createNodeActivations"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createEdgeInstances.1" name="createEdgeInstances" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-createEdgeInstances"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor.1" name="isSourceFor" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor.1-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSourceFor.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminateAll.1" name="terminateAll" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-terminateAll"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSuspended.1" name="isSuspended" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSuspended">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-isSuspended.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction.1" name="completeAction" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction.1-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction.1-Parameter1-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-completeAction.1-Parameter1-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-resume.1" name="resume" method="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-resume"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation" name="LoopNodeActivation">
        <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation">
          <body>A loop node activation is a structured activity node activation for a node that is a loop node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-_generalization.0" general="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation"/>
        <ownedAttribute xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-bodyOutputLists" name="bodyOutputLists" visibility="public" type="Semantics-Activities-CompleteStructuredActivities-Values" aggregation="composite" association="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-bodyOutputLists-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-bodyOutputLists-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-isTerminateAll" name="isTerminateAll" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doStructuredActivity" name="doStructuredActivity" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doStructuredActivity.1">
          <language>Java</language>
          <body>// Set the initial values for the body outputs to the values of the loop
// variable input pins.
// If isTestedFirst is true, then repeatedly run the test part and the
// body part of the loop, copying values from the body outputs to the
// loop variables.
// If isTestedFirst is false, then repeatedly run the body part and the
// test part of the loop, copying values from the body outputs to the
// loop variables.
// When the test fails, copy the values of the body outputs to the loop
// outputs.
// [Note: The body outputs are used for the loop outputs, rather than
// the loop variables, since values on the loop variables may be
// consumed when running the test for the last time.]

LoopNode loopNode = (LoopNode) (this.node);
InputPinList loopVariableInputs = loopNode.loopVariableInput;

this.bodyOutputLists.clear();
for (int i = 0; i &lt; loopVariableInputs.size(); i++) {
	InputPin loopVariableInput = loopVariableInputs.getValue(i);
	Values bodyOutputList = new Values();
	bodyOutputList.values = this.takeTokens(loopVariableInput);
	this.bodyOutputLists.addValue(bodyOutputList);
}

this.isTerminateAll = false;
this.doLoop(true);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest" name="runTest" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Run the test part of the loop node for this node activation.
// Return the value on the decider pin.

Debug.println(&quot;[runTest] Running test...&quot;);

LoopNode loopNode = (LoopNode) (this.node);

this.activationGroup.runNodes(this.makeActivityNodeList(loopNode.test));

ValueList values = this.getPinValues(loopNode.decider);

// If there is no decider value, treat it as false.
boolean decision = false;
if (values.size() > 0) {
	decision = ((BooleanValue) (values.getValue(0))).value;
}

Debug.println(&quot;[runTest] &quot;
		+ (decision ? &quot;Test succeeded.&quot; : &quot;Test failed.&quot;));

return decision;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runBody" name="runBody" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runBody.1">
          <language>Java</language>
          <body>// Run the body part of the loop node for this node activation and save
// the body outputs.

Debug.println(&quot;[runBody] Running body...&quot;);

LoopNode loopNode = (LoopNode) this.node;

this.activationGroup.runNodes(this
		.makeActivityNodeList(loopNode.bodyPart));

if (!this.isTerminateAll &amp; !this.isSuspended()) {
	this.saveBodyOutputs();
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runLoopVariables" name="runLoopVariables" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runLoopVariables.1">
          <language>Java</language>
          <body>// Run the loop variable pins of the loop node for this node activation.

this.activationGroup.runNodes(this.makeLoopVariableList());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-createNodeActivations" name="createNodeActivations" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-createNodeActivations.1">
          <language>Java</language>
          <body>// In addition to creating activations for contained nodes, create
// activations for any loop variables.

super.createNodeActivations();
this.activationGroup.createNodeActivations(this.makeLoopVariableList());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList" name="makeLoopVariableList" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return an activity node list containing the loop variable pins for
// the loop node of this activation.

LoopNode loopNode = (LoopNode) (this.node);
ActivityNodeList nodes = new ActivityNodeList();

OutputPinList loopVariables = loopNode.loopVariable;
for (int i = 0; i &lt; loopVariables.size(); i++) {
	OutputPin loopVariable = loopVariables.getValue(i);
	nodes.addValue(loopVariable);
}

return nodes;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-terminateAll" name="terminateAll" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-terminateAll.1">
          <language>Java</language>
          <body>// Copy the values of the body outputs to the loop outputs, and then
// terminate all activations in the loop.

this.isTerminateAll = true;

LoopNode loopNode = (LoopNode) this.node;
OutputPinList bodyOutputs = loopNode.bodyOutput;
OutputPinList resultPins = loopNode.result;
for (int i = 0; i &lt; bodyOutputs.size(); i++) {
	OutputPin bodyOutput = bodyOutputs.getValue(i);
	OutputPin resultPin = resultPins.getValue(i);
	this.putTokens(resultPin, this.getPinValues(bodyOutput));
}

super.terminateAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doLoop" name="doLoop" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doLoop.1">
          <language>Java</language>
          <body>// If isTestedFirst is true, then repeatedly run the test part and the
// body part of the loop, copying values from the body outputs to the
// loop variables.
// If isTestedFirst is false, then repeatedly run the body part and the
// test part of the loop, copying values from the body outputs to the
// loop variables.

LoopNode loopNode = (LoopNode) (this.node);
OutputPinList loopVariables = loopNode.loopVariable;
OutputPinList resultPins = loopNode.result;

while (continuing) {

	// Set loop variable values
	this.runLoopVariables();
	for (int i = 0; i &lt; loopVariables.size(); i++) {
		OutputPin loopVariable = loopVariables.getValue(i);
		Values bodyOutputList = bodyOutputLists.getValue(i);
		ValueList values = bodyOutputList.values;
		this.putPinValues(loopVariable, values);
		((OutputPinActivation) this.activationGroup
				.getNodeActivation(loopVariable)).sendUnofferedTokens();
	}

	// Run all the non-executable, non-pin nodes in the conditional
	// node.
	ActivityNodeActivationList nodeActivations = this.activationGroup.nodeActivations;
	ActivityNodeActivationList nonExecutableNodeActivations = new ActivityNodeActivationList();
	for (int i = 0; i &lt; nodeActivations.size(); i++) {
		ActivityNodeActivation nodeActivation = nodeActivations
				.getValue(i);
		if (!(nodeActivation.node instanceof ExecutableNode | nodeActivation.node instanceof Pin)) {
			nonExecutableNodeActivations.addValue(nodeActivation);
		}
	}
	this.activationGroup.run(nonExecutableNodeActivations);

	// Run the loop
	if (loopNode.isTestedFirst) {
		continuing = this.runTest();
		if (continuing) {
			this.runBody();
		}
	} else {
		this.runBody();
		if (this.isRunning() &amp; !this.isSuspended()) {
			continuing = this.runTest();
		}
	}

	if (!this.isTerminateAll &amp; this.isRunning() &amp; !this.isSuspended()) {
		this.activationGroup.terminateAll();
	} else {
		continuing = false;
	}

	Debug.println(&quot;[doStructuredActivity] &quot;
			+ (continuing ? &quot;Continuing.&quot;
					: this.isSuspended() ? &quot;Suspended&quot; : &quot;Done.&quot;));

}

if (!this.isTerminateAll &amp; this.isRunning() &amp; !this.isSuspended()) {
	for (int i = 0; i &lt; bodyOutputLists.size(); i++) {
		Values bodyOutputList = bodyOutputLists.getValue(i);
		OutputPin resultPin = resultPins.getValue(i);
		this.putTokens(resultPin, bodyOutputList.values);
	}
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-saveBodyOutputs" name="saveBodyOutputs" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-saveBodyOutputs.1">
          <language>Java</language>
          <body>// Save the body outputs for use in the next iteration.

LoopNode loopNode = (LoopNode) this.node;
OutputPinList bodyOutputs = loopNode.bodyOutput;
ValuesList bodyOutputLists = this.bodyOutputLists;
for (int i = 0; i &lt; bodyOutputs.size(); i++) {
	OutputPin bodyOutput = bodyOutputs.getValue(i);
	Values bodyOutputList = bodyOutputLists.getValue(i);
	bodyOutputList.values = this.getPinValues(bodyOutput);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-resume" name="resume" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-resume.1">
          <language>Java</language>
          <body>// When this loop node is resumed after being suspended, continue with
// its next iteration (if any). Once the loop has completed execution
// without being suspended again, complete the action.

LoopNode loopNode = (LoopNode) (this.node);

this.saveBodyOutputs();

if (!this.isTerminateAll) {
	if (loopNode.mustIsolate) {
		_beginIsolation();
		this.continueLoop();
		_endIsolation();
	} else {
		this.continueLoop();
	}
}

if (this.isSuspended()) {
	// NOTE: If the subsequent iteration of the loop suspends it again,
	// then it is necessary to remove the previous suspension from the
	// containing activity node activation group.
	this.group.resume(this);
} else {
	super.resume();
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-continueLoop" name="continueLoop" specification="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-continueLoop.1">
          <language>Java</language>
          <body>// Continue the loop node when it is resumed after being suspended. If
// isTestedFirst is true, then continue executing the loop. If
// isTestedFirst is false, then run the test to determine whether
// the loop should be continued or completed.
// [Note that this presumes that an accept event action is not allowed
// in the test part of a loop node.]

LoopNode loopNode = (LoopNode) (this.node);

boolean continuing = true;
if (!loopNode.isTestedFirst) {
	continuing = this.runTest();
}

if (this.isRunning()) {
	this.activationGroup.terminateAll();
	this.doLoop(continuing);
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doStructuredActivity.1" name="doStructuredActivity" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doStructuredActivity"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doLoop.1" name="doLoop" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doLoop">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-doLoop.1-continuing" name="continuing">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest.1" name="runTest" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runTest.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runBody.1" name="runBody" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runBody"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-saveBodyOutputs.1" name="saveBodyOutputs" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-saveBodyOutputs"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runLoopVariables.1" name="runLoopVariables" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-runLoopVariables"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-createNodeActivations.1" name="createNodeActivations" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-createNodeActivations"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList.1" name="makeLoopVariableList" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-makeLoopVariableList.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-terminateAll.1" name="terminateAll" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-terminateAll"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-resume.1" name="resume" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-resume"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-continueLoop.1" name="continueLoop" method="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-continueLoop"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation" name="ConditionalNodeActivation">
        <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation">
          <body>A conditional node activation is a structured activity node activation for a node that is a conditional node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-_ownedComment.1">
          <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-_generalization.0" general="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation"/>
        <ownedAttribute xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations" name="clauseActivations" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" aggregation="composite" association="Semantics-Activities-CompleteStructuredActivities-A_clauseActivations_conditionalNodeActivation">
          <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations">
            <body>The activations for each clause in the conditional node for this node activation.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses" name="selectedClauses" visibility="public" association="Semantics-Activities-CompleteStructuredActivities-A_selectedClauses_clauseActivation">
          <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses">
            <body>The set of clauses which meet the conditions to have their bodies activated.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#Clause"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause" name="selectedClause" visibility="public" association="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11">
          <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause">
            <body>The clause chosen from the set of selectedClauses to actually be executed.&#xD;
</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#Clause"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-doStructuredActivity" name="doStructuredActivity" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-doStructuredActivity.1">
          <language>Java</language>
          <body>// Run all the non-executable, non-pin nodes in the conditional node.
// Activate all clauses in the conditional node and pass control to
// those that are ready (i.e., have no predecessors).
// If one or more clauses have succeeded in being selected, choose one
// non-deterministically and run its body, then copy the outputs of that
// clause to the output pins of the node.

ConditionalNode node = (ConditionalNode) (this.node);

ActivityNodeActivationList nodeActivations = this.activationGroup.nodeActivations;
ActivityNodeActivationList nonExecutableNodeActivations = new ActivityNodeActivationList();
for (int i = 0; i &lt; nodeActivations.size(); i++) {
	ActivityNodeActivation nodeActivation = nodeActivations.getValue(i);
	if (!(nodeActivation.node instanceof ExecutableNode | nodeActivation.node instanceof Pin)) {
		nonExecutableNodeActivations.addValue(nodeActivation);
	}
}

this.activationGroup.run(nonExecutableNodeActivations);

this.clauseActivations.clear();
ClauseList clauses = node.clause;
for (int i = 0; i &lt; clauses.size(); i++) {
	Clause clause = clauses.getValue(i);
	ClauseActivation clauseActivation = new ClauseActivation();
	clauseActivation.clause = clause;
	clauseActivation.conditionalNodeActivation = this;
	this.clauseActivations.addValue(clauseActivation);
}

this.selectedClauses.clear();

ClauseActivationList readyClauseActivations = new ClauseActivationList();
for (int i = 0; i &lt; this.clauseActivations.size(); i++) {
	ClauseActivation clauseActivation = this.clauseActivations
			.getValue(i);
	Debug.println(&quot;[doStructuredActivity] clauseActivations[&quot; + i
			+ &quot;] = &quot; + clauseActivation);
	if (clauseActivation.isReady()) {
		Debug
				.println(&quot;[doStructuredActivity] Clause activation is ready.&quot;);
		readyClauseActivations.addValue(clauseActivation);
	}
}

// *** Give control to all ready clauses concurrently. ***
for (Iterator i = readyClauseActivations.iterator(); i.hasNext();) {
	ClauseActivation clauseActivation = (ClauseActivation) i.next();
	Debug.println(&quot;[doStructuredActivity] Giving control to &quot;
			+ clauseActivation + &quot;...&quot;);
	clauseActivation.receiveControl();
}

this.selectedClause = null;
if (this.selectedClauses.size() > 0 &amp; this.isRunning()) {
	Debug.println(&quot;[doStructuredActivity] &quot;
			+ this.selectedClauses.size() + &quot; clause(s) selected.&quot;);

	// *** If multiple clauses are selected, choose one
	// non-deterministically. ***
	int i = ((ChoiceStrategy) this.getExecutionLocus().factory
			.getStrategy(&quot;choice&quot;)).choose(this.selectedClauses.size());
	this.selectedClause = this.selectedClauses.getValue(i - 1);

	Debug.println(&quot;[doStructuredActivity] Running selectedClauses[&quot; + i
			+ &quot;] = &quot; + this.selectedClause);

	for (int j = 0; j &lt; clauses.size(); j++) {
		Clause clause = clauses.getValue(j);
		if (clause != selectedClause) {
			ExecutableNodeList testNodes = clause.test;
			for (int k = 0; k &lt; testNodes.size(); k++) {
				ExecutableNode testNode = testNodes.getValue(k);
				this.activationGroup.getNodeActivation(testNode)
						.terminate();
			}
		}
	}

	this.activationGroup.runNodes(this
			.makeActivityNodeList(this.selectedClause.body));
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation" name="getClauseActivation" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-clause" name="clause">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Clause"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-clause-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation-clause-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the clause activation corresponding to the given clause.

// Debug.println(&quot;[getClauseActivation] clause = &quot; + clause);

ClauseActivation selectedClauseActivation = null;
int i = 1;
while ((selectedClauseActivation == null)
		&amp; i &lt;= this.clauseActivations.size()) {
	ClauseActivation clauseActivation = this.clauseActivations
			.getValue(i - 1);
	// Debug.println(&quot;[getClauseActivations] clauseActivations[&quot; + i +
	// &quot;].clause = &quot; + clauseActivation.clause);
	if (clauseActivation.clause == clause) {
		selectedClauseActivation = clauseActivation;
	}
	i = i + 1;
}

return selectedClauseActivation;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest" name="runTest" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest-clause" name="clause">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Clause"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest-clause-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest-clause-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Run the test for the given clause.

if (this.isRunning()) {
	this.activationGroup.runNodes(this
			.makeActivityNodeList(clause.test));
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody" name="selectBody" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody-clause" name="clause">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Clause"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody-clause-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody-clause-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add the clause to the list of selected clauses.

this.selectedClauses.addValue(clause);

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeBody" name="completeBody" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeBody.1">
          <language>Java</language>
          <body>// Complete the activation of the body of a conditional note by
// copying the outputs of the selected clause (if any) to the output
// pins of the node and terminating the activation of all nested nodes.

if (this.selectedClause != null) {
	ConditionalNode node = (ConditionalNode) (this.node);
	OutputPinList resultPins = node.result;
	OutputPinList bodyOutputPins = this.selectedClause.bodyOutput;
	for (int k = 0; k &lt; resultPins.size(); k++) {
		OutputPin resultPin = resultPins.getValue(k);
		OutputPin bodyOutputPin = bodyOutputPins.getValue(k);
		this.putTokens(resultPin, this.getPinValues(bodyOutputPin));
	}
}
this.activationGroup.terminateAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction" name="completeAction" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction.1">
          <language>Java</language>
          <body>// Only complete the conditional node if it is not suspended.

if (!this.isSuspended()) {
	completeBody();
}
return super.completeAction();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-resume" name="resume" specification="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-resume.1">
          <language>Java</language>
          <body>// When this conditional node is resumed after being suspended, complete
// its body and then resume it as a structured activity node.
// [Note that this presumes that accept event actions are not allowed
// in the test part of a clause of a conditional node.]

completeBody();
super.resume();
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-doStructuredActivity.1" name="doStructuredActivity" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-doStructuredActivity"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeBody.1" name="completeBody" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeBody"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction.1" name="completeAction" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction.1-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction.1-Parameter1-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-completeAction.1-Parameter1-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation.1" name="getClauseActivation" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return"/>
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-getClauseActivation.1-clause" name="clause">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Clause"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest.1" name="runTest" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-runTest.1-clause" name="clause">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Clause"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody.1" name="selectBody" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectBody.1-clause" name="clause">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Clause"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-resume.1" name="resume" method="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-resume"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" name="ClauseActivation">
        <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ClauseActivation">
          <body>A clause activation defines the behavior of a clause within the context of a specific activation of the conditional node containing the clause.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-_ownedComment.1">
          <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-conditionalNodeActivation" name="conditionalNodeActivation" type="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation" association="Semantics-Activities-CompleteStructuredActivities-A_clauseActivations_conditionalNodeActivation">
          <ownedComment xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-conditionalNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-conditionalNodeActivation">
            <body>The activation of the conditional node that contains the clause for this clause activation.</body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-clause" name="clause" association="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation">
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#Clause"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-clause-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-clause-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-receiveControl" name="receiveControl" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-receiveControl.1">
          <language>Java</language>
          <body>// If all predecessors to the clause for this activation have run their
// tests and failed, then run the test for this clause.
// If the test succeeds, then terminate any other clauses that may be
// running and run the body of this clause.
// If the test fails, then pass control to successor clauses.

Debug.println(&quot;[receiveControl] clauseActivation = &quot; + this);

if (this.isReady()) {
	Debug.println(&quot;[receiveControl] Running test...&quot;);
	this.runTest();

	BooleanValue decision = this.getDecision();

	// Note that the decision may be null if the test was terminated
	// before completion.
	if (decision != null) {
		if (decision.value == true) {
			Debug.println(&quot;[receiveControl] Test succeeded.&quot;);
			this.selectBody();
		} else {
			Debug.println(&quot;[receiveControl] Test failed.&quot;);

			ClauseActivationList successors = this.getSuccessors();

			// *** Give control to all successors concurrently. ***
			for (Iterator i = successors.iterator(); i.hasNext();) {
				ClauseActivation successor = (ClauseActivation) i
						.next();
				successor.receiveControl();
			}
		}
	}
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady" name="isReady" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if all predecessors to this clause activation have failed.

ClauseActivationList predecessors = this.getPredecessors();

boolean ready = true;
int i = 1;
while (ready &amp; i &lt;= predecessors.size()) {
	ClauseActivation predecessor = predecessors.getValue(i - 1);
	BooleanValue decisionValue = predecessor.getDecision();

	// Note that the decision will be null if the predecessor clause has
	// not run yet.
	if (decisionValue == null) {
		ready = false;
	} else {
		ready = !decisionValue.value;
	}

	i = i + 1;
}

return ready;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-runTest" name="runTest" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-runTest.1">
          <language>Java</language>
          <body>// Run the test of the clause for this clause activation.

this.conditionalNodeActivation.runTest(this.clause);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-selectBody" name="selectBody" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-selectBody.1">
          <language>Java</language>
          <body>// Select the body of the clause for this clause activation.

this.conditionalNodeActivation.selectBody(this.clause);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision" name="getDecision" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-BooleanValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the value (if any) on the decider pin of the clause for this
// clause activation.

ValueList deciderValues = this.conditionalNodeActivation
		.getPinValues(this.clause.decider);

BooleanValue deciderValue = null;
if (deciderValues.size() > 0) {
	deciderValue = (BooleanValue) (deciderValues.getValue(0));
}

return deciderValue;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors" name="getPredecessors" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the clause activations for the predecessors of the clause for
// this clause activation.

ClauseActivationList predecessors = new ClauseActivationList();

ClauseList predecessorClauses = this.clause.predecessorClause;
for (int i = 0; i &lt; predecessorClauses.size(); i++) {
	Clause predecessorClause = predecessorClauses.getValue(i);
	predecessors.addValue(this.conditionalNodeActivation
			.getClauseActivation(predecessorClause));
}

return predecessors;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors" name="getSuccessors" specification="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors.1">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the clause activations for the successors of the clause for
// this clause activation.

ClauseActivationList successors = new ClauseActivationList();

ClauseList successorClauses = this.clause.successorClause;
for (int i = 0; i &lt; successorClauses.size(); i++) {
	Clause successorClause = successorClauses.getValue(i);
	successors.addValue(this.conditionalNodeActivation
			.getClauseActivation(successorClause));
}

return successors;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-receiveControl.1" name="receiveControl" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-receiveControl"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady.1" name="isReady" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-runTest.1" name="runTest" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-runTest"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-selectBody.1" name="selectBody" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-selectBody"/>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision.1" name="getDecision" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-BooleanValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getDecision.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors.1" name="getPredecessors" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getPredecessors.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors.1" name="getSuccessors" method="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors">
          <ownedParameter xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-getSuccessors.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation" name="A_clause_clauseActivation" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-ClauseActivation-clause Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation-_ownedEnd.0" visibility="private" type="Semantics-Activities-CompleteStructuredActivities-ClauseActivation" association="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_clause_clauseActivation-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_clauseActivations_conditionalNodeActivation" name="A_clauseActivations_conditionalNodeActivation" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-clauseActivations Semantics-Activities-CompleteStructuredActivities-ClauseActivation-conditionalNodeActivation"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_selectedClauses_clauseActivation" name="A_selectedClauses_clauseActivation" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClauses Semantics-Activities-CompleteStructuredActivities-A_selectedClauses_clauseActivation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-CompleteStructuredActivities-A_selectedClauses_clauseActivation-_ownedEnd.0" visibility="private" type="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation" association="Semantics-Activities-CompleteStructuredActivities-A_selectedClauses_clauseActivation"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_activationGroup_containingNodeActivation" name="A_activationGroup_containingNodeActivation" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation-activationGroup Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-CompleteStructuredActivities-Values" name="Values">
        <ownedAttribute xmi:id="Semantics-Activities-CompleteStructuredActivities-Values-values" name="values" visibility="public" type="Semantics-Classes-Kernel-Value" association="Semantics-Activities-CompleteStructuredActivities-A_values_values">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-Values-values-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-Values-values-_upperValue" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation" name="A_bodyOutputLists_loopNodeActivation" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation-bodyOutputLists Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-CompleteStructuredActivities-LoopNodeActivation" association="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_bodyOutputLists_loopNodeActivation-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_values_values" name="A_values_values" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-Values-values Semantics-Activities-CompleteStructuredActivities-A_values_values-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-CompleteStructuredActivities-A_values_values-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-CompleteStructuredActivities-Values" association="Semantics-Activities-CompleteStructuredActivities-A_values_values">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_values_values-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-A_values_values-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11" visibility="private" memberEnd="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation-selectedClause Semantics-Activities-CompleteStructuredActivities-_packagedElement.11-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-CompleteStructuredActivities-ConditionalNodeActivation" association="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-CompleteStructuredActivities-_packagedElement.11-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup" name="ExpansionActivationGroup">
        <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup">
          <body>An expansion activation group is an activity node activation group used for activating nodes inside an expansion region.&#xD;
It functions just like a normal activation group, except it has output pin activations corresponding to the input pins and the expansion nodes of the expansion region.&#xD;
Instances of edges from nodes inside the expansion region that connect to region input pins, input expansion nodes or output expansion nodes are redirected to connect to the corresponding &quot;region input&quot;, &quot;group input&quot; or &quot;group output&quot; pin, respectively.&#xD;
</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-_generalization.0" general="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
        <ownedAttribute xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs" name="regionInputs" type="Semantics-Actions-BasicActions-OutputPinActivation" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup">
          <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs">
            <body>Output pin activations corresponding, in order, to the input pins of the expansion region of this activation group.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs" name="groupInputs" type="Semantics-Actions-BasicActions-OutputPinActivation" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup">
          <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs">
            <body>Output pin activations corresponding, in order, to the input expansion nodes of the expansion region of this activation group.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionActivation" name="regionActivation" type="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" association="Semantics-Activities-ExtraStructuredActivities-A_activationGroups_regionActivation">
          <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionActivation-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionActivation">
            <body>The expansion region activation this activation group is for.</body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs" name="groupOutputs" type="Semantics-Actions-BasicActions-OutputPinActivation" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup">
          <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs">
            <body>Output pin activations corresponding, in order, to the output expansion nodes of the expansion region of this activation group.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-index" name="index" visibility="public">
          <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-index-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-index">
            <body>The index (starting at 1) of this activation group in the list held by the expansion region activation.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation" name="getNodeActivation" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation.1">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-node-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation-node-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If the given node is an input pin of the expansion region, then
// return the corresponding region-input output-pin activation.
// If the given node is an input expansion node of the expansion region,
// then return the corresponding group-input output-pin activation.
// If the given node is an output expansion node of the expansion
// region, then return the corresponding group-output output-pin
// activation.
// Otherwise return the node activation from the activation group, as
// usual.

ExpansionRegion region = (ExpansionRegion) (this.regionActivation.node);

InputPinList inputs = region.input;
ActivityNodeActivation activation = null;

int i = 1;
while (activation == null &amp; i &lt;= region.input.size()) {
	if (node == region.input.getValue(i - 1)) {
		activation = this.regionInputs.getValue(i - 1);
	}
	i = i + 1;
}

int j = 1;
while (activation == null &amp; j &lt;= region.inputElement.size()) {
	if (node == region.inputElement.getValue(j - 1)) {
		activation = this.groupInputs.getValue(j - 1);
	}
	j = j + 1;
}

int k = 1;
while (activation == null &amp; k &lt;= region.outputElement.size()) {
	if (node == region.outputElement.getValue(k - 1)) {
		activation = this.groupOutputs.getValue(k - 1);
	}
	k = k + 1;
}

if (activation == null) {
	activation = super.getNodeActivation(node);
}

return activation;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution" name="getActivityExecution" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution.1">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution-Parameter1-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution-Parameter1-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the activity execution that contains the expansion region
// activation for this activation group.

return this.regionActivation.getActivityExecution();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-suspend" name="suspend" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-suspend.1">
          <language>Java</language>
          <body>// Suspend the given activation in this activation group. If this is
// the only suspended activation, then suspend the associated region
// activation.

if (!this.isSuspended()) {
	this.regionActivation.suspend();
}
super.suspend(activation);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-resume" name="resume" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-resume.1">
          <language>Java</language>
          <body>// Resume the given activation in this activation group. If this is the
// last suspended activation, then resume the associated region
// activation.

super.resume(activation);
if (!this.isSuspended()) {
	this.regionActivation.resume(this);
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation.1" name="getNodeActivation" method="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return"/>
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getNodeActivation.1-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution.1" name="getActivityExecution" method="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-getActivityExecution.1-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-suspend.1" name="suspend" method="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-suspend">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-suspend.1-activation" name="activation" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-resume.1" name="resume" method="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-resume">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-resume.1-activation" name="activation" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation" name="ExpansionNodeActivation">
        <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-_ownedComment.0">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ObjectNodeActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire" name="fire" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire.1">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Take tokens from all incoming edges.

Debug.println(&quot;[fire] Expansion node &quot; + this.node.name + &quot;...&quot;);

this.addTokens(incomingTokens);

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-receiveOffer" name="receiveOffer" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-receiveOffer.1">
          <language>Java</language>
          <body>// Forward the offer on to the expansion region.

this.getExpansionRegionActivation().receiveOffer();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady" name="isReady" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady.1">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// An expansion node is always fired by its expansion region.

return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation" name="getExpansionRegionActivation" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation.1">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the expansion region activation corresponding to this
// expansion node, in the context of the activity node activation group
// this expansion node activation is in.

ExpansionNode node = (ExpansionNode) (this.node);

ExpansionRegion region = node.regionAsInput;
if (region == null) {
	region = node.regionAsOutput;
}

return (ExpansionRegionActivation) (this.group
		.getNodeActivation(region));

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire.1" name="fire" method="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-receiveOffer.1" name="receiveOffer" method="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-receiveOffer"/>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady.1" name="isReady" method="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation.1" name="getExpansionRegionActivation" method="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation-getExpansionRegionActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" name="ExpansionRegionActivation">
        <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation">
          <body>An expansion region activation is an action activation for a node that is an expansion region.&#xD;
[Note that even though an expansion region is a structured activity node, an expansion region activation is not a structured activity activation because of the special nature of expansion region behavior.]</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-_ownedComment.1">
          <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.CommonBehaviors.Communications.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-_generalization.0" general="Semantics-Actions-BasicActions-ActionActivation"/>
        <ownedAttribute xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups" name="activationGroups" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_activationGroups_regionActivation">
          <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups">
            <body>The set of expansion activation groups for this expansion region activation. One activation group is created corresponding to each token held by the first input expansion node activation for the expansion region.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens" name="inputTokens" visibility="public" type="Semantics-Activities-ExtraStructuredActivities-TokenSet" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_inputTokens_expansionRegionActivation">
          <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens">
            <body>The tokens taken from each of the input pin activations for this expansion region activation. These are preserved for initializing the region inputs of each of the activation groups.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens" name="inputExpansionTokens" visibility="public" type="Semantics-Activities-ExtraStructuredActivities-TokenSet" aggregation="composite" association="Semantics-Activities-ExtraStructuredActivities-A_inputExpansionTokens_expansionRegionActivation">
          <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens">
            <body>The tokens taken from each of the input expansion node activations for this expansion region activation. These are preserved for initializing the group input of each of the activation groups.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-next" name="next" visibility="public">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-next-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-next-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Take the tokens from the input pin and input expansion node
// activations and save them.

super.takeOfferedTokens();

ExpansionRegion region = (ExpansionRegion) (this.node);
InputPinList inputPins = region.input;
ExpansionNodeList inputElements = region.inputElement;

this.inputTokens.clear();
this.inputExpansionTokens.clear();

for (int i = 0; i &lt; inputPins.size(); i++) {
	InputPin inputPin = inputPins.getValue(i);
	TokenSet tokenSet = new TokenSet();
	tokenSet.tokens = this.getPinActivation(inputPin).takeTokens();
	this.inputTokens.addValue(tokenSet);
}

int n = this.numberOfValues();

for (int i = 0; i &lt; inputElements.size(); i++) {
	ExpansionNode inputElement = inputElements.getValue(i);
	ExpansionNodeActivation expansionNodeActivation = this
			.getExpansionNodeActivation(inputElement);
	expansionNodeActivation.fire(expansionNodeActivation
			.takeOfferedTokens());
	TokenList tokens = expansionNodeActivation.takeTokens();
	TokenSet tokenSet = new TokenSet();
	int j = 1;
	while (j &lt;= n) {
		tokenSet.tokens.add(tokens.getValue(j - 1));
		j = j + 1;
	}
	this.inputExpansionTokens.addValue(tokenSet);
}

return new TokenList();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doAction" name="doAction" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doAction.1">
          <language>Java</language>
          <body>// If the expansion region has mustIsolate=true, then carry out its
// behavior with isolation.
// Otherwise just activate it normally.

if (((StructuredActivityNode) (this.node)).mustIsolate) {
	_beginIsolation();
	this.doStructuredActivity();
	_endIsolation();
} else {
	this.doStructuredActivity();
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doStructuredActivity" name="doStructuredActivity" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doStructuredActivity.1">
          <language>Java</language>
          <body>// Create a number of expansion region activation groups equal to the
// number of values expanded in the region,
// setting the region inputs and group inputs for each group.
// Run the body of the region in each group, either iteratively or in
// parallel.
// Add the outputs of each activation group to the corresonding output
// expansion node activations.

ExpansionRegion region = (ExpansionRegion) this.node;
InputPinList inputPins = region.input;
ExpansionNodeList inputElements = region.inputElement;
ExpansionNodeList outputElements = region.outputElement;

this.activationGroups.clear();
int n = this.inputExpansionTokens.getValue(0).tokens.size();
int k = 1;
while (k &lt;= n) {
	ExpansionActivationGroup activationGroup = new ExpansionActivationGroup();
	activationGroup.regionActivation = this;
	activationGroup.index = k;

	int j = 1;
	while (j &lt;= inputPins.size()) {
		OutputPinActivation regionInput = new OutputPinActivation();
		regionInput.run();
		activationGroup.regionInputs.addValue(regionInput);
		j = j + 1;
	}

	j = 1;
	while (j &lt;= inputElements.size()) {
		OutputPinActivation groupInput = new OutputPinActivation();
		groupInput.run();
		activationGroup.groupInputs.addValue(groupInput);
		j = j + 1;
	}

	j = 1;
	while (j &lt;= outputElements.size()) {
		OutputPinActivation groupOutput = new OutputPinActivation();
		groupOutput.run();
		activationGroup.groupOutputs.addValue(groupOutput);
		j = j + 1;
	}

	activationGroup.createNodeActivations(region.node);
	activationGroup.createEdgeInstances(region.edge);
	this.activationGroups.addValue(activationGroup);

	k = k + 1;
}

// ExpansionActivationGroupList activationGroups = this.activationGroups;

if (region.mode == ExpansionKind.iterative) {
	Debug.println(&quot;[doStructuredActivity] Expansion mode = iterative&quot;);
	this.next = 1;
	this.runIterative();
} else if (region.mode == ExpansionKind.parallel) {
	Debug.println(&quot;[doStructuredActivity] Expansion mode = parallel&quot;);
	this.runParallel();
}

this.doOutput();

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminate" name="terminate" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminate.1">
          <language>Java</language>
          <body>// Terminate the execution of all contained node activations (which
// completes the performance of the expansion region activation).

ExpansionActivationGroupList activationGroups = this.activationGroups;
for (int i = 0; i &lt; activationGroups.size(); i++) {
	ExpansionActivationGroup activationGroup = this.activationGroups
			.getValue(i);

	OutputPinActivationList groupOutputs = activationGroup.groupOutputs;

	_beginIsolation();
	for (int j = 0; j &lt; groupOutputs.size(); j++) {
		OutputPinActivation groupOutput = groupOutputs.getValue(j);
		groupOutput.fire(groupOutput.takeOfferedTokens());
	}
	activationGroup.terminateAll();
	_endIsolation();
}

super.terminate();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-sendOffers" name="sendOffers" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-sendOffers.1">
          <language>Java</language>
          <body>// Fire all output expansion nodes and send offers on all outgoing
// control flows.

ExpansionRegion region = (ExpansionRegion) (this.node);

// *** Send offers from all output expansion nodes concurrently. ***
ExpansionNodeList outputElements = region.outputElement;
for (Iterator i = outputElements.iterator(); i.hasNext();) {
	ExpansionNode outputElement = (ExpansionNode) i.next();
	this.getExpansionNodeActivation(outputElement)
			.sendUnofferedTokens();
}

// Send offers on all outgoing control flows.
super.sendOffers();

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup" name="runGroup" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup.1">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup-activationGroup" name="activationGroup" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup-activationGroup-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup-activationGroup-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Set up the inputs for the group with the given index, run the group
// and then fire the group outputs.

if (this.isRunning()) {
	Debug.println(&quot;[runGroup] groupInput[0] = &quot;
			+ this.inputExpansionTokens.getValue(0).tokens.getValue(
					activationGroup.index - 1).getValue());

	TokenSetList inputTokens = this.inputTokens;
	for (int j = 0; j &lt; inputTokens.size(); j++) {
		TokenSet tokenSet = inputTokens.getValue(j);
		OutputPinActivation regionInput = activationGroup.regionInputs
				.getValue(j);
		regionInput.clearTokens();
		regionInput.addTokens(tokenSet.tokens);
		regionInput.sendUnofferedTokens();
	}

	TokenSetList inputExpansionTokens = this.inputExpansionTokens;
	for (int j = 0; j &lt; inputExpansionTokens.size(); j++) {
		TokenSet tokenSet = inputExpansionTokens.getValue(j);
		OutputPinActivation groupInput = activationGroup.groupInputs
				.getValue(j);
		groupInput.clearTokens();
		if (tokenSet.tokens.size() >= activationGroup.index) {
			groupInput.addToken(tokenSet.tokens
					.getValue(activationGroup.index - 1));
		}
		groupInput.sendUnofferedTokens();
	}

	activationGroup.run(activationGroup.nodeActivations);

	this.terminateGroup(activationGroup);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation" name="getExpansionNodeActivation" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation.1">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ExpansionNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-node-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation-node-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the expansion node activation corresponding to the given
// expansion node, in the context of the activity node activation group
// this expansion region activation is in.
// [Note: Expansion regions do not own their expansion nodes. Instead,
// they are own as object nodes by the enclosing activity or group.
// Therefore, they will already be activated along with their expansion
// region.]

return (ExpansionNodeActivation) (this.group.getNodeActivation(node));

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues" name="numberOfValues" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues.1">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the number of values to be acted on by the expansion region of
// this activation, which is the minimum of the number of values offered
// to each of the input expansion nodes of the activation.

ExpansionRegion region = (ExpansionRegion) (this.node);
ExpansionNodeList inputElements = region.inputElement;

int n = this.getExpansionNodeActivation(inputElements.getValue(0))
		.countOfferedValues();
int i = 2;
while (i &lt;= inputElements.size()) {
	int count = this.getExpansionNodeActivation(
			inputElements.getValue(i - 1)).countOfferedValues();
	if (count &lt; n) {
		n = count;
	}
	i = i + 1;
}

return n;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runIterative" name="runIterative" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runIterative.1">
          <language>Java</language>
          <body>// Run the body of the region iteratively, either until all activation
// groups have run or until the region is suspended.

ExpansionActivationGroupList activationGroups = this.activationGroups;

while (this.next &lt;= activationGroups.size() &amp; !this.isSuspended()) {
	ExpansionActivationGroup activationGroup = activationGroups
			.getValue(this.next - 1);
	this.runGroup(activationGroup);
	this.next = this.next + 1;
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runParallel" name="runParallel" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runParallel.1">
          <language>Java</language>
          <body>// Run the body of the region concurrently.

ExpansionActivationGroupList activationGroups = this.activationGroups;

// *** Activate all groups concurrently. ***
for (Iterator i = activationGroups.iterator(); i.hasNext();) {
	ExpansionActivationGroup activationGroup = (ExpansionActivationGroup) i
			.next();
	this.runGroup(activationGroup);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doOutput" name="doOutput" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doOutput.1">
          <language>Java</language>
          <body>// Place tokens on the output expansion nodes.

ExpansionRegion region = (ExpansionRegion) this.node;
ExpansionNodeList outputElements = region.outputElement;

Debug.println(&quot;[doOutput] Expansion region &quot; + region.name + &quot; is &quot;
		+ (this.isSuspended() ? &quot;suspended.&quot; : &quot;completed.&quot;));

if (!this.isSuspended()) {
	for (int i = 0; i &lt; activationGroups.size(); i++) {
		ExpansionActivationGroup activationGroup = activationGroups
				.getValue(i);
		OutputPinActivationList groupOutputs = activationGroup.groupOutputs;
		for (int j = 0; j &lt; groupOutputs.size(); j++) {
			OutputPinActivation groupOutput = groupOutputs.getValue(j);
			ExpansionNode outputElement = outputElements.getValue(j);
			this.getExpansionNodeActivation(outputElement).addTokens(
					groupOutput.takeTokens());
		}
	}
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminateGroup" name="terminateGroup" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminateGroup.1">
          <language>Java</language>
          <body>// Terminate the given activation group, after preserving any group
// outputs.
if (this.isRunning() &amp; !this.isSuspended()) {
	OutputPinActivationList groupOutputs = activationGroup.groupOutputs;
	for (int i = 0; i &lt; groupOutputs.size(); i++) {
		OutputPinActivation groupOutput = groupOutputs.getValue(i);
		groupOutput.fire(groupOutput.takeOfferedTokens());
	}

	activationGroup.terminateAll();
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-isSuspended" name="isSuspended" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-isSuspended.1">
          <language>Java</language>
          <body>// Check if the activation group for this node is suspended.

boolean suspended = false;
int i = 1;
while (i &lt;= this.activationGroups.size() &amp; !suspended) {
	ActivityNodeActivationGroup group = this.activationGroups
			.get(i - 1);
	suspended = group.isSuspended();
	i = i + 1;
}

return suspended;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-resume" name="resume" specification="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-resume.1">
          <language>Java</language>
          <body>// Resume an expansion region after the suspension of the given
// activation group. If the region is iterative, then continue with the
// iteration. If the region is parallel, and there are no more suspended
// activation groups, then generate the expansion node output.

ExpansionRegion region = (ExpansionRegion) this.node;

this.resume();
this.terminateGroup(activationGroup);
if (region.mode == ExpansionKind.iterative) {
	this.runIterative();
}

this.doOutput();
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens.1-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-takeOfferedTokens.1-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doAction.1" name="doAction" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doAction"/>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doStructuredActivity.1" name="doStructuredActivity" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doStructuredActivity"/>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runIterative.1" name="runIterative" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runIterative"/>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runParallel.1" name="runParallel" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runParallel"/>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doOutput.1" name="doOutput" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-doOutput"/>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminate.1" name="terminate" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminate"/>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-sendOffers.1" name="sendOffers" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-sendOffers"/>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup.1" name="runGroup" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-runGroup.1-activationGroup" name="activationGroup" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminateGroup.1" name="terminateGroup" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminateGroup">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-terminateGroup.1-activationGroup" name="activationGroup" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation.1" name="getExpansionNodeActivation" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-ExtraStructuredActivities-ExpansionNodeActivation" direction="return"/>
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-getExpansionNodeActivation.1-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ExpansionNode"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues.1" name="numberOfValues" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-numberOfValues.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-isSuspended.1" name="isSuspended" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-isSuspended">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-isSuspended.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-resume.1" name="resume" method="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-resume">
          <ownedParameter xmi:id="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-resume.1-activationGroup" name="activationGroup" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_activationGroups_regionActivation" name="A_activationGroups_regionActivation" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-activationGroups Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionActivation"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup" name="A_regionInputs_expansionActivationGroup" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-regionInputs Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup-_ownedEnd.0" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup" association="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_regionInputs_expansionActivationGroup-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup" name="A_groupInputs_expansionActivationGroup" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupInputs Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup-_ownedEnd.0" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup" association="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupInputs_expansionActivationGroup-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup" name="A_groupOutputs_expansionActivationGroup" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup-groupOutputs Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup-_ownedEnd.0" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-ExpansionActivationGroup" association="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_groupOutputs_expansionActivationGroup-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet" name="TokenSet">
        <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-TokenSet">
          <body>A set of tokens taken from an input pin activation or input expansion node activation for an expansion region.</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens" name="tokens" visibility="public" type="Semantics-Activities-IntermediateActivities-Token" association="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet">
          <ownedComment xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens-_ownedComment.0" annotatedElement="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens">
            <body>The set of tokens in this input set.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens-_upperValue" value="*"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_inputTokens_expansionRegionActivation" name="A_inputTokens_expansionRegionActivation" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputTokens Semantics-Activities-ExtraStructuredActivities-A_inputTokens_expansionRegionActivation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-ExtraStructuredActivities-A_inputTokens_expansionRegionActivation-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" association="Semantics-Activities-ExtraStructuredActivities-A_inputTokens_expansionRegionActivation"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_inputExpansionTokens_expansionRegionActivation" name="A_inputExpansionTokens_expansionRegionActivation" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation-inputExpansionTokens Semantics-Activities-ExtraStructuredActivities-A_inputExpansionTokens_expansionRegionActivation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-ExtraStructuredActivities-A_inputExpansionTokens_expansionRegionActivation-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-ExpansionRegionActivation" association="Semantics-Activities-ExtraStructuredActivities-A_inputExpansionTokens_expansionRegionActivation"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet" name="A_tokens_tokenSet" visibility="private" memberEnd="Semantics-Activities-ExtraStructuredActivities-TokenSet-tokens Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-ExtraStructuredActivities-TokenSet" association="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-ExtraStructuredActivities-A_tokens_tokenSet-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Semantics-Activities" name="Activities">
      <packageImport xmi:id="_8JdI8M6_EeWF7I4YWspV6w" importedPackage="Semantics-CommonBehaviors"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-Token" name="Token" isAbstract="true">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-Token-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-Token">
          <body>A token is an individual element of data or control that may flow across an activity edge.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-Token-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-Token-holder" name="holder" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" association="Semantics-Activities-IntermediateActivities-A_heldTokens_holder">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Token-holder-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Token-holder-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer" name="transfer" specification="Semantics-Activities-IntermediateActivities-Token-transfer.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-holder" name="holder" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-holder-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer-holder-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// if this token does not have any holder, make the given holder its
// holder.
// Otherwise, remove this token from its holder and return a copy of it
// transfered to a new holder.

Token token = this;
if (this.holder != null) {
	this.withdraw();
	token = this.copy();
}

token.holder = holder;
return token;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Token-withdraw" name="withdraw" specification="Semantics-Activities-IntermediateActivities-Token-withdraw.1">
          <language>Java</language>
          <body>// Remove this token from its holder, withdrawing any offers for it.

if (!this.isWithdrawn()) {
	// Debug.println(&quot;[withdraw] Taking token with value = &quot; +
	// this.getValue());
	this.holder.removeToken(this);
	this.holder = null;
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn" name="isWithdrawn" specification="Semantics-Activities-IntermediateActivities-Token-isWithdrawn.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if this token has been withdrawn.

return this.holder == null;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer.1" name="transfer" method="Semantics-Activities-IntermediateActivities-Token-transfer">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return"/>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Token-transfer.1-holder" name="holder" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Token-withdraw.1" name="withdraw" method="Semantics-Activities-IntermediateActivities-Token-withdraw"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Token-equals" name="equals" isAbstract="true">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-Token-equals-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-Token-equals">
            <body>Test if this token is equal to another token.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Token-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Token-equals-other" name="other" type="Semantics-Activities-IntermediateActivities-Token"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Token-copy" name="copy" isAbstract="true">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-Token-copy-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-Token-copy">
            <body>// Make a copy of this token.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Token-copy-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn.1" name="isWithdrawn" method="Semantics-Activities-IntermediateActivities-Token-isWithdrawn">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Token-isWithdrawn.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Token-isControl" name="isControl" isAbstract="true">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-Token-isControl-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-Token-isControl">
            <body>Test whether this is a control token.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Token-isControl-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Token-getValue" name="getValue" isAbstract="true">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-Token-getValue-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-Token-getValue">
            <body>Get the value associated with this token (if any).</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Token-getValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Token-getValue-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Token-getValue-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-Offer" name="Offer">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-Offer-_ownedComment.0">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-Offer-_ownedComment.1" annotatedElement="Semantics-Activities-IntermediateActivities-Offer">
          <body>An offer is a group of tokens offered together. The grouping of offered tokens into offers usually does not matter for how the tokens may be accepted. However, control and object tokens may become grouped together in the same offer due to a join node that has both incoming control and object flows. In this case, the control tokens are implicitly accepted once all the object tokens in the same offer have been accepted.</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-Offer-offeredTokens" name="offeredTokens" type="Semantics-Activities-IntermediateActivities-Token" association="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-offeredTokens-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-offeredTokens-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues" name="countOfferedValues" specification="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the number of values being offered on object tokens.
// Remove any tokens that have already been withdrawn and don't include
// them in the count.

this.removeWithdrawnTokens();

int count = 0;
for (int i = 0; i &lt; this.offeredTokens.size(); i++) {
	if (this.offeredTokens.getValue(i).getValue() != null) {
		count = count + 1;
	}
}

return count;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens" name="getOfferedTokens" specification="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the offered tokens, removing any that have been withdrawn.

this.removeWithdrawnTokens();

TokenList tokens = new TokenList();
TokenList offeredTokens = this.offeredTokens;
for (int i = 0; i &lt; this.offeredTokens.size(); i++) {
	Token offeredToken = offeredTokens.getValue(i);
	// Debug.println(&quot;[getOfferedTokens] token value = &quot; +
	// offeredToken.getValue());
	tokens.addValue(offeredToken);
}

return tokens;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues" name="removeOfferedValues" specification="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues-count" name="count">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues-count-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues-count-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Remove the given number of non-null object tokens from those in this
// offer.

int n = count;
int i = 1;
while (n > 0) {
	if (this.offeredTokens.getValue(i - 1).getValue() != null) {
		this.offeredTokens.removeValue(i - 1);
	} else {
		i = i + 1;
	}
	n = n - 1;
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeWithdrawnTokens" name="removeWithdrawnTokens" specification="Semantics-Activities-IntermediateActivities-Offer-removeWithdrawnTokens.1">
          <language>Java</language>
          <body>// Remove any tokens that have already been consumed.

TokenList offeredTokens = this.offeredTokens;
int i = 1;
while (i &lt;= this.offeredTokens.size()) {
	if (this.offeredTokens.getValue(i - 1).isWithdrawn()) {
		this.offeredTokens.remove(i - 1);
		i = i - 1;
	}
	i = i + 1;
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens" name="hasTokens" specification="Semantics-Activities-IntermediateActivities-Offer-hasTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens-Parameter1-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens-Parameter1-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Check whether this offer has any tokens that have not been withdrawn.

this.removeWithdrawnTokens();
return this.offeredTokens.size() > 0;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues.1" name="countOfferedValues" method="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Offer-countOfferedValues.1-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens.1" name="getOfferedTokens" method="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens.1-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-Offer-getOfferedTokens.1-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues.1" name="removeOfferedValues" method="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeOfferedValues.1-count" name="count">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Offer-removeWithdrawnTokens.1" name="removeWithdrawnTokens" method="Semantics-Activities-IntermediateActivities-Offer-removeWithdrawnTokens"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens.1" name="hasTokens" method="Semantics-Activities-IntermediateActivities-Offer-hasTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-Offer-hasTokens.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken" name="ObjectToken">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ObjectToken">
          <body>An object token represents the passing of data along an object flow edge.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-_generalization.0" general="Semantics-Activities-IntermediateActivities-Token"/>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-value" name="value" type="Semantics-Classes-Kernel-Value" aggregation="composite" association="Semantics-Activities-IntermediateActivities-A_value_objectToken">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-value-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ObjectToken-value">
            <body>The value carried by this token. A token may have no value, in which case it is a &quot;null token&quot;.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-value-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-value-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals" name="equals" specification="Semantics-Activities-IntermediateActivities-ObjectToken-equals.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-other" name="other" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-other-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals-other-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if this object token is the same as the other token.

return this == other;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy" name="copy" specification="Semantics-Activities-IntermediateActivities-ObjectToken-copy.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return a new object token with the same value as this token.
// [Note: the holder of the copy is not set.]

ObjectToken copy = new ObjectToken();
copy.value = this.value;

return copy;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl" name="isControl" specification="Semantics-Activities-IntermediateActivities-ObjectToken-isControl.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return false for an object token.

return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue" name="getValue" specification="Semantics-Activities-IntermediateActivities-ObjectToken-getValue.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the value of this object token.

return this.value;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals.1" name="equals" method="Semantics-Activities-IntermediateActivities-ObjectToken-equals">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-equals.1-other" name="other" type="Semantics-Activities-IntermediateActivities-Token"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy.1" name="copy" method="Semantics-Activities-IntermediateActivities-ObjectToken-copy">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl.1" name="isControl" method="Semantics-Activities-IntermediateActivities-ObjectToken-isControl">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-isControl.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue.1" name="getValue" method="Semantics-Activities-IntermediateActivities-ObjectToken-getValue">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectToken-getValue.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation" name="ObjectNodeActivation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ObjectNodeActivation">
          <body>An object node activation is an activity node activation for a node that is an object node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-offeredTokenCount" name="offeredTokenCount">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-offeredTokenCount-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-offeredTokenCount">
            <body>The number of held tokens that have already been offered.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-run" name="run" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-run.1">
          <language>Java</language>
          <body>// Initialize the offered token count to zero.

super.run();
this.offeredTokenCount = 0;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers" name="sendOffers" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers-tokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers-tokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If the set of tokens to be sent is empty, then offer a null token
// instead.
// Otherwise, offer the given tokens as usual.

if (tokens.size() == 0) {
	ObjectToken token = new ObjectToken();
	token.holder = this;
	tokens.addValue(token);
}

super.sendOffers(tokens);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-terminate" name="terminate" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-terminate.1">
          <language>Java</language>
          <body>// Remove any offered tokens and terminate.

this.clearTokens();
super.terminate();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken" name="addToken" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken-token" name="token" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken-token-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken-token-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Transfer the given token to be held by this node only if it is a
// non-null object token.
// If it is a control token or a null token, consume it without holding
// it.

if (token.getValue() == null) {
	token.withdraw();
} else {
	super.addToken(token);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken" name="removeToken" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-token" name="token" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-token-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken-token-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Remove the given token, if it is held by this node activation.

int i = super.removeToken(token);
if (i > 0 &amp; i &lt;= this.offeredTokenCount) {
	this.offeredTokenCount = this.offeredTokenCount - 1;
}

return i;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-clearTokens" name="clearTokens" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-clearTokens.1">
          <language>Java</language>
          <body>// Remove all held tokens.

super.clearTokens();
this.offeredTokenCount = 0;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues" name="countOfferedValues" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues-Parameter1-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues-Parameter1-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Count the total number of non-null object tokens being offered to
// this node activation.

int totalValueCount = 0;
int i = 1;
while (i &lt;= this.incomingEdges.size()) {
	totalValueCount = totalValueCount
			+ this.incomingEdges.getValue(i - 1).countOfferedValues();
	i = i + 1;
}

return totalValueCount;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendUnofferedTokens" name="sendUnofferedTokens" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendUnofferedTokens.1">
          <language>Java</language>
          <body>// Send offers over all outgoing edges, if there are any tokens to be
// offered.

TokenList tokens = this.getUnofferedTokens();
this.offeredTokenCount = this.offeredTokenCount + tokens.size();

this.sendOffers(tokens);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens" name="countUnofferedTokens" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the number of unoffered tokens that are to be offered next.
// (By default, this is all unoffered tokens.)

if (this.heldTokens.size() == 0) {
	this.offeredTokenCount = 0;
}

return this.heldTokens.size() - this.offeredTokenCount;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens" name="getUnofferedTokens" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the next set of unoffered tokens to be offered and return it.
// [Note: This effectively treats all object flows as if they have
// weight=*, rather than the weight=1 default in the current
// superstructure semantics.]

TokenList tokens = new TokenList();

int i = 1;
while (i &lt;= this.countUnofferedTokens()) {
	tokens.addValue(this.heldTokens.getValue(this.offeredTokenCount + i
			- 1));
	i = i + 1;
}

return tokens;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens" name="takeUnofferedTokens" specification="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Take the next set of unoffered tokens to be offered from this node
// activation and return them.

TokenList tokens = this.getUnofferedTokens();
for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	token.withdraw();
}
return tokens;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-run.1" name="run" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-run"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers.1" name="sendOffers" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers.1-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers.1-tokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendOffers.1-tokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-terminate.1" name="terminate" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-terminate"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken.1" name="addToken" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-addToken.1-token" name="token" type="Semantics-Activities-IntermediateActivities-Token"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken.1" name="removeToken" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-removeToken.1-token" name="token" type="Semantics-Activities-IntermediateActivities-Token"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-clearTokens.1" name="clearTokens" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-clearTokens"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues.1" name="countOfferedValues" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countOfferedValues.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendUnofferedTokens.1" name="sendUnofferedTokens" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-sendUnofferedTokens"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens.1" name="countUnofferedTokens" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-countUnofferedTokens.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens.1" name="getUnofferedTokens" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-getUnofferedTokens.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens.1" name="takeUnofferedTokens" method="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens.1-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ObjectNodeActivation-takeUnofferedTokens.1-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-MergeNodeActivation" name="MergeNodeActivation">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-MergeNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-MergeNodeActivation">
          <body>A merge node activation is a control node activation for a node that is a merge node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-MergeNodeActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-MergeNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation" name="JoinNodeActivation">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-JoinNodeActivation">
          <body>A join node activation is a control node activation for a node that is a join node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady" name="isReady" specification="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Check that all incoming edges have sources that are offering tokens.

boolean ready = true;
int i = 1;
while (ready &amp; i &lt;= this.incomingEdges.size()) {
	ready = this.incomingEdges.getValue(i - 1).hasOffer();
	i = i + 1;
}

return ready;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady.1" name="isReady" method="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-JoinNodeActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken" name="ForkedToken">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ForkedToken">
          <body>A forked token is a proxy for a token that has been offered through a fork node. If the token is accepted through the fork node, then the original token is withdrawn from its holder, but the forked token remains held by the fork node activation until all outstanding offers on all outgoing edges are accepted.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-_generalization.0" general="Semantics-Activities-IntermediateActivities-Token"/>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-baseToken" name="baseToken" type="Semantics-Activities-IntermediateActivities-Token" association="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-baseToken-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-baseToken-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-remainingOffersCount" name="remainingOffersCount">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-remainingOffersCount-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ForkedToken-remainingOffersCount">
            <body>The remaining number of outstanding offers for this token on outgoing edges of the fork node.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-baseTokenIsWithdrawn" name="baseTokenIsWithdrawn" visibility="public">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-baseTokenIsWithdrawn-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ForkedToken-baseTokenIsWithdrawn">
            <body>Indicates whether withdraw() has been called on the base token.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl" name="isControl" specification="Semantics-Activities-IntermediateActivities-ForkedToken-isControl.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if the base token is a control token.

return this.baseToken.isControl();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-withdraw" name="withdraw" specification="Semantics-Activities-IntermediateActivities-ForkedToken-withdraw.1">
          <language>Java</language>
          <body>// If the base token is not withdrawn, then withdraw it.
// Decrement the remaining offers count.
// When the remaining number of offers is zero, then remove this token
// from its holder.

if (!this.baseTokenIsWithdrawn &amp; !this.baseToken.isWithdrawn()) {
	this.baseToken.withdraw();

	// NOTE: This keeps a base token that is a forked token from being
	// withdrawn more than once, since withdrawing a forked token may
	// not actually remove it from its fork node holder.
	this.baseTokenIsWithdrawn = true;
}

if (this.remainingOffersCount > 0) {
	this.remainingOffersCount = this.remainingOffersCount - 1;
}

if (this.remainingOffersCount == 0) {
	super.withdraw();
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy" name="copy" specification="Semantics-Activities-IntermediateActivities-ForkedToken-copy.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return a copy of the base token.

return this.baseToken.copy();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals" name="equals" specification="Semantics-Activities-IntermediateActivities-ForkedToken-equals.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-otherToken" name="otherToken" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-otherToken-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals-otherToken-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if this token is equal to another token.

return this == otherToken;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue" name="getValue" specification="Semantics-Activities-IntermediateActivities-ForkedToken-getValue.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the value of the base token.

return this.baseToken.getValue();
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl.1" name="isControl" method="Semantics-Activities-IntermediateActivities-ForkedToken-isControl">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-isControl.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-withdraw.1" name="withdraw" method="Semantics-Activities-IntermediateActivities-ForkedToken-withdraw"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy.1" name="copy" method="Semantics-Activities-IntermediateActivities-ForkedToken-copy">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals.1" name="equals" method="Semantics-Activities-IntermediateActivities-ForkedToken-equals">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-equals.1-otherToken" name="otherToken" type="Semantics-Activities-IntermediateActivities-Token"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue.1" name="getValue" method="Semantics-Activities-IntermediateActivities-ForkedToken-getValue">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkedToken-getValue.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation" name="ForkNodeActivation">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ForkNodeActivation">
          <body>A fork node activation is a control node activation for a node that is a fork node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create forked tokens for all incoming tokens and offer them on all
// outgoing edges.

if (this.node == null) {
	Debug.println(&quot;[fire] Anonymous fork node.&quot;);
} else {
	Debug.println(&quot;[fire] Fork node &quot; + this.node.name + &quot;...&quot;);
}

ActivityEdgeInstanceList outgoingEdges = this.outgoingEdges;
int outgoingEdgeCount = outgoingEdges.size();

TokenList forkedTokens = new TokenList();
for (int i = 0; i &lt; incomingTokens.size(); i++) {
	Token token = incomingTokens.getValue(i);
	ForkedToken forkedToken = new ForkedToken();
	forkedToken.baseToken = token;
	forkedToken.remainingOffersCount = outgoingEdgeCount;
	forkedToken.baseTokenIsWithdrawn = false;
	forkedTokens.addValue(forkedToken);
}

this.addTokens(forkedTokens);

this.sendOffers(forkedTokens);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-terminate" name="terminate" specification="Semantics-Activities-IntermediateActivities-ForkNodeActivation-terminate.1">
          <language>Java</language>
          <body>// Remove any offered tokens and terminate.

this.clearTokens();
super.terminate();
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ForkNodeActivation-terminate.1" name="terminate" method="Semantics-Activities-IntermediateActivities-ForkNodeActivation-terminate"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation" name="InitialNodeActivation">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-InitialNodeActivation">
          <body>An initial node activation is a control node activation for a node that is an initial node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a single token and send offers for it.

TokenList tokens = new TokenList();
tokens.addValue(new ControlToken());
this.addTokens(tokens);

this.sendOffers(tokens);
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-InitialNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation" name="DecisionNodeActivation">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-_ownedComment.0">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation"/>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution" name="decisionInputExecution" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" aggregation="composite" association="Semantics-Activities-IntermediateActivities-A_decisionInputExecution_decisionNodeActivation">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution">
            <body>The current execution of the decision input behavior (if any).</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the decision values and test them on each guard.
// Forward the offer over the edges for which the test succeeds.

Debug.println(&quot;[fire] Decision node &quot; + this.node.name + &quot;...&quot;);

// TokenList incomingTokens = this.takeOfferedTokens();
TokenList removedControlTokens = this
		.removeJoinedControlTokens(incomingTokens);
ValueList decisionValues = this.getDecisionValues(incomingTokens);

ActivityEdgeInstanceList outgoingEdges = this.outgoingEdges;
for (int i = 0; i &lt; outgoingEdges.size(); i++) {
	ActivityEdgeInstance edgeInstance = outgoingEdges.getValue(i);
	ValueSpecification guard = edgeInstance.edge.guard;

	TokenList offeredTokens = new TokenList();
	for (int j = 0; j &lt; incomingTokens.size(); j++) {
		Token incomingToken = incomingTokens.getValue(j);
		Value decisionValue = decisionValues.getValue(j);
		if (this.test(guard, decisionValue)) {
			offeredTokens.addValue(incomingToken);
		}
	}

	if (offeredTokens.size() > 0) {
		for (int j = 0; j &lt; removedControlTokens.size(); j++) {
			Token removedControlToken = removedControlTokens
					.getValue(j);
			offeredTokens.addValue(removedControlToken);
		}
		edgeInstance.sendOffer(offeredTokens);
	}
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues" name="getDecisionValues" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If there is neither a decision input flow nor a decision input
// behavior, then return the set of values from the incoming tokens.
// [In this case, the single incoming edge must be an object flow.]
// If there is a decision input flow, but no decision input behavior,
// then return a list of the decision input values equal in size to the
// number of incoming tokens.
// If there is both a decision input flow and a decision input behavior,
// then execute the decision input behavior once for each incoming token
// and return the set of resulting values.
// If the primary incoming edge is an object flow, then the value on
// each object token is passed to the decision input behavior, along
// with the decision input flow value, if any.
// If the primary incoming edge is a control flow, then the decision
// input behavior only receives the decision input flow, if any.

Value decisionInputValue = this.getDecisionInputFlowValue();

ValueList decisionValues = new ValueList();
for (int i = 0; i &lt; incomingTokens.size(); i++) {
	Token incomingToken = incomingTokens.getValue(i);
	Value value = this.executeDecisionInputBehavior(incomingToken
			.getValue(), decisionInputValue);
	decisionValues.addValue(value);
}

// Debug.println(&quot;[getDecisionValues] &quot; + decisionValues.size() +
// &quot; decision value(s):&quot;);
for (int i = 0; i &lt; decisionValues.size(); i++) {
	Value decisionValue = decisionValues.getValue(i);
	Debug.println(&quot;[getDecisionValues] decisionValues[&quot; + i + &quot;] = &quot;
			+ decisionValue);
}

return decisionValues;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior" name="executeDecisionInputBehavior" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-inputValue" name="inputValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-inputValue-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-inputValue-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-decisionInputValue" name="decisionInputValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-decisionInputValue-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior-decisionInputValue-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create the decision input execution from the decision input behavior.
// If the behavior has input parameter(s), set the input parameter(s) of
// the execution to the given value(s).
// Execute the decision input execution and then remove it.
// Return the value of the output parameter of the execution.
// If there is no decision input behavior, the decision input value is
// returned, if one is given, otherwise the input value is used as the
// decision value.

Debug.println(&quot;[executeDecisionBehavior] inputValue = &quot; + inputValue);

Behavior decisionInputBehavior = ((DecisionNode) (this.node)).decisionInput;

Value decisionInputResult = null;

if (decisionInputBehavior == null) {

	if (decisionInputValue != null) {
		decisionInputResult = decisionInputValue;
	} else {
		decisionInputResult = inputValue;
	}

} else {

	this.decisionInputExecution = this.getExecutionLocus().factory
			.createExecution(decisionInputBehavior, this
					.getExecutionContext());

	int i = 1;
	int j = 0;
	while ((j == 0 | (j == 1 &amp; decisionInputValue != null))
			&amp; i &lt;= decisionInputBehavior.ownedParameter.size()) {
		Parameter parameter = decisionInputBehavior.ownedParameter
				.getValue(i - 1);
		if (parameter.direction.equals(ParameterDirectionKind.in)
				| parameter.direction
						.equals(ParameterDirectionKind.inout)) {
			ParameterValue inputParameterValue = new ParameterValue();
			inputParameterValue.parameter = parameter;

			j = j + 1;
			if (j == 1 &amp;&amp; inputValue != null) {
				inputParameterValue.values.addValue(inputValue);
			} else {
				inputParameterValue.values.addValue(decisionInputValue);
			}

			this.decisionInputExecution
					.setParameterValue(inputParameterValue);

		}
		i = i + 1;
	}

	this.decisionInputExecution.execute();

	ParameterValueList outputParameterValues = this.decisionInputExecution
			.getOutputParameterValues();
	decisionInputExecution.destroy();

	decisionInputResult = outputParameterValues.getValue(0).values
			.getValue(0);

}

return decisionInputResult;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-terminate" name="terminate" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-terminate.1">
          <language>Java</language>
          <body>// Terminate the decision input execution, if any, and then terminate
// this activation.

if (this.decisionInputExecution != null) {
	this.decisionInputExecution.terminate();
}

super.terminate();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady" name="isReady" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Check that all incoming edges have sources that are offering tokens.
// [This should be at most two incoming edges, if there is a decision
// input flow.]

int i = 1;
boolean ready = true;
while (ready &amp; i &lt;= this.incomingEdges.size()) {
	ready = this.incomingEdges.getValue(i - 1).hasOffer();
	i = i + 1;
}

return ready;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get tokens from the incoming edge that is not the decision input
// flow.

ObjectFlow decisionInputFlow = ((DecisionNode) (this.node)).decisionInputFlow;

TokenList allTokens = new TokenList();
ActivityEdgeInstanceList incomingEdges = this.incomingEdges;
for (int i = 0; i &lt; incomingEdges.size(); i++) {
	ActivityEdgeInstance edgeInstance = incomingEdges.getValue(i);
	if (edgeInstance.edge != decisionInputFlow) {
		TokenList tokens = edgeInstance.takeOfferedTokens();
		for (int j = 0; j &lt; tokens.size(); j++) {
			allTokens.addValue(tokens.getValue(j));
		}
	}
}

return allTokens;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue" name="getDecisionInputFlowValue" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Take the next token available on the decision input flow, if any, and
// return its value.

ActivityEdgeInstance decisionInputFlowInstance = this
		.getDecisionInputFlowInstance();

Value value = null;
if (decisionInputFlowInstance != null) {
	TokenList tokens = decisionInputFlowInstance.takeOfferedTokens();
	if (tokens.size() > 0) {
		value = tokens.getValue(0).getValue();
	}
}

return value;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance" name="getDecisionInputFlowInstance" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the activity edge instance for the decision input flow, if any.

ActivityEdge decisionInputFlow = ((DecisionNode) (this.node)).decisionInputFlow;

ActivityEdgeInstance edgeInstance = null;
if (decisionInputFlow != null) {
	int i = 1;
	while (edgeInstance == null &amp; i &lt;= this.incomingEdges.size()) {
		ActivityEdgeInstance incomingEdge = this.incomingEdges
				.getValue(i - 1);
		if (incomingEdge.edge == decisionInputFlow) {
			edgeInstance = incomingEdge;
		}
		i = i + 1;
	}
}

return edgeInstance;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test" name="test" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-guard" name="guard">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-guard-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-guard-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-value" name="value" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-value-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test-value-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if the given value matches the guard. If there is no guard,
// return true.

boolean guardResult = true;
if (guard != null) {
	Value guardValue = this.getExecutionLocus().executor
			.evaluate(guard);
	guardResult = guardValue.equals(value);
}

return guardResult;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens" name="removeJoinedControlTokens" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If the primary incoming edge is an object flow, then remove any
// control tokens from the incoming tokens and return them.
// [Control tokens may effectively be offered on an object flow outgoing
// from a join node that has both control and object flows incoming.]

TokenList removedControlTokens = new TokenList();

if (this.hasObjectFlowInput()) {
	int i = 1;
	while (i &lt;= incomingTokens.size()) {
		Token token = incomingTokens.getValue(i - 1);
		if (token.isControl()) {
			removedControlTokens.addValue(token);
			incomingTokens.removeValue(i - 1);
			i = i - 1;
		}
		i = i + 1;
	}
}

return removedControlTokens;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput" name="hasObjectFlowInput" specification="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Check that the primary incoming edge is an object flow.

ActivityEdge decisionInputFlow = ((DecisionNode) (this.node)).decisionInputFlow;

boolean isObjectFlow = false;
int i = 1;
while (!isObjectFlow &amp; i &lt;= this.incomingEdges.size()) {
	ActivityEdge edge = this.incomingEdges.getValue(i - 1).edge;
	isObjectFlow = edge != decisionInputFlow
			&amp; edge instanceof ObjectFlow;
	i = i + 1;
}

return isObjectFlow;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1" name="getDecisionValues" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionValues.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1" name="executeDecisionInputBehavior" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-inputValue" name="inputValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-inputValue-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-inputValue-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-decisionInputValue" name="decisionInputValue" type="Semantics-Classes-Kernel-Value">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-decisionInputValue-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-executeDecisionInputBehavior.1-decisionInputValue-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-terminate.1" name="terminate" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-terminate"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady.1" name="isReady" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-takeOfferedTokens.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue.1" name="getDecisionInputFlowValue" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowValue.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance.1" name="getDecisionInputFlowInstance" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-getDecisionInputFlowInstance.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test.1" name="test" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test.1-guard" name="guard">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-test.1-value" name="value" type="Semantics-Classes-Kernel-Value"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1" name="removeJoinedControlTokens" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-OwnedParameter" name="OwnedParameter" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-removeJoinedControlTokens.1-OwnedParameter-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput.1" name="hasObjectFlowInput" method="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-hasObjectFlowInput.1-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken" name="ControlToken">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ControlToken">
          <body>A control token represents the passing of control along a control flow edge.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-_generalization.0" general="Semantics-Activities-IntermediateActivities-Token"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals" name="equals" specification="Semantics-Activities-IntermediateActivities-ControlToken-equals.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-other" name="other" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-other-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals-other-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return true if the other token is a control token, because control
// tokens are interchangable.

return other instanceof ControlToken;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy" name="copy" specification="Semantics-Activities-IntermediateActivities-ControlToken-copy.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return a new control token.

return new ControlToken();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl" name="isControl" specification="Semantics-Activities-IntermediateActivities-ControlToken-isControl.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return true for a control token.

return true;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue" name="getValue" specification="Semantics-Activities-IntermediateActivities-ControlToken-getValue.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Control tokens do not have values.

return null;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals.1" name="equals" method="Semantics-Activities-IntermediateActivities-ControlToken-equals">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-equals.1-other" name="other" type="Semantics-Activities-IntermediateActivities-Token"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy.1" name="copy" method="Semantics-Activities-IntermediateActivities-ControlToken-copy">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl.1" name="isControl" method="Semantics-Activities-IntermediateActivities-ControlToken-isControl">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-isControl.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue.1" name="getValue" method="Semantics-Activities-IntermediateActivities-ControlToken-getValue">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlToken-getValue.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation" name="ControlNodeActivation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ControlNodeActivation">
          <body>A control node activation is an activity node activation for a node that is a control node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// By default, offer all tokens on all outgoing edges.

if (this.node != null) {
	Debug.println(&quot;[fire] Control node &quot; + this.node.name + &quot;...&quot;);
}

this.sendOffers(incomingTokens);
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ControlNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" name="ActivityEdgeInstance">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
          <body>An activity edge instance is a connection between activity node activations corresponding to an edge between the corresponding nodes of those activations</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge" name="edge" association="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge">
            <body>The activity edge of which this is an instance.&#xD;
[This is optional to allow for an implicit fork node execution to be connected to its action execution by an edge instance which does not have a corresponding node in the model.]</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityEdge"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" association="Semantics-Activities-IntermediateActivities-a">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group">
            <body>The activity group that contains this activity edge instance. </body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-source" name="source" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" association="Semantics-Activities-IntermediateActivities-A_source_outgoingEdges">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-source-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-source">
            <body>The source of this activity edge instance.&#xD;
The node of the source must be the same as the source of the edge of this edge instance.</body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-target" name="target" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" association="Semantics-Activities-IntermediateActivities-A_incomingEdges_target">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-target-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-target">
            <body>The target of this activity edge instance.&#xD;
The node of the target must be the same as the target of the edge of this edge instance.</body>
          </ownedComment>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-offers" name="offers" visibility="public" type="Semantics-Activities-IntermediateActivities-Offer" association="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-offers-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-offers-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer" name="sendOffer" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer-tokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer-tokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Send an offer from the source to the target.
// Keep the offered tokens until taken by the target.
// (Note that any one edge should only be handling either all object
// tokens or all control tokens.)

Offer offer = new Offer();

for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	// Debug.println(&quot;[sendOffer] token value = &quot; + token.getValue());
	offer.offeredTokens.addValue(token);
}

this.offers.addValue(offer);

this.target.receiveOffer();

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues" name="countOfferedValues" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the number of values being offered in object tokens.

int count = 0;
OfferList offers = this.offers;
for (int i = 0; i &lt; offers.size(); i++) {
	count = count + offers.getValue(i).countOfferedValues();
}

return count;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Take all the offered tokens, up to the given maximum count of
// non-null object tokens, and return them.

TokenList tokens = new TokenList();
int remainingCount = maxCount;

while (this.offers.size() > 0 &amp; remainingCount > 0) {
	Offer offer = this.offers.getValue(0);
	TokenList offeredTokens = offer.getOfferedTokens();
	int count = offer.countOfferedValues();
	if (count &lt;= remainingCount) {
		for (int i = 0; i &lt; offeredTokens.size(); i++) {
			tokens.addValue(offeredTokens.getValue(i));
		}
		remainingCount = remainingCount - count;
		this.offers.removeValue(0);
	} else {
		for (int i = 0; i &lt; remainingCount; i++) {
			Token token = offeredTokens.getValue(i);
			if (token.getValue() != null) {
				tokens.addValue(token);
			}
		}
		offer.removeOfferedValues(remainingCount);
		remainingCount = 0;
	}
}

return tokens;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1" name="takeOfferedTokens1" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-maxCount" name="maxCount">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-maxCount-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-maxCount-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Take all the offered tokens, up to the given maximum count of non-null object tokens, and return them.&#xD;
&#xD;
TokenList tokens = new TokenList();&#xD;
int remainingCount = maxCount;&#xD;
&#xD;
while (this.offers.size() > 0 &amp; remainingCount > 0) {&#xD;
    Offer offer = this.offers.getValue(0);&#xD;
    TokenList offeredTokens = offer.getOfferedTokens();&#xD;
    int count = offer.countOfferedValues();&#xD;
    if (count &lt;= remainingCount) {&#xD;
        for (int i = 0; i &lt; offeredTokens.size(); i++) {&#xD;
            tokens.addValue(offeredTokens.getValue(i));&#xD;
        }&#xD;
        remainingCount = remainingCount - count;&#xD;
        this.offers.removeValue(0);&#xD;
    } else {&#xD;
        for (int i = 0; i &lt; remainingCount; i++) {&#xD;
            Token token = offeredTokens.getValue(i);&#xD;
            if (token.getValue() != null) {&#xD;
                tokens.addValue(token);&#xD;
            }&#xD;
        }&#xD;
        offer.removeOfferedValues(remainingCount);&#xD;
        remainingCount = 0;&#xD;
    }&#xD;
}&#xD;
&#xD;
return tokens;&#xD;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens" name="getOfferedTokens" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the offered tokens (after which the tokens will still be
// offered).

TokenList tokens = new TokenList();
OfferList offers = this.offers;

for (int i = 0; i &lt; offers.size(); i++) {
	TokenList offeredTokens = offers.getValue(i).getOfferedTokens();
	for (int j = 0; j &lt; offeredTokens.size(); j++) {
		tokens.addValue(offeredTokens.getValue(j));
	}
}

return tokens;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer" name="hasOffer" specification="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return true if there are any pending offers.

boolean hasTokens = false;
int i = 1;
while (!hasTokens &amp; i &lt;= this.offers.size()) {
	hasTokens = this.offers.getValue(i - 1).hasTokens();
	i = i + 1;
}

return hasTokens;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer.1" name="sendOffer" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer.1-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer.1-tokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-sendOffer.1-tokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues.1" name="countOfferedValues" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-countOfferedValues.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2" name="takeOfferedTokens" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2-maxCount" name="maxCount">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2-Parameter1" name="Parameter1" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2-Parameter1-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-takeOfferedTokens.2-Parameter1-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens.1" name="getOfferedTokens" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-getOfferedTokens.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer.1" name="hasOffer" method="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-hasOffer.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution" name="ActivityExecution">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityExecution">
          <body>An activity execution is used to execute a specific activity. The type of the activity execution must be an activity.&#xD;
When executed, the activity execution creates activity edge instances for all activity edges, activity node activations for all activity nodes and makes offers to all nodes with no incoming edges.&#xD;
Execution terminates when either all node activations are complete, or an activity final node is executed.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-_generalization.0" general="Semantics-CommonBehaviors-BasicBehaviors-Execution"/>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-activationGroup" name="activationGroup" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" aggregation="composite" association="Semantics-Activities-IntermediateActivities-A_activationGroup_activityExecution">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-activationGroup-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityExecution-activationGroup">
            <body>The group of activations of the activity nodes of the activity.</body>
          </ownedComment>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-execute" name="execute" specification="Semantics-Activities-IntermediateActivities-ActivityExecution-execute.1">
          <language>Java</language>
          <body>// Execute the activity for this execution by creating an activity node
// activation group and activating all the activity nodes in the
// activity.
// When this is complete, copy the values on the tokens offered by
// output parameter nodes to the corresponding output parameters.

Activity activity = (Activity) (this.getTypes().getValue(0));

Debug.println(&quot;[execute] Activity &quot; + activity.name + &quot;...&quot;);
// Debug.println(&quot;[execute] context = &quot; + this.context.objectId());
Debug.println(&quot;[event] Execute activity=&quot; + activity.name);

this.activationGroup = new ActivityNodeActivationGroup();
this.activationGroup.activityExecution = this;
this.activationGroup.activate(activity.node, activity.edge);

// Debug.println(&quot;[execute] Getting output parameter node activations...&quot;);

ActivityParameterNodeActivationList outputActivations = this.activationGroup
		.getOutputParameterNodeActivations();

// Debug.println(&quot;[execute] There are &quot; + outputActivations.size() +
// &quot; output parameter node activations.&quot;);

for (int i = 0; i &lt; outputActivations.size(); i++) {
	ActivityParameterNodeActivation outputActivation = outputActivations
			.getValue(i);

	ParameterValue parameterValue = new ParameterValue();
	parameterValue.parameter = ((ActivityParameterNode) (outputActivation.node)).parameter;

	TokenList tokens = outputActivation.getTokens();
	for (int j = 0; j &lt; tokens.size(); j++) {
		Token token = tokens.getValue(j);
		Value value = ((ObjectToken) token).value;
		if (value != null) {
			parameterValue.values.addValue(value);
			Debug.println(&quot;[event] Output activity=&quot; + activity.name
					+ &quot; parameter=&quot; + parameterValue.parameter.name
					+ &quot; value=&quot; + value);
		}
	}

	this.setParameterValue(parameterValue);
}

Debug.println(&quot;[execute] Activity &quot; + activity.name + &quot; completed.&quot;);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy" name="copy" specification="Semantics-Activities-IntermediateActivities-ActivityExecution-copy.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new activity execution that is a copy of this execution.
// [Note: This currently just returns a non-executing execution for the
// same activity as this execution.]

return super.copy();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_" name="new_" specification="Semantics-Activities-IntermediateActivities-ActivityExecution-new_.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create a new activity execution with empty properties.

return new ActivityExecution();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-terminate" name="terminate" specification="Semantics-Activities-IntermediateActivities-ActivityExecution-terminate.1">
          <language>Java</language>
          <body>// Terminate all node activations (which will ultimately result in the
// activity execution completing).

this.activationGroup.terminateAll();
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-execute.1" name="execute" method="Semantics-Activities-IntermediateActivities-ActivityExecution-execute"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy.1" name="copy" method="Semantics-Activities-IntermediateActivities-ActivityExecution-copy">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-copy.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_.1" name="new_" method="Semantics-Activities-IntermediateActivities-ActivityExecution-new_">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-new_.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityExecution-terminate.1" name="terminate" method="Semantics-Activities-IntermediateActivities-ActivityExecution-terminate"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation" name="ActivityFinalNodeActivation">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation">
          <body>An activity final node activation is a control node activation for a node that is an activity final node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Terminate the activity execution or structured node activation
// containing this activation.

Debug.println(&quot;[fire] Activity final node &quot; + this.node.name + &quot;...&quot;);

if (incomingTokens.size() > 0 | this.incomingEdges.size() == 0) {
	if (this.group.activityExecution != null) {
		this.group.activityExecution.terminate();
	} else if (this.group.containingNodeActivation != null) {
		this.group.containingNodeActivation.terminateAll();
	} else if (this.group instanceof ExpansionActivationGroup) {
		((ExpansionActivationGroup) this.group).regionActivation
				.terminate();
	}
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityFinalNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" name="ActivityNodeActivation" isAbstract="true">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
          <body>An activity node activation is used to define the behavior of an activity node in the context of a containing activity or structured activity node.&#xD;
</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-_ownedComment.1">
          <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-_generalization.0" general="Semantics-Loci-LociL1-SemanticVisitor"/>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" association="Semantics-Activities-IntermediateActivities-A_nodeActivations_group">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group">
            <body>The group that contains this activity node activation.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group-_lowerValue" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node" name="node" association="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node">
            <body>The activity node being activated by this activity node activation. The node must be owned by the activity (type) of the activity execution of this node activation.&#xD;
[This is optional, to allow for fork node edge queues and implicit fork and join node activations for actions to not have nodes in the model.]</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges" name="incomingEdges" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" association="Semantics-Activities-IntermediateActivities-A_incomingEdges_target">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges">
            <body>The set of activity edge instances for the incoming edges of the node.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges" name="outgoingEdges" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" association="Semantics-Activities-IntermediateActivities-A_source_outgoingEdges">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges">
            <body>The set of activity edge instances for the outgoing edges of the node.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-running" name="running">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-running-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-running">
            <body>If true, this node activation is enabled for execution once all its other prerequesites are satisfied.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-heldTokens" name="heldTokens" type="Semantics-Activities-IntermediateActivities-Token" aggregation="composite" association="Semantics-Activities-IntermediateActivities-A_heldTokens_holder">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-heldTokens-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-heldTokens-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize" name="initialize" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
          <language>Java</language>
          <body>// Initialize this node activation.

this.node = node;
this.group = group;
this.running = false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-run" name="run" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-run.1">
          <language>Java</language>
          <body>// Run the activation of this node.

if (this.node != null) {
	Debug.println(&quot;[run] node = &quot; + this.node.name);
} else {
	Debug.println(&quot;[run] Anonymous activation of type &quot;
			+ this.getClass().getName());
}

this.running = true;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-receiveOffer" name="receiveOffer" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-receiveOffer.1">
          <language>Java</language>
          <body>// Receive an offer from an incoming edge.
// Check if all prerequisites have been satisfied. If so, fire.

Debug.println(&quot;[receiveOffer] &quot;
		+ (this.node == null ? &quot;...&quot; : &quot;node = &quot; + this.node.name));

_beginIsolation();

boolean ready = this.isReady();

TokenList tokens = new TokenList();
if (ready) {
	Debug.println(&quot;[receiveOffer] Firing.&quot;);
	tokens = this.takeOfferedTokens();
}

_endIsolation();

if (ready) {
	this.fire(tokens);
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens" name="takeOfferedTokens" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get tokens from all incoming edges.

TokenList allTokens = new TokenList();
ActivityEdgeInstanceList incomingEdges = this.incomingEdges;
for (int i = 0; i &lt; incomingEdges.size(); i++) {
	ActivityEdgeInstance incomingEdge = incomingEdges.getValue(i);
	TokenList tokens = incomingEdge.takeOfferedTokens();
	for (int j = 0; j &lt; tokens.size(); j++) {
		Token token = tokens.getValue(j);
		allTokens.addValue(token);
	}
}

return allTokens;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers" name="sendOffers" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers-tokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers-tokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Send offers for the given set of tokens over all outgoing edges (if
// there are any tokens actually being offered).

if (tokens.size() > 0) {

	// *** Send all outgoing offers concurrently. ***
	ActivityEdgeInstanceList outgoingEdges = this.outgoingEdges;
	for (Iterator i = outgoingEdges.iterator(); i.hasNext();) {
		ActivityEdgeInstance outgoingEdge = (ActivityEdgeInstance) i
				.next();
		// Debug.println(&quot;[sendOffers] Sending offer to &quot; +
		// outgoingEdge.target.node.name + &quot;.&quot;);
		outgoingEdge.sendOffer(tokens);
	}

}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-terminate" name="terminate" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-terminate.1">
          <language>Java</language>
          <body>// Terminate the activation of this node.

if (this.running) {
	if (this.node != null) {
		Debug.println(&quot;[terminate] node = &quot; + this.node.name);
	} else {
		Debug.println(&quot;[terminate] Anonymous activation of type &quot;
				+ this.getClass().getName());
	}
}

this.running = false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady" name="isReady" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Check if all the prerequisites for this node have been satisfied.
// By default, check that this node is running.

return this.isRunning();

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning" name="isRunning" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test whether this node activation is running.

return this.running;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge" name="addOutgoingEdge" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge-edge-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge-edge-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add an activity edge instance as an outgoing edge of this activity
// node activation.

edge.source = this;
this.outgoingEdges.addValue(edge);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge" name="addIncomingEdge" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge-edge-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge-edge-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add an activity edge instance as an incoming edge of this activity
// node activation.

edge.target = this;
this.incomingEdges.addValue(edge);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createNodeActivations" name="createNodeActivations" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createNodeActivations.1">
          <language>Java</language>
          <body>// Create node activations for any subnodes of the node for this
// activation.
// For most kinds of nodes, this does nothing.

return;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createEdgeInstances" name="createEdgeInstances" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createEdgeInstances.1">
          <language>Java</language>
          <body>// Create edge instances for any edge instances owned by the node for
// this activation.
// For most kinds of nodes, this does nothing.

return;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor" name="isSourceFor" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-edgeInstance-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor-edgeInstance-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Check if this node activation is the effective source for the given
// edge instance.

return edgeInstance.source == this;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution" name="getActivityExecution" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the activity execution that contains this activity node
// activation, directly or indirectly.

return this.group.getActivityExecution();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext" name="getExecutionContext" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Object" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the context object for the containing activity execution.

return this.getActivityExecution().context;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus" name="getExecutionLocus" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-Locus" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the locus of the containing activity execution.

return this.getActivityExecution().locus;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation" name="getNodeActivation" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-node-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation-node-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the activity node activation corresponding to the given activity
// node, in the context of this activity node activation.
// By default, return this activity node activation, if it is for the
// given node, otherwise return nothing.

ActivityNodeActivation activation = null;
if (node == this.node) {
	activation = this;
}

return activation;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken" name="addToken" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken-token" name="token" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken-token-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken-token-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Transfer the given token to be held by this node.

if (this.node == null) {
	Debug.println(&quot;[addToken] ...&quot;);
} else {
	Debug.println(&quot;[addToken] node = &quot; + this.node.name);
}

Token transferredToken = token.transfer(this);
// Debug.println(&quot;[addToken] Adding token with value = &quot; +
// transferredToken.getValue());
this.heldTokens.addValue(transferredToken);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken" name="removeToken" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-token" name="token" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-token-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken-token-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Remove the given token, if it is held by this node activation.
// Return the position (counting from 1) of the removed token (0 if
// there is none removed).

boolean notFound = true;
int i = 1;
while (notFound &amp; i &lt;= this.heldTokens.size()) {
	if (this.heldTokens.getValue(i - 1) == token) {
		if (this.node == null) {
			Debug.println(&quot;[removeToken] ...&quot;);
		} else {
			Debug.println(&quot;[removeToken] node = &quot; + this.node.name);
		}
		this.heldTokens.remove(i - 1);
		notFound = false;
	}
	i = i + 1;
}

if (notFound) {
	i = 0;
} else {
	i = i - 1;
}

return i;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens" name="addTokens" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens-tokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens-tokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Transfer the given tokens to be the held tokens for this node.

// if (this.node == null) {
// Debug.println(&quot;[addTokens] ...&quot;);
// } else {
// Debug.println(&quot;[addTokens] node = &quot; + this.node.name);
// }

for (int i = 0; i &lt; tokens.size(); i++) {
	Token token = tokens.getValue(i);
	this.addToken(token);
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens" name="takeTokens" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Take the tokens held by this node activation.

TokenList tokens = this.getTokens();
this.clearTokens();

return tokens;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-clearTokens" name="clearTokens" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-clearTokens.1">
          <language>Java</language>
          <body>// Remove all held tokens.

while (this.heldTokens.size() > 0) {
	this.heldTokens.getValue(0).withdraw();
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens" name="getTokens" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the tokens held by this node activation.

// Debug.println(&quot;[getTokens] node = &quot; + this.node.name);

TokenList tokens = new TokenList();
TokenList heldTokens = this.heldTokens;
for (int i = 0; i &lt; heldTokens.size(); i++) {
	Token heldToken = heldTokens.getValue(i);
	// Debug.println(&quot;[getTokens] token value = &quot; +
	// heldTokens.getValue());
	tokens.addValue(heldToken);
}

return tokens;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-suspend" name="suspend" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-suspend.1">
          <language>Java</language>
          <body>// Suspend this activation within the activation group that contains it.

this.group.suspend(this);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-resume" name="resume" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-resume.1">
          <language>Java</language>
          <body>// Resume this activation within the activation group that contains it.

this.group.resume(this);
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize.1" name="initialize" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize.1-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-initialize.1-group" name="group" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-run.1" name="run" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-run"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-receiveOffer.1" name="receiveOffer" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-receiveOffer"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens.1" name="takeOfferedTokens" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeOfferedTokens.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire" name="fire" isAbstract="true">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire">
            <body>Carry out the main behavior of this activity node.&#xD;
</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers.1" name="sendOffers" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers.1-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers.1-tokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-sendOffers.1-tokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-terminate.1" name="terminate" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-terminate"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady.1" name="isReady" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isReady.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning.1" name="isRunning" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isRunning.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge.1" name="addOutgoingEdge" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addOutgoingEdge.1-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge.1" name="addIncomingEdge" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addIncomingEdge.1-edge" name="edge" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createNodeActivations.1" name="createNodeActivations" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createNodeActivations"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createEdgeInstances.1" name="createEdgeInstances" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-createEdgeInstances"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor.1" name="isSourceFor" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-isSourceFor.1-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution.1" name="getActivityExecution" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getActivityExecution.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext.1" name="getExecutionContext" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionContext.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Object" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus.1" name="getExecutionLocus" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getExecutionLocus.1-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-Locus" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1" name="getNodeActivation" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getNodeActivation.1-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken.1" name="addToken" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addToken.1-token" name="token" type="Semantics-Activities-IntermediateActivities-Token"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken.1" name="removeToken" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-removeToken.1-token" name="token" type="Semantics-Activities-IntermediateActivities-Token"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens.1" name="addTokens" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens.1-tokens" name="tokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens.1-tokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-addTokens.1-tokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens.1" name="takeTokens" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-takeTokens.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-clearTokens.1" name="clearTokens" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-clearTokens"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens.1" name="getTokens" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-Token" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-getTokens.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-suspend.1" name="suspend" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-suspend"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-resume.1" name="resume" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-resume"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" name="ActivityNodeActivationGroup">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup">
          <body>An activity node group is a group of nodes that are activated together, either directly in the context of an activity execution, or in the context of </body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-_ownedComment.1">
          <body>import java.util.Iterator;&#xD;
&#xD;
import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances" name="edgeInstances" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" aggregation="composite" association="Semantics-Activities-IntermediateActivities-a">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances">
            <body>The set of activity edge instances for this group. &#xD;
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations" name="nodeActivations" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" aggregation="composite" association="Semantics-Activities-IntermediateActivities-A_nodeActivations_group">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations">
            <body>The set of activity node executions for this group. &#xD;
</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution" name="activityExecution" type="Semantics-Activities-IntermediateActivities-ActivityExecution" association="Semantics-Activities-IntermediateActivities-A_activationGroup_activityExecution">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution">
            <body>The activity execution to which this group belongs.&#xD;
(This will be empty if the group is for a structured activity node activation.)</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation" name="containingNodeActivation" type="Semantics-Activities-CompleteStructuredActivities-StructuredActivityNodeActivation" association="Semantics-Activities-CompleteStructuredActivities-A_activationGroup_containingNodeActivation">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation">
            <body>The structured activity node activation to which this group belongs.&#xD;
(This will be empty if the group is for an activity execution.)</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-containingNodeActivation-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations" name="suspendedActivations" visibility="public" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" association="Semantics-Activities-IntermediateActivities-_packagedElement.32">
          <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations">
            <body>Activity node activations in this activation group that are suspended waiting for an event occurrence. If an activation group has a containing node activation and any suspended activations, then the containing node activation will also be suspended.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run" name="run" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run-activations" name="activations" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run-activations-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run-activations-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Run the given node activations and then (concurrently) send an offer
// to all activations for nodes with no incoming edges within the given
// set.

for (int i = 0; i &lt; activations.size(); i++) {
	ActivityNodeActivation activation = activations.getValue(i);
	activation.run();
}

Debug.println(&quot;[run] Checking for enabled nodes...&quot;);

ActivityNodeActivationList enabledActivations = new ActivityNodeActivationList();

for (int i = 0; i &lt; activations.size(); i++) {
	ActivityNodeActivation activation = activations.getValue(i);

	Debug
			.println(&quot;[run] Checking node &quot; + activation.node.name
					+ &quot;...&quot;);

	if (activation instanceof ActionActivation
			| activation instanceof ControlNodeActivation
			| activation instanceof ActivityParameterNodeActivation) {

		boolean isEnabled = this.checkIncomingEdges(
				activation.incomingEdges, activations);

		// For an action activation, also consider incoming edges to
		// input pins
		if (isEnabled &amp; activation instanceof ActionActivation) {
			InputPinList inputPins = ((Action) activation.node).input;
			int j = 1;
			while (j &lt;= inputPins.size() &amp; isEnabled) {
				InputPin inputPin = inputPins.getValue(j - 1);
				ActivityEdgeInstanceList inputEdges = ((ActionActivation) activation)
						.getPinActivation(inputPin).incomingEdges;
				isEnabled = this.checkIncomingEdges(inputEdges,
						activations);
				j = j + 1;
			}
		}

		if (isEnabled) {
			Debug.println(&quot;[run] Node &quot; + activation.node.name
					+ &quot; is enabled.&quot;);
			enabledActivations.addValue(activation);
		}
	}
}

// Debug.println(&quot;[run] &quot; + enabledActivations.size() +
// &quot; node(s) are enabled.&quot;);

// *** Send offers to all enabled nodes concurrently. ***
for (Iterator i = enabledActivations.iterator(); i.hasNext();) {
	ActivityNodeActivation activation = (ActivityNodeActivation) i
			.next();
	Debug.println(&quot;[run] Sending offer to node &quot; + activation.node.name
			+ &quot;.&quot;);
	activation.receiveOffer();
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges" name="checkIncomingEdges" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-incomingEdges" name="incomingEdges" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-incomingEdges-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-incomingEdges-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-activations" name="activations" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-activations-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-activations-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-Parameter1-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges-Parameter1-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Check if any incoming edges have a source in a given set of
// activations.

int j = 1;
boolean notFound = true;

while (j &lt;= incomingEdges.size() &amp; notFound) {
	int k = 1;
	while (k &lt;= activations.size() &amp; notFound) {
		if (activations.getValue(k - 1).isSourceFor(
				incomingEdges.getValue(j - 1))) {
			notFound = false;
		}
		k = k + 1;
	}
	j = j + 1;
}

return notFound;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes" name="runNodes" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes-nodes" name="nodes">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes-nodes-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes-nodes-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Run the node activations associated with the given nodes in this
// activation group.

ActivityNodeActivationList nodeActivations = new ActivityNodeActivationList();

for (int i = 0; i &lt; nodes.size(); i++) {
	ActivityNode node = nodes.getValue(i);
	ActivityNodeActivation nodeActivation = this
			.getNodeActivation(node);
	if (nodeActivation != null) {
		nodeActivations.addValue(nodeActivation);
	}
}

this.run(nodeActivations);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate" name="activate" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-nodes" name="nodes">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-nodes-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-nodes-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-edges" name="edges">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityEdge"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-edges-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate-edges-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Activate and run the given set of nodes with the given set of edges,
// within this activation group.

this.createNodeActivations(nodes);
this.createEdgeInstances(edges);
this.run(this.nodeActivations);

// Debug.println(&quot;[activate] Exiting.&quot;);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-terminateAll" name="terminateAll" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-terminateAll.1">
          <language>Java</language>
          <body>// Terminate all node activations in the group.

Debug.println(&quot;[terminateAll] Terminating activation group for &quot;
		+ (this.activityExecution != null ? &quot;activity &quot;
				+ this.activityExecution.getTypes().getValue(0).name
				: this.containingNodeActivation != null ? &quot;node &quot;
						+ this.containingNodeActivation.node.name
						: &quot;expansion region&quot;) + &quot;.&quot;);

ActivityNodeActivationList nodeActivations = this.nodeActivations;
for (int i = 0; i &lt; nodeActivations.size(); i++) {
	ActivityNodeActivation nodeActivation = nodeActivations.getValue(i);
	nodeActivation.terminate();
}

this.suspendedActivations.clear();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations" name="createNodeActivations" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations-nodes" name="nodes">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations-nodes-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations-nodes-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add activity node activations for the given set of nodes to this
// group and create edge instances between them.

for (int i = 0; i &lt; nodes.size(); i++) {
	ActivityNode node = nodes.getValue(i);

	Debug
			.println(&quot;[createNodeActivations] Creating a node activation for &quot;
					+ node.name + &quot;...&quot;);
	this.createNodeActivation(node);

}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation" name="createNodeActivation" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-node-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-node-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create an activity node activation for a given activity node in this
// activity node activation group.

ActivityNodeActivation activation = (ActivityNodeActivation) (this
		.getActivityExecution().locus.factory.instantiateVisitor(node));
activation.initialize(node, this);

this.nodeActivations.addValue(activation);

activation.createNodeActivations();

return activation;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addNodeActivation" name="addNodeActivation">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addNodeActivation-activation" name="activation" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addNodeActivation-activation-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addNodeActivation-activation-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add the given node activation to this group.&#xD;
&#xD;
activation.group = this;&#xD;
this.nodeActivations.addValue(activation);&#xD;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation" name="getNodeActivation" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-node-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation-node-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the node activation (if any) in this group,
// or any nested group, corresponding to the given activity node.
// If this is a group for a structured activity node activation,
// also include the pin activations for that node activation.

ActivityNodeActivation activation = null;

if (this.containingNodeActivation != null &amp;&amp; node instanceof Pin) {
	activation = this.containingNodeActivation
			.getPinActivation((Pin) node);
}

if (activation == null) {
	int i = 1;
	while (activation == null &amp; i &lt;= this.nodeActivations.size()) {
		activation = this.nodeActivations.getValue(i - 1)
				.getNodeActivation(node);
		i = i + 1;
	}
}

return activation;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances" name="createEdgeInstances" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances-edges" name="edges">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityEdge"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances-edges-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances-edges-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create instance edges for the given activity edges, as well as for
// edge instances within any nodes activated in this group.

for (int i = 0; i &lt; edges.size(); i++) {
	ActivityEdge edge = edges.getValue(i);

	Debug
			.println(&quot;[createEdgeInstances] Creating an edge instance from &quot;
					+ edge.source.name
					+ &quot; to &quot;
					+ edge.target.name
					+ &quot;.&quot;);

	ActivityEdgeInstance edgeInstance = new ActivityEdgeInstance();
	edgeInstance.edge = edge;
	edgeInstance.group = this;

	this.edgeInstances.addValue(edgeInstance);
	this.getNodeActivation(edge.source).addOutgoingEdge(edgeInstance);
	this.getNodeActivation(edge.target).addIncomingEdge(edgeInstance);

	// Debug.println(&quot;[createEdgeInstances] Edge instance created...&quot;);
}

ActivityNodeActivationList nodeActivations = this.nodeActivations;
for (int i = 0; i &lt; nodeActivations.size(); i++) {
	ActivityNodeActivation nodeActivation = nodeActivations.getValue(i);
	nodeActivation.createEdgeInstances();
}

// Debug.println(&quot;[createEdgeInstances] Done creating edge instances.&quot;);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addEdgeInstance" name="addEdgeInstance">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addEdgeInstance-instance" name="instance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addEdgeInstance-instance-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-addEdgeInstance-instance-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add the given edge instance to this group.&#xD;
&#xD;
instance.group = this;&#xD;
this.edgeInstances.addValue(instance);&#xD;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution" name="getActivityExecution" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the activity execution to which this group belongs, directly
// or indirectly.

ActivityExecution activityExecution = this.activityExecution;
if (activityExecution == null) {
	activityExecution = this.containingNodeActivation.group
			.getActivityExecution();
}

// Debug.println(&quot;[getActivityExecution] activityExecution = &quot; +
// activityExecution);

return activityExecution;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations" name="getOutputParameterNodeActivations" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the set of all activations in this group of activity parameter
// nodes for output (inout, out and return) parameters.

ActivityParameterNodeActivationList parameterNodeActivations = new ActivityParameterNodeActivationList();
ActivityNodeActivationList nodeActivations = this.nodeActivations;
for (int i = 0; i &lt; nodeActivations.size(); i++) {
	ActivityNodeActivation activation = nodeActivations.getValue(i);
	if (activation instanceof ActivityParameterNodeActivation) {
		if (activation.incomingEdges.size() > 0) {
			parameterNodeActivations
					.addValue((ActivityParameterNodeActivation) activation);
		}
	}
}

return parameterNodeActivations;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor" name="hasSourceFor" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor.1">
          <language>Java</language>
          <body>// Returns true if this activation group has a node activation
// corresponding to the source of the given edge instance.

boolean hasSource = false;
ActivityNodeActivationList activations = this.nodeActivations;
int i = 1;
while (!hasSource &amp; i &lt;= activations.size()) {
	hasSource = activations.getValue(i - 1).isSourceFor(edgeInstance);
	i = i + 1;
}
return hasSource;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-isSuspended" name="isSuspended" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-isSuspended.1">
          <language>Java</language>
          <body>// Check if this activitation group has any suspended activations and
// is,
// therefore, itself suspended.

return this.suspendedActivations.size() > 0;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspend" name="suspend" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspend.1">
          <language>Java</language>
          <body>// Suspend the given activation in this activation group. If this is
// the only suspended activation, and the activation group has a
// containing node activation, then suspend that containing activation.

Debug.println(&quot;[suspend] node=&quot;
		+ (activation.node == null ? &quot;null&quot; : activation.node.name));

if (!this.isSuspended()) {
	StructuredActivityNodeActivation containingNodeActivation = this.containingNodeActivation;
	if (containingNodeActivation != null) {
		containingNodeActivation.suspend();
	}
}
this.suspendedActivations.addValue(activation);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-resume" name="resume" specification="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-resume.1">
          <language>Java</language>
          <body>// Resume the given activation by removing it from the suspended
// activation list for this activation group. If this is the last
// suspended activation, and the activation group has a containing
// node activation, then resume that containing activation.

Debug.println(&quot;[resume] node=&quot;
		+ (activation.node == null ? &quot;null&quot; : activation.node.name));

boolean found = false;
int i = 1;
while (!found &amp; i &lt;= this.suspendedActivations.size()) {
	if (this.suspendedActivations.get(i - 1) == activation) {
		this.suspendedActivations.removeValue(i - 1);
		found = true;
	}
	i = i + 1;
}
if (!this.isSuspended()) {
	StructuredActivityNodeActivation containingNodeActivation = this.containingNodeActivation;
	if (containingNodeActivation != null) {
		containingNodeActivation.resume();
	}
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run.1" name="run" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run.1-activations" name="activations" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run.1-activations-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-run.1-activations-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1" name="checkIncomingEdges" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-incomingEdges" name="incomingEdges" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-incomingEdges-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-incomingEdges-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-activations" name="activations" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-activations-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-activations-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-checkIncomingEdges.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes.1" name="runNodes" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes.1-nodes" name="nodes">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes.1-nodes-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-runNodes.1-nodes-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1" name="activate" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-nodes" name="nodes">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-nodes-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-nodes-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-edges" name="edges">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityEdge"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-edges-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activate.1-edges-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-terminateAll.1" name="terminateAll" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-terminateAll"/>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations.1" name="createNodeActivations" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations.1-nodes" name="nodes">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations.1-nodes-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivations.1-nodes-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation.1" name="createNodeActivation" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation.1-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1" name="getNodeActivation" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getNodeActivation.1-node" name="node">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityNode"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances.1" name="createEdgeInstances" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances.1-edges" name="edges">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ActivityEdge"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances.1-edges-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-createEdgeInstances.1-edges-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution.1" name="getActivityExecution" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getActivityExecution.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityExecution" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations.1" name="getOutputParameterNodeActivations" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations.1-ReturnResult" name="ReturnResult" type="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-getOutputParameterNodeActivations.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor.1" name="hasSourceFor" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor.1-edgeInstance" name="edgeInstance" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance"/>
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-hasSourceFor.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-isSuspended.1" name="isSuspended" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-isSuspended">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-isSuspended.1-Parameter1" name="Parameter1" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspend.1" name="suspend" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspend">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspend.1-activation" name="activation" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-resume.1" name="resume" method="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-resume">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-resume.1-activation" name="activation" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation" name="ActivityParameterNodeActivation">
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-_ownedComment.0" annotatedElement="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation">
          <body>An activity parameter node activation is an object node activation for a node that is an activity parameter node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Syntax.CommonBehaviors.Communications.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Loci.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ObjectNodeActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire.1">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// If there are no incoming edges, this is an activation of an input
// activity parameter node.
// Get the values from the input parameter indicated by the activity
// parameter node and offer those values as object tokens.

if (this.node.incoming.size() == 0) {
	Debug.println(&quot;[fire] Input activity parameter node &quot;
			+ this.node.name + &quot;...&quot;);
	Parameter parameter = ((ActivityParameterNode) (this.node)).parameter;
	ParameterValue parameterValue = this.getActivityExecution()
			.getParameterValue(parameter);
	// Debug.println(&quot;[fire] parameter = &quot; + parameter.name);
	if (parameterValue != null) {
		Debug.println(&quot;[fire] Parameter has &quot;
				+ parameterValue.values.size() + &quot; value(s).&quot;);
		TokenList tokens = new TokenList();
		ValueList values = parameterValue.values;
		for (int i = 0; i &lt; values.size(); i++) {
			Value value = values.getValue(i);
			ObjectToken token = new ObjectToken();
			token.value = value;
			this.addToken(token);
		}
		this.sendUnofferedTokens();
	}
}

// If there are one or more incoming edges, this is an activation of an
// output activity parameter node.
// Take the tokens offered on incoming edges and add them to the set of
// tokens being offered.
// [Note that an output activity parameter node may fire multiple times,
// accumulating tokens offered to it.]

else {
	Debug.println(&quot;[fire] Output activity parameter node &quot;
			+ this.node.name + &quot;...&quot;);
	this.addTokens(incomingTokens);
}

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-clearTokens" name="clearTokens" specification="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-clearTokens.1">
          <language>Java</language>
          <body>// Clear all held tokens only if this is an input parameter node.

if (this.node.incoming.size() == 0) {
	super.clearTokens();
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-clearTokens.1" name="clearTokens" method="Semantics-Activities-IntermediateActivities-ActivityParameterNodeActivation-clearTokens"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_nodeActivations_group" name="A_nodeActivations_group" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-nodeActivations Semantics-Activities-IntermediateActivities-ActivityNodeActivation-group"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-a" name="a" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-edgeInstances Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-group"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_heldTokens_holder" name="A_heldTokens_holder" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-heldTokens Semantics-Activities-IntermediateActivities-Token-holder"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation" name="A_node_activityNodeActivation" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-node Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivation" association="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-A_node_activityNodeActivation-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_incomingEdges_target" name="A_incomingEdges_target" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivation-incomingEdges Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-target"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_activationGroup_activityExecution" name="A_activationGroup_activityExecution" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityExecution-activationGroup Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-activityExecution"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance" name="A_edge_activityEdgeInstance" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-edge Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" association="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-A_edge_activityEdgeInstance-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_source_outgoingEdges" name="A_source_outgoingEdges" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-source Semantics-Activities-IntermediateActivities-ActivityNodeActivation-outgoingEdges"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance" name="A_offers_activityEdgeInstance" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance-offers Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-IntermediateActivities-ActivityEdgeInstance" association="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-A_offers_activityEdgeInstance-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_decisionInputExecution_decisionNodeActivation" name="A_decisionInputExecution_decisionNodeActivation" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-DecisionNodeActivation-decisionInputExecution Semantics-Activities-IntermediateActivities-A_decisionInputExecution_decisionNodeActivation-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-IntermediateActivities-A_decisionInputExecution_decisionNodeActivation-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-DecisionNodeActivation" association="Semantics-Activities-IntermediateActivities-A_decisionInputExecution_decisionNodeActivation"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken" name="A_baseToken_forkedToken" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ForkedToken-baseToken Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-ForkedToken" association="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-A_baseToken_forkedToken-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_value_objectToken" name="A_value_objectToken" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ObjectToken-value Semantics-Activities-IntermediateActivities-A_value_objectToken-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-IntermediateActivities-A_value_objectToken-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-ObjectToken" association="Semantics-Activities-IntermediateActivities-A_value_objectToken"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer" name="A_offeredTokens_offer" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-Offer-offeredTokens Semantics-Activities-IntermediateActivities-A_offeredTokens_offer-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer-_ownedEnd.0" visibility="private" type="Semantics-Activities-IntermediateActivities-Offer" association="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-A_offeredTokens_offer-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation" name="FlowFinalNodeActivation">
        <generalization xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-_generalization.0" general="Semantics-Activities-IntermediateActivities-ControlNodeActivation"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire" name="fire" specification="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire.1">
          <language>Java</language>
          <body>// Consume all incoming tokens.

Debug.println(&quot;[fire] Flow final node &quot; + this.node.name + &quot;...&quot;);

for (int i = 0; i &lt; incomingTokens.size(); i++) {
	Token token = incomingTokens.getValue(i);
	token.withdraw();
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire.1" name="fire" method="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire">
          <ownedParameter xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire.1-incomingTokens" name="incomingTokens" type="Semantics-Activities-IntermediateActivities-Token">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire.1-incomingTokens-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-FlowFinalNodeActivation-fire.1-incomingTokens-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Activities-IntermediateActivities-_packagedElement.32" visibility="private" memberEnd="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup-suspendedActivations Semantics-Activities-IntermediateActivities-_packagedElement.32-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Activities-IntermediateActivities-_packagedElement.32-_ownedEnd.0" name="" visibility="private" type="Semantics-Activities-IntermediateActivities-ActivityNodeActivationGroup" association="Semantics-Activities-IntermediateActivities-_packagedElement.32">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Activities-IntermediateActivities-_packagedElement.32-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Activities-IntermediateActivities-_packagedElement.32-_ownedEnd.0-_upperValue" value="1"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="Semantics-Loci" name="Loci">
      <packageImport xmi:id="_qkm8sM7AEeWF7I4YWspV6w" importedPackage="Semantics-Classes"/>
      <packageImport xmi:id="_skXN8M7AEeWF7I4YWspV6w" importedPackage="Semantics-CommonBehaviors"/>
      <packageImport xmi:id="_ufEnIM7AEeWF7I4YWspV6w" importedPackage="Semantics-Activities"/>
      <packageImport xmi:id="_w7DhYM7AEeWF7I4YWspV6w" importedPackage="Semantics-Actions"/>
      <packageImport xmi:id="_2KV-0M7CEeWF7I4YWspV6w" importedPackage="_Gm47sM7BEeWF7I4YWspV6w"/>
      <packageImport xmi:id="_9Pv7QM7CEeWF7I4YWspV6w" importedPackage="_LzvbEM7BEeWF7I4YWspV6w"/>
      <packageImport xmi:id="_-ogd8M7CEeWF7I4YWspV6w" importedPackage="_VBjOcM7BEeWF7I4YWspV6w"/>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy" name="ChoiceStrategy" isAbstract="true">
        <ownedComment xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ChoiceStrategy">
          <body>A choice strategy is used to represent the behavior of making an arbitrary non-deterministic choice.&#xD;
A valid execution may use ANY choice strategy for choosing one element from a given set.</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-_generalization.0" general="Semantics-Loci-LociL1-SemanticStrategy"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName" name="getName" specification="Semantics-Loci-LociL1-ChoiceStrategy-getName.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// The name of a choice strategy is always &quot;choice&quot;.

return &quot;choice&quot;;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName.1" name="getName" method="Semantics-Loci-LociL1-ChoiceStrategy-getName">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-getName.1-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-choose" name="choose" isAbstract="true">
          <ownedComment xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-choose-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ChoiceStrategy-choose">
            <body>Choose an integer from 1 to the given size.&#xD;
[The size must be greater than 0.]</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-choose-size" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ChoiceStrategy-choose-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-ExecutionFactory" name="ExecutionFactory" isAbstract="true">
        <ownedComment xmi:id="Semantics-Loci-LociL1-ExecutionFactory-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory">
          <body> An execution factory is used to create objects that represent the execution of a behavior, the evaluation of a value specification or the activation of an activity node.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Loci-LociL1-ExecutionFactory-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-Loci-LociL1-ExecutionFactory-locus" name="locus" type="Semantics-Loci-LociL1-Locus" association="Semantics-Loci-LociL1-A_factory_locus">
          <ownedComment xmi:id="Semantics-Loci-LociL1-ExecutionFactory-locus-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory-locus">
            <body>The locus at which this factory resides.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-locus-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-locus-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes" name="primitiveBehaviorPrototypes" type="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution" association="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory">
          <ownedComment xmi:id="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes">
            <body>The set of opaque behavior executions to be used to execute the primitive behaviors known to the factory.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes" name="builtInTypes" association="Semantics-Loci-LociL1-A_builtInTypes_executionFactory">
          <ownedComment xmi:id="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes">
            <body>The set of primitive types that have corresponding literal value specifications.&#xD;
Must include Integer, Boolean, String and UnlimitedNatural.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="../Syntax/UML.uml#PrimitiveType"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Loci-LociL1-ExecutionFactory-strategies" name="strategies" visibility="public" type="Semantics-Loci-LociL1-SemanticStrategy" association="Semantics-Loci-LociL1-A_strategies_executionFactory">
          <ownedComment xmi:id="Semantics-Loci-LociL1-ExecutionFactory-strategies-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory-strategies">
            <body>The set of semantic strategies currently registered with this execution factory.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-strategies-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-strategies-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution" name="createExecution" specification="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-behavior" name="behavior">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-behavior-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-behavior-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-context" name="context" type="Semantics-Classes-Kernel-Object">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-context-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution-context-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create an execution object for a given behavior.
// The execution will take place at the locus of the factory in the
// given context.
// If the context is empty, the execution is assumed to provide its own
// context.

Execution execution;

if (behavior instanceof OpaqueBehavior) {
	execution = this
			.instantiateOpaqueBehaviorExecution((OpaqueBehavior) behavior);
} else {
	execution = (Execution) this.instantiateVisitor(behavior);
	execution.types.addValue(behavior);
	execution.createFeatureValues();
}

this.locus.add(execution);

if (context == null) {
	execution.context = execution;
} else {
	execution.context = context;
}

return execution;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation" name="createEvaluation" specification="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Evaluation" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-specification" name="specification">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-specification-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation-specification-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Create an evaluation object for a given value specification.
// The evaluation will take place at the locus of the factory.

Evaluation evaluation = (Evaluation) this
		.instantiateVisitor(specification);

evaluation.specification = specification;
evaluation.locus = this.locus;

return evaluation;

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution" name="instantiateOpaqueBehaviorExecution" specification="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-behavior" name="behavior">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#OpaqueBehavior"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-behavior-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution-behavior-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return a copy of the prototype for the primitive behavior execution
// of the given opaque behavior.

OpaqueBehaviorExecution execution = null;
int i = 1;
while (execution == null &amp; i &lt;= this.primitiveBehaviorPrototypes.size()) {
	// Debug.println(&quot;[instantiateOpaqueExecution] Checking &quot; +
	// this.primitiveBehaviorPrototypes.getValue(i).objectId() + &quot;...&quot;);
	OpaqueBehaviorExecution prototype = this.primitiveBehaviorPrototypes
			.getValue(i - 1);
	if (prototype.getBehavior() == behavior) {
		execution = (OpaqueBehaviorExecution) (prototype.copy());
	}
	i = i + 1;
}

if (execution == null) {
	Debug
			.println(&quot;[instantiateOpaqueExecution] No prototype execution found for &quot;
					+ behavior.name + &quot;.&quot;);
}

return execution;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype" name="addPrimitiveBehaviorPrototype" specification="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype-execution-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype-execution-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add an opaque behavior execution to use as a prototype for
// instantiating the corresponding primitive opaque behavior.
// Precondition: No primitive behavior prototype for the type of the
// given execution should already exist.

this.primitiveBehaviorPrototypes.addValue(execution);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType" name="addBuiltInType" specification="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#PrimitiveType"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType-type-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType-type-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add the given primitive type as a built-in type.
// Precondition: No built-in type with the same name should already
// exist.

this.builtInTypes.addValue(type);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType" name="getBuiltInType" specification="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#PrimitiveType"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-name" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-name-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType-name-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the built-in type with the given name.

PrimitiveType type = null;
int i = 1;
while (type == null &amp; i &lt;= this.builtInTypes.size()) {
	PrimitiveType primitiveType = this.builtInTypes.getValue(i - 1);
	if (primitiveType.name.equals(name)) {
		type = primitiveType;
	}
	i = i + 1;
}

return type;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy" name="setStrategy" specification="Semantics-Loci-LociL1-ExecutionFactory-setStrategy.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy-strategy" name="strategy" type="Semantics-Loci-LociL1-SemanticStrategy">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy-strategy-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy-strategy-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Set the strategy for a semantic variation point. Any existing
// strategy for the same SVP is replaced.

int i = this.getStrategyIndex(strategy.getName());

if (i &lt;= this.strategies.size()) {
	this.strategies.removeValue(i - 1);
}

this.strategies.addValue(strategy);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy" name="getStrategy" specification="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-name" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-name-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-name-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-OwnedParameter" name="OwnedParameter" type="Semantics-Loci-LociL1-SemanticStrategy" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-OwnedParameter-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the strategy with the given name.

int i = this.getStrategyIndex(name);

SemanticStrategy strategy = null;
if (i &lt;= this.strategies.size()) {
	strategy = this.strategies.getValue(i - 1);
}

return strategy;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex" name="getStrategyIndex" specification="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-name" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-name-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-name-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Get the index of the strategy with the given name.
// If there is no such strategy, return the size of the strategies list.

SemanticStrategyList strategies = this.strategies;

int i = 1;
boolean unmatched = true;
while (unmatched &amp; (i &lt;= strategies.size())) {
	if (strategies.getValue(i - 1).getName().equals(name)) {
		unmatched = false;
	} else {
		i = i + 1;
	}
}

return i;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1" name="createExecution" method="Semantics-Loci-LociL1-ExecutionFactory-createExecution">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-Execution" direction="return"/>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1-behavior" name="behavior">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1-context" name="context" type="Semantics-Classes-Kernel-Object">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1-context-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createExecution.1-context-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation.1" name="createEvaluation" method="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Evaluation" direction="return"/>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-createEvaluation.1-specification" name="specification">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateVisitor" name="instantiateVisitor" visibility="public" isAbstract="true">
          <ownedComment xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateVisitor-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory-instantiateVisitor">
            <body>Instantiate a visitor object for the given element.</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateVisitor-element" name="element">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Element"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateVisitor-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution.1" name="instantiateOpaqueBehaviorExecution" visibility="public" method="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution" direction="return"/>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-instantiateOpaqueBehaviorExecution.1-behavior" name="behavior">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#OpaqueBehavior"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype.1" name="addPrimitiveBehaviorPrototype" method="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addPrimitiveBehaviorPrototype.1-execution" name="execution" type="Semantics-CommonBehaviors-BasicBehaviors-OpaqueBehaviorExecution"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType.1" name="addBuiltInType" method="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-addBuiltInType.1-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#PrimitiveType"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1" name="getBuiltInType" method="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#PrimitiveType"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getBuiltInType.1-name" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy.1" name="setStrategy" method="Semantics-Loci-LociL1-ExecutionFactory-setStrategy">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-setStrategy.1-strategy" name="strategy" type="Semantics-Loci-LociL1-SemanticStrategy"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1" name="getStrategy" method="Semantics-Loci-LociL1-ExecutionFactory-getStrategy">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1-name" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1-result" name="result" type="Semantics-Loci-LociL1-SemanticStrategy" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1-result-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategy.1-result-_upperValue" value="1"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex.1" name="getStrategyIndex" method="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex.1-name" name="name">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactory-getStrategyIndex.1-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-Executor" name="Executor">
        <ownedComment xmi:id="Semantics-Loci-LociL1-Executor-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Executor">
          <body>An executor is used to execute behaviors and evaluation value specifications.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Loci-LociL1-Executor-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-Loci-LociL1-Executor-locus" name="locus" type="Semantics-Loci-LociL1-Locus" association="Semantics-Loci-LociL1-A_executor_locus">
          <ownedComment xmi:id="Semantics-Loci-LociL1-Executor-locus-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Executor-locus">
            <body>The locus at which this executor resides.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-locus-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-locus-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Executor-execute" name="execute" specification="Semantics-Loci-LociL1-Executor-execute.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-execute-behavior" name="behavior">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute-behavior-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute-behavior-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-execute-context" name="context" type="Semantics-Classes-Kernel-Object">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute-context-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute-context-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-execute-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute-inputs-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-execute-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Execute the given behavior with the given input values in the given
// context, producing the given output values.
// There must be one input parameter value for each input (in or in-out)
// parameter of the behavior.
// The returned values include one parameter value for each output
// (in-out, out or return) parameter of the behavior.
// The execution instance is destroyed at completion.

Execution execution = this.locus.factory.createExecution(behavior,
		context);

for (int i = 0; i &lt; inputs.size(); i++) {
	execution.setParameterValue(inputs.getValue(i));
}

execution.execute();
ParameterValueList outputValues = execution.getOutputParameterValues();
execution.destroy();

return outputValues;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Executor-evaluate" name="evaluate" specification="Semantics-Loci-LociL1-Executor-evaluate.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-evaluate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-evaluate-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-evaluate-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-evaluate-specification" name="specification">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-evaluate-specification-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-evaluate-specification-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Evaluate the given value specification, returning the specified
// value.

// Debug.println(&quot;[evaluate] Start...&quot;);
return this.locus.factory.createEvaluation(specification).evaluate();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Executor-start" name="start" specification="Semantics-Loci-LociL1-Executor-start.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-start-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Reference" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-start-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-start-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-start-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-start-type-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-start-type-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-start-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-start-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-start-inputs-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Instantiate the given class and start any behavior of the resulting
// object.
// (The behavior of an object includes any classifier behaviors for an
// active object or the class of the object itself, if that is a
// behavior.)

Debug.println(&quot;[start] Starting &quot; + type.name + &quot;...&quot;);

Object_ object = this.locus.instantiate(type);

Debug.println(&quot;[start] Object = &quot; + object);
object.startBehavior(type, inputs);

Reference reference = new Reference();
reference.referent = object;

return reference;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-Executor-execute.1" name="execute" method="Semantics-Loci-LociL1-Executor-execute">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-execute.1-behavior" name="behavior">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Behavior"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-behavior-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-behavior-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-execute.1-context" name="context" type="Semantics-Classes-Kernel-Object">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-context-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-context-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-execute.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" isOrdered="true">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-inputs-_upperValue" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-execute.1-ReturnResult" name="ReturnResult" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue" isOrdered="true" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-execute.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-Executor-evaluate.1" name="evaluate" method="Semantics-Loci-LociL1-Executor-evaluate">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-evaluate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Value" direction="return"/>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-evaluate.1-specification" name="specification">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#ValueSpecification"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-Executor-start.1" name="start" method="Semantics-Loci-LociL1-Executor-start">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-start.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Reference" direction="return"/>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-start.1-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Executor-start.1-inputs" name="inputs" type="Semantics-CommonBehaviors-BasicBehaviors-ParameterValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Executor-start.1-inputs-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Executor-start.1-inputs-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy" name="FirstChoiceStrategy">
        <generalization xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-_generalization.0" general="Semantics-Loci-LociL1-ChoiceStrategy"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose" name="choose" specification="Semantics-Loci-LociL1-FirstChoiceStrategy-choose.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-size" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-size-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-size-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-OwnedParameter" name="OwnedParameter" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-OwnedParameter-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose-OwnedParameter-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Always choose one.

return 1;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose.1" name="choose" method="Semantics-Loci-LociL1-FirstChoiceStrategy-choose">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose.1-size" name="size">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-FirstChoiceStrategy-choose.1-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-Locus" name="Locus">
        <ownedComment xmi:id="Semantics-Loci-LociL1-Locus-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Locus">
          <body>A locus is a place at which extensional values (objects or links) can exist. The extent of a class or association is the set of objects or links of that type that exist at a certain locus.&#xD;
A locus also has an executor and a factory associated with it, used to execute behaviors as a result of requests dispatched to objects at the locus.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Loci-LociL1-Locus-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
import fUML.Syntax.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
import fUML.Semantics.CommonBehaviors.BasicBehaviors.*;&#xD;
&#xD;
</body>
        </ownedComment>
        <ownedAttribute xmi:id="Semantics-Loci-LociL1-Locus-executor" name="executor" type="Semantics-Loci-LociL1-Executor" aggregation="composite" association="Semantics-Loci-LociL1-A_executor_locus">
          <ownedComment xmi:id="Semantics-Loci-LociL1-Locus-executor-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Locus-executor">
            <body>The executor to be used at this locus.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-executor-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-executor-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Loci-LociL1-Locus-factory" name="factory" type="Semantics-Loci-LociL1-ExecutionFactory" aggregation="composite" association="Semantics-Loci-LociL1-A_factory_locus">
          <ownedComment xmi:id="Semantics-Loci-LociL1-Locus-factory-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Locus-factory">
            <body>The factory to be used at this locus.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-factory-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-factory-_upperValue" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Loci-LociL1-Locus-extensionalValues" name="extensionalValues" type="Semantics-Classes-Kernel-ExtensionalValue" aggregation="composite" association="Semantics-Classes-Kernel-A_locus_extensionalValues">
          <ownedComment xmi:id="Semantics-Loci-LociL1-Locus-extensionalValues-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-Locus-extensionalValues">
            <body>The set of values that are members of classifier extents at this locus.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-extensionalValues-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-extensionalValues-_upperValue" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="Semantics-Loci-LociL1-Locus-identifier" name="identifier">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-setExecutor" name="setExecutor" specification="Semantics-Loci-LociL1-Locus-setExecutor.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-setExecutor-executor" name="executor" type="Semantics-Loci-LociL1-Executor">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-setExecutor-executor-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-setExecutor-executor-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Set the executor for this locus.

this.executor = executor;
this.executor.locus = this;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-setFactory" name="setFactory" specification="Semantics-Loci-LociL1-Locus-setFactory.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-setFactory-factory" name="factory" type="Semantics-Loci-LociL1-ExecutionFactory">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-setFactory-factory-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-setFactory-factory-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Set the factory for this locus.

this.factory = factory;
this.factory.locus = this;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-getExtent" name="getExtent" specification="Semantics-Loci-LociL1-Locus-getExtent.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-getExtent-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-getExtent-classifier-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-getExtent-classifier-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-getExtent-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-ExtensionalValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-getExtent-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-getExtent-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return the set of extensional values at this locus which have the
// given classifier as a type.

ExtensionalValueList extent = new ExtensionalValueList();

ExtensionalValueList extensionalValues = this.extensionalValues;
for (int i = 0; i &lt; extensionalValues.size(); i++) {
	ExtensionalValue value = extensionalValues.getValue(i);
	ClassifierList types = value.getTypes();

	boolean conforms = false;
	int j = 1;
	while (!conforms &amp; j &lt;= types.size()) {
		conforms = this.conforms(types.getValue(j - 1), classifier);
		j = j + 1;
	}

	if (conforms) {
		extent.addValue(value);
	}
}

return extent;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-add" name="add" specification="Semantics-Loci-LociL1-Locus-add.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-add-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-add-value-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-add-value-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Add the given extensional value to this locus

value.locus = this;
value.identifier = this.identifier + &quot;#&quot; + this.makeIdentifier(value);
this.extensionalValues.addValue(value);

</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-remove" name="remove" specification="Semantics-Loci-LociL1-Locus-remove.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-remove-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-remove-value-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-remove-value-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Remove the given extensional value from this locus.

value.locus = null;

boolean notFound = true;
int i = 1;
while (notFound &amp; i &lt;= this.extensionalValues.size()) {
	if (this.extensionalValues.getValue(i - 1) == value) {
		this.extensionalValues.remove(i - 1);
		notFound = false;
	}
	i = i + 1;
}
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-instantiate" name="instantiate" specification="Semantics-Loci-LociL1-Locus-instantiate.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-instantiate-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Object" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-instantiate-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-instantiate-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-instantiate-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-instantiate-type-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-instantiate-type-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Instantiate the given class at this locus.

Object_ object = null;

if (type instanceof Behavior) {
	object = this.factory.createExecution((Behavior) type, null);
} else {
	object = new Object_();

	object.types.addValue(type);
	object.createFeatureValues();
	this.add(object);
}

return object;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier" name="makeIdentifier" specification="Semantics-Loci-LociL1-Locus-makeIdentifier.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue"/>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Return an identifier for the given (newly created) extensional value.

// [No normative specification. A conforming implementation may create an identifier 
// an identifier in any way such that all identifiers for extensional values created
// at any one locus are unique.]

// Non-normative Java implementation
return Integer.toHexString(value.hashCode());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-Locus-conforms" name="conforms" specification="Semantics-Loci-LociL1-Locus-conforms.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-conforms-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-conforms-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-conforms-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-conforms-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-conforms-type-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-conforms-type-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-conforms-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-conforms-classifier-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-conforms-classifier-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Test if a type conforms to a given classifier, that is, the type is
// equal to or a descendant of the classifier.

boolean doesConform = false;

if (type == classifier) {
	doesConform = true;
} else {
	int i = 1;
	while (!doesConform &amp; i &lt;= type.general.size()) {
		doesConform = this.conforms(type.general.getValue(i - 1),
				classifier);
		i = i + 1;
	}
}

return doesConform;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-Locus-setExecutor.1" name="setExecutor" method="Semantics-Loci-LociL1-Locus-setExecutor">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-setExecutor.1-executor" name="executor" type="Semantics-Loci-LociL1-Executor"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-Locus-setFactory.1" name="setFactory" method="Semantics-Loci-LociL1-Locus-setFactory">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-setFactory.1-factory" name="factory" type="Semantics-Loci-LociL1-ExecutionFactory"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-Locus-getExtent.1" name="getExtent" method="Semantics-Loci-LociL1-Locus-getExtent">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-getExtent.1-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-getExtent.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-ExtensionalValue" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-Locus-getExtent.1-ReturnResult-_lowerValue"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-Locus-getExtent.1-ReturnResult-_upperValue" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-Locus-add.1" name="add" method="Semantics-Loci-LociL1-Locus-add">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-add.1-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-Locus-remove.1" name="remove" method="Semantics-Loci-LociL1-Locus-remove">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-remove.1-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue"/>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-Locus-instantiate.1" name="instantiate" method="Semantics-Loci-LociL1-Locus-instantiate">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-instantiate.1-ReturnResult" name="ReturnResult" type="Semantics-Classes-Kernel-Object" direction="return"/>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-instantiate.1-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Class"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier.1" name="makeIdentifier" method="Semantics-Loci-LociL1-Locus-makeIdentifier">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier.1-value" name="value" type="Semantics-Classes-Kernel-ExtensionalValue"/>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-makeIdentifier.1-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-Locus-conforms.1" name="conforms" method="Semantics-Loci-LociL1-Locus-conforms">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-conforms.1-ReturnResult" name="ReturnResult" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-conforms.1-type" name="type">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-Locus-conforms.1-classifier" name="classifier">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Classifier"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-SemanticStrategy" name="SemanticStrategy" isAbstract="true">
        <ownedComment xmi:id="Semantics-Loci-LociL1-SemanticStrategy-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-SemanticStrategy">
          <body>The common base class for semantic strategy classes. A semantic strategy class specifies the behavior to be used at a specific semantic variatio point.</body>
        </ownedComment>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-SemanticStrategy-getName" name="getName" isAbstract="true">
          <ownedComment xmi:id="Semantics-Loci-LociL1-SemanticStrategy-getName-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-SemanticStrategy-getName">
            <body>Return the name of this strategy, as defined for the semantic variation point to which the strategy applies.</body>
          </ownedComment>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-SemanticStrategy-getName-result" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-SemanticVisitor" name="SemanticVisitor" isAbstract="true">
        <ownedComment xmi:id="Semantics-Loci-LociL1-SemanticVisitor-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-SemanticVisitor">
          <body>The common base class for semantic visitor classes.</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1" name="ExecutionFactoryL1">
        <ownedComment xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory">
          <body> An execution factory is used to create objects that represent the execution of a behavior, the evaluation of a value specification or the activation of an activity node. This class only handles elements available at Conformance Level 1.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Classes.Kernel.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Classes.Kernel.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-_generalization.0" general="Semantics-Loci-LociL1-ExecutionFactory"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor" name="instantiateVisitor" specification="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-element" name="element">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Element"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-element-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-element-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Instantiate a visitor object for the given element (at Conformance
// Level 1)

SemanticVisitor visitor = null;

if (element instanceof LiteralBoolean) {
	visitor = new LiteralBooleanEvaluation();
}

else if (element instanceof fUML.Syntax.Classes.Kernel.LiteralString) {
	visitor = new LiteralStringEvaluation();
}

else if (element instanceof fUML.Syntax.Classes.Kernel.LiteralNull) {
	visitor = new LiteralNullEvaluation();
}

else if (element instanceof fUML.Syntax.Classes.Kernel.InstanceValue) {
	visitor = new InstanceValueEvaluation();
}

else if (element instanceof fUML.Syntax.Classes.Kernel.LiteralUnlimitedNatural) {
	visitor = new LiteralUnlimitedNaturalEvaluation();
}

else if (element instanceof fUML.Syntax.Classes.Kernel.LiteralInteger) {
	visitor = new LiteralIntegerEvaluation();
}

else if (element instanceof LiteralReal) {
	visitor = new LiteralRealEvaluation();
}

return visitor;
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor.1" name="instantiateVisitor" visibility="public" method="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor">
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor.1-element" name="element">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Element"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL1-ExecutionFactoryL1-instantiateVisitor.1-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Loci-LociL1-A_executor_locus" name="A_executor_locus" visibility="private" memberEnd="Semantics-Loci-LociL1-Locus-executor Semantics-Loci-LociL1-Executor-locus"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Loci-LociL1-A_factory_locus" name="A_factory_locus" visibility="private" memberEnd="Semantics-Loci-LociL1-Locus-factory Semantics-Loci-LociL1-ExecutionFactory-locus"/>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Loci-LociL1-A_builtInTypes_executionFactory" name="A_builtInTypes_executionFactory" visibility="private" memberEnd="Semantics-Loci-LociL1-ExecutionFactory-builtInTypes Semantics-Loci-LociL1-A_builtInTypes_executionFactory-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Loci-LociL1-A_builtInTypes_executionFactory-_ownedEnd.0" visibility="private" type="Semantics-Loci-LociL1-ExecutionFactory" association="Semantics-Loci-LociL1-A_builtInTypes_executionFactory">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-A_builtInTypes_executionFactory-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-A_builtInTypes_executionFactory-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Loci-LociL1-A_strategies_executionFactory" name="A_strategies_executionFactory" visibility="private" memberEnd="Semantics-Loci-LociL1-ExecutionFactory-strategies Semantics-Loci-LociL1-A_strategies_executionFactory-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Loci-LociL1-A_strategies_executionFactory-_ownedEnd.0" name="" visibility="private" type="Semantics-Loci-LociL1-ExecutionFactory" association="Semantics-Loci-LociL1-A_strategies_executionFactory"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory" name="A_primitiveBehaviorPrototypes_executionFactory" visibility="private" memberEnd="Semantics-Loci-LociL1-ExecutionFactory-primitiveBehaviorPrototypes Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory-_ownedEnd.0">
        <ownedEnd xmi:id="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory-_ownedEnd.0" visibility="private" type="Semantics-Loci-LociL1-ExecutionFactory" association="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory-_ownedEnd.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL1-A_primitiveBehaviorPrototypes_executionFactory-_ownedEnd.0-_upperValue" value="*"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2" name="ExecutionFactoryL2">
        <ownedComment xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory">
          <body> An execution factory is used to create objects that represent the execution of a behavior, the evaluation of a value specification or the activation of an activity node. This class only handles elements available at Conformance Level 2.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Activities.IntermediateActivities.*;&#xD;
import fUML.Syntax.Actions.BasicActions.*;&#xD;
import fUML.Syntax.Actions.IntermediateActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Activities.IntermediateActivities.*;&#xD;
import fUML.Semantics.Actions.BasicActions.*;&#xD;
import fUML.Semantics.Actions.IntermediateActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-_generalization.0" general="Semantics-Loci-LociL1-ExecutionFactoryL1"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor" name="instantiateVisitor" specification="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-element" name="element">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Element"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-element-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-element-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Instantiate a visitor object for the given element (at Conformance
// Level 2)

SemanticVisitor visitor = null;

if (element instanceof Activity) {
	visitor = new ActivityExecution();
}

else if (element instanceof ActivityParameterNode) {
	visitor = new ActivityParameterNodeActivation();
}

else if (element instanceof InitialNode) {
	visitor = new InitialNodeActivation();
}

else if (element instanceof ActivityFinalNode) {
	visitor = new ActivityFinalNodeActivation();
}

else if (element instanceof FlowFinalNode) {
	visitor = new FlowFinalNodeActivation();
}

else if (element instanceof JoinNode) {
	visitor = new JoinNodeActivation();
}

else if (element instanceof MergeNode) {
	visitor = new MergeNodeActivation();
}

else if (element instanceof ForkNode) {
	visitor = new ForkNodeActivation();
}

else if (element instanceof DecisionNode) {
	visitor = new DecisionNodeActivation();
}

else if (element instanceof InputPin) {
	visitor = new InputPinActivation();
}

else if (element instanceof OutputPin) {
	visitor = new OutputPinActivation();
}

else if (element instanceof CallBehaviorAction) {
	visitor = new CallBehaviorActionActivation();
}

else if (element instanceof CallOperationAction) {
	visitor = new CallOperationActionActivation();
}

else if (element instanceof SendSignalAction) {
	visitor = new SendSignalActionActivation();
}

else if (element instanceof ReadSelfAction) {
	visitor = new ReadSelfActionActivation();
}

else if (element instanceof TestIdentityAction) {
	visitor = new TestIdentityActionActivation();
}

else if (element instanceof ValueSpecificationAction) {
	visitor = new ValueSpecificationActionActivation();
}

else if (element instanceof CreateObjectAction) {
	visitor = new CreateObjectActionActivation();
}

else if (element instanceof DestroyObjectAction) {
	visitor = new DestroyObjectActionActivation();
}

else if (element instanceof ReadStructuralFeatureAction) {
	visitor = new ReadStructuralFeatureActionActivation();
}

else if (element instanceof ClearStructuralFeatureAction) {
	visitor = new ClearStructuralFeatureActionActivation();
}

else if (element instanceof AddStructuralFeatureValueAction) {
	visitor = new AddStructuralFeatureValueActionActivation();
}

else if (element instanceof RemoveStructuralFeatureValueAction) {
	visitor = new RemoveStructuralFeatureValueActionActivation();
}

else if (element instanceof ReadLinkAction) {
	visitor = new ReadLinkActionActivation();
}

else if (element instanceof ClearAssociationAction) {
	visitor = new ClearAssociationActionActivation();
}

else if (element instanceof CreateLinkAction) {
	visitor = new CreateLinkActionActivation();
}

else if (element instanceof DestroyLinkAction) {
	visitor = new DestroyLinkActionActivation();
}

else {
	visitor = super.instantiateVisitor(element);
}

return visitor;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor.1" name="instantiateVisitor" visibility="public" method="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor">
          <ownedParameter xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor.1-element" name="element">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Element"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL2-ExecutionFactoryL2-instantiateVisitor.1-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3" name="ExecutionFactoryL3">
        <ownedComment xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-_ownedComment.0" annotatedElement="Semantics-Loci-LociL1-ExecutionFactory">
          <body> An execution factory is used to create objects that represent the execution of a behavior, the evaluation of a value specification or the activation of an activity node. This class only handles elements available at Conformance Level 3.</body>
        </ownedComment>
        <ownedComment xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-_ownedComment.1">
          <body>import fUML.Syntax.*;&#xD;
import fUML.Syntax.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Syntax.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Syntax.Actions.CompleteActions.*;&#xD;
&#xD;
import fUML.Semantics.*;&#xD;
import fUML.Semantics.Activities.CompleteStructuredActivities.*;&#xD;
import fUML.Semantics.Activities.ExtraStructuredActivities.*;&#xD;
import fUML.Semantics.Actions.CompleteActions.*;&#xD;
import fUML.Semantics.Loci.LociL1.*;&#xD;
import fUML.Semantics.Loci.LociL2.*;&#xD;
</body>
        </ownedComment>
        <generalization xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-_generalization.0" general="Semantics-Loci-LociL2-ExecutionFactoryL2"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor" name="instantiateVisitor" specification="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor.1">
          <ownedParameter xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-element" name="element">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Element"/>
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-element-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-element-_upperValue" value="1"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-ReturnResult-_lowerValue" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor-ReturnResult-_upperValue" value="1"/>
          </ownedParameter>
          <language>Java</language>
          <body>// Instantiate a visitor object for the given element (at Conformance
// Level 3)

SemanticVisitor visitor = null;

if (element instanceof ConditionalNode) {
	visitor = new ConditionalNodeActivation();
}

else if (element instanceof LoopNode) {
	visitor = new LoopNodeActivation();
}

else if (element instanceof ExpansionRegion) {
	visitor = new ExpansionRegionActivation();
}

// Note: Since ConditionalNode, LoopNode and ExpansionRegion are
// subclasses of
// StructuredActivityNode, element must be tested against the three
// subclasses before
// the superclass
else if (element instanceof StructuredActivityNode) {
	visitor = new StructuredActivityNodeActivation();
}

else if (element instanceof ExpansionNode) {
	visitor = new ExpansionNodeActivation();
}

else if (element instanceof ReadExtentAction) {
	visitor = new ReadExtentActionActivation();
}

else if (element instanceof ReadIsClassifiedObjectAction) {
	visitor = new ReadIsClassifiedObjectActionActivation();
}

else if (element instanceof ReclassifyObjectAction) {
	visitor = new ReclassifyObjectActionActivation();
}

else if (element instanceof StartObjectBehaviorAction) {
	visitor = new StartObjectBehaviorActionActivation();
}

else if (element instanceof StartClassifierBehaviorAction) {
	visitor = new StartClassifierBehaviorActionActivation();
}

else if (element instanceof AcceptEventAction) {
	visitor = new AcceptEventActionActivation();
}

else if (element instanceof ReduceAction) {
	visitor = new ReduceActionActivation();
}

else {
	visitor = super.instantiateVisitor(element);
}

return visitor;

</body>
        </ownedBehavior>
        <ownedOperation xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor.1" name="instantiateVisitor" visibility="public" method="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor">
          <ownedParameter xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor.1-element" name="element">
            <type xmi:type="uml:Class" href="../Syntax/UML.uml#Element"/>
          </ownedParameter>
          <ownedParameter xmi:id="Semantics-Loci-LociL3-ExecutionFactoryL3-instantiateVisitor.1-ReturnResult" name="ReturnResult" type="Semantics-Loci-LociL1-SemanticVisitor" direction="return"/>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
  </packagedElement>
</uml:Model>
